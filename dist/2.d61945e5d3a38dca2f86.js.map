{"version":3,"sources":["webpack:///./components/audit_table/audit_table.tsx","webpack:///./components/audit_table/index.ts","webpack:///./components/color_input.tsx","webpack:///./components/form_error.tsx","webpack:///./components/widgets/icons/fa_warning_icon.tsx"],"names":["holders","defineMessages","sessionRevoked","id","t","defaultMessage","channelCreated","establishedDM","nameUpdated","headerUpdated","channelDeleted","userAdded","userRemoved","attemptedRegisterApp","attemptedAllowOAuthAccess","successfullOAuthAccess","failedOAuthAccess","attemptedOAuthToken","successfullOAuthToken","oauthTokenFailed","attemptedLogin","authenticated","successfullLogin","failedLogin","updatePicture","updateGeneral","attemptedPassword","successfullPassword","failedPassword","updatedRol","member","accountActive","accountInactive","by","byAdmin","sentEmail","attemptedReset","successfullReset","updateGlobalNotifications","attemptedWebhookCreate","succcessfullWebhookCreate","failedWebhookCreate","attemptedWebhookDelete","successfullWebhookDelete","failedWebhookDelete","logout","verified","revokedAll","loginAttempt","loginFailure","attemptedLicenseAdd","successfullLicenseAdd","failedExpiredLicenseAdd","failedInvalidLicenseAdd","licenseRemoved","AuditTable","React","PureComponent","componentDidMount","ids","props","audits","map","audit","user_id","actions","getMissingProfilesByIds","render","showUserId","showIp","showSession","accessList","i","entries","auditInfo","formatAuditInfo","uContent","userId","iContent","ip","sContent","sessionId","descStyle","desc","toLowerCase","indexOf","timestamp","userIdContent","ipContent","sessionContent","formatMessage","intl","actionURL","action","replace","auditDesc","channelInfo","extra_info","split","channelNameField","channelURL","channelObj","channelName","getByName","display_name","username","getDirectTeammate","userIdField","profile","getUser","test","url","oauthInfo","clientIdField","oauthTokenFailure","trim","token","userInfo","userRoles","updateType","updateField","actingUserInfo","actingUser","user","currentUser","isSystemAdmin","roles","email","webhookInfo","licenseInfo","toTitleCase","actionDesc","lastIndexOf","substring","extraInfoDesc","date","Date","create_at","auditProfile","ip_address","session_id","injectIntl","mapStateToProps","state","getCurrentUser","getChannelByName","channelId","mapDispatchToProps","dispatch","bindActionCreators","connect","ColorInput","constructor","e","colorPicker","current","contains","target","setState","isOpened","colorInput","focus","newColorData","onChange","hex","event","value","color","tinycolor","normalizedColor","toHex","isValid","focused","setSelectionRange","length","key","togglePicker","createRef","getDerivedStateFromProps","componentDidUpdate","prevProps","prevState","prevIsOpened","document","addEventListener","checkClick","removeEventListener","onBlur","onFocus","onKeyDown","isDisabled","backgroundColor","handleColorChange","FormError","error","errors","iconClassName","margin","textClassName","type","message","err","WarningIcon","className","additionalClassName"],"mappings":"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","file":"2.d61945e5d3a38dca2f86.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {defineMessages, FormattedDate, FormattedMessage, FormattedTime, injectIntl, IntlShape} from 'react-intl';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport {Audit} from 'mattermost-redux/types/audits';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {t} from 'utils/i18n';\nimport {isSystemAdmin, toTitleCase} from 'utils/utils.jsx';\n\nconst holders = defineMessages({\n    sessionRevoked: {\n        id: t('audit_table.sessionRevoked'),\n        defaultMessage: 'The session with id {sessionId} was revoked',\n    },\n    channelCreated: {\n        id: t('audit_table.channelCreated'),\n        defaultMessage: 'Created the {channelName} channel',\n    },\n    establishedDM: {\n        id: t('audit_table.establishedDM'),\n        defaultMessage: 'Established a direct message channel with {username}',\n    },\n    nameUpdated: {\n        id: t('audit_table.nameUpdated'),\n        defaultMessage: 'Updated the {channelName} channel name',\n    },\n    headerUpdated: {\n        id: t('audit_table.headerUpdated'),\n        defaultMessage: 'Updated the {channelName} channel header',\n    },\n    channelDeleted: {\n        id: t('audit_table.channelDeleted'),\n        defaultMessage: 'Archived the channel with the URL {url}',\n    },\n    userAdded: {\n        id: t('audit_table.userAdded'),\n        defaultMessage: 'Added {username} to the {channelName} channel',\n    },\n    userRemoved: {\n        id: t('audit_table.userRemoved'),\n        defaultMessage: 'Removed {username} to the {channelName} channel',\n    },\n    attemptedRegisterApp: {\n        id: t('audit_table.attemptedRegisterApp'),\n        defaultMessage: 'Attempted to register a new OAuth Application with ID {id}',\n    },\n    attemptedAllowOAuthAccess: {\n        id: t('audit_table.attemptedAllowOAuthAccess'),\n        defaultMessage: 'Attempted to allow a new OAuth service access',\n    },\n    successfullOAuthAccess: {\n        id: t('audit_table.successfullOAuthAccess'),\n        defaultMessage: 'Successfully gave a new OAuth service access',\n    },\n    failedOAuthAccess: {\n        id: t('audit_table.failedOAuthAccess'),\n        defaultMessage: 'Failed to allow a new OAuth service access - the redirect URI did not match the previously registered callback',\n    },\n    attemptedOAuthToken: {\n        id: t('audit_table.attemptedOAuthToken'),\n        defaultMessage: 'Attempted to get an OAuth access token',\n    },\n    successfullOAuthToken: {\n        id: t('audit_table.successfullOAuthToken'),\n        defaultMessage: 'Successfully added a new OAuth service',\n    },\n    oauthTokenFailed: {\n        id: t('audit_table.oauthTokenFailed'),\n        defaultMessage: 'Failed to get an OAuth access token - {token}',\n    },\n    attemptedLogin: {\n        id: t('audit_table.attemptedLogin'),\n        defaultMessage: 'Attempted to login',\n    },\n    authenticated: {\n        id: t('audit_table.authenticated'),\n        defaultMessage: 'Successfully authenticated',\n    },\n    successfullLogin: {\n        id: t('audit_table.successfullLogin'),\n        defaultMessage: 'Successfully logged in',\n    },\n    failedLogin: {\n        id: t('audit_table.failedLogin'),\n        defaultMessage: 'FAILED login attempt',\n    },\n    updatePicture: {\n        id: t('audit_table.updatePicture'),\n        defaultMessage: 'Updated your profile picture',\n    },\n    updateGeneral: {\n        id: t('audit_table.updateGeneral'),\n        defaultMessage: 'Updated the general settings of your account',\n    },\n    attemptedPassword: {\n        id: t('audit_table.attemptedPassword'),\n        defaultMessage: 'Attempted to change password',\n    },\n    successfullPassword: {\n        id: t('audit_table.successfullPassword'),\n        defaultMessage: 'Successfully changed password',\n    },\n    failedPassword: {\n        id: t('audit_table.failedPassword'),\n        defaultMessage: 'Failed to change password - tried to update user password who was logged in through OAuth',\n    },\n    updatedRol: {\n        id: t('audit_table.updatedRol'),\n        defaultMessage: 'Updated user role(s) to ',\n    },\n    member: {\n        id: t('audit_table.member'),\n        defaultMessage: 'member',\n    },\n    accountActive: {\n        id: t('audit_table.accountActive'),\n        defaultMessage: 'Account activated',\n    },\n    accountInactive: {\n        id: t('audit_table.accountInactive'),\n        defaultMessage: 'Account deactivated',\n    },\n    by: {\n        id: t('audit_table.by'),\n        defaultMessage: ' by {username}',\n    },\n    byAdmin: {\n        id: t('audit_table.byAdmin'),\n        defaultMessage: ' by an admin',\n    },\n    sentEmail: {\n        id: t('audit_table.sentEmail'),\n        defaultMessage: 'Sent an email to {email} to reset your password',\n    },\n    attemptedReset: {\n        id: t('audit_table.attemptedReset'),\n        defaultMessage: 'Attempted to reset password',\n    },\n    successfullReset: {\n        id: t('audit_table.successfullReset'),\n        defaultMessage: 'Successfully reset password',\n    },\n    updateGlobalNotifications: {\n        id: t('audit_table.updateGlobalNotifications'),\n        defaultMessage: 'Updated your global notification settings',\n    },\n    attemptedWebhookCreate: {\n        id: t('audit_table.attemptedWebhookCreate'),\n        defaultMessage: 'Attempted to create a webhook',\n    },\n    succcessfullWebhookCreate: {\n        id: t('audit_table.successfullWebhookCreate'),\n        defaultMessage: 'Successfully created a webhook',\n    },\n    failedWebhookCreate: {\n        id: t('audit_table.failedWebhookCreate'),\n        defaultMessage: 'Failed to create a webhook - bad channel permissions',\n    },\n    attemptedWebhookDelete: {\n        id: t('audit_table.attemptedWebhookDelete'),\n        defaultMessage: 'Attempted to delete a webhook',\n    },\n    successfullWebhookDelete: {\n        id: t('audit_table.successfullWebhookDelete'),\n        defaultMessage: 'Successfully deleted a webhook',\n    },\n    failedWebhookDelete: {\n        id: t('audit_table.failedWebhookDelete'),\n        defaultMessage: 'Failed to delete a webhook - inappropriate conditions',\n    },\n    logout: {\n        id: t('audit_table.logout'),\n        defaultMessage: 'Logged out of your account',\n    },\n    verified: {\n        id: t('audit_table.verified'),\n        defaultMessage: 'Successfully verified your email address',\n    },\n    revokedAll: {\n        id: t('audit_table.revokedAll'),\n        defaultMessage: 'Revoked all current sessions for the team',\n    },\n    loginAttempt: {\n        id: t('audit_table.loginAttempt'),\n        defaultMessage: ' (Login attempt)',\n    },\n    loginFailure: {\n        id: t('audit_table.loginFailure'),\n        defaultMessage: ' (Login failure)',\n    },\n    attemptedLicenseAdd: {\n        id: t('audit_table.attemptedLicenseAdd'),\n        defaultMessage: 'Attempted to add new license',\n    },\n    successfullLicenseAdd: {\n        id: t('audit_table.successfullLicenseAdd'),\n        defaultMessage: 'Successfully added new license',\n    },\n    failedExpiredLicenseAdd: {\n        id: t('audit_table.failedExpiredLicenseAdd'),\n        defaultMessage: 'Failed to add a new license as it has either expired or not yet been started',\n    },\n    failedInvalidLicenseAdd: {\n        id: t('audit_table.failedInvalidLicenseAdd'),\n        defaultMessage: 'Failed to add an invalid license',\n    },\n    licenseRemoved: {\n        id: t('audit_table.licenseRemoved'),\n        defaultMessage: 'Successfully removed a license',\n    },\n});\n\ntype Props = {\n    intl: IntlShape;\n    audits: Audit[];\n    showUserId?: boolean;\n    showIp?: boolean;\n    showSession?: boolean;\n    currentUser: UserProfile;\n    getUser: (userId: string) => UserProfile;\n    getByName: (channelURL: string) => Channel | null | undefined;\n    actions: {\n        getMissingProfilesByIds: (userIds: string[]) => ActionFunc;\n    };\n    getDirectTeammate: (channelId: string) => any;\n};\n\ntype AuditInfo = {\n    userId: string;\n    desc: string;\n    ip: string;\n    sessionId: string;\n    timestamp: JSX.Element;\n};\n\nexport class AuditTable extends React.PureComponent<Props> {\n    componentDidMount() {\n        const ids = this.props.audits.map((audit) => audit.user_id);\n        this.props.actions.getMissingProfilesByIds(ids);\n    }\n\n    render() {\n        const {audits, showUserId, showIp, showSession} = this.props;\n        const accessList = [];\n\n        for (const [i, audit] of audits.entries()) {\n            const auditInfo = this.formatAuditInfo(audit);\n\n            let uContent;\n            if (showUserId) {\n                uContent = <td className='word-break--all'>{auditInfo.userId}</td>;\n            }\n\n            let iContent;\n            if (showIp) {\n                iContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.ip}</td>;\n            }\n\n            let sContent;\n            if (showSession) {\n                sContent = <td className='whitespace--nowrap word-break--all'>{auditInfo.sessionId}</td>;\n            }\n\n            let descStyle = '';\n            if (auditInfo.desc.toLowerCase().indexOf('fail') !== -1) {\n                descStyle = ' color--error';\n            }\n\n            accessList[i] = (\n                <tr key={audit.id}>\n                    <td className='whitespace--nowrap word-break--all'>{auditInfo.timestamp}</td>\n                    {uContent}\n                    <td\n                        className={'word-break--all' + descStyle}\n                    >\n                        {auditInfo.desc}\n                    </td>\n                    {iContent}\n                    {sContent}\n                </tr>\n            );\n        }\n\n        let userIdContent;\n        if (showUserId) {\n            userIdContent = (\n                <th>\n                    <FormattedMessage\n                        id='audit_table.userId'\n                        defaultMessage='User ID'\n                    />\n                </th>\n            );\n        }\n\n        let ipContent;\n        if (showIp) {\n            ipContent = (\n                <th>\n                    <FormattedMessage\n                        id='audit_table.ip'\n                        defaultMessage='IP Address'\n                    />\n                </th>\n            );\n        }\n\n        let sessionContent;\n        if (showSession) {\n            sessionContent = (\n                <th>\n                    <FormattedMessage\n                        id='audit_table.session'\n                        defaultMessage='Session ID'\n                    />\n                </th>\n            );\n        }\n\n        return (\n            <table className='table'>\n                <thead>\n                    <tr>\n                        <th>\n                            <FormattedMessage\n                                id='audit_table.timestamp'\n                                defaultMessage='Timestamp'\n                            />\n                        </th>\n                        {userIdContent}\n                        <th>\n                            <FormattedMessage\n                                id='audit_table.action'\n                                defaultMessage='Action'\n                            />\n                        </th>\n                        {ipContent}\n                        {sessionContent}\n                    </tr>\n                </thead>\n                <tbody data-testid='auditTableBody'>\n                    {accessList}\n                </tbody>\n            </table>\n        );\n    }\n\n    formatAuditInfo(audit: Audit): AuditInfo {\n        const {formatMessage} = this.props.intl;\n        const actionURL = audit.action.replace(/\\/api\\/v[1-9]/, '');\n        let auditDesc = '';\n\n        if (actionURL.indexOf('/channels') === 0) {\n            const channelInfo = audit.extra_info.split(' ');\n            const channelNameField = channelInfo[0].split('=');\n\n            let channelURL = '';\n            let channelObj;\n            let channelName = '';\n            if (channelNameField.indexOf('name') >= 0) {\n                channelURL = channelNameField[channelNameField.indexOf('name') + 1];\n                channelObj = this.props.getByName(channelURL);\n                if (channelObj) {\n                    channelName = channelObj.display_name;\n                } else {\n                    channelName = channelURL;\n                }\n            }\n\n            switch (actionURL) {\n            case '/channels/create':\n                auditDesc = formatMessage(holders.channelCreated, {channelName});\n                break;\n            case '/channels/create_direct':\n                if (channelObj) {\n                    auditDesc = formatMessage(holders.establishedDM, {username: this.props.getDirectTeammate(channelObj.id).username});\n                }\n                break;\n            case '/channels/update':\n                auditDesc = formatMessage(holders.nameUpdated, {channelName});\n                break;\n            case '/channels/update_desc': // support the old path\n            case '/channels/update_header':\n                auditDesc = formatMessage(holders.headerUpdated, {channelName});\n                break;\n            default: {\n                let userIdField = [];\n                let userId = '';\n                let username = '';\n\n                if (channelInfo[1]) {\n                    userIdField = channelInfo[1].split('=');\n\n                    if (userIdField.indexOf('user_id') >= 0) {\n                        userId = userIdField[userIdField.indexOf('user_id') + 1];\n                        const profile = this.props.getUser(userId);\n                        if (profile) {\n                            username = profile.username;\n                        }\n                    }\n                }\n\n                if ((/\\/channels\\/[A-Za-z0-9]+\\/delete/).test(actionURL)) {\n                    auditDesc = formatMessage(holders.channelDeleted, {url: channelURL});\n                } else if ((/\\/channels\\/[A-Za-z0-9]+\\/add/).test(actionURL)) {\n                    auditDesc = formatMessage(holders.userAdded, {username, channelName});\n                } else if ((/\\/channels\\/[A-Za-z0-9]+\\/remove/).test(actionURL)) {\n                    auditDesc = formatMessage(holders.userRemoved, {username, channelName});\n                }\n\n                break;\n            }\n            }\n        } else if (actionURL.indexOf('/oauth') === 0) {\n            const oauthInfo = audit.extra_info.split(' ');\n\n            switch (actionURL) {\n            case '/oauth/register': {\n                const clientIdField = oauthInfo[0].split('=');\n\n                if (clientIdField[0] === 'client_id') {\n                    auditDesc = formatMessage(holders.attemptedRegisterApp, {id: clientIdField[1]});\n                }\n\n                break;\n            }\n            case '/oauth/allow':\n                if (oauthInfo[0] === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedAllowOAuthAccess);\n                } else if (oauthInfo[0] === 'success') {\n                    auditDesc = formatMessage(holders.successfullOAuthAccess);\n                } else if (oauthInfo[0] === 'fail - redirect_uri did not match registered callback') {\n                    auditDesc = formatMessage(holders.failedOAuthAccess);\n                }\n\n                break;\n            case '/oauth/access_token':\n                if (oauthInfo[0] === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedOAuthToken);\n                } else if (oauthInfo[0] === 'success') {\n                    auditDesc = formatMessage(holders.successfullOAuthToken);\n                } else {\n                    const oauthTokenFailure = oauthInfo[0].split('-');\n\n                    if (oauthTokenFailure[0].trim() === 'fail' && oauthTokenFailure[1]) {\n                        auditDesc = formatMessage(holders.oauthTokenFailed, {token: oauthTokenFailure[1].trim()});\n                    }\n                }\n\n                break;\n            default:\n                break;\n            }\n        } else if (actionURL.indexOf('/users') === 0) {\n            const userInfo = audit.extra_info.split(' ');\n\n            switch (actionURL) {\n            case '/users/login':\n                if (userInfo[0] === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedLogin);\n                } else if (userInfo[0] === 'success') {\n                    auditDesc = formatMessage(holders.successfullLogin);\n                } else if (userInfo[0] === 'authenticated') {\n                    auditDesc = formatMessage(holders.authenticated);\n                } else if (userInfo[0]) {\n                    auditDesc = formatMessage(holders.failedLogin);\n                }\n\n                break;\n            case '/users/revoke_session':\n                auditDesc = formatMessage(holders.sessionRevoked, {sessionId: userInfo[0].split('=')[1]});\n                break;\n            case '/users/newimage':\n                auditDesc = formatMessage(holders.updatePicture);\n                break;\n            case '/users/update':\n                auditDesc = formatMessage(holders.updateGeneral);\n                break;\n            case '/users/newpassword':\n                if (userInfo[0] === 'attempted') {\n                    auditDesc = formatMessage(holders.attemptedPassword);\n                } else if (userInfo[0] === 'completed') {\n                    auditDesc = formatMessage(holders.successfullPassword);\n                } else if (userInfo[0] === 'failed - tried to update user password who was logged in through oauth') {\n                    auditDesc = formatMessage(holders.failedPassword);\n                }\n\n                break;\n            case '/users/update_roles': {\n                const userRoles = userInfo[0].split('=')[1];\n\n                auditDesc = formatMessage(holders.updatedRol);\n                if (userRoles.trim()) {\n                    auditDesc += userRoles;\n                } else {\n                    auditDesc += formatMessage(holders.member);\n                }\n\n                break;\n            }\n            case '/users/update_active': {\n                const updateType = userInfo[0].split('=')[0];\n                const updateField = userInfo[0].split('=')[1];\n\n                /* Either describes account activation/deactivation or a revoked session as part of an account deactivation */\n                if (updateType === 'active') {\n                    if (updateField === 'true') {\n                        auditDesc = formatMessage(holders.accountActive);\n                    } else if (updateField === 'false') {\n                        auditDesc = formatMessage(holders.accountInactive);\n                    }\n\n                    const actingUserInfo = userInfo[1].split('=');\n                    if (actingUserInfo[0] === 'session_user') {\n                        const actingUser = this.props.getUser(actingUserInfo[1]);\n                        const user = this.props.currentUser;\n                        if (user && actingUser && isSystemAdmin(user.roles)) {\n                            auditDesc += formatMessage(holders.by, {username: actingUser.username});\n                        } else if (user && actingUser) {\n                            auditDesc += formatMessage(holders.byAdmin);\n                        }\n                    }\n                } else if (updateType === 'session_id') {\n                    auditDesc = formatMessage(holders.sessionRevoked, {sessionId: updateField});\n                }\n\n                break;\n            }\n            case '/users/send_password_reset':\n                auditDesc = formatMessage(holders.sentEmail, {email: userInfo[0].split('=')[1]});\n                break;\n            case '/users/reset_password':\n                if (userInfo[0] === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedReset);\n                } else if (userInfo[0] === 'success') {\n                    auditDesc = formatMessage(holders.successfullReset);\n                }\n\n                break;\n            case '/users/update_notify':\n                auditDesc = formatMessage(holders.updateGlobalNotifications);\n                break;\n            default:\n                break;\n            }\n        } else if (actionURL.indexOf('/hooks') === 0) {\n            const webhookInfo = audit.extra_info;\n\n            switch (actionURL) {\n            case '/hooks/incoming/create':\n                if (webhookInfo === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedWebhookCreate);\n                } else if (webhookInfo === 'success') {\n                    auditDesc = formatMessage(holders.succcessfullWebhookCreate);\n                } else if (webhookInfo === 'fail - bad channel permissions') {\n                    auditDesc = formatMessage(holders.failedWebhookCreate);\n                }\n\n                break;\n            case '/hooks/incoming/delete':\n                if (webhookInfo === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedWebhookDelete);\n                } else if (webhookInfo === 'success') {\n                    auditDesc = formatMessage(holders.successfullWebhookDelete);\n                } else if (webhookInfo === 'fail - inappropriate conditions') {\n                    auditDesc = formatMessage(holders.failedWebhookDelete);\n                }\n\n                break;\n            default:\n                break;\n            }\n        } else if (actionURL.indexOf('/license') === 0) {\n            const licenseInfo = audit.extra_info;\n\n            switch (actionURL) {\n            case '/license/add':\n                if (licenseInfo === 'attempt') {\n                    auditDesc = formatMessage(holders.attemptedLicenseAdd);\n                } else if (licenseInfo === 'success') {\n                    auditDesc = formatMessage(holders.successfullLicenseAdd);\n                } else if (licenseInfo === 'failed - expired or non-started license') {\n                    auditDesc = formatMessage(holders.failedExpiredLicenseAdd);\n                } else if (licenseInfo === 'failed - invalid license') {\n                    auditDesc = formatMessage(holders.failedInvalidLicenseAdd);\n                }\n\n                break;\n            case '/license/remove':\n                auditDesc = formatMessage(holders.licenseRemoved);\n                break;\n            default:\n                break;\n            }\n        } else if (actionURL.indexOf('/admin/download_compliance_report') === 0) {\n            auditDesc = toTitleCase(audit.extra_info);\n        } else {\n            switch (actionURL) {\n            case '/logout':\n                auditDesc = formatMessage(holders.logout);\n                break;\n            case '/verify_email':\n                auditDesc = formatMessage(holders.verified);\n                break;\n            default:\n                break;\n            }\n        }\n\n        /* If all else fails... */\n        if (!auditDesc) {\n            /* Currently not called anywhere */\n            if (audit.extra_info.indexOf('revoked_all=') >= 0) {\n                auditDesc = formatMessage(holders.revokedAll);\n            } else {\n                let actionDesc = '';\n                if (actionURL && actionURL.lastIndexOf('/') !== -1) {\n                    actionDesc = actionURL.substring(actionURL.lastIndexOf('/') + 1).replace('_', ' ');\n                    actionDesc = toTitleCase(actionDesc);\n                }\n\n                let extraInfoDesc = '';\n                if (audit.extra_info) {\n                    extraInfoDesc = audit.extra_info;\n\n                    if (extraInfoDesc.indexOf('=') !== -1) {\n                        extraInfoDesc = extraInfoDesc.substring(extraInfoDesc.indexOf('=') + 1);\n                    }\n                }\n                auditDesc = actionDesc + ' ' + extraInfoDesc;\n            }\n        }\n\n        const date = new Date(audit.create_at);\n        const timestamp = (\n            <div>\n                <div>\n                    <FormattedDate\n                        value={date}\n                        day='2-digit'\n                        month='short'\n                        year='numeric'\n                    />\n                </div>\n                <div>\n                    <FormattedTime\n                        value={date}\n                        hour='2-digit'\n                        minute='2-digit'\n                    />\n                </div>\n            </div>\n        );\n\n        const auditProfile = this.props.getUser(audit.user_id);\n\n        const userId = auditProfile ? auditProfile.email : audit.user_id;\n        const desc = auditDesc;\n        const ip = audit.ip_address;\n        const sessionId = audit.session_id;\n\n        return {\n            timestamp,\n            userId,\n            desc,\n            ip,\n            sessionId,\n        };\n    }\n}\n\nexport default injectIntl(AuditTable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getMissingProfilesByIds} from 'mattermost-redux/actions/users';\nimport {getUser, getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getChannelByName} from 'mattermost-redux/selectors/entities/channels';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {getDirectTeammate} from 'utils/utils.jsx';\n\nimport {GlobalState} from 'types/store';\n\nimport AuditTable from './audit_table';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        currentUser: getCurrentUser(state),\n        getUser: (userId: string) => getUser(state, userId),\n        getByName: (channelName: string) => getChannelByName(state, channelName),\n        getDirectTeammate: (channelId: string) => getDirectTeammate(state, channelId),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getMissingProfilesByIds,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AuditTable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {ChromePicker, ColorResult} from 'react-color';\nimport tinycolor from 'tinycolor2';\n\ntype Props = {\n    id: string;\n    onChange: (color: string) => void;\n    value: string;\n    isDisabled?: boolean;\n}\n\ntype State = {\n    focused: boolean;\n    isOpened: boolean;\n    value: string;\n}\n\nexport default class ColorInput extends React.PureComponent<Props, State> {\n    private colorPicker: React.RefObject<HTMLDivElement>;\n    private colorInput: React.RefObject<HTMLInputElement>;\n\n    public constructor(props: Props) {\n        super(props);\n        this.colorPicker = React.createRef();\n        this.colorInput = React.createRef();\n\n        this.state = {\n            focused: false,\n            isOpened: false,\n            value: props.value,\n        };\n    }\n\n    static getDerivedStateFromProps(props: Props, state: State) {\n        if (!state.focused && props.value !== state.value) {\n            return {\n                value: props.value,\n            };\n        }\n\n        return null;\n    }\n\n    public componentDidUpdate(prevProps: Props, prevState: State) {\n        const {isOpened: prevIsOpened} = prevState;\n        const {isOpened} = this.state;\n\n        if (isOpened !== prevIsOpened) {\n            if (isOpened) {\n                document.addEventListener('click', this.checkClick);\n            } else {\n                document.removeEventListener('click', this.checkClick);\n            }\n        }\n    }\n\n    private checkClick = (e: MouseEvent): void => {\n        if (!this.colorPicker.current || !this.colorPicker.current.contains(e.target as Element)) {\n            this.setState({isOpened: false});\n        }\n    };\n\n    private togglePicker = () => {\n        if (!this.state.isOpened && this.colorInput.current) {\n            this.colorInput.current.focus();\n        }\n        this.setState({isOpened: !this.state.isOpened});\n    };\n\n    public handleColorChange = (newColorData: ColorResult) => {\n        this.props.onChange(newColorData.hex);\n    };\n\n    private onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const value = event.target.value;\n\n        const color = tinycolor(value);\n        const normalizedColor = '#' + color.toHex();\n\n        if (color.isValid()) {\n            this.props.onChange(normalizedColor);\n        }\n\n        this.setState({value});\n    };\n\n    private onFocus = (event: React.FocusEvent<HTMLInputElement>): void => {\n        this.setState({\n            focused: true,\n        });\n\n        if (event.target) {\n            event.target.setSelectionRange(1, event.target.value.length);\n        }\n    }\n\n    private onBlur = () => {\n        const value = this.state.value;\n\n        const color = tinycolor(value);\n        const normalizedColor = '#' + color.toHex();\n\n        if (color.isValid()) {\n            this.props.onChange(normalizedColor);\n\n            this.setState({\n                value: normalizedColor,\n            });\n        } else {\n            this.setState({\n                value: this.props.value,\n            });\n        }\n\n        this.setState({\n            focused: false,\n        });\n    };\n\n    private onKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        // open picker on enter or space\n        if (event.key === 'Enter' || event.key === ' ') {\n            this.togglePicker();\n        }\n    };\n\n    public render() {\n        const {id} = this.props;\n        const {isOpened, value} = this.state;\n\n        return (\n            <div className='color-input input-group'>\n                <input\n                    id={`${id}-inputColorValue`}\n                    ref={this.colorInput}\n                    className='form-control'\n                    type='text'\n                    value={value}\n                    onChange={this.onChange}\n                    onBlur={this.onBlur}\n                    onFocus={this.onFocus}\n                    onKeyDown={this.onKeyDown}\n                    maxLength={7}\n                    disabled={this.props.isDisabled}\n\n                />\n                {!this.props.isDisabled &&\n                    <span\n                        id={`${id}-squareColorIcon`}\n                        className='input-group-addon color-pad'\n                        onClick={this.togglePicker}\n                    >\n                        <i\n                            id={`${id}-squareColorIconValue`}\n                            className='color-icon'\n                            style={{\n                                backgroundColor: value,\n                            }}\n                        />\n                    </span>\n                }\n                {isOpened && (\n                    <div\n                        ref={this.colorPicker}\n                        className='color-popover'\n                        id={`${id}-ChromePickerModal`}\n                    >\n                        <ChromePicker\n                            color={value}\n                            onChange={this.handleColorChange}\n                            disableAlpha={true}\n                        />\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\n// accepts either a single error or an array of errors\ntype Props = {\n    type?: React.ReactNode;\n    error?: React.ReactNode;\n    textClassName?: string;\n    iconClassName?: string;\n    margin?: boolean;\n    errors?: React.ReactNode[];\n}\n\nexport default class FormError extends React.PureComponent<Props> {\n    public static defaultProps = {\n        error: null,\n        errors: [],\n    }\n    public render() {\n        const {error = null, errors = [], iconClassName, margin, textClassName, type} = this.props;\n\n        if (!error && errors.length === 0) {\n            return null;\n        }\n\n        // look for the first truthy error to display\n        let message = error;\n\n        if (!message) {\n            for (const err of errors) {\n                if (err) {\n                    message = err;\n                }\n            }\n        }\n\n        if (!message) {\n            return null;\n        }\n\n        if (type === 'modal') {\n            return (\n                <div className='form-group'>\n                    <label className='col-sm-12 has-error'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        if (type === 'backstage') {\n            return (\n                <div className='pull-left has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        if (margin) {\n            return (\n                <div className='form-group has-error'>\n                    <label className='control-label'>\n                        {message}\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div className={`col-sm-12 ${textClassName || 'has-error'}`}>\n                <label className='control-label'>\n                    <i className={`fa ${iconClassName || 'fa-exclamation-circle'}`}/> {message}\n                </label>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\n\nimport {t} from 'utils/i18n';\n\ntype Props = {\n    additionalClassName: string | null;\n}\n\nexport default class WarningIcon extends React.PureComponent<Props> {\n    public static defaultProps: Props = {\n        additionalClassName: null,\n    };\n\n    public render(): JSX.Element {\n        const className = 'fa fa-warning' + (this.props.additionalClassName ? ' ' + this.props.additionalClassName : '');\n        return (\n            <LocalizedIcon\n                className={className}\n                title={{id: t('generic_icons.warning'), defaultMessage: 'Warning Icon'}}\n            />\n        );\n    }\n}\n"],"sourceRoot":""}