{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/common/site_name_and_description.tsx","webpack:///./components/create_team/components/display_name.jsx","webpack:///./components/create_team/components/team_url/index.ts","webpack:///./components/create_team/components/team_url/team_url.tsx","webpack:///./components/create_team/create_team.tsx","webpack:///./components/create_team/index.js","webpack:///./images/logo.png"],"names":["BackButton","React","PureComponent","render","props","onClick","url","title","toString","SiteNameAndDescription","customDescriptionText","siteName","description","TeamSignupDisplayNamePage","constructor","e","preventDefault","trackEvent","displayName","state","teamDisplayName","trim","setState","nameError","length","Constants","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","min","max","newState","wizard","team","display_name","name","cleanUpUrlable","updateParent","currentTarget","select","target","value","componentDidMount","nameDivClass","logoImage","handleFocus","handleDisplayNameChange","submitNext","PropTypes","object","func","mapDispatchToProps","dispatch","actions","bindActionCreators","checkIfTeamExists","createTeam","searchTeams","connect","TeamUrl","getState","store","currentUser","getCurrentUser","teamName","roles","includes","teamList","data","teamListWithName","map","filter","teamURL","cleanedName","URL","urlRegex","test","isLoading","teamSignup","JSON","parse","stringify","type","checkIfTeamExistsData","exists","createTeamData","error","history","push","DEFAULT_CHANNEL","message","getTeamName","urlTooltip","finishMessage","OVERLAY_TIME_DELAY","submitBack","CreateTeam","currentChannel","currentTeam","match","mapStateToProps","config","getConfig","getCurrentChannel","getCurrentTeam","CustomDescriptionText","SiteName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AAee,MAAMA,UAAN,SAAyBC,4CAAK,CAACC,aAA/B,CAAoD;AAKxDC,QAAP,GAA6B;AACzB,wBACI;AACI,QAAE,EAAC,aADP;AAEI,eAAS,EAAC;AAFd,oBAII,2DAAC,qDAAD;AACI,aAAO,EAAE,KAAKC,KAAL,CAAWC,OADxB;AAEI,QAAE,EAAE,KAAKD,KAAL,CAAWE;AAFnB,oBAII,2DAAC,2DAAD;AACI,QAAE,EAAC,oBADP;AAEI,oBAAc,EAAC;AAFnB,OAIMC,KAAD,iBACG;AACI,QAAE,EAAC,kBADP;AAEI,eAAS,EAAC,wBAFd;AAGI,WAAK,EAAEA,KAAK,CAACC,QAAN;AAHX,MALR,CAJJ,eAgBI,2DAAC,2DAAD;AACI,QAAE,EAAC,iBADP;AAEI,oBAAc,EAAC;AAFnB,MAhBJ,CAJJ,CADJ;AA4BH;;AAlC8D;AAAA;AAAA;AAAA;AAAA;;AAAA;;gBAA9CR,U;AARjBM,K;AAKAD,S;;;gBAGiBL,U,kBAC4B;AACzCM,KAAG,EAAE;AADoC,C;;;;;;;;;;;0BAD5BN,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBrB;AACA;AAEA;AACA;AAOe,MAAMS,sBAAN,SAAqCR,4CAAK,CAACC,aAA3C,CAAgE;AAKpEC,QAAP,GAA6B;AACzB,UAAM;AACFO,2BADE;AAEFC;AAFE,QAGF,KAAKP,KAHT;AAIA,QAAIQ,WAAW,GAAG,IAAlB;;AACA,QAAIF,qBAAJ,EAA2B;AACvBE,iBAAW,GAAGF,qBAAd;AACH,KAFD,MAEO;AACHE,iBAAW,gBACP,2DAAC,2DAAD;AACI,UAAE,EAAC,sBADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,wBACI,2DAAC,4CAAD,CAAO,QAAP,qBACI;AAAI,QAAE,EAAC;AAAP,OAAoBD,QAApB,CADJ,eAEI;AACI,QAAE,EAAC,kBADP;AAEI,eAAS,EAAC;AAFd,OAIKC,WAJL,CAFJ,CADJ;AAWH;;AAjC0E;AAAA;AAAA;AAAA;AAAA;;AAAA;;gBAA1DH,sB;AAJjBC,uB;AACAC,U;;;gBAGiBF,sB,kBAC4B;AACzCE,UAAQ,EAAE;AAD+B,C;;;;;;;;;;;0BAD5BF,sB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXrB;AACA;;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEe,MAAMI,yBAAN,SAAwCZ,4CAAK,CAACC,aAA9C,CAA4D;AAcvEY,aAAW,CAACV,KAAD,EAAQ;AAAA;;AACf,UAAMA,KAAN;;AADe,wCAYLW,CAAD,IAAO;AAChBA,OAAC,CAACC,cAAF;AACAC,sFAAU,CAAC,cAAD,EAAiB,YAAjB,CAAV;AACA,UAAIC,WAAW,GAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,IAA3B,EAAlB;;AACA,UAAI,CAACH,WAAL,EAAkB;AACd,aAAKI,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,mCADP;AAEI,0BAAc,EAAC;AAFnB;AADU,SAAd;AAMA;AACH,OARD,MAQO,IAAIL,WAAW,CAACM,MAAZ,GAAqBC,2DAAS,CAACC,mBAA/B,IAAsDR,WAAW,CAACM,MAAZ,GAAqBC,2DAAS,CAACE,mBAAzF,EAA8G;AACjH,aAAKL,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,qCADP;AAEI,0BAAc,EAAC,8GAFnB;AAGI,kBAAM,EAAE;AACJK,iBAAG,EAAEH,2DAAS,CAACC,mBADX;AAEJG,iBAAG,EAAEJ,2DAAS,CAACE;AAFX;AAHZ;AADU,SAAd;AAUA;AACH;;AAED,YAAMG,QAAQ,GAAG,KAAK1B,KAAL,CAAWe,KAA5B;AACAW,cAAQ,CAACC,MAAT,GAAkB,UAAlB;AACAD,cAAQ,CAACE,IAAT,CAAcC,YAAd,GAA6Bf,WAA7B;AACAY,cAAQ,CAACE,IAAT,CAAcE,IAAd,GAAqBC,gEAAc,CAACjB,WAAD,CAAnC;AACA,WAAKd,KAAL,CAAWgC,YAAX,CAAwBN,QAAxB;AACH,KA3CkB;;AAAA,yCA6CJf,CAAD,IAAO;AACjBA,OAAC,CAACC,cAAF;AACAD,OAAC,CAACsB,aAAF,CAAgBC,MAAhB;AACH,KAhDkB;;AAAA,qDAkDQvB,CAAD,IAAO;AAC7B,WAAKO,QAAL,CAAc;AAACF,uBAAe,EAAEL,CAAC,CAACwB,MAAF,CAASC;AAA3B,OAAd;AACH,KApDkB;;AAGf,SAAKrB,KAAL,GAAa;AACTC,qBAAe,EAAE,+BAAKhB,KAAL,CAAWe,KAAX,CAAiBa,IAAjB,gFAAuBC,YAAvB,KAAuC,EAD/C,CACmD;;AADnD,KAAb;AAGH;;AAEDQ,mBAAiB,GAAG;AAChBxB,oFAAU,CAAC,QAAD,EAAW,qBAAX,CAAV;AACH;;AA4CDd,QAAM,GAAG;AACL,QAAIoB,SAAS,GAAG,IAAhB;AACA,QAAImB,YAAY,GAAG,YAAnB;;AACA,QAAI,KAAKvB,KAAL,CAAWI,SAAf,EAA0B;AACtBA,eAAS,gBAAG;AAAO,iBAAS,EAAC;AAAjB,SAAkC,KAAKJ,KAAL,CAAWI,SAA7C,CAAZ;AACAmB,kBAAY,IAAI,YAAhB;AACH;;AAED,wBACI,qFACI,sFACI;AACI,SAAG,EAAE,aADT;AAEI,eAAS,EAAC,kBAFd;AAGI,SAAG,EAAEC,uDAASA;AAHlB,MADJ,eAMI,oFACI,2DAAC,2DAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CANJ,eAYI;AAAK,eAAS,EAAED;AAAhB,oBACI;AAAK,eAAS,EAAC;AAAf,oBACI;AAAK,eAAS,EAAC;AAAf,oBACI;AACI,QAAE,EAAC,eADP;AAEI,UAAI,EAAC,MAFT;AAGI,eAAS,EAAC,cAHd;AAII,iBAAW,EAAC,EAJhB;AAKI,eAAS,EAAC,KALd;AAMI,WAAK,EAAE,KAAKvB,KAAL,CAAWC,eANtB;AAOI,eAAS,EAAE,IAPf;AAQI,aAAO,EAAE,KAAKwB,WARlB;AASI,cAAQ,EAAE,KAAKC,uBATnB;AAUI,gBAAU,EAAC;AAVf,MADJ,CADJ,CADJ,EAiBKtB,SAjBL,CAZJ,eA+BI,qFACI,2DAAC,2DAAD;AACI,QAAE,EAAC,mCADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CA/BJ,eAqCI;AACI,QAAE,EAAC,oBADP;AAEI,UAAI,EAAC,QAFT;AAGI,eAAS,EAAC,sBAHd;AAII,aAAO,EAAE,KAAKuB;AAJlB,oBAMI,2DAAC,2DAAD;AACI,QAAE,EAAC,+BADP;AAEI,oBAAc,EAAC;AAFnB,MANJ,eAUI,2DAAC,6EAAD,OAVJ,CArCJ,CADJ,CADJ;AAsDH;;AAlIsE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAoI3E;;gBApIqBjC,yB,eACE;AAEf;AACR;AACA;AACQM,OAAK,EAAE4B,iDAAS,CAACC,MALF;;AAOf;AACR;AACA;AACQZ,cAAY,EAAEW,iDAAS,CAACE;AAVT,C;;;;;;;;;;;0BADFpC,yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdrB;AACA;AAEA;AACA;AAGA;AAKA;;AAQA,SAASqC,kBAAT,CAA4BC,QAA5B,EAAgD;AAC5C,SAAO;AACHC,WAAO,EAAEC,gEAAkB,CAA+C;AACtEC,yGADsE;AAEtEC,2FAFsE;AAGtEC,0FAAWA;AAH2D,KAA/C,EAIxBL,QAJwB;AADxB,GAAP;AAOH;;iBAEcM,2DAAO,CAAC,IAAD,EAAOP,kBAAP,CAAP,CAAkCQ,iDAAlC,C;;AAAA;;;;;;;;;;0BAVNR,kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBT;AACA;;AACA;AAEA;AACA;AACA;AAKA;AAEA;AACA;AAEA;AACA;CAGA;;AACA;AAyCA,MAAMS,QAAQ,GAAGC,8DAAK,CAACD,QAAvB;AAEe,MAAMD,OAAN,SAAsBzD,4CAAK,CAACC,aAA5B,CAAwD;AACnEY,aAAW,CAACV,KAAD,EAAe;AACtB,UAAMA,KAAN;;AADsB,yCAWL,YAAY;AAC7B,YAAMe,KAAK,GAAGwC,QAAQ,EAAtB;AACA,YAAME,WAAW,GAAGC,gGAAc,CAAC3C,KAAD,CAAlC;AAEA,UAAI4C,QAAQ,aAAMF,WAAW,CAACG,KAAZ,CAAkBC,QAAlB,CAA2B,cAA3B,IAA6C,GAA7C,GAAmD,GAAzD,SAAZ;AAEA,YAAMC,QAAQ,GAAG,MAAM,KAAK9D,KAAL,CAAWgD,OAAX,CAAmBI,WAAnB,CAA+B,EAA/B,EAAmC,EAAnC,CAAvB;;AACA,UAAIU,QAAJ,aAAIA,QAAJ,eAAIA,QAAQ,CAAEC,IAAd,EAAoB;AAChB,cAAMC,gBAAgB,GAAGF,QAAQ,CAACC,IAAT,CAAcE,GAAd,CAAmB7B,KAAD,IAAgBA,KAAK,CAACN,IAAxC,EAA8CoC,MAA9C,CAAsD9B,KAAD,IAAgBA,KAAK,CAACyB,QAAN,CAAe,OAAf,CAArE,CAAzB;AAEAF,gBAAQ,aAAMA,QAAN,cAAkBK,gBAAgB,CAAC5C,MAAjB,GAA0B,CAA5C,CAAR;AACH;;AACD,WAAKF,QAAL,CAAc;AAACyC;AAAD,OAAd;AACH,KAxByB;;AAAA,wCA+BLhD,CAAD,IAAkD;AAClEA,OAAC,CAACC,cAAF;AACAC,sFAAU,CAAC,QAAD,EAAW,YAAX,CAAV;AACA,YAAMa,QAAQ,GAAG,KAAK1B,KAAL,CAAWe,KAA5B;AACAW,cAAQ,CAACC,MAAT,GAAkB,cAAlB;AACA,WAAK3B,KAAL,CAAWgC,YAAX,CAAwBN,QAAxB;AACH,KArCyB;;AAAA,wCAuCN,MAAOf,CAAP,IAAmD;AACnEA,OAAC,CAACC,cAAF;AACAC,sFAAU,CAAC,QAAD,EAAW,cAAX,CAAV;AAEA,YAAMiB,IAAI,GAAG,KAAKf,KAAL,CAAWoD,OAAX,CAAmBlD,IAAnB,EAAb;AACA,YAAMmD,WAAW,GAAGC,yDAAA,CAAmBvC,IAAnB,CAApB;AACA,YAAMwC,QAAQ,GAAG,uCAAjB;AACA,YAAM;AAACtB,eAAO,EAAE;AAACE,2BAAD;AAAoBC;AAApB;AAAV,UAA6C,KAAKnD,KAAxD;;AAEA,UAAI,CAAC8B,IAAL,EAAW;AACP,aAAKZ,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,+BADP;AAEI,0BAAc,EAAC;AAFnB;AADU,SAAd;AAMA;AACH;;AAED,UAAIiD,WAAW,CAAChD,MAAZ,GAAqBC,4DAAS,CAACC,mBAA/B,IAAsD8C,WAAW,CAAChD,MAAZ,GAAqBC,4DAAS,CAACE,mBAAzF,EAA8G;AAC1G,aAAKL,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,iCADP;AAEI,0BAAc,EAAC,gEAFnB;AAGI,kBAAM,EAAE;AACJK,iBAAG,EAAEH,4DAAS,CAACC,mBADX;AAEJG,iBAAG,EAAEJ,4DAAS,CAACE;AAFX;AAHZ;AADU,SAAd;AAUA;AACH;;AAED,UAAI6C,WAAW,KAAKtC,IAAhB,IAAwB,CAACwC,QAAQ,CAACC,IAAT,CAAczC,IAAd,CAA7B,EAAkD;AAC9C,aAAKZ,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,4BADP;AAEI,0BAAc,EAAC;AAFnB;AADU,SAAd;AAMA;AACH,OAzCkE,CA2CnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAAKD,QAAL,CAAc;AAACsD,iBAAS,EAAE;AAAZ,OAAd;AACA,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK5E,KAAL,CAAWe,KAA1B,CAAX,CAAnB;AACA0D,gBAAU,CAAC7C,IAAX,CAAgBiD,IAAhB,GAAuB,GAAvB;AACAJ,gBAAU,CAAC7C,IAAX,CAAgBE,IAAhB,GAAuB,KAAKf,KAAL,CAAW4C,QAAlC;AAEA,YAAMmB,qBAA0C,GAAG,MAAM5B,iBAAiB,CAACpB,IAAD,CAA1E;AACA,YAAMiD,MAAM,GAAGD,qBAAqB,CAACC,MAArC;;AAEA,UAAIA,MAAJ,EAAY;AACR,aAAK7D,QAAL,CAAc;AAACC,mBAAS,eACpB,2DAAC,2DAAD;AACI,cAAE,EAAC,kCADP;AAEI,0BAAc,EAAC;AAFnB;AADU,SAAd;AAMA,aAAKD,QAAL,CAAc;AAACsD,mBAAS,EAAE;AAAZ,SAAd;AACA;AACH;;AAED,YAAMQ,cAA0C,GAAG,MAAM7B,UAAU,CAACsB,UAAU,CAAC7C,IAAZ,CAAnE;AACA,YAAMmC,IAAI,GAAGiB,cAAc,CAACjB,IAA5B;AACA,YAAMkB,KAAK,GAAGD,cAAc,CAACC,KAA7B;;AAEA,UAAIlB,IAAJ,EAAU;AACN,aAAK/D,KAAL,CAAWkF,OAAX,CAAmBC,IAAnB,CAAwB,MAAMpB,IAAI,CAACjC,IAAX,GAAkB,YAAlB,GAAiCT,4DAAS,CAAC+D,eAAnE;AACAvE,wFAAU,CAAC,QAAD,EAAW,yBAAX,CAAV;AACH,OAHD,MAGO,IAAIoE,KAAJ,EAAW;AACd,aAAK/D,QAAL,CAAc;AAACC,mBAAS,EAAE8D,KAAK,CAACI;AAAlB,SAAd;AACA,aAAKnE,QAAL,CAAc;AAACsD,mBAAS,EAAE;AAAZ,SAAd;AACH;AACJ,KA5HyB;;AAAA,yCA8HJ7D,CAAD,IAA2C;AAC5DA,OAAC,CAACC,cAAF;AACAD,OAAC,CAACsB,aAAF,CAAgBC,MAAhB;AACH,KAjIyB;;AAAA,sDAmISvB,CAAD,IAA4C;AAC1E,WAAKO,QAAL,CAAc;AAACiD,eAAO,EAAExD,CAAC,CAACwB,MAAF,CAASC;AAAnB,OAAd;AACH,KArIyB;;AAGtB,SAAKrB,KAAL,GAAa;AACTI,eAAS,EAAE,EADF;AAETqD,eAAS,EAAE,KAFF;AAGTL,aAAO,EAAEnE,KAAK,CAACe,KAAN,CAAYa,IAAZ,CAAiBE,IAHjB;AAIT6B,cAAQ,EAAE;AAJD,KAAb;AAMH;;AAiBMtB,mBAAP,GAA2B;AACvBxB,oFAAU,CAAC,QAAD,EAAW,oBAAX,CAAV;AACA,SAAKyE,WAAL;AACH;;AA0GDvF,QAAM,GAAG;AACL,QAAIoB,SAAS,GAAG,IAAhB;AACA,QAAImB,YAAY,GAAG,YAAnB;;AACA,QAAI,KAAKvB,KAAL,CAAWI,SAAf,EAA0B;AACtBA,eAAS,gBAAG;AAAO,iBAAS,EAAC;AAAjB,SAAkC,KAAKJ,KAAL,CAAWI,SAA7C,CAAZ;AACAmB,kBAAY,IAAI,YAAhB;AACH;;AAED,UAAMnC,KAAK,aAAMkE,qDAAA,EAAN,MAAX;AACA,UAAMkB,UAAU,gBACZ,2DAAC,uDAAD;AAAS,QAAE,EAAC;AAAZ,OAA0BpF,KAA1B,CADJ;AAIA,QAAIqF,aAAa,gBACb,2DAAC,2DAAD;AACI,QAAE,EAAC,6BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ;;AAOA,QAAI,KAAKzE,KAAL,CAAWyD,SAAf,EAA0B;AACtBgB,mBAAa,gBACT,2DAAC,2DAAD;AACI,UAAE,EAAC,mCADP;AAEI,sBAAc,EAAC;AAFnB,QADJ;AAMH;;AAED,wBACI,qFACI,sFACI;AACI,SAAG,EAAE,kBADT;AAEI,eAAS,EAAC,kBAFd;AAGI,SAAG,EAAEjD,wDAASA;AAHlB,MADJ,eAMI,oFACI,2DAAC,2DAAD;AACI,QAAE,EAAC,8BADP;AAEI,oBAAc,EAAC;AAFnB,MADJ,CANJ,eAYI;AAAK,eAAS,EAAED;AAAhB,oBACI;AAAK,eAAS,EAAC;AAAf,oBACI;AAAK,eAAS,EAAC;AAAf,oBACI;AAAK,eAAS,EAAC;AAAf,OACK,KAAKvB,KAAL,CAAW4C,QAAX,KAAwB,EAAxB,iBAA+B,2DAAC,mEAAD;AAC5B,eAAS,EAAEtC,4DAAS,CAACoE,kBADO;AAE5B,eAAS,EAAC,KAFkB;AAG5B,aAAO,EAAEF,UAHmB,CAIhC;;AAJgC,oBAM5B;AAAM,eAAS,EAAC;AAAhB,OACKpF,KAAK,GAAG,KAAKY,KAAL,CAAW4C,QADxB,CAN4B,CADpC,CADJ,CADJ,CADJ,EA6BKxC,SA7BL,CAZJ,eAqEI;AAAK,eAAS,EAAC;AAAf,oBACI,2DAAC,sDAAD;AACI,QAAE,EAAC,qBADP;AAEI,UAAI,EAAC,QAFT;AAGI,aAAO,EAAC,SAHZ;AAII,cAAQ,EAAE,KAAKJ,KAAL,CAAWyD,SAJzB;AAKI,aAAO,EAAG7D,CAAD,IAA6C,KAAK+B,UAAL,CAAgB/B,CAAhB;AAL1D,OAOK6E,aAPL,CADJ,CArEJ,eAgFI;AAAK,eAAS,EAAC;AAAf,oBACI;AACI,UAAI,EAAC,GADT;AAEI,aAAO,EAAE,KAAKE;AAFlB,oBAII,2DAAC,2DAAD;AACI,QAAE,EAAC,2BADP;AAEI,oBAAc,EAAC;AAFnB,MAJJ,CADJ,CAhFJ,CADJ,CADJ;AAgGH;;AArQkE;AAAA;AAAA;AAAA;AAAA;;AAAA;AAuQvE;;gBAvQqBpC,O;AA7BjBvC,O;AAAQa,Q;AAAWD,U;;AAKnBK,c;AAKAgB,S;AAKIE,qB;AAKAC,c;AACAC,e;;AAEJ8B,S;;;;;;;;;;;;0BAIE3B,Q;0BAEeD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChErB;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAqCe,MAAMqC,UAAN,SAAyB9F,4CAAK,CAACC,aAA/B,CAAiF;AACrFY,aAAP,CAAmBV,KAAnB,EAAuD;AACnD,UAAMA,KAAN;;AADmD,0CAShCe,KAAD,IAAkB;AACpC,WAAKG,QAAL,CAAcH,KAAd;AACA,WAAKf,KAAL,CAAWkF,OAAX,CAAmBC,IAAnB,CAAwB,kBAAkBpE,KAAK,CAACY,MAAhD;AACH,KAZsD;;AAGnD,SAAKZ,KAAL,GAAa;AACTa,UAAI,EAAE,EADG;AAETD,YAAM,EAAE;AAFC,KAAb;AAIH;;AAOD5B,QAAM,GAAG;AACL,UAAM;AACF6F,oBADE;AAEFC,iBAFE;AAGFvF,2BAHE;AAIFwF,WAJE;AAKFvF;AALE,QAMF,KAAKP,KANT;AAQA,QAAIE,GAAG,GAAG,cAAV;;AACA,QAAI2F,WAAJ,EAAiB;AACb3F,SAAG,cAAO2F,WAAW,CAAC/D,IAAnB,CAAH;;AACA,UAAI8D,cAAJ,EAAoB;AAChB1F,WAAG,wBAAiB0F,cAAc,CAAC9D,IAAhC,CAAH;AACH;AACJ;;AAED,wBACI,qFACI,2DAAC,mEAAD,OADJ,eAEI,2DAAC,qEAAD;AAAY,SAAG,EAAE5B;AAAjB,MAFJ,eAGI;AAAK,eAAS,EAAC;AAAf,oBACI;AAAK,eAAS,EAAC;AAAf,oBACI,2DAAC,mFAAD;AACI,2BAAqB,EAAEI,qBAD3B;AAEI,cAAQ,EAAEC;AAFd,MADJ,eAKI;AAAK,eAAS,EAAC;AAAf,oBACI,2DAAC,uDAAD,qBACI,2DAAC,sDAAD;AACI,UAAI,YAAK,KAAKP,KAAL,CAAW8F,KAAX,CAAiB5F,GAAtB,kBADR;AAEI,YAAM,EAAGF,KAAD,iBACJ,2DAAC,sFAAD;AACI,aAAK,EAAE,KAAKe,KADhB;AAEI,oBAAY,EAAE,KAAKiB;AAFvB,SAGQhC,KAHR;AAHR,MADJ,eAWI,2DAAC,sDAAD;AACI,UAAI,YAAK,KAAKA,KAAL,CAAW8F,KAAX,CAAiB5F,GAAtB,cADR;AAEI,YAAM,EAAGF,KAAD,iBACJ,2DAAC,kFAAD;AACI,aAAK,EAAE,KAAKe,KADhB;AAEI,oBAAY,EAAE,KAAKiB;AAFvB,SAGQhC,KAHR;AAHR,MAXJ,eAqBI,2DAAC,yDAAD;AAAU,QAAE,YAAK8F,KAAK,CAAC5F,GAAX;AAAZ,MArBJ,CADJ,CALJ,CADJ,CAHJ,CADJ;AAuCH;;AAvE2F;AAAA;AAAA;AAAA;AAAA;;AAAA;;gBAA3EyF,U;AA9BjBE,a;AAKAD,gB;AAKAtF,uB;AAKAC,U;AAKAuF,O;AACI5F,O;;;;;;;;;;;;;0BASayF,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDrB;AACA;AAEA;AAEA;AACA;AACA;AAEA;;AAEA,SAASI,eAAT,CAAyBhF,KAAzB,EAAgC;AAC5B,QAAMiF,MAAM,GAAGC,6FAAS,CAAClF,KAAD,CAAxB;AACA,QAAM6E,cAAc,GAAGM,sGAAiB,CAACnF,KAAD,CAAxC;AACA,QAAM8E,WAAW,GAAGM,gGAAc,CAACpF,KAAD,CAAlC;AAEA,QAAMT,qBAAqB,GAAG0F,MAAM,CAACI,qBAArC;AACA,QAAM7F,QAAQ,GAAGyF,MAAM,CAACK,QAAxB;AAEA,SAAO;AACHT,kBADG;AAEHC,eAFG;AAGHvF,yBAHG;AAIHC;AAJG,GAAP;AAMH;;iBAEc8C,2DAAO,CAAC0C,eAAD,CAAP,CAAyBJ,oDAAzB,C;;AAAA;;;;;;;;;;0BAhBNI,e;;;;;;;;;;;;;;;;;;;;;;ACXT;AAAe,oFAAuB,+CAA+C,E","file":"15.7f14690c8983a09f8940.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    customDescriptionText?: string;\n    siteName: string;\n}\n\nexport default class SiteNameAndDescription extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        siteName: 'Mattermost',\n    }\n\n    public render(): JSX.Element {\n        const {\n            customDescriptionText,\n            siteName,\n        } = this.props;\n        let description = null;\n        if (customDescriptionText) {\n            description = customDescriptionText;\n        } else {\n            description = (\n                <FormattedMessage\n                    id='web.root.signup_info'\n                    defaultMessage='All team communication in one place, searchable and accessible anywhere'\n                />\n            );\n        }\n\n        return (\n            <React.Fragment>\n                <h1 id='site_name'>{siteName}</h1>\n                <h4\n                    id='site_description'\n                    className='color--light'\n                >\n                    {description}\n                </h4>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport {cleanUpUrlable} from 'utils/url';\nimport logoImage from 'images/logo.png';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nexport default class TeamSignupDisplayNamePage extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Object containing team's display_name and name\n         */\n        state: PropTypes.object,\n\n        /*\n         * Function that updates parent component with state props\n         */\n        updateParent: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            teamDisplayName: this.props.state.team?.display_name || '', // eslint-disable-line camelcase\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_01_name');\n    }\n\n    submitNext = (e) => {\n        e.preventDefault();\n        trackEvent('display_name', 'click_next');\n        var displayName = this.state.teamDisplayName.trim();\n        if (!displayName) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        } else if (displayName.length < Constants.MIN_TEAMNAME_LENGTH || displayName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.display_name.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}. You can add a longer team description later.'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        const newState = this.props.state;\n        newState.wizard = 'team_url';\n        newState.team.display_name = displayName;\n        newState.team.name = cleanUpUrlable(displayName);\n        this.props.updateParent(newState);\n    }\n\n    handleFocus = (e) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    handleDisplayNameChange = (e) => {\n        this.setState({teamDisplayName: e.target.value});\n    }\n\n    render() {\n        var nameError = null;\n        var nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.display_name.teamName'\n                            defaultMessage='Team Name'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-9'>\n                                <input\n                                    id='teamNameInput'\n                                    type='text'\n                                    className='form-control'\n                                    placeholder=''\n                                    maxLength='128'\n                                    value={this.state.teamDisplayName}\n                                    autoFocus={true}\n                                    onFocus={this.handleFocus}\n                                    onChange={this.handleDisplayNameChange}\n                                    spellCheck='false'\n                                />\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <div>\n                        <FormattedMessage\n                            id='create_team.display_name.nameHelp'\n                            defaultMessage='Name your team in any language. Your team name shows in menus and headings.'\n                        />\n                    </div>\n                    <button\n                        id='teamNameNextButton'\n                        type='submit'\n                        className='btn btn-primary mt-8'\n                        onClick={this.submitNext}\n                    >\n                        <FormattedMessage\n                            id='create_team.display_name.next'\n                            defaultMessage='Next'\n                        />\n                        <NextIcon/>\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-disable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {connect} from 'react-redux';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport {checkIfTeamExists, createTeam, getTeams as searchTeams} from 'mattermost-redux/actions/teams';\n\nimport {Team, TeamSearchOpts, TeamsWithCount} from 'mattermost-redux/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport TeamUrl from './team_url';\n\ntype Actions = {\n    searchTeams: (term: string, opts: TeamSearchOpts) => Promise<{data: any}>;\n    checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n    createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            checkIfTeamExists,\n            createTeam,\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(TeamUrl);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {Button, Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Team, TeamSearchOpts} from 'mattermost-redux/types/teams';\nimport {Client4Error} from 'mattermost-redux/types/client4';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport store from 'stores/redux_store.jsx';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url';\nimport logoImage from 'images/logo.png';\n\n// import FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport OverlayTrigger from 'components/overlay_trigger';\n\ntype State = {\n    isLoading: boolean;\n    nameError: string | JSX.Element;\n    teamURL: string;\n    teamName: string;\n}\n\ntype Props = {\n\n    /*\n     * Object containing team's display_name and name\n     */\n    state: {team: any; wizard: string};\n\n    /*\n     * Function that updates parent component with state props\n     */\n    updateParent: (state: Props['state']) => void;\n\n    /*\n     * Object with redux action creators\n     */\n    actions: {\n\n        /*\n         * Action creator to check if a team already exists\n         */\n        checkIfTeamExists: (teamName: string) => Promise<{exists: boolean}>;\n\n        /*\n     * Action creator to create a new team\n     */\n        createTeam: (team: Team) => Promise<{data: Team; error: Client4Error}>;\n        searchTeams: (term: string, opts: TeamSearchOpts) => Promise<{data: any}>;\n    };\n    history: {\n        push(path: string): void;\n    };\n}\nconst getState = store.getState;\n\nexport default class TeamUrl extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            nameError: '',\n            isLoading: false,\n            teamURL: props.state.team.name,\n            teamName: '',\n        };\n    }\n\n    public getTeamName = async () => {\n        const state = getState();\n        const currentUser = getCurrentUser(state);\n\n        let teamName = `${currentUser.roles.includes('system_admin') ? 'o' : 'u'}-uet`;\n\n        const teamList = await this.props.actions.searchTeams('', {});\n        if (teamList?.data) {\n            const teamListWithName = teamList.data.map((value: any) => value.name).filter((value: any) => value.includes('o-uet'));\n\n            teamName = `${teamName}-${teamListWithName.length + 1}`;\n        }\n        this.setState({teamName});\n    }\n\n    public componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n        this.getTeamName();\n    }\n\n    public submitBack = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_back');\n        const newState = this.props.state;\n        newState.wizard = 'display_name';\n        this.props.updateParent(newState);\n    }\n\n    public submitNext = async (e: React.MouseEvent<Button, MouseEvent>) => {\n        e.preventDefault();\n        trackEvent('signup', 'click_finish');\n\n        const name = this.state.teamURL.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n        const {actions: {checkIfTeamExists, createTeam}} = this.props;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH,\n                    }}\n                />),\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />),\n            });\n            return;\n        }\n\n        // for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n        //     if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n        //         this.setState({nameError: (\n        //             <FormattedMarkdownMessage\n        //                 id='create_team.team_url.taken'\n        //                 defaultMessage='This URL [starts with a reserved word](!https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url) or is unavailable. Please try another.'\n        //             />),\n        //         });\n        //         return;\n        //     }\n        // }\n\n        this.setState({isLoading: true});\n        const teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = this.state.teamName;\n\n        const checkIfTeamExistsData: { exists: boolean } = await checkIfTeamExists(name);\n        const exists = checkIfTeamExistsData.exists;\n\n        if (exists) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.unavailable'\n                    defaultMessage='This URL is taken or unavailable. Please try another.'\n                />),\n            });\n            this.setState({isLoading: false});\n            return;\n        }\n\n        const createTeamData: { data: Team; error: any } = await createTeam(teamSignup.team);\n        const data = createTeamData.data;\n        const error = createTeamData.error;\n\n        if (data) {\n            this.props.history.push('/' + data.name + '/channels/' + Constants.DEFAULT_CHANNEL);\n            trackEvent('signup', 'signup_team_03_complete');\n        } else if (error) {\n            this.setState({nameError: error.message});\n            this.setState({isLoading: false});\n        }\n    }\n\n    public handleFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    public handleTeamURLInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({teamURL: e.target.value});\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        alt={'signup team logo'}\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    {this.state.teamName !== '' && (<OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    // eslint-disable-next-line react/jsx-closing-bracket-location\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title + this.state.teamName}\n                                        </span>\n                                    </OverlayTrigger>)}\n                                    {/* <input\n                                        id='teamURLInput'\n                                        type='text'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength={128}\n                                        value={this.state.teamURL}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        onChange={this.handleTeamURLInputChange}\n                                        spellCheck='false'\n                                    /> */}\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    {/* <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint1'\n                                defaultMessage='Short and memorable is best'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint2'\n                                defaultMessage='Use lowercase letters, numbers and dashes'\n                            />\n                        </li>\n                        <li>\n                            <FormattedMessage\n                                id='create_team.team_url.hint3'\n                                defaultMessage=\"Must start with a letter and can't end in a dash\"\n                            />\n                        </li>\n                    </ul> */}\n                    <div className='mt-8'>\n                        <Button\n                            id='teamURLFinishButton'\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={(e: React.MouseEvent<Button, MouseEvent>) => this.submitNext(e)}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='mt-8'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Route, Switch, Redirect, RouteComponentProps} from 'react-router-dom';\n\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport BackButton from 'components/common/back_button';\nimport DisplayName from 'components/create_team/components/display_name';\nimport SiteNameAndDescription from 'components/common/site_name_and_description';\nimport TeamUrl from 'components/create_team/components/team_url';\n\ntype Props = {\n\n    /*\n   * Object containing information on the current team, used to define BackButton's url\n   */\n    currentTeam: Team;\n\n    /*\n   * Object containing information on the current selected channel, used to define BackButton's url\n   */\n    currentChannel: Channel;\n\n    /*\n    * String containing the custom branding's text\n    */\n    customDescriptionText: string;\n\n    /*\n   * String containing the custom branding's Site Name\n   */\n    siteName: string;\n\n    /*\n   * Object from react-router\n   */\n    match: {\n        url: string;\n    };\n};\n\ntype State = {\n    team: {[key: string]: any};\n    wizard: string;\n};\n\nexport default class CreateTeam extends React.PureComponent<Props & RouteComponentProps, State> {\n    public constructor(props: Props & RouteComponentProps) {\n        super(props);\n\n        this.state = {\n            team: {},\n            wizard: 'display_name',\n        };\n    }\n\n    public updateParent = (state: State) => {\n        this.setState(state);\n        this.props.history.push('/create_team/' + state.wizard);\n    };\n\n    render() {\n        const {\n            currentChannel,\n            currentTeam,\n            customDescriptionText,\n            match,\n            siteName,\n        } = this.props;\n\n        let url = '/select_team';\n        if (currentTeam) {\n            url = `/${currentTeam.name}`;\n            if (currentChannel) {\n                url += `/channels/${currentChannel.name}`;\n            }\n        }\n\n        return (\n            <div>\n                <AnnouncementBar/>\n                <BackButton url={url}/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <SiteNameAndDescription\n                            customDescriptionText={customDescriptionText}\n                            siteName={siteName}\n                        />\n                        <div className='signup__content'>\n                            <Switch>\n                                <Route\n                                    path={`${this.props.match.url}/display_name`}\n                                    render={(props) => (\n                                        <DisplayName\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path={`${this.props.match.url}/team_url`}\n                                    render={(props) => (\n                                        <TeamUrl\n                                            state={this.state}\n                                            updateParent={this.updateParent}\n                                            {...props}\n                                        />\n                                    )}\n                                />\n                                <Redirect to={`${match.url}/display_name`}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {getCurrentTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport CreateTeam from './create_team';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const currentChannel = getCurrentChannel(state);\n    const currentTeam = getCurrentTeam(state);\n\n    const customDescriptionText = config.CustomDescriptionText;\n    const siteName = config.SiteName;\n\n    return {\n        currentChannel,\n        currentTeam,\n        customDescriptionText,\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(CreateTeam);\n","export default __webpack_public_path__ + \"files/ab8aa80cba445eb0fb75e6611c292567.png\";"],"sourceRoot":""}