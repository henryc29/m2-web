{"version":3,"sources":["webpack:///./components/about_build_modal/about_build_modal.tsx","webpack:///./components/about_build_modal/about_build_modal_cloud/about_build_modal_cloud.scss?f7ae","webpack:///./components/about_build_modal/about_build_modal_cloud/about_build_modal_cloud.tsx","webpack:///./components/about_build_modal/index.ts","webpack:///./components/add_users_to_team_modal/add_users_to_team_modal.tsx","webpack:///./components/add_users_to_team_modal/index.ts","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.jsx","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss?333b","webpack:///./components/admin_console/admin_console.tsx","webpack:///./components/admin_console/admin_definition.jsx","webpack:///./components/admin_console/admin_definition_constants.jsx","webpack:///./components/admin_console/admin_navbar_dropdown/admin_navbar_dropdown.tsx","webpack:///./components/admin_console/admin_navbar_dropdown/index.ts","webpack:///./components/admin_console/admin_navbar_dropdown/menu_item_blockable_link.tsx","webpack:///./components/admin_console/admin_settings.tsx","webpack:///./components/admin_console/admin_sidebar/admin_sidebar.jsx","webpack:///./components/admin_console/admin_sidebar/index.js","webpack:///./components/admin_console/admin_sidebar_category.jsx","webpack:///./components/admin_console/admin_sidebar_header/admin_sidebar_header.tsx","webpack:///./components/admin_console/admin_sidebar_header/index.ts","webpack:///./components/admin_console/admin_sidebar_section.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.jsx","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss?16a6","webpack:///./components/admin_console/audits/audits.tsx","webpack:///./components/admin_console/audits/index.ts","webpack:///./components/admin_console/banner.tsx","webpack:///./components/admin_console/billing/billing_history.scss?2fa1","webpack:///./components/admin_console/billing/billing_history.tsx","webpack:///./components/admin_console/billing/billing_subscriptions.scss?e3cb","webpack:///./components/admin_console/billing/billing_subscriptions.tsx","webpack:///./components/admin_console/billing/billing_summary.scss?79d0","webpack:///./components/admin_console/billing/billing_summary.tsx","webpack:///./components/admin_console/billing/company_info.tsx","webpack:///./components/admin_console/billing/company_info_display.scss?4e5a","webpack:///./components/admin_console/billing/company_info_display.tsx","webpack:///./components/admin_console/billing/company_info_edit.scss?004a","webpack:///./components/admin_console/billing/company_info_edit.tsx","webpack:///./components/admin_console/billing/payment_info.scss?2880","webpack:///./components/admin_console/billing/payment_info.tsx","webpack:///./components/admin_console/billing/payment_info_display.scss?26d2","webpack:///./components/admin_console/billing/payment_info_display.tsx","webpack:///./components/admin_console/billing/payment_info_edit.scss?f457","webpack:///./components/admin_console/billing/payment_info_edit.tsx","webpack:///./components/admin_console/billing/plan_details.scss?fdc8","webpack:///./components/admin_console/billing/plan_details.tsx","webpack:///./components/admin_console/bleve_settings.jsx","webpack:///./components/admin_console/blockable_link/blockable_link.tsx","webpack:///./components/admin_console/blockable_link/index.ts","webpack:///./components/admin_console/boolean_setting.tsx","webpack:///./components/admin_console/brand_image_setting/brand_image_setting.jsx","webpack:///./components/admin_console/cluster_settings.jsx","webpack:///./components/admin_console/cluster_table.jsx","webpack:///./components/admin_console/cluster_table_container.jsx","webpack:///./components/admin_console/color_setting.tsx","webpack:///./components/admin_console/compliance_reports/compliance_reports.tsx","webpack:///./components/admin_console/compliance_reports/index.ts","webpack:///./components/admin_console/custom_enable_disable_guest_accounts_setting.tsx","webpack:///./components/admin_console/custom_plugin_settings/custom_plugin_settings.jsx","webpack:///./components/admin_console/custom_plugin_settings/enable_plugin_setting.js","webpack:///./components/admin_console/custom_plugin_settings/index.js","webpack:///./components/admin_console/custom_terms_of_service_settings/custom_terms_of_service_settings.tsx","webpack:///./components/admin_console/custom_terms_of_service_settings/index.ts","webpack:///./components/admin_console/custom_url_schemes_setting.jsx","webpack:///./components/admin_console/data_grid/data_grid.scss?6c67","webpack:///./components/admin_console/data_grid/data_grid.tsx","webpack:///./components/admin_console/data_grid/data_grid_header.tsx","webpack:///./components/admin_console/data_grid/data_grid_row.tsx","webpack:///./components/admin_console/data_grid/data_grid_search.tsx","webpack:///./components/admin_console/data_retention_settings.jsx","webpack:///./components/admin_console/database_settings.jsx","webpack:///./components/admin_console/dropdown_setting.jsx","webpack:///./components/admin_console/elasticsearch_settings.jsx","webpack:///./components/admin_console/feature_discovery/feature_discovery.scss?3850","webpack:///./components/admin_console/feature_discovery/feature_discovery.tsx","webpack:///./components/admin_console/feature_discovery/index.tsx","webpack:///./components/admin_console/feature_discovery/ldap.tsx","webpack:///./components/admin_console/feature_discovery/saml.tsx","webpack:///./components/admin_console/feature_flags.tsx","webpack:///./components/admin_console/file_upload_setting.jsx","webpack:///./components/admin_console/filter/filter.scss?d71e","webpack:///./components/admin_console/filter/filter.tsx","webpack:///./components/admin_console/filter/filter_checkbox.tsx","webpack:///./components/admin_console/filter/filter_list.tsx","webpack:///./components/admin_console/filter/team_filter_dropdown/index.tsx","webpack:///./components/admin_console/filter/team_filter_dropdown/team_filter_checkbox.tsx","webpack:///./components/admin_console/filter/team_filter_dropdown/team_filter_dropdown.scss?e31a","webpack:///./components/admin_console/filter/team_filter_dropdown/team_filter_dropdown.tsx","webpack:///./components/admin_console/generated_setting.tsx","webpack:///./components/admin_console/group_settings/group_details/group_details.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile.jsx","webpack:///./components/admin_console/group_settings/group_details/group_profile_and_settings.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels.jsx","webpack:///./components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users.jsx","webpack:///./components/admin_console/group_settings/group_details/group_users_row.jsx","webpack:///./components/admin_console/group_settings/group_details/index.jsx","webpack:///./components/admin_console/group_settings/group_row.jsx","webpack:///./components/admin_console/group_settings/group_settings.jsx","webpack:///./components/admin_console/group_settings/groups_list/groups_list.tsx","webpack:///./components/admin_console/group_settings/groups_list/index.ts","webpack:///./components/admin_console/highlight.tsx","webpack:///./components/admin_console/index.ts","webpack:///./components/admin_console/jobs/index.jsx","webpack:///./components/admin_console/jobs/table.jsx","webpack:///./components/admin_console/license_settings/index.js","webpack:///./components/admin_console/license_settings/license_settings.jsx","webpack:///./components/admin_console/manage_roles_modal/index.ts","webpack:///./components/admin_console/manage_roles_modal/manage_roles_modal.tsx","webpack:///./components/admin_console/manage_teams_modal/index.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_dropdown.jsx","webpack:///./components/admin_console/manage_teams_modal/manage_teams_modal.jsx","webpack:///./components/admin_console/manage_teams_modal/remove_from_team_button.jsx","webpack:///./components/admin_console/manage_tokens_modal/index.ts","webpack:///./components/admin_console/manage_tokens_modal/manage_tokens_modal.tsx","webpack:///./components/admin_console/member_list_group/index.ts","webpack:///./components/admin_console/member_list_group/member_list_group.scss?baee","webpack:///./components/admin_console/member_list_group/member_list_group.tsx","webpack:///./components/admin_console/message_export_settings.jsx","webpack:///./components/admin_console/multiselect_settings.jsx","webpack:///./components/admin_console/openid_convert/index.ts","webpack:///./components/admin_console/openid_convert/openid_convert.scss?dc9f","webpack:///./components/admin_console/openid_convert/openid_convert.tsx","webpack:///./components/admin_console/password_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/edit_post_time_limit_button.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_button/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/edit_post_time_limit_modal.jsx","webpack:///./components/admin_console/permission_schemes_settings/edit_post_time_limit_modal/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/guest_permissions_tree.jsx","webpack:///./components/admin_console/permission_schemes_settings/guest_permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_checkbox.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_description.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_group.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_row.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_schemes_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_system_scheme_settings/permission_system_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/permission_team_scheme_settings.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permission_team_scheme_settings/team_in_list/team_in_list.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_scheme_summary/permissions_scheme_summary.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/index.jsx","webpack:///./components/admin_console/permission_schemes_settings/permissions_tree/permissions_tree.jsx","webpack:///./components/admin_console/plugin_management/index.ts","webpack:///./components/admin_console/plugin_management/plugin_management.tsx","webpack:///./components/admin_console/push_settings.jsx","webpack:///./components/admin_console/radio_setting.tsx","webpack:///./components/admin_console/remove_file_setting.jsx","webpack:///./components/admin_console/request_button/request_button.jsx","webpack:///./components/admin_console/reset_email_modal/reset_email_modal.jsx","webpack:///./components/admin_console/reset_password_modal/index.ts","webpack:///./components/admin_console/reset_password_modal/reset_password_modal.tsx","webpack:///./components/admin_console/revoke_token_button/index.ts","webpack:///./components/admin_console/revoke_token_button/revoke_token_button.tsx","webpack:///./components/admin_console/schema_admin_settings.jsx","webpack:///./components/admin_console/schema_text.jsx","webpack:///./components/admin_console/server_logs/index.ts","webpack:///./components/admin_console/server_logs/log_list.tsx","webpack:///./components/admin_console/server_logs/logs.tsx","webpack:///./components/admin_console/session_length_settings.jsx","webpack:///./components/admin_console/set_by_env.jsx","webpack:///./components/admin_console/setting.tsx","webpack:///./components/admin_console/settings_group.jsx","webpack:///./components/admin_console/system_roles/index.tsx","webpack:///./components/admin_console/system_roles/system_role/add_users_to_role_modal/add_users_to_role_modal.tsx","webpack:///./components/admin_console/system_roles/system_role/add_users_to_role_modal/index.tsx","webpack:///./components/admin_console/system_roles/system_role/index.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role_permission.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role_permission_dropdown.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role_permissions.scss?696e","webpack:///./components/admin_console/system_roles/system_role/system_role_permissions.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role_users/index.tsx","webpack:///./components/admin_console/system_roles/system_role/system_role_users/system_role_users.tsx","webpack:///./components/admin_console/system_roles/system_role/types.ts","webpack:///./components/admin_console/system_roles/system_roles.scss?26d0","webpack:///./components/admin_console/system_roles/system_roles.tsx","webpack:///./components/admin_console/system_user_detail/index.ts","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss?42f1","webpack:///./components/admin_console/system_user_detail/system_user_detail.tsx","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss?2b49","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.tsx","webpack:///./components/admin_console/system_user_detail/team_list/index.ts","webpack:///./components/admin_console/system_user_detail/team_list/team_list.tsx","webpack:///./components/admin_console/system_user_detail/team_list/team_list_dropdown.tsx","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss?61a6","webpack:///./components/admin_console/system_user_detail/team_list/team_row.tsx","webpack:///./components/admin_console/system_users/index.ts","webpack:///./components/admin_console/system_users/list/index.ts","webpack:///./components/admin_console/system_users/list/selectors.tsx","webpack:///./components/admin_console/system_users/list/system_users_list.tsx","webpack:///./components/admin_console/system_users/system_users.tsx","webpack:///./components/admin_console/system_users/system_users_dropdown/index.ts","webpack:///./components/admin_console/system_users/system_users_dropdown/system_users_dropdown.tsx","webpack:///./components/admin_console/team_channel_settings/abstract_list.jsx","webpack:///./components/admin_console/team_channel_settings/channel/channel_settings.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_details.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_groups.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_members/channel_members.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_members/index.ts","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_moderation.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_modes.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/channel_profile.tsx","webpack:///./components/admin_console/team_channel_settings/channel/details/index.ts","webpack:///./components/admin_console/team_channel_settings/channel/index.ts","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.scss?b716","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.tsx","webpack:///./components/admin_console/team_channel_settings/channel/list/index.ts","webpack:///./components/admin_console/team_channel_settings/convert_and_remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/convert_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/errors.jsx","webpack:///./components/admin_console/team_channel_settings/group/group_list.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_members_modal.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_row.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_users/index.ts","webpack:///./components/admin_console/team_channel_settings/group/group_users/users_to_remove.scss?64c9","webpack:///./components/admin_console/team_channel_settings/group/group_users/users_to_remove.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_users/users_to_remove_groups.tsx","webpack:///./components/admin_console/team_channel_settings/group/group_users/users_to_remove_role.tsx","webpack:///./components/admin_console/team_channel_settings/group/index.js","webpack:///./components/admin_console/team_channel_settings/line_switch.jsx","webpack:///./components/admin_console/team_channel_settings/remove_confirm_modal.jsx","webpack:///./components/admin_console/team_channel_settings/save_changes_panel.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/index.js","webpack:///./components/admin_console/team_channel_settings/team/details/team_details.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_groups.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_members/index.ts","webpack:///./components/admin_console/team_channel_settings/team/details/team_members/team_members.tsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_modes.jsx","webpack:///./components/admin_console/team_channel_settings/team/details/team_profile.jsx","webpack:///./components/admin_console/team_channel_settings/team/index.ts","webpack:///./components/admin_console/team_channel_settings/team/list/index.ts","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.scss?0706","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.tsx","webpack:///./components/admin_console/team_channel_settings/team/team_settings.tsx","webpack:///./components/admin_console/team_channel_settings/users_to_be_removed_modal.jsx","webpack:///./components/admin_console/text_setting.tsx","webpack:///./components/admin_console/user_autocomplete_setting/index.jsx","webpack:///./components/admin_console/user_autocomplete_setting/user_autocomplete_setting.jsx","webpack:///./components/admin_console/user_grid/user_grid.scss?2e85","webpack:///./components/admin_console/user_grid/user_grid.tsx","webpack:///./components/admin_console/user_grid/user_grid_name.tsx","webpack:///./components/admin_console/user_grid/user_grid_remove.tsx","webpack:///./components/admin_console/user_grid/user_grid_role_dropdown.tsx","webpack:///./components/alert_banner.scss?6733","webpack:///./components/alert_banner.tsx","webpack:///./components/analytics/doughnut_chart.tsx","webpack:///./components/analytics/format.tsx","webpack:///./components/analytics/line_chart.tsx","webpack:///./components/analytics/statistic_count.tsx","webpack:///./components/analytics/system_analytics/index.ts","webpack:///./components/analytics/system_analytics/system_analytics.tsx","webpack:///./components/analytics/table_chart.tsx","webpack:///./components/analytics/team_analytics/index.js","webpack:///./components/analytics/team_analytics/team_analytics.jsx","webpack:///./components/channel_selector_modal/channel_selector_modal.tsx","webpack:///./components/channel_selector_modal/index.ts","webpack:///./components/discard_changes_modal.tsx","webpack:///./components/team_selector_modal/index.ts","webpack:///./components/team_selector_modal/team_selector_modal.tsx","webpack:///./components/toggle.tsx","webpack:///./components/user_list_row_with_error/index.ts","webpack:///./components/user_list_row_with_error/user_list_row_with_error.tsx","webpack:///./components/widgets/admin_console/admin_header.tsx","webpack:///./components/widgets/admin_console/admin_panel.scss?6fb0","webpack:///./components/widgets/admin_console/admin_panel.tsx","webpack:///./components/widgets/admin_console/admin_panel_togglable.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_button.tsx","webpack:///./components/widgets/admin_console/admin_panel_with_link.tsx","webpack:///./components/widgets/admin_console/formatted_admin_header.tsx","webpack:///./components/widgets/icons/accordion_toggle_icon.jsx","webpack:///./components/widgets/icons/at_icon.jsx","webpack:///./components/widgets/icons/checkbox_checked_icon.jsx","webpack:///./components/widgets/icons/checkbox_partial_icon.jsx","webpack:///./components/widgets/icons/ellipsis_h_icon.jsx","webpack:///./components/widgets/icons/email_icon.jsx","webpack:///./components/widgets/icons/fa_reload_icon.jsx","webpack:///./components/widgets/icons/fa_search_icon.jsx","webpack:///./components/widgets/icons/shield_outline_icon.jsx","webpack:///./components/widgets/icons/unarchive_icon.jsx","webpack:///./images/feature-discovery/ldap.png","webpack:///./images/feature-discovery/saml.png","webpack:///./images/no_billing_history_graphic.svg","webpack:///./images/no_company_info_graphic.svg","webpack:///./images/no_payment_info_graphic.svg","webpack:///./images/openid-convert/emoticon-outline.svg","webpack:///./images/private-cloud-image.svg","webpack:///./images/status_green.png","webpack:///./images/status_yellow.png","webpack:///./images/upgrade-mattermost-cloud-image.svg","webpack:///./components/about_build_modal/about_build_modal_cloud/about_build_modal_cloud.scss","webpack:///./components/admin_console/admin_button_outline/admin_button_outline.scss","webpack:///./components/admin_console/admin_user_card/admin_user_card.scss","webpack:///./components/admin_console/billing/billing_history.scss","webpack:///./components/admin_console/billing/billing_subscriptions.scss","webpack:///./components/admin_console/billing/billing_summary.scss","webpack:///./components/admin_console/billing/company_info_display.scss","webpack:///./components/admin_console/billing/company_info_edit.scss","webpack:///./components/admin_console/billing/payment_info.scss","webpack:///./components/admin_console/billing/payment_info_display.scss","webpack:///./components/admin_console/billing/payment_info_edit.scss","webpack:///./components/admin_console/billing/plan_details.scss","webpack:///./components/admin_console/data_grid/data_grid.scss","webpack:///./components/admin_console/feature_discovery/feature_discovery.scss","webpack:///./components/admin_console/filter/filter.scss","webpack:///./components/admin_console/filter/team_filter_dropdown/team_filter_dropdown.scss","webpack:///./components/admin_console/member_list_group/member_list_group.scss","webpack:///./components/admin_console/openid_convert/openid_convert.scss","webpack:///./components/admin_console/system_roles/system_role/system_role_permissions.scss","webpack:///./components/admin_console/system_roles/system_roles.scss","webpack:///./components/admin_console/system_user_detail/system_user_detail.scss","webpack:///./components/admin_console/system_user_detail/team_list/abstract_list.scss","webpack:///./components/admin_console/system_user_detail/team_list/team_row.scss","webpack:///./components/admin_console/team_channel_settings/channel/list/channel_list.scss","webpack:///./components/admin_console/team_channel_settings/group/group_users/users_to_remove.scss","webpack:///./components/admin_console/team_channel_settings/team/list/team_list.scss","webpack:///./components/admin_console/user_grid/user_grid.scss","webpack:///./components/alert_banner.scss","webpack:///./components/widgets/admin_console/admin_panel.scss","webpack:///./selectors/admin_console.jsx","webpack:///./types/actions.ts","webpack:///./utils/admin_console_index.jsx","webpack:///./utils/admin_console_plugin_index.js","webpack:///./utils/filter_users.ts","webpack:///./utils/policy_roles_adapter.js","webpack:///buffer (ignored)?a1e7","webpack:///buffer (ignored)?3a3c","webpack:///crypto (ignored)","webpack:///buffer (ignored)","webpack:///buffer (ignored)?7fa3","webpack:///buffer (ignored)?baea","webpack:///buffer (ignored)?9ddb","webpack:///buffer (ignored)?2454","webpack:///util (ignored)","webpack:///util (ignored)?b166","webpack:///util (ignored)?54e6","webpack:///util (ignored)?f1ac"],"names":["AboutBuildModal","React","PureComponent","constructor","props","setState","show","onHide","state","render","config","license","Cloud","doHide","title","subTitle","learnMore","licensee","BuildEnterpriseReady","IsLicensed","Company","termsOfService","AboutLinks","TERMS_OF_SERVICE","privacyPolicy","PRIVACY_POLICY","buildnumber","BuildNumber","isNaN","Number","mmversion","handleExit","appTitle","SiteName","Version","SQLDriverName","currentYear","Date","getFullYear","BuildHash","BuildHashEnterprise","webappBuildHash","COMMIT_HASH","BuildDate","AboutBuildModalCloud","classNames","mapStateToProps","modalId","ModalIdentifiers","ABOUT","getConfig","getLicense","isModalOpen","connect","USERS_PER_PAGE","MAX_SELECTABLE_VALUES","AddUsersToTeamModal","actions","getProfilesNotInTeam","team","id","setUsersLoadingState","loading","term","searchResults","search","data","searchProfiles","not_in_team_id","replace","filterOptions","option","isSelected","onAdd","onMouseMove","rowSelected","selectedItemRef","Client4","getProfilePictureUrl","last_picture_update","displayEntireNameForUser","Boolean","is_bot","isGuest","value","username","values","includes","push","page","prevPage","needMoreUsers","users","length","then","onAddCallback","handleHide","numRemainingText","num","buttonSubmitText","localizeMessage","buttonSubmitLoadingText","addError","usersToDisplay","excludeUsers","hasUser","user","filter","includeUsers","Object","options","map","label","teamName","name","renderOption","renderAriaLabel","renderValue","handlePageChange","handleDelete","handleAdd","handleSubmit","saving","filterExcludeGuests","role","createRef","teamId","active","selectProfilesNotInTeam","mapDispatchToProps","dispatch","bindActionCreators","AdminButtonOutline","onClick","disabled","children","PropTypes","func","isRequired","string","bool","AdminConsole","extraProps","adminDefinition","buildEnterpriseReady","consoleAccess","cloud","schemas","reduce","acc","section","items","isSectionHidden","entries","find","key","item","schema","concat","defaultUrl","schemaRoutes","index","isHidden","isItemDisabled","isDisabled","url","match","componentDidMount","getEnvironmentConfig","loadRolesIfNeeded","selectChannel","selectTeam","mainRolesLoaded","roles","channel_admin","channel_user","team_admin","team_user","system_admin","system_user","system_user_manager","system_read_only_admin","system_manager","environmentConfig","showNavigationPrompt","setNavigationBlocked","cancelNavigation","confirmNavigation","editRole","updateConfig","currentUserHasAnAdminRole","unauthorizedRoute","keys","discardChangesModal","enterpriseReady","onFilterChange","renderRoutes","isCurrentUserSystemAdmin","FILE_STORAGE_DRIVER_LOCAL","FILE_STORAGE_DRIVER_S3","MEBIBYTE","Math","pow","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256","SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N","SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11","it","not","all","funcs","any","stateMatches","regex","stateEquals","stateIsTrue","stateIsFalse","configIsTrue","group","setting","configIsFalse","configContains","word","licensed","licensedForFeature","feature","isPaidTier","subscription","is_paid_tier","userHasReadPermissionOnResource","read","userHasWritePermissionOnResource","write","usesLegacyOauth","AdminDefinition","about","icon","sectionTitle","t","sectionTitleDefault","title_default","searchableStrings","component","LicenseSettings","billing","BillingSubscriptions","billing_history","BillingHistory","company_info","CompanyInfo","company_info_edit","CompanyInfoEdit","payment_info","PaymentInfo","payment_info_edit","PaymentInfoEdit","reporting","system_analytics","SystemAnalytics","team_statistics","TeamAnalytics","server_logs","ServerLogs","user_management","system_users","siteName","SystemUsers","system_user_detail","SystemUserDetail","group_detail","GroupDetails","groups","GroupSettings","team_detail","TeamDetails","teams","TeamSettings","channel_detail","ChannelDetails","channel","ChannelSettings","systemScheme","PermissionSystemSchemeSettings","teamSchemeDetail","PermissionTeamSchemeSettings","teamScheme","permissions","PermissionSchemesSettings","system_role","SystemRole","system_roles","SystemRoles","environment","web_server","name_default","settings","type","Constants","SettingsTypes","TYPE_BANNER","label_default","banner_type","TYPE_TEXT","help_text","help_text_default","help_text_markdown","placeholder","placeholder_default","TYPE_BUTTON","action","testSiteURL","loading_default","error_message","error_message_default","success_message","success_message_default","TYPE_BOOL","disabled_help_text","disabled_help_text_default","disabled_help_text_markdown","TYPE_DROPDOWN","DefinitionConstants","display_name","display_name_default","TYPE_NUMBER","reloadConfig","help_text_values","featureName","recycleDatabaseConnections","invalidateAllCaches","database","reloadConfiguration","DatabaseSettings","elasticsearch","documentationLink","ElasticSearchSettings","storage","onConfigLoad","configVal","onConfigSave","displayVal","testS3Connection","image_proxy","smtp","testSmtp","push_notification_server","PushNotificationsSettings","high_availability","ClusterSettings","rate_limiting","logging","boldedLogLevel","previousVal","trackEvent","session_lengths","SessionLengthSettings","metrics","developer","site","customization","max_length","MAX_SITENAME_LENGTH","TYPE_CUSTOM","BrandImageSetting","TYPE_LONG_TEXT","MAX_CUSTOM_BRAND_TEXT_LENGTH","localization","TYPE_LANGUAGE","multiple","no_result","no_result_default","not_present","not_present_default","users_and_teams","TYPE_PERMISSION","permissions_mapping_name","TEAMMATE_NAME_DISPLAY","SHOW_USERNAME","SHOW_NICKNAME_FULLNAME","SHOW_FULLNAME","notifications","announcement_banner","TYPE_COLOR","emoji","posts","CustomUrlSchemesSetting","file_sharing_downloads","public_links","TYPE_GENERATED","notices","authentication","signup","invalidateAllEmailInvites","email","password","max","min","PasswordSettings","mfa","label_markdown","ldap","TYPE_FILE_UPLOAD","remove_help_text","remove_help_text_default","remove_button_text","remove_button_text_default","removing_text","removing_text_default","uploading_text","uploading_text_default","fileType","upload_action","uploadPrivateLdapCertificate","remove_action","removePrivateLdapCertificate","uploadPublicLdapCertificate","removePublicLdapCertificate","siteURL","getSiteURL","ldapTest","TYPE_JOBSTABLE","job_type","JobTypes","LDAP_SYNC","render_job","job","ldapUsers","deleteCount","updateCount","linkedLdapGroupsCount","totalLdapGroupsCount","groupDeleteCount","groupMemberDeleteCount","groupMemberAddCount","ldap_users_count","delete_count","update_count","ldap_groups_count","total_ldap_groups_count","group_delete_count","group_member_delete_count","group_member_add_count","ldapGroups","ldap_feature_discovery","isDiscovery","LDAPFeatureDiscovery","saml","getSamlMetadataFromIdp","sourceUrlKey","setFromMetadataField","uploadIdpSamlCertificate","set_action","setSamlIdpCertificateFromMetadata","removeIdpSamlCertificate","siteUrl","ServiceSettings","SiteURL","addSlashIfNeeded","uploadPrivateSamlCertificate","removePrivateSamlCertificate","uploadPublicSamlCertificate","removePublicSamlCertificate","saml_feature_discovery","SAMLFeatureDiscovery","gitlab","newState","GitLabSettings","UserApiEndpoint","newConfig","Url","dynamic_value","oauth","tag","shouldDisplay","Enable","oauthType","GITLAB_SERVICE","Office365Settings","OFFICE365_SERVICE","GoogleSettings","GOOGLE_SERVICE","OpenIdSettings","OpenIdConvert","openid","openidType","OPENID_SERVICE","DiscoveryEndpoint","configSetting","Scope","OPENID_SCOPES","AuthEndpoint","TokenEndpoint","guest_access","CustomEnableDisableGuestAccountsSetting","plugins","plugin_management","PluginManagement","custom","CustomPluginSettings","integrations","integration_management","bot_accounts","gif","cors","compliance","data_retention","DataRetentionSettings","message_export","MessageExportSettings","audits","Audits","label_values","custom_terms_of_service","CustomTermsOfServiceSettings","experimental","experimental_features","feature_flags","FeatureFlags","bleve","BleveSettings","SECTION_NONE","SECTION_TLS","SECTION_STARTTLS","CONNECTION_SECURITY_HELP_TEXT_EMAIL","CONNECTION_SECURITY_HELP_TEXT_LDAP","CONNECTION_SECURITY_HELP_TEXT_WEBSERVER","WEBSERVER_MODE_HELP_TEXT","LOG_LEVEL_OPTIONS","AdminNavbarDropdown","e","navigationBlocked","preventDefault","deferNavigation","GlobalActions","locale","formatMessage","intl","teamToRender","switchTeams","teamsArray","filterAndSortTeamsByDisplayName","defaultMessage","handleLogout","injectIntl","getCurrentLocale","getMyTeams","getNavigationBlocked","MenuItemBlockableLinkImpl","to","text","MenuItemBlockableLink","menuItem","displayName","AdminSettings","Component","errorTooltip","elm","currentTarget","querySelector","isElipsis","offsetWidth","scrollWidth","prevState","saveNeeded","doSubmit","callback","serverError","JSON","parse","stringify","getConfigFromState","error","getStateFromConfig","handleSaved","message","serverErrorId","server_error_id","str","defaultValue","n","parseInt","minimumValue","path","getConfigValue","stateInit","assign","errorMessageRef","pathParts","split","obj","pathPart","setConfigValue","setValue","part","slice","renderTitle","renderSettings","canSave","openTooltip","closeTooltip","current","renderScrollView","renderScrollThumbHorizontal","renderScrollThumbVertical","AdminSidebar","target","sections","idx","generateIndex","query","trim","validSection","indexOf","browserHistory","location","pathname","visibleSections","has","currentSiteName","document","Utils","isVisible","result","Set","add","definition","sidebarSections","forEach","sidebarItems","subKey","subDefinitionKey","moreSidebarItems","renderPluginsMenu","plugin","PluginSettings","sort","a","b","nameCompare","localeCompare","isPluginPresentInSections","searchRef","getPlugins","focus","updateTitle","componentDidUpdate","prevProps","isEqual","handleClearFilter","renderRootMenu","object","intlShape","shape","getAdminDefinition","getConsoleAccess","entities","admin","pure","AdminSidebarCategory","propTypes","node","sectionClass","parentLink","definitionKey","defaultProps","link","clonedChildren","Children","child","cloneElement","SidebarHeader","me","currentUser","profilePicture","getCurrentUser","AdminSidebarHeader","AdminSidebarSection","subsection","getLink","className","sidebarItemSafeId","sidebarItem","Bullet","first_name","last_name","nickname","AdminUserCard","body","footer","number","element","loadingAudits","getAudits","h4Style","display","marginBottom","divStyle","clear","reload","isLicensed","content","renderComplianceReports","activityLogHeader","Compliance","Selectors","Banner","description","PAGE_LENGTH","noBillingHistorySection","noBillingHistoryGraphic","CloudLinks","BILLING_DOCS","screen","getPaymentStatus","status","useDispatch","invoices","useSelector","product","products","product_id","undefined","billingHistory","setBillingHistory","useState","firstRecord","setFirstRecord","previousPage","nextPage","useEffect","getCloudProducts","getCloudSubscription","getInvoices","pageVisited","invoicesByDate","period_start","paging","startRecord","endRecord","totalRecords","billingHistoryTable","invoice","fullUsers","line_items","val","quantity","partialUsers","total","getInvoicePdfUrl","WARNING_THRESHOLD","useIntl","store","useStore","userLimit","ExperimentalCloudUserLimit","analytics","isCloud","isCardExpired","isCustomerCardExpired","customer","getCategory","makeGetCategory","preferences","Preferences","ADMIN_CLOUD_UPGRADE_PANEL","contactSalesLink","getCloudContactUsLink","InquiryType","Sales","showCreditCardBanner","setShowCreditCardBanner","onUpgradeMattermostCloud","openModal","CLOUD_PURCHASE","dialogType","PurchaseModal","getState","getCloudCustomer","getAllAnalytics","getStandardAnalytics","shouldShowInfoBanner","TELEMETRY_CATEGORIES","CLOUD_ADMIN","some","pref","CloudBanners","HIDE","TOTAL_USERS","shouldShowPaymentFailedBanner","last_invoice","savePreferences","category","user_id","upgradeMattermostCloud","upgradeMattermostCloudImage","privateCloudCard","privateCloudImage","noBillingHistory","BillingSummary","fullCharges","partialCharges","charge","price_id","price_per_unit","tax","addInfoButton","noCompanyInfoSection","noCompanyInfoGraphic","CompanyInfoDisplay","companyInfo","address","company_address","line1","billing_address","num_employees","employees","line2","city","postal_code","country","companyName","setCompanyName","numEmployees","setNumEmployees","setAddress","address2","setAddress2","setCity","postalCode","setPostalCode","setCountry","getName","sameAsBillingAddress","setSameAsBillingAddress","isValid","setIsValid","isSaving","setIsSaving","setValidation","updateState","setStateFunc","event","updateNumEmployees","updateCloudCustomer","updateCloudCustomerAddress","billingAddressDisplay","companyAddressInput","COUNTRIES","c","stateValue","checked","isCardAboutToExpire","expiryYear","payment_method","exp_year","lastExpiryDate","exp_month","currentDatePlus10Days","setDate","getDate","noPaymentInfoSection","noPaymentInfoGraphic","PaymentInfoDisplay","paymentInfo","card_brand","brand","digits","last_four","month","String","padStart","year","stripePromise","isDevMode","EnableDeveloper","showCreditCardWarning","setShowCreditCardWarning","isServerError","setIsServerError","billingDetails","setBillingDetails","card","onPaymentInput","areBillingDetailsValid","setPaymentMethod","completeStripeAddPaymentMethod","success","loadStripe","STRIPE_PUBLIC_KEY","fonts","cssSrc","STRIPE_CSS_SRC","features","seatsAndSubscriptionDates","userCount","numberOfSeats","startDate","endDate","overLimit","getMonthLong","PlanDetails","planPricing","showSeatsAndSubscriptionDates","userCountDisplay","withinLimit","price_per_seat","toFixed","featureList","i","seats","start_at","end_at","IndexDir","indexDir","EnableIndexing","enableIndexing","EnableSearching","enableSearching","EnableAutocomplete","enableAutocomplete","canPurgeAndIndex","handleChange","handleSettingChanged","isSetByEnv","BLEVE_POST_INDEXING","getExtraInfo","blevePurgeIndexes","JobStatuses","IN_PROGRESS","percent","progress","BlockableLink","blocked","Reflect","deleteProperty","handleClick","BooleanSetting","onChange","helpText","disabledText","setByEnv","trueText","falseText","HTTP_STATUS_OK","$","fileInputRef","prop","setSaveNeeded","brandImage","deleteBrandImage","brandImageExists","err","uploadBrandImage","brandImageTimestamp","now","imageRef","fetch","getBrandImageUrl","resp","registerSaveAction","handleSave","componentWillUnmount","unRegisterSaveAction","reader","FileReader","img","onload","attr","readAsDataURL","letbtnDefaultClass","overlay","OVERLAY_TIME_DELAY","handleDeleteButtonPressed","handleImageChange","ClusterName","OverrideHostname","UseIpAddress","UseExperimentalGossip","EnableExperimentalGossipEncryption","GossipPort","parseIntNonZero","StreamingPort","showWarning","licenseEnabled","Cluster","configLoadedFromCluster","clusterId","style","warning","clusterTableContainer","overrideHandleChange","ClusterTable","versionMismatch","statusGreen","configMismatch","version","configHash","singleItem","clusterInfos","config_hash","clusterInfo","statusYellow","hostname","ipaddress","clusterCell","clusterTable","array","margin","whiteSpace","ClusterTableContainer","getClusterStatus","load","interval","setInterval","clearInterval","ColorSetting","color","ComplianceReports","loadingReports","getComplianceReports","runningReport","desc","descInput","emails","emailsInput","keywords","keywordsInput","fromInput","toInput","createComplianceReport","enabled","getDateTime","millis","date","list","reports","report","params","download","getBaseRoute","profile","dataCell","create_at","count","readOnly","runReport","greenStatus","redStatus","marginTop","getUsersForReports","createSelector","profiles","complianceReports","usersMap","r","u","ComplianceSettings","requests","createCompliance","selectComplianceReports","submit","confirmNeeded","showConfirm","cancelSubmit","SchemaAdminSettings","getEnablePluginSetting","escapedPluginId","escapePathPart","pluginEnabledConfigKey","makeGetPluginSchema","pluginId","getAdminConsoleCustomComponents","customComponents","settings_schema","toLowerCase","bannerType","translate","showTitle","pluginEnableSetting","unshift","s","makeMapStateToProps","getPluginSchema","ownProps","plugin_id","getRoles","SupportSettings","CustomTermsOfServiceEnabled","termsEnabled","CustomTermsOfServiceReAcceptancePeriod","reAcceptancePeriod","DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD","receivedTermsText","termsText","createTermsOfService","handleAPIError","loadingTermsText","getTermsOfService","handleTermsEnabledChange","CustomTermsOfService","handleTermsTextChange","MAX_TERMS_OF_SERVICE_TEXT_LENGTH","handleReAcceptancePeriodChange","arr","join","valueAsArray","stringToArray","arrayToString","MINIMUM_COLUMN_WIDTH","DataGrid","ref","minimumColumnWidth","fixedColumns","fixedColumnWidth","visibleColumns","columns","availableWidth","clientWidth","column","fixed","onSearch","startCount","endCount","firstPage","lastPage","prevPageFn","nextPageFn","hiddenColumns","col","handleResize","window","addEventListener","renderRows","rows","rowsContainerStyles","rowsToRender","loadingIndicator","placeholderEmpty","row","renderHeader","renderSearch","searchPlaceholder","filterProps","renderFooter","cells","field","width","textAlign","overflow","onFilter","DataGridHeader","renderHeaderElement","flexGrow","DataGridRow","renderCell","DataGridSearch","filters","handleSearch","resetSearch","EnableMessageDeletion","enableMessageDeletion","EnableFileDeletion","enableFileDeletion","MessageRetentionDays","messageRetentionDays","FileRetentionDays","fileRetentionDays","DeletionJobStartTime","deletionJobStartTime","showConfirmModal","messageList","days","confirmButton","handleSaveConfirmed","handleSaveCanceled","enableMessageDeletionOptions","enableFileDeletionOptions","messageRetentionDaysSetting","fileRetentionDaysSetting","confirmModal","renderConfirmModal","DATA_RETENTION","SqlSettings","MaxIdleConns","maxIdleConns","MaxOpenConns","maxOpenConns","Trace","trace","DisableDatabaseSearch","disableDatabaseSearch","QueryTimeout","queryTimeout","ConnMaxLifetimeMilliseconds","parseIntNonNegative","connMaxLifetimeMilliseconds","MinimumHashtagLength","minimumHashtagLength","dataSource","substring","recycleDbButton","recycleDatabaseConnection","driverName","DriverName","DataSource","DropdownSetting","ElasticsearchSettings","ConnectionUrl","connectionUrl","SkipTLSVerification","skipTLSVerification","Username","Password","Sniff","sniff","configTested","elasticsearchTest","doTestConfig","ELASTICSEARCH_POST_INDEXING","elasticsearchPurgeIndexes","FeatureDiscovery","gettingTrial","gettingTrialError","stats","requestedUsers","requestTrialLicense","getLicenseConfig","titleID","titleDefault","copyID","copyDefault","learnMoreURL","imgPath","requestLicense","flags","ffKey","FileUploadSetting","Setting","uploadingText","onSubmit","files","fileSelected","fileName","uploadButtonRef","button","btnClass","Filter","handleClickOutside","removeEventListener","filterRef","contains","hidePopover","buttonRef","blur","optionKey","optionsModified","filterCount","calculateFilterCount","filterKey","Array","FilterListComponent","FilterList","updateValues","valid","renderFilterOptions","Filter__active","togglePopover","Filter__show","resetFilters","FilterCheckbox","stopPropagation","updateOption","toggleOption","valuesToRender","currentValue","FilterItem","getSortedListOfTeams","getTeams","totalCount","getData","pageSize","fetchTeams","searchTeams","TeamFilterDropdown","TeamFilterCheckbox","getSelectedTeams","selectedTeamIds","getFilteredTeams","TEAMS_PER_PAGE","MAX_BUTTON_TEXT_LENGTH","INITIAL_SEARCH_RETRY_TIMEOUT","clearRef","team_ids","selectedTeams","savedSelectedTeams","searchTerm","listRef","scrollTop","scrollPosition","searchTotal","response","per_page","total_count","searchRetryInterval","searchRetryId","setTimeout","bind","debounce","clearTimeout","searchTeamsDebounced","prevSelectedTeamIds","buttonText","buttonMore","buttonOverflowed","generateButtonText","createFilterCheckbox","toggleTeam","visibleTeams","selectedTeam","teamsToDisplay","chevron","resetTeams","setScrollPosition","hasMore","loadMore","GeneratedSetting","crypto","randomBytes","toString","regenerateText","regenerateHelpText","regenerate","addChannelOpen","addTeamOpen","groupID","groupTeams","teamsToAdd","group_id","scheme_admin","team_display_name","team_id","team_type","channels","groupChannels","channelsToAdd","channel_display_name","channel_id","channel_type","itemsToRemove","syncableType","syncableTypeFromEntryType","makeAPIRequest","Groups","SYNCABLE_TYPE_CHANNEL","SYNCABLE_TYPE_TEAM","gt","gc","entryType","schemeAdmin","rolesToChange","listToUpdate","keyName","stateKey","updatedItems","allowReference","originalAllowReference","allow_reference","groupMentionName","hasAllowReferenceChanged","originalGroupMentionName","hasGroupMentionNameChanged","patchGroupSuccessful","handlePatchGroup","addsSuccessful","handleAddedTeamsAndChannels","removesSuccessful","handleRemovedTeamsAndChannels","rolesSuccessful","handleRolesToUpdate","Promise","getGroupSyncables","allSuccuessful","groupTeamOrChannel","fieldKey","GroupNameIsTakenError","lcGroupMentionName","patchGroup","promises","syncableID","patchGroupSyncable","results","errors","groupTeam","roleChangeKey","auto_add","groupChannel","unlink","members","memberCount","onMentionToggle","onMentionChange","openAddTeam","openAddChannel","loadingTeamsAndChannels","onChangeRoles","onRemoveTeamOrChannel","closeAddTeam","addTeams","closeAddChannel","addChannels","getMembers","getGroup","getGroupStats","gcs","stateIDs","arrayOf","GroupProfile","customID","showAtMention","GroupSettingsToggle","isDefault","onToggle","GroupProfileAndSettings","displayname","mentionname","GroupTeamsAndChannels","collapsed","onRemoveItem","roleToBe","existingTeams","teamEntries","hasChildren","channelEntriesByTeam","teamChannels","teamsAndChannelsToEntries","entry","onToggleCollapse","GroupTeamsAndChannelsRow","showConfirmationModal","channelAdmin","teamAdmin","member","dropDown","isNil","currentRole","changeRoles","extraClasses","arrowIcon","toggleCollapse","channelIcon","typeText","displayType","removeItem","displayAssignedRolesDropdown","GROUP_MEMBERS_PAGE_SIZE","GroupUsers","numberOfMembersToLoad","renderPagination","GroupUsersRow","userId","lastPictureUpdate","getGroupTeams","getGroupChannels","selectProfilesInGroup","getGroupMemberCount","fetchGroup","getProfilesInGroup","fetchGroupSyncables","linkGroupSyncable","unlinkGroupSyncable","GroupRow","onCheckToggle","primary_key","mattermost_group_id","has_syncables","failed","unlinkHandler","linkHandler","onRowClick","renderLinked","renderActions","oneOfType","LDAP_GROUPS_PAGE_SIZE","FILTER_STATE_SEARCH_KEY_MAPPING","filterIsConfigured","is_configured","filterIsUnconfigured","filterIsLinked","is_linked","filterIsUnlinked","GroupsList","showFilters","searchString","getLdapGroups","q","searchGroups","newChecked","linkSelectedGroups","unlinkSelectedGroups","selectionActionButtonType","hasSelectedLinked","renderSelectionActionButton","RegExp","opts","re","test","handleGroupSearchKeyUp","KeyCodes","ENTER","k","newSearchString","stringFilterPresent","handleFilterCheck","updates","renderSearchFilters","nativeEvent","stopImmediatePropagation","resetFiltersAndSearch","closeFilters","once","getSortedListOfLdapGroups","getLdapGroupsCount","fetchLdapGroups","linkLdapGroup","unlinkLdapGroup","Highlight","markInstance","unmark","Mark","mark","accuracy","leading","trailing","redrawHighlight","generalConfig","getGeneralConfig","LocalStorageStore","getPreviousTeamId","getCurrentUserId","getTeam","General","DEFAULT_CHANNEL","withRouter","jobs","jobType","downloadExportResults","DownloadExportResults","getJobsByType","createJob","cancelJob","Table","JobTable","is_downloadable","messages_exported","export_type","exportFormats","EXPORT_FORMAT_GLOBALRELAY","getJobsRoute","PENDING","SUCCESS","WARNING","ERROR","CANCEL_REQUESTED","CANCELED","getExtraInfoText","last_activity_at","runningMillis","lastActivity","formatDate","day","formatTime","hour","minute","second","seconds","round","minutes","jobId","getAttribute","cancelButton","handleCancelJob","showFilesColumn","MESSAGE_EXPORT","getCancelButton","getStatus","getDownloadLink","getFinishAt","getRunLength","handleCreateJob","createJobButtonText","createJobHelpText","upgradedFromTE","UpgradedFromTE","uploadLicense","removeLicense","upgradeToE0","upgradeToE0Status","restartServer","ping","percentage","reloadPercentage","upgradingPercentage","upgradeError","file","uploading","removing","upgradingPercetage","catch","checkRestarted","restarting","restartError","removeButtonText","handleRemove","uploadButtonText","AdminActions","edition","licenseType","licenseContent","eelicense","issued","IssuedAt","startsAt","StartsAt","expiresAt","ExpiresAt","handleUpgrade","__html","format","handleRestart","renderEELicenseText","sku","SkuShortName","Name","Users","renderE10E20Content","renderE0Content","userAccessTokensEnabled","EnableUserAccessTokens","updateUserRoles","ManageRolesModal","getStateFromProps","hasPostAllRole","UserUtils","hasPostAllPublicRole","hasUserAccessTokenRole","isSystemAdmin","oldRoles","SYSTEM_USER_ACCESS_TOKEN_ROLE","SYSTEM_POST_ALL_ROLE","SYSTEM_POST_ALL_PUBLIC_ROLE","SYSTEM_USER_ROLE","SYSTEM_ADMIN_ROLE","trackRoleChanges","isSuccess","onModalDismissed","handleError","additionalRoles","handlePostAllChange","handlePostAllPublicChange","userAccessTokenContent","handleUserAccessTokenChange","handleSystemAdminChange","getDerivedStateFromProps","nextProps","renderContents","getTeamMembersForUser","getTeamsForUser","updateTeamMemberSchemeRoles","removeUserFromTeam","ManageTeamsModal","ManageTeamsDropdown","teamMember","onError","onMemberChange","handleRemoveUserFromTeam","isTeamAdmin","isSysAdmin","makeTeamAdmin","makeMember","group_constrained","removeFromTeam","getTeamMembers","teamMembers","handleMemberRemove","teamList","handleMemberChange","systemAdminIndicator","loadTeamsAndTeamMembers","UNSAFE_componentWillReceiveProps","nextUserId","RemoveFromTeamButton","userAccessTokens","userAccessTokensByUser","getUserAccessTokensForUser","ManageTokensModal","tokenList","userAccessTokensList","token","prevUserId","views","modalSearch","searchProfilesInGroup","selectProfiles","setModalSearchTerm","MemberListGroup","getPaginationProps","getRows","getColumns","searchTimeoutId","loadComplete","in_group_id","SEARCH_TIMEOUT_MILLISECONDS","EnableExport","enableComplianceExport","ExportFormat","exportFormat","DailyRunTime","exportJobStartTime","GlobalRelaySettings","CustomerType","globalRelayCustomerType","SmtpUsername","globalRelaySmtpUsername","SmtpPassword","globalRelaySmtpPassword","EmailAddress","globalRelayEmailAddress","warning_count","exportFormatOptions","EXPORT_FORMAT_ACTIANCE","EXPORT_FORMAT_CSV","globalRelaySettings","globalRelayEmail","dropdownHelpText","getJobDetails","MultiSelectSetting","newValue","selected","found","getOptionLabel","noResultText","calculateValue","DirectoryId","imagePath","upgradeConfig","MinimumLength","passwordMinimumLength","MIN_PASSWORD_LENGTH","Lowercase","passwordLowercase","Uppercase","passwordUppercase","passwordNumber","Symbol","passwordSymbol","MaximumLoginAttempts","maximumLoginAttempts","MAXIMUM_LOGIN_ATTEMPTS_DEFAULT","MAX_PASSWORD_LENGTH","sampleErrorMsgId","handlePasswordLengthChange","lowercase","handleCheckboxChange","uppercase","symbol","getSampleErrorMsg","sampleErrorMsg","EditPostTimeLimitButton","messageID","timeLimit","UNSET_POST_EDIT_TIME_LIMIT","PostEditTimeLimit","INT32_MAX","EditPostTimeLimitModal","errorMessage","postEditTimeLimit","onClose","ALLOW_EDIT_POST_ALWAYS","handleOptionChange","ALLOW_EDIT_POST_TIME_LIMIT","handleSecondsChange","save","GuestPermissionsTree","editTimeLimitModalIsVisible","ids","selectRow","ADDITIONAL_VALUES","parentRole","scope","toggleGroup","closePostTimeLimitModal","guest_edit_post","editTimeLimitButton","openPostTimeLimitModal","Permissions","CREATE_PRIVATE_CHANNEL","EDIT_POST","DELETE_POST","combined","ADD_REACTION","REMOVE_REACTION","USE_CHANNEL_MENTIONS","LDAPGroups","USE_GROUP_MENTIONS","CREATE_POST","permission","GUEST_INCLUDED_PERMISSIONS","schemes","getSchemes","jobsAreEnabled","RunJobs","clusterIsEnabled","EnableCluster","loadSchemes","loadSchemeTeams","PermissionCheckbox","extraClass","PermissionDescription","open","isInheritLink","parentElement","generateId","contentRef","inherited","rowType","additionalValues","tooltip","parentPermissionClicked","getRecursivePermissions","PermissionGroup","expanded","permissionsToToggle","fromParent","prevPermissions","PermissionsScope","isInScope","comesFromParent","uniqId","toggleSelectRow","g","toggleSelectSubGroup","anyChecked","anyUnchecked","allPermissionsFromParent","root","hasPermissionsOnScope","permissionsRows","addVals","renderPermission","renderGroup","classes","toggleSelectGroup","toggleExpanded","PermissionRow","toggleSelect","PAGE_SIZE","PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE","loadingMore","scheme","phase2MigrationIsComplete","docLink","teamOverrideUnavalableView","defaultMsg","history","hasCustomSchemes","CustomPermissionsSchemes","teamOverrideView","teamOverrideSchemesMigrationView","loadMoreSchemes","renderTeamOverrideSchemes","status_code","rolesRequest","getRolesByNames","openRoles","all_users","scrollIntoView","behavior","block","toggleRole","selectedPermission","goToSelectedRow","p","system_guest","team_guest","channel_guest","EXCLUDED_PERMISSIONS","teamAdminPromise","channelAdminPromise","restoreExcludedPermissions","deriveRolesFromAllUsers","guestRoles","restoreGuestPermissions","deriveRolesFromGuests","guests","systemUserPromise","teamUserPromise","channelUserPromise","haveGuestAccountsPermissions","systemGuestPromise","teamGuestPromise","channelGuestPromise","roleId","newOpenRoles","newPermissions","splice","newRolesState","DefaultRolePermissions","roleName","GuestAccountsPermissions","loaded","EnableGuestAccounts","togglePermission","showResetDefaultModal","resetDefaults","urlParams","URLSearchParams","rolesNeeded","GeneralConstants","TEAM_ADMIN_ROLE","TEAM_USER_ROLE","CHANNEL_ADMIN_ROLE","CHANNEL_USER_ROLE","SYSTEM_GUEST_ROLE","TEAM_GUEST_ROLE","CHANNEL_GUEST_ROLE","every","loadRolesIntoState","get","getSchemeTeams","makeGetSchemeTeams","schemeId","scheme_id","getScheme","loadScheme","patchScheme","updateTeamScheme","createScheme","default_team_guest_role","default_team_user_role","default_team_admin_role","default_channel_guest_role","default_channel_user_role","default_channel_admin_role","teamGuest","teamUser","channelGuest","channelUser","isLoaded","baseTeam","baseChannel","schemeName","schemeDescription","getStateRoles","allUsers","derived","derivedGuests","newScheme","currentTeams","serverTeams","addedTeams","removedTeams","ADD_TEAMS_TO_SCHEME","handleNameChange","handleDescriptionChange","removeTeam","getTeamStats","loadTeamStats","TeamInList","onRemoveTeam","imageURLForTeam","handleRemoveTeam","deleteScheme","PermissionsSchemeSummary","MAX_TEAMS_PER_SCHEME_SUMMARY","deleting","handleDeleteConfirmed","handleDeleteCanceled","extraTeams","goToEdit","delete","VIEW_MEMBERS","JOIN_PUBLIC_TEAMS","LIST_PUBLIC_TEAMS","JOIN_PRIVATE_TEAMS","LIST_PRIVATE_TEAMS","PermissionsTree","sharedChannelsGroup","integrationsGroup","postsGroup","teamsGroup","EnableIncomingWebhooks","MANAGE_INCOMING_WEBHOOKS","EnableOutgoingWebhooks","MANAGE_OUTGOING_WEBHOOKS","EnableOAuthServiceProvider","MANAGE_OAUTH","EnableCommands","MANAGE_SLASH_COMMANDS","EnableCustomEmoji","CREATE_EMOJIS","DELETE_EMOJIS","DELETE_OTHERS_EMOJIS","INVITE_GUEST","ExperimentalSharedChannels","MANAGE_SHARED_CHANNELS","MANAGE_REMOTE_CLUSTERS","edit_post","INVITE_USER","GET_PUBLIC_LINK","ADD_USER_TO_TEAM","CREATE_TEAM","CREATE_PUBLIC_CHANNEL","MANAGE_PUBLIC_CHANNEL_PROPERTIES","MANAGE_PUBLIC_CHANNEL_MEMBERS","READ_PUBLIC_CHANNEL_GROUPS","DELETE_PUBLIC_CHANNEL","CONVERT_PUBLIC_CHANNEL_TO_PRIVATE","CONVERT_PRIVATE_CHANNEL_TO_PUBLIC","MANAGE_PRIVATE_CHANNEL_PROPERTIES","MANAGE_PRIVATE_CHANNEL_MEMBERS","READ_PRIVATE_CHANNEL_GROUPS","DELETE_PRIVATE_CHANNEL","EDIT_OTHERS_POSTS","DELETE_OTHERS_POSTS","updateGroups","pluginStatuses","uploadPlugin","installPluginFromUrl","removePlugin","getPluginStatuses","enablePlugin","disablePlugin","PluginItemState","PluginState","PLUGIN_STATE_NOT_RUNNING","PLUGIN_STATE_STARTING","PLUGIN_STATE_RUNNING","PLUGIN_STATE_FAILED_TO_START","PLUGIN_STATE_FAILED_TO_STAY_RUNNING","PLUGIN_STATE_STOPPING","PluginItemStateDescription","PluginItem","pluginStatus","handleEnable","handleDisable","showInstances","hasSettings","activateButton","activating","deactivating","settingsButton","removeButton","instances","instance","cluster_id","clusterSummary","header","enable","EnableUploads","enableUploads","AllowInsecureDownloadUrl","allowInsecureDownloadUrl","EnableMarketplace","enableMarketplace","EnableRemoteMarketplace","enableRemoteMarketplace","AutomaticPrepackagedPlugins","automaticPrepackagedPlugins","MarketplaceUrl","marketplaceUrl","RequirePluginSignature","requirePluginSignature","lastMessage","fileInput","force","confirmOverwriteUploadModal","overwritingUpload","msg","helpSubmitUpload","pluginDownloadUrl","installing","confirmOverwriteInstallModal","overwritingInstall","installFromUrl","showRemoveModal","onConfirm","onCancel","overwriteButton","hideEnablePlugins","ExperimentalSettings","RestrictSystemAdmin","enableUploadButton","pluginsList","pluginsContainer","pluginsListContainer","showRemovePluginModal","uploadHelpText","overwriteUploadPluginModal","renderOverwritePluginModal","handleOverwriteUploadPlugin","handleOverwriteUploadPluginCancel","removePluginModal","renderRemovePluginModal","handleRemovePlugin","handleRemovePluginCancel","renderEnablePluginsSetting","handleUpload","handleSubmitUpload","getMarketplaceUrlHelpText","resolveRemoveModal","PUSH_NOTIFICATIONS_OFF","PUSH_NOTIFICATIONS_MHPNS","PUSH_NOTIFICATIONS_MTPNS","PUSH_NOTIFICATIONS_CUSTOM","PushSettings","pushNotificationServerType","agree","pushNotificationServer","MHPNS","MTPNS","EmailSettings","SendPushNotifications","PushNotificationServer","MaxNotificationsPerChannel","maxNotificationsPerChannel","pushNotificationServerTypes","sendHelpText","pushServerHelpText","tosCheckbox","handleAgreeChange","handleDropdownChange","isPushNotificationServerSetByEnv","RadioSetting","RemoveFileSetting","removingText","removeButtonRef","RequestButton","busy","fail","doRequest","requestAction","errMsg","includeDetailedError","detailed_error","saveConfigAction","showSuccessMessage","successMessage","widgetClassNames","handleRequest","loadingText","alternativeActionElement","ResetEmailModal","emailRef","isEmail","adminResetEmail","onModalSubmit","urlClass","errorMsg","doCancel","passwordConfig","currentUserId","getPasswordConfig","updateUserPassword","ResetPasswordModal","currentPassword","currentPasswordRef","serverErrorCurrentPass","passwordRef","serverErrorNewPass","auth_service","newPasswordFocus","urlClassCurrentPass","minimumLength","requireLowercase","requireNumber","requireSymbol","requireUppercase","revokeUserAccessToken","RevokeTokenButton","tokenId","confirmNeededId","showConfirmId","rolesBinding","updatedRoles","rolesFromMapping","isMarkdown","helpTextValues","helpTextDefault","disabled_help_text_values","handleRequestAction","successCallback","metadata","Map","tsetting","inputData","buildSettingFunctions","onSetData","renderHelpText","renderLabel","inputType","handlePermissionChange","o","selectedValue","selectedOptionForHelpText","locales","I18n","l","order","changedId","renderBanner","regenerate_help_text","handleGeneratedChange","confirm","clientWarning","setData","filename","errorCallback","removeFile","uploadFile","idpCertificateFileError","CustomComponent","componentInstance","saveAction","indexOfSaveAction","saveActions","settingsList","hasSaveActionError","hasError","customComponentWrapperClass","hybridSchemaAndComponent","isPlugin","buildTextSetting","buildColorSetting","buildBoolSetting","buildPermissionSetting","buildDropdownSetting","TYPE_RADIO","buildRadioSetting","buildBannerSetting","buildGeneratedSetting","TYPE_USERNAME","buildUsernameSetting","buildButtonSetting","buildLanguageSetting","buildJobsTableSetting","buildFileUploadSetting","buildCustomSetting","prevSchemaId","getSettingValue","previousValue","mappingValueFromRoles","default","getSetting","unescapePathPart","SchemaText","textDefault","textValues","html","marked","breaks","sanitize","renderer","CustomRenderer","isTranslated","renderTranslated","renderUntranslated","logs","getLogs","Logs","NEXT_BUTTON_TIMEOUT","nextDisabled","logPanel","scrollHeight","nextButton","previousButton","perPage","fontFamily","loadingLogs","MINIMUM_IDLE_TIMEOUT","ExtendSessionLengthWithActivity","extendSessionLengthWithActivity","SessionLengthWebInDays","sessionLengthWebInDays","SessionLengthMobileInDays","sessionLengthMobileInDays","SessionLengthSSOInDays","sessionLengthSSOInDays","SessionCacheInMinutes","sessionCacheInMinutes","SessionIdleTimeoutInMinutes","parseIntZeroOrMin","sessionIdleTimeoutInMinutes","sessionLengthWebHelpText","sessionLengthMobileHelpText","sessionLengthSSOHelpText","sessionTimeoutSetting","SetByEnv","Settings","inputId","SettingsGroup","container","wrapperClass","contentClass","searchUsersToAdd","profilesList","filteredProfilesList","filterProfilesStartingWithTerm","filterProfiles","profileListToMap","AddUsersToRoleModal","getProfiles","exclude_roles","getRolesById","role_id","isLicensedForCloud","nextState","usersToAdd","usersToRemove","updatedRolePermissions","permissionsToUpdate","difference","getSaveStateNeeded","PERMISSIONS_SYSTEM_ADMIN","newRole","isError","userIdsToRemove","removeUserPromises","uniq","resultWithError","userIdsToAdd","addUserPromises","saveKey","updatedPermissions","perm","startsWith","permissionShortName","ancillary","SYSCONSOLE_ANCILLARY_PERMISSIONS","readPermission","writePermission","readAncillary","writeAncillary","writeAccess","MANAGE_SYSTEM","defaultName","charAt","toUpperCase","updatePermissions","addUsersToRole","removeUserFromRole","SystemRolePermission","permissionsMap","getAccessForSection","mixedAccess","isSectionVisible","subsections","subsectionsCount","setSectionVisible","renderSectionRow","hasDescription","renderSubsectionToggle","hasNoAccess","canRead","canWrite","getAccessForSectionByName","readAccess","noAccess","sectionName","access","renderSubsections","SystemRolePermissionDropdown","canWriteLabel","canWriteDescription","canReadLabel","canReadDescription","noAccessLabel","mixedAccessLabel","noAccessDescription","currentAccess","ariaLabel","updatePermission","sectionsList","SECTIONS_BY_ROLES","PERMISSIONS_SYSTEM_USER_MANAGER","getPermissionsMap","memoizeResult","getSectionsListForRole","sectionsByRole","SystemRolePermissions","visible","editedSectionsByRole","permissionsToShow","billingSectionIndex","findIndex","filteredProfilesMap","selectFilteredUserStats","total_users_count","userGridSearch","searchProfilesStartingWithTerm","makeSearchProfilesStartingWithTerm","getFilteredUsersStats","setUserGridSearch","SystemRoleUsers","usersToAddCount","usersToRemoveCount","getVisibleTotalCount","new","remove","onRemoveCallback","setStateLoading","skipCommit","roleNames","edit","getUser","mfaEnabled","EnableMultifactorAuthentication","apiActions","updateUserActive","addUserToTeam","uiActions","teamIds","refreshTeams","finally","showPasswordModal","onUpdateActiveResult","showDeactivateMemberModal","adminResetMfa","emailChanged","EMAIL_SERVICE","confirmButtonClass","deactivateMemberButton","handleDeactivateMember","handleDeactivateCancel","delete_at","handleMakeActive","handleShowDeactivateMemberModal","mfa_active","handleResetMfa","searching","getAuthenticationText","authLine","service","LDAP_SERVICE","SAML_SERVICE","errorMessageRefCurrent","deactivateMemberModal","currentRoles","renderDeactivateMemberModal","position","handleEmailChange","doPasswordReset","renderActivateDeactivate","renderRemoveMFA","setTeamsData","doPasswordResetSubmit","doPasswordResetDismiss","AbstractList","performSearch","getTeamsData","onPageChangedCallback","getPaging","headerLabels","headerLabel","emptyListTextId","emptyListTextDefaultMessage","pageStart","pageEnd","pageData","renderRow","renderHeaderLabels","removeGroup","TeamList","minWidth","marginLeft","memberships","mergeTeamsWithMemberships","teamsWithMemberships","userDetailCallback","getTeamsAndMemberships","doRemoveUserFromTeam","doMakeUserTeamAdmin","doMakeUserTeamMember","TeamListDropdown","isAdmin","isMember","scheme_user","scheme_guest","showMakeTeamAdmin","showMakeTeamMember","TeamRow","allow_open_invite","teamIconUrl","renderTeamType","renderTeamRole","enableUserAccessTokens","experimentalEnableAuthenticationTransfer","ExperimentalEnableAuthenticationTransfer","systemUsersSearch","totalUsers","SearchUserTeamFilter","ALL_USERS","Stats","TOTAL_INACTIVE_USERS","NO_TEAM","total_member_count","getTeamsList","getUsers","getUserAccessToken","loadProfilesAndTeamMembers","setSystemUsersSearch","loadProfilesWithoutTeam","revokeSessionsForAllUsers","logError","getNonBotUsers","SystemUsersList","USER_ID_LENGTH","userSelectorOptionsFromFilter","searchProfilesInTeam","getProfilesWithoutTeam","getProfilesInTeam","showManageTeamsModal","showManageRolesModal","showManageTokensModal","showEmailModal","getInfoForUser","info","userID","renderCount","isSearch","extraInfo","SystemUsersDropdown","doEmailReset","doManageTeams","doManageRoles","doManageTokens","onTermChange","UserListRowWithError","doManageTeamsDismiss","doManageRolesDismiss","doManageTokensDismiss","doEmailResetSubmit","doEmailResetDismiss","usersPerPage","focusOnMount","renderFilterRow","doSearch","getUserOptionsFromFilter","PROFILE_CHUNK_SIZE","loadDataForTeam","emitUserLoggedOutEvent","showRevokeAllSessionsModal","searchUserOptionsFromFilter","UserSearchOptions","WITHOUT_TEAM","allow_inactive","getUserByTokenOrId","getUserById","revokeAllButton","handleRevokeAllSessions","handleRevokeAllSessionsCancel","handleTeamChange","handleFilterChange","UserFilters","SYSTEM_ADMIN","SYSTEM_GUEST","INACTIVE","revokeAllUsersModal","renderRevokeAllUsersModal","handleTermChange","REVOKE_USER_ACCESS_TOKEN","handleShowRevokeAllSessionsModal","bots","getExternalBotAccounts","revokeAllSessionsForUser","promoteGuestToUser","demoteUserToGuest","loadBots","ROWS_FROM_BOTTOM_TO_OPEN_UP","TOTAL_USERS_TO_OPEN_UP","shouldDisableBotsWhenOwnerIsDeactivated","Integrations","START_PAGE_NUM","confirmationMessage","messageForUsersWithBotAccounts","bot","owner_id","showRevokeSessionsModal","showPromoteToUserModal","showDemoteToGuestModal","promoteUserButton","handlePromoteToUserConfirm","handlePromoteToUserCancel","demoteGuestButton","handleDemoteToGuestConfirm","handleDemoteToGuestCancel","revokeUserButtonButton","handleRevokeSessions","handleRevokeSessionsCancel","messageId","DisableBotsWhenOwnerIsDeactivated","showMakeActive","showMakeNotActive","showManageTeams","showRevokeSessions","showMfaReset","disableActivationToggle","revokeSessionsModal","renderRevokeSessionsModal","promoteToUserModal","renderPromoteToUserModal","demoteToGuestModal","renderDemoteToGuestModal","renderAccessToken","handleManageRoles","handleManageTeams","handleManageTokens","handleResetPassword","handleResetEmail","handlePromoteToUser","GuestAccountsSettings","handleDemoteToGuest","handleShowRevokeSessionsModal","offset","noPadding","ChannelsSettings","isSynced","isPublic","isOriginallyPublic","OPEN_CHANNEL","isPrivacyChanging","processGroupsChange","gid","totalGroups","cloneDeep","channelRole","currentValueIndex","channelPermissions","CHANNEL_MODERATED_PERMISSIONS","originalObj","groupIDs","allGroups","showConvertConfirmModal","showRemoveConfirmModal","showConvertAndRemoveConfirmModal","showArchiveConfirmModal","channelToBeArchived","rolesToUpdate","origGroups","channelID","deleteChannel","channelToBeRestored","unarchiveChannel","previousServerError","convert","updateChannelPrivacy","PRIVATE_CHANNEL","res","patchChannel","patchChannelSyncable","groupActions","actionsToAwait","getGroups","getChannelModerations","manageMembersIndex","MANAGE_MEMBERS","updatedManageMembers","patchChannelPermissionsArray","patchChannelModerationsResult","patchChannelModerations","restrictChannelMentions","privacyChanging","usersToAddList","usersToRemoveList","userRolesToUpdate","usersToUpdate","addUserActions","removeUserActions","addChannelMember","removeChannelMember","updateChannelMemberSchemeRoles","rolesToPromote","rolesToDemote","schemeUser","isLocalArchived","isServerArchived","missingGroup","og","removedGroups","nonArchivedContent","hideConvertConfirmModal","channelPermissionsChanged","guestAccountsEnabled","hideRemoveConfirmModal","hideConvertAndRemoveConfirmModal","setToggles","handleGroupChange","handleGroupRemoved","setNewGroupRole","addUserToRemove","addUsersToAdd","addRolesToUpdate","onToggleArchive","hideArchiveConfirmModal","onSave","getChannel","currentCreatePostRoles","membersMinusGroupMembers","ex","ChannelGroups","onGroupRemoved","synced","AddGroupsToChannelModal","includeGroups","excludeGroups","ChannelMembers","loadProfilesAndReloadChannelMembers","channelId","membership","updateRole","systemRoles","channelRoles","channel_roles","setUserGridFilters","in_channel","include_bots","channelMembers","enableGuestAccounts","ChannelInviteModal","loadPage","removeUser","updateMembership","getChannelStats","filtersModified","searchTermModified","searchProfilesAndChannelMembers","in_channel_id","doGetProfilesInChannel","makeGetProfilesInChannel","doSearchProfilesInChannel","makeSearchProfilesInChannel","getChannelMembersInChannels","getAllChannelStats","member_count","pinnedpost_count","guest_count","filteredUserStats","selectFilteredUsersStats","PERIOD_TO_SLASH_REGEX","formattedMessages","defineMessages","descriptionMembers","disabledGuests","permissionName","disabledMembers","disabledBoth","CREATE_REACTIONS","disabledGuestsDueToCreatePosts","disabledMembersDueToCreatePosts","disabledBothDueToCreatePosts","subtitle","subtitleMembers","ChannelModerationTableRow","descriptionId","descriptionDefaultMessage","errorMessages","Roles","GUESTS","guestsDisabled","MEMBERS","membersDisabled","ChannelModeration","isGuestsDisabled","isMembersDisabled","createPostsKey","createPostsObject","disabledKey","schemeLink","teamSchemeID","teamSchemeDisplayName","publicOrPrivate","scheme_name","scheme_link","onChannelPermissionsChanged","errorMessagesToDisplay","SyncGroupsToggle","AllowAllToggle","ChannelModes","ChannelProfile","isArchived","archiveBtnID","archiveBtnDefault","ArchiveButton___archived","ArchiveButton___unarchived","getGroupsAssociatedToChannel","getAllGroups","fetchAssociatedGroups","fetchChannel","fetchTeam","fetchChannelModerations","ROW_HEIGHT","ChannelList","isSearching","searchChannels","searchChannelsDebounced","searchErrored","searchAllChannels","include_deleted","management","channelsToDisplay","iconToDisplay","isArchivedChannel","groupConstrained","exclude_group_constrained","excludeGroupConstrained","public","publicChannels","private","privateChannels","deleted","minHeight","compareByDisplayName","getSortedListOfChannels","getAllChannels","List","ConvertAndRemoveConfirmModal","toPublic","removeAmount","toPublicMsg","toPrivateMsg","convertMessageId","toPublicTitle","toPrivateTitle","titleId","toPublicConfirmMsg","toPrivateConfirmMsg","confirmMsgId","amount","modalClass","ConvertConfirmModal","NeedGroupsError","isChannel","NeedDomainsError","UsersWillBeRemovedError","scopeId","UsersToBeRemovedModal","Header","GroupList","GroupMembersModal","onLoad","displayCurrentRole","displayRoleToBe","searchUsers","modalFilters","getMembersInTeams","loadChannelMembersForProfilesList","loadTeamMembersForProfilesList","setModalFilters","UsersToRemove","teamRoles","team_roles","getFilterOptions","MEMBERSHIPS_TO_LOAD_COUNT","membershipsLoaded","loadMembersForProfilesList","UsersToRemoveGroups","UsersToRemoveRole","localizedRole","isModeSync","resolve","LineSwitch","singleLine","toggled","offText","onText","last","RemoveConfirmModal","inChannel","messageChannel","messageTeam","buttonClass","SaveChangesPanel","cancelLink","teamID","getGroupsAssociatedToTeam","patchTeam","showRemoveConfirmation","allAllowedChecked","allowedDomainsChecked","allowedDomains","syncChecked","patchTeamPromise","allowed_domains","patchTeamSyncable","hideRemoveUsersModal","showRemoveUsersModal","TeamGroups","AddGroupsToTeamModal","active_member_count","loadProfilesAndReloadTeamMembers","searchProfilesAndTeamMembers","TeamMembers","in_team","filterKeys","AllowedDomainsToggle","TeamModes","TeamProfile","TeamsSettings","allowOpenInvite","invite_only","inviteOnly","filtersList","renderManagementMethodText","AdminTextSetting","sharedProps","isTextDisabled","autocompleteUsers","UserAutocompleteSetting","userSuggestionProviders","GenericUserProvider","handleUserSelected","SuggestionList","UserGrid","includeUsersCount","excludeUsersCount","membershipsToUpdate","forceUpdate","includeUsersList","numberOfUsersRemoved","pagesOfUsersRemoved","floor","pageToLoad","pageLoaded","newMembership","UserGridName","UserGridRemove","UserGridRoleDropdown","makeAdmin","handleUpdateMembership","getDropDownOptions","getCurrentRole","getLocalizedRole","getAriaLabel","dropdownEnabled","showMakeAdmin","showMakeMember","handleMakeAdmin","handleMakeUser","AlertBanner","mode","onDismiss","DoughnutChart","update","canvasRef","ctx","getContext","dataCopy","chart","Chart","initChart","destroy","height","formatChannelDoughtnutData","totalPublic","totalPrivate","channelTypeData","labels","datasets","backgroundColor","hoverBackgroundColor","formatPostDoughtnutData","filePosts","hashtagPosts","totalPosts","postTypeData","formatPostsPerDayData","chartData","fillColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","fillChartData","synchronizeChartLabels","datas","from","formatUsersWithPostsPerDayData","LineChart","legend","chartOptions","currentData","hasData","hasChart","StatisticCount","StatTypes","getStatValue","stat","skippedIntensiveQueries","TOTAL_POSTS","POST_PER_DAY","BOT_POST_PER_DAY","USERS_WITH_POSTS_PER_DAY","postCountsDay","botPostCountsDay","userCountsWithPostsDay","banner","postCount","postTotalGraph","botPostTotalGraph","activeUserGraph","advancedStats","advancedGraphs","sessionCount","commandCount","incomingCount","outgoingCount","TOTAL_SESSIONS","TOTAL_COMMANDS","TOTAL_IHOOKS","TOTAL_OHOOKS","TOTAL_WEBSOCKET_CONNECTIONS","TOTAL_MASTER_DB_CONNECTIONS","TOTAL_READ_DB_CONNECTIONS","TOTAL_PUBLIC_CHANNELS","TOTAL_PRIVATE_GROUPS","TOTAL_FILE_POSTS","TOTAL_HASHTAG_POSTS","postTypeGraph","teamCount","TOTAL_TEAMS","totalPublicChannelsCount","totalPrivateGroupsCount","totalChannelCount","channelCount","dailyActiveUsers","DAILY_ACTIVE_USERS","monthlyActiveUsers","MONTHLY_ACTIVE_USERS","firstRow","secondRow","thirdRow","TableChart","tip","LAST_ANALYTICS_TEAM","BrowserStore","getGlobalItem","initialTeam","teamAnalytics","recentlyActiveUsers","newUsers","setGlobalItem","totalPostsCount","userActiveGraph","recentActiveUsers","formatRecentUsersData","newlyCreatedUsers","formatNewUsersData","aName","bName","formattedData","CHANNELS_PER_PAGE","ChannelSelectorModal","loadingChannels","onChannelsSelected","v","loadingState","setChannelsLoadingState","loadChannels","stateChannelIDs","stateChannel","serverChannel","compareChannels","multiselectComponent","not_associated_to_group","addValue","DiscardChangesModal","loadTeams","TeamSelectorModal","onTeamsSelected","confirmed","modalID","confirmAddModal","confirmAddTeam","loadingTeams","setTeamsLoadingState","confirmButtonText","currentSchemeId","alreadySelected","teamsValues","Toggle","getStatusForUserId","UserListRow","errorObj","buttons","Action","actionProps","actionUserProps","emailStyle","userCountID","userCountEmail","channelMember","AdminHeader","AdminPanel","onHeaderClick","subtitleId","subtitleDefault","subtitleValues","AdminPanelTogglable","AdminPanelWithButton","onButtonClick","buttonTextId","buttonId","buttonTextDefault","AdminPanelWithLink","linkTextId","linkTextDefault","FormattedAdminHeader","AccordionToggleIcon","AtIcon","CheckboxCheckedIcon","CheckboxPartialIcon","EllipsisHorizontalIcon","EmailIcon","ReloadIcon","SearchIcon","ShieldOutlineIcon","UnarchiveIcon","adminConsoleReducers","reducers","reducer","adminConsoleCustomComponents","getMySystemPermissions","mySystemPermissions","addEntriesForKey","entryKey","ResourceToSysConsolePermissionsTable","x","mapAccessValuesForKey","userManagementKey","extractTextsFromSection","texts","searchableString","adminDefinitionsToUrlsAndTexts","FlexSearch","addToIndex","getPluginEntries","extractTextsFromPlugin","extractTextFromSetting","stripMarkdown","settingsTexts","pluginsObj","NEVER","UserListOptions","ROLE","ALLOW_INACTIVE","isActive","MAPPING","enableTeamCreation","true","shouldHave","false","editOthersPosts","enableOnlyAdminIntegrations","mappingValues","rolesClone","purgeNonPertinentRoles","mappingKey","mutateRolesBasedOnMapping","roleClone","originalPermissionSet","newPermissionSet","size","mappingPartIterator","allConditionsAreMet","Error","pertinentRoleNames","roleNamesInMapping","roleRules","addPermissionToRole","removePermissionFromRole","v1","v2","names","mappingPart","hasOwnProperty","hasUnmetCondition","permissionIndex"],"mappings":"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","file":"7.0f8caaea304a6fb01144.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ClientConfig, ClientLicense} from 'mattermost-redux/types/config';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport MattermostLogo from 'components/widgets/icons/mattermost_logo';\nimport Nbsp from 'components/html_entities/nbsp';\n\nimport {AboutLinks} from 'utils/constants';\n\nimport AboutBuildModalCloud from './about_build_modal_cloud/about_build_modal_cloud';\n\ntype Props = {\n\n    /**\n     * Function that is called when the modal is dismissed\n     */\n    onHide: () => void;\n\n    /**\n     * Global config object\n     */\n    config: Partial<ClientConfig>;\n\n    /**\n     * Global license object\n     */\n    license: ClientLicense;\n\n    /**\n     * Webapp build hash override. By default, webpack sets this (so it must be overridden in tests).\n     */\n    webappBuildHash?: string;\n\n    show?: boolean;\n};\n\ntype State = {\n    show: boolean;\n};\n\nexport default class AboutBuildModal extends React.PureComponent<Props, State> {\n    // static defaultProps = {\n    //     show: false,\n    // };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            show: true,\n        };\n    }\n\n    doHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        this.props.onHide();\n    }\n\n    render() {\n        const config = this.props.config;\n        const license = this.props.license;\n\n        if (license.Cloud === 'true') {\n            return (\n                <AboutBuildModalCloud\n                    {...this.props}\n                    {...this.state}\n                    doHide={this.doHide}\n                />\n            );\n        }\n\n        let title = (\n            <FormattedMessage\n                id='about.teamEditiont0'\n                defaultMessage='Team Edition'\n            />\n        );\n\n        let subTitle = (\n            <FormattedMessage\n                id='about.teamEditionSt'\n                defaultMessage='All your team communication in one place, instantly searchable and accessible anywhere.'\n            />\n        );\n\n        let learnMore = (\n            <div>\n                <FormattedMessage\n                    id='about.teamEditionLearn'\n                    defaultMessage='Join the Mattermost community at '\n                />\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href='http://www.mattermost.org/'\n                >\n                    {'mattermost.org'}\n                </a>\n            </div>\n        );\n\n        let licensee;\n        if (config.BuildEnterpriseReady === 'true') {\n            title = (\n                <FormattedMessage\n                    id='about.teamEditiont1'\n                    defaultMessage='Enterprise Edition'\n                />\n            );\n\n            subTitle = (\n                <FormattedMessage\n                    id='about.enterpriseEditionSt'\n                    defaultMessage='Modern communication from behind your firewall.'\n                />\n            );\n\n            learnMore = (\n                <div>\n                    <FormattedMessage\n                        id='about.enterpriseEditionLearn'\n                        defaultMessage='Learn more about Enterprise Edition at '\n                    />\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href='http://about.mattermost.com/'\n                    >\n                        {'about.mattermost.com'}\n                    </a>\n                </div>\n            );\n\n            if (license.IsLicensed === 'true') {\n                title = (\n                    <FormattedMessage\n                        id='about.enterpriseEditione1'\n                        defaultMessage='Enterprise Edition'\n                    />\n                );\n                licensee = (\n                    <div className='form-group'>\n                        <FormattedMessage\n                            id='about.licensed'\n                            defaultMessage='Licensed to:'\n                        />\n                        <Nbsp/>{license.Company}\n                    </div>\n                );\n            }\n        }\n\n        const termsOfService = (\n            <a\n                target='_blank'\n                id='tosLink'\n                rel='noopener noreferrer'\n                href={AboutLinks.TERMS_OF_SERVICE}\n            >\n                <FormattedMessage\n                    id='about.tos'\n                    defaultMessage='Terms of Service'\n                />\n            </a>\n        );\n\n        const privacyPolicy = (\n            <a\n                target='_blank'\n                id='privacyLink'\n                rel='noopener noreferrer'\n                href={AboutLinks.PRIVACY_POLICY}\n            >\n                <FormattedMessage\n                    id='about.privacy'\n                    defaultMessage='Privacy Policy'\n                />\n            </a>\n        );\n\n        // Only show build number if it's a number (so only builds from Jenkins)\n        let buildnumber: JSX.Element | null = (\n            <div>\n                <FormattedMessage\n                    id='about.buildnumber'\n                    defaultMessage='Build Number:'\n                />\n                <span id='buildnumberString'>{'\\u00a0' + config.BuildNumber}</span>\n            </div>\n        );\n        if (isNaN(Number(config.BuildNumber))) {\n            buildnumber = null;\n        }\n\n        let mmversion: string | undefined = config.BuildNumber;\n        if (!isNaN(Number(config.BuildNumber))) {\n            mmversion = 'ci';\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal about-modal'\n                show={this.state.show}\n                onHide={this.doHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='aboutModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='aboutModalLabel'\n                    >\n                        <FormattedMessage\n                            id='about.title'\n                            values={{appTitle: config.SiteName || 'Mattermost'}}\n                            defaultMessage='About {appTitle}'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='about-modal__content'>\n                        <div className='about-modal__logo'>\n                            <MattermostLogo/>\n                        </div>\n                        <div>\n                            <h3 className='about-modal__title'>{'Mattermost'} {title}</h3>\n                            <p className='about-modal__subtitle pb-2'>{subTitle}</p>\n                            <div className='form-group less'>\n                                <div>\n                                    <FormattedMessage\n                                        id='about.version'\n                                        defaultMessage='Mattermost Version:'\n                                    />\n                                    <span id='versionString'>{'\\u00a0' + mmversion}</span>\n                                </div>\n                                <div>\n                                    <FormattedMessage\n                                        id='about.dbversion'\n                                        defaultMessage='Database Schema Version:'\n                                    />\n                                    <span id='dbversionString'>{'\\u00a0' + config.Version}</span>\n                                </div>\n                                {buildnumber}\n                                <div>\n                                    <FormattedMessage\n                                        id='about.database'\n                                        defaultMessage='Database:'\n                                    />\n                                    {'\\u00a0' + config.SQLDriverName}\n                                </div>\n                            </div>\n                            {licensee}\n                        </div>\n                    </div>\n                    <div className='about-modal__footer'>\n                        {learnMore}\n                        <div className='form-group'>\n                            <div className='about-modal__copyright'>\n                                <FormattedMessage\n                                    id='about.copyright'\n                                    defaultMessage='Copyright 2015 - {currentYear} Mattermost, Inc. All rights reserved'\n                                    values={{\n                                        currentYear: new Date().getFullYear(),\n                                    }}\n                                />\n                            </div>\n                            <div className='about-modal__links'>\n                                {termsOfService}\n                                {' - '}\n                                {privacyPolicy}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='about-modal__notice form-group pt-3'>\n                        <p>\n                            <FormattedMarkdownMessage\n                                id='about.notice'\n                                defaultMessage='Mattermost is made possible by the open source software used in our [server](!https://about.mattermost.com/platform-notice-txt/), [desktop](!https://about.mattermost.com/desktop-notice-txt/) and [mobile](!https://about.mattermost.com/mobile-notice-txt/) apps.'\n                            />\n                        </p>\n                    </div>\n                    <div className='about-modal__hash'>\n                        <p>\n                            <FormattedMessage\n                                id='about.hash'\n                                defaultMessage='Build Hash:'\n                            />\n                            <Nbsp/>{config.BuildHash}\n                            <br/>\n                            <FormattedMessage\n                                id='about.hashee'\n                                defaultMessage='EE Build Hash:'\n                            />\n                            <Nbsp/>{config.BuildHashEnterprise}\n                            <br/>\n                            <FormattedMessage\n                                id='about.hashwebapp'\n                                defaultMessage='Webapp Build Hash:'\n                            />\n                            <Nbsp/>{/* global COMMIT_HASH */ this.props.webappBuildHash || (typeof COMMIT_HASH === 'undefined' ? '' : COMMIT_HASH)}\n                        </p>\n                        <p>\n                            <FormattedMessage\n                                id='about.date'\n                                defaultMessage='Build Date:'\n                            />\n                            <Nbsp/>{config.BuildDate}\n                        </p>\n                    </div>\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./about_build_modal_cloud.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport MattermostLogo from 'components/widgets/icons/mattermost_logo';\n\nimport './about_build_modal_cloud.scss';\n\ntype Props = {\n    onHide: () => void;\n    config: any;\n    license: any;\n    show: boolean;\n    doHide: () => void;\n};\n\n// Webpack global var\ndeclare const COMMIT_HASH: string;\n\nexport default function AboutBuildModalCloud(props: Props) {\n    const handleExit = () => {\n        props.onHide();\n    };\n\n    const config = props.config;\n    const license = props.license;\n\n    const title = (\n        <FormattedMessage\n            id='about.cloudEdition'\n            defaultMessage='Cloud'\n        />\n    );\n\n    const subTitle = (\n        <FormattedMessage\n            id='about.enterpriseEditionSst'\n            defaultMessage='High trust messaging for the enterprise'\n        />\n    );\n\n    const licensee = (\n        <div className='form-group'>\n            <FormattedMessage\n                id='about.licensed'\n                defaultMessage='Licensed to:'\n            />\n            {'\\u00a0' + license.Company}\n        </div>\n    );\n\n    let mmversion = config.BuildNumber;\n    if (!isNaN(config.BuildNumber)) {\n        mmversion = 'ci';\n    }\n\n    return (\n        <Modal\n            dialogClassName={classNames('a11y__modal', 'about-modal', 'cloud')}\n            show={props.show}\n            onHide={props.doHide}\n            onExited={handleExit}\n            role='dialog'\n            aria-labelledby='aboutModalLabel'\n        >\n            <Modal.Header closeButton={true}>\n                <Modal.Title\n                    componentClass='h1'\n                    id='aboutModalLabel'\n                >\n                    <FormattedMessage\n                        id='about.title'\n                        values={{appTitle: config.SiteName || 'Mattermost'}}\n                        defaultMessage='About {appTitle}'\n                    />\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div className='about-modal__content'>\n                    <div className='about-modal__logo'>\n                        <MattermostLogo/>\n                    </div>\n                    <div>\n                        <h3 className='about-modal__title'>\n                            {'Mattermost'} {title}\n                        </h3>\n                        <p className='subtitle'>{subTitle}</p>\n                        <div className='description'>\n                            <div>\n                                <FormattedMessage\n                                    id='about.version'\n                                    defaultMessage='Mattermost Version:'\n                                />\n                                <span id='versionString'>{'\\u00a0' + mmversion}</span>\n                            </div>\n                        </div>\n                        {licensee}\n                        <div className='about-footer'>\n                            <FormattedMarkdownMessage\n                                id='about.notice'\n                                defaultMessage='Mattermost is made possible by the open source software used in our [server](!https://about.mattermost.com/platform-notice-txt/), [desktop](!https://about.mattermost.com/desktop-notice-txt/) and [mobile](!https://about.mattermost.com/mobile-notice-txt/) apps.'\n                            />\n                            <div className='copy-right'>\n                                <FormattedMessage\n                                    id='about.copyright'\n                                    defaultMessage='Copyright 2015 - {currentYear} Mattermost, Inc. All rights reserved'\n                                    values={{\n                                        currentYear: new Date().getFullYear(),\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div/>\n                </div>\n                <div className='about-modal__hash'>\n                    <p>\n                        <FormattedMessage\n                            id='about.hash'\n                            defaultMessage='Build Hash:'\n                        />\n                        {config.BuildHash}\n                        <br/>\n                        <FormattedMessage\n                            id='about.hashee'\n                            defaultMessage='EE Build Hash:'\n                        />\n                        {config.BuildHashEnterprise}\n                        <br/>\n                        <FormattedMessage\n                            id='about.hashwebapp'\n                            defaultMessage='Webapp Build Hash:'\n                        />\n                        {typeof COMMIT_HASH === 'undefined' ? '' : COMMIT_HASH}\n                    </p>\n                    <p>\n                        <FormattedMessage\n                            id='about.date'\n                            defaultMessage='Build Date:'\n                        />\n                        {config.BuildDate}\n                    </p>\n                </div>\n            </Modal.Body>\n        </Modal>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {ModalIdentifiers} from 'utils/constants';\nimport {isModalOpen} from 'selectors/views/modals';\n\nimport {GlobalState} from 'types/store';\n\nimport AboutBuildModal from './about_build_modal';\n\nfunction mapStateToProps(state: GlobalState) {\n    const modalId = ModalIdentifiers.ABOUT;\n    return {\n        config: getConfig(state),\n        license: getLicense(state),\n        show: isModalOpen(state, modalId),\n    };\n}\n\nexport default connect(mapStateToProps)(AboutBuildModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport {displayEntireNameForUser, localizeMessage, isGuest} from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport GuestBadge from 'components/widgets/badges/guest_badge';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport MultiSelect, {Value} from 'components/multiselect/multiselect';\nimport AddIcon from 'components/widgets/icons/fa_add_icon';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = 20;\n\ntype UserProfileValue = Value & UserProfile;\n\ntype Props = {\n    team: Team;\n    users: UserProfile[];\n    filterExcludeGuests?: boolean;\n    excludeUsers: { [userId: string]: UserProfile };\n    includeUsers: { [userId: string]: UserProfile };\n    onAddCallback: (users: UserProfile[]) => void;\n    onHide?: () => void;\n\n    actions: {\n        getProfilesNotInTeam: (teamId: string, groupConstrained: boolean, page: number, perPage?: number, options?: Record<string, any>) => Promise<{ data: UserProfile[] }>;\n        searchProfiles: (term: string, options?: Record<string, any>) => Promise<{ data: UserProfile[] }>;\n    };\n}\n\ntype State = {\n    searchResults: UserProfile[];\n    values: UserProfileValue[];\n    show: boolean;\n    search: boolean;\n    saving: boolean;\n    addError: null;\n    loading: boolean;\n    filterOptions: {[key: string]: any};\n}\n\nexport default class AddUsersToTeamModal extends React.PureComponent<Props, State> {\n    selectedItemRef: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n\n        let filterOptions = {};\n        if (props.filterExcludeGuests) {\n            filterOptions = {role: 'system_user'};\n        }\n\n        this.state = {\n            searchResults: [],\n            values: [],\n            show: true,\n            search: false,\n            saving: false,\n            addError: null,\n            loading: true,\n            filterOptions,\n        };\n\n        this.selectedItemRef = React.createRef();\n    }\n    public componentDidMount = async () => {\n        await this.props.actions.getProfilesNotInTeam(this.props.team.id, false, 0, USERS_PER_PAGE * 2);\n        this.setUsersLoadingState(false);\n    }\n\n    private setUsersLoadingState = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    public search = async (term: string) => {\n        this.setUsersLoadingState(true);\n        let searchResults: UserProfile[] = [];\n        const search = term !== '';\n        if (search) {\n            const {data} = await this.props.actions.searchProfiles(term, {not_in_team_id: this.props.team.id, replace: true, ...this.state.filterOptions});\n            searchResults = data;\n        } else {\n            await this.props.actions.getProfilesNotInTeam(this.props.team.id, false, 0, USERS_PER_PAGE * 2);\n        }\n        this.setState({loading: false, searchResults, search});\n    }\n\n    public handleHide = () => {\n        this.setState({show: false});\n    }\n\n    private handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    private renderOption = (option: UserProfileValue, isSelected: boolean, onAdd: (user: UserProfileValue) => void, onMouseMove: (user: UserProfileValue) => void) => {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? this.selectedItemRef : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    size='md'\n                />\n                <div className='more-modal__details'>\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                        <BotBadge\n                            show={Boolean(option.is_bot)}\n                            className='badge-popoverlist'\n                        />\n                        <GuestBadge\n                            show={isGuest(option)}\n                            className='popoverlist'\n                        />\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <AddIcon/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    private renderValue = (value: { data: UserProfileValue }): string => {\n        return value.data?.username || '';\n    }\n\n    private renderAriaLabel = (option: UserProfileValue): string => {\n        return option?.username || '';\n    }\n\n    private handleAdd = (value: UserProfileValue) => {\n        const values: UserProfileValue[] = [...this.state.values];\n        if (!values.includes(value)) {\n            values.push(value);\n        }\n        this.setState({values});\n    }\n\n    private handleDelete = (values: UserProfileValue[]) => {\n        this.setState({values});\n    }\n\n    private handlePageChange = (page: number, prevPage: number) => {\n        if (page > prevPage) {\n            const needMoreUsers = (this.props.users.length / USERS_PER_PAGE) <= page + 1;\n            this.setUsersLoadingState(needMoreUsers);\n            this.props.actions.getProfilesNotInTeam(this.props.team.id, false, page, USERS_PER_PAGE * 2).\n                then(() => this.setUsersLoadingState(false));\n        }\n    };\n\n    private handleSubmit = () => {\n        this.props.onAddCallback(this.state.values);\n        this.handleHide();\n    }\n\n    public render = (): JSX.Element => {\n        const numRemainingText = (\n            <div id='numPeopleRemaining'>\n                <FormattedMessage\n                    id='multiselect.numPeopleRemaining'\n                    defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                    values={{\n                        num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                    }}\n                />\n            </div>\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n        const buttonSubmitLoadingText = localizeMessage('multiselect.adding', 'Adding...');\n\n        let addError = null;\n        if (this.state.addError) {\n            addError = (<div className='has-error col-sm-12'><label className='control-label font-weight--normal'>{this.state.addError}</label></div>);\n        }\n\n        let usersToDisplay: UserProfile[] = [];\n        usersToDisplay = this.state.search ? this.state.searchResults : this.props.users;\n        if (this.props.excludeUsers) {\n            const hasUser = (user: UserProfile) => !this.props.excludeUsers[user.id];\n            usersToDisplay = usersToDisplay.filter(hasUser);\n        }\n        if (this.props.includeUsers) {\n            const includeUsers = Object.values(this.props.includeUsers);\n            usersToDisplay = [...usersToDisplay, ...includeUsers];\n        }\n\n        const options = usersToDisplay.map((user) => {\n            return {label: user.username, value: user.id, ...user};\n        });\n\n        return (\n            <Modal\n                id='addUsersToTeamModal'\n                dialogClassName={'a11y__modal more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title componentClass='h1'>\n                        <FormattedMessage\n                            id='add_users_to_team.title'\n                            defaultMessage='Add New Members to {teamName} Team'\n                            values={{\n                                teamName: (\n                                    <strong>{this.props.team.name}</strong>\n                                ),\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {addError}\n                    <MultiSelect\n                        key='addUsersToTeamKey'\n                        options={options}\n                        optionRenderer={this.renderOption}\n                        selectedItemRef={this.selectedItemRef}\n                        ariaLabelRenderer={this.renderAriaLabel}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.handleAdd}\n                        handleSubmit={this.handleSubmit}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        buttonSubmitLoadingText={buttonSubmitLoadingText}\n                        saving={this.state.saving}\n                        loading={this.state.loading}\n                        placeholderText={localizeMessage('multiselect.placeholder', 'Search and add members')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Team} from 'mattermost-redux/types/teams';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {getProfilesNotInTeam, searchProfiles} from 'mattermost-redux/actions/users';\n\nimport {getProfilesNotInTeam as selectProfilesNotInTeam} from 'mattermost-redux/selectors/entities/users';\n\nimport AddUsersToTeamModal from './add_users_to_team_modal';\n\ntype Props = {\n    team: Team;\n    filterExcludeGuests?: boolean;\n};\n\ntype Actions = {\n    getProfilesNotInTeam: (teamId: string, groupConstrained: boolean, page: number, perPage?: number, options?: {[key: string]: any}) => Promise<{ data: UserProfile[] }>;\n    searchProfiles: (term: string, options?: any) => Promise<{ data: UserProfile[] }>;\n};\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const {id: teamId} = props.team;\n\n    let filterOptions: {[key: string]: any} = {active: true};\n    if (props.filterExcludeGuests) {\n        filterOptions = {role: 'system_user', ...filterOptions};\n    }\n\n    const users: UserProfile[] = selectProfilesNotInTeam(state, teamId, filterOptions);\n\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getProfilesNotInTeam,\n            searchProfiles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsersToTeamModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './admin_button_outline.scss';\n\nexport default class AdminButtonOutline extends React.PureComponent {\n    static propTypes = {\n        onClick: PropTypes.func.isRequired,\n        children: PropTypes.string.isRequired,\n        disabled: PropTypes.bool,\n    }\n    render() {\n        return (\n            <button\n                type='button'\n                onClick={this.props.onClick}\n                className={'AdminButtonOutline btn btn-primary'}\n                disabled={this.props.disabled}\n            >\n                {this.props.children}\n            </button>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_button_outline.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport 'bootstrap';\n\nimport React from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport {AdminConfig, EnvironmentConfig, ClientLicense} from 'mattermost-redux/types/config';\nimport {Role} from 'mattermost-redux/types/roles';\nimport {ConsoleAccess} from 'mattermost-redux/types/admin';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {CloudState} from 'mattermost-redux/types/cloud';\n\nimport AnnouncementBar from 'components/announcement_bar';\nimport SystemNotice from 'components/system_notice';\nimport ModalController from 'components/modal_controller';\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings';\nimport DiscardChangesModal from 'components/discard_changes_modal';\n\nimport AdminSidebar from './admin_sidebar';\nimport Highlight from './highlight';\nimport AdminDefinition from './admin_definition';\n\ntype Props = {\n    config: DeepPartial<AdminConfig>;\n    adminDefinition: typeof AdminDefinition;\n    environmentConfig?: Partial<EnvironmentConfig>;\n    license: ClientLicense;\n    unauthorizedRoute: string;\n    buildEnterpriseReady: boolean;\n    roles: Dictionary<Role>;\n    match: {url: string};\n    showNavigationPrompt: boolean;\n    isCurrentUserSystemAdmin: boolean;\n    currentUserHasAnAdminRole: boolean;\n    consoleAccess: ConsoleAccess;\n    cloud: CloudState;\n    actions: {\n        getConfig: () => ActionFunc;\n        getEnvironmentConfig: () => ActionFunc;\n        setNavigationBlocked: () => void;\n        confirmNavigation: () => void;\n        cancelNavigation: () => void;\n        loadRolesIfNeeded: (roles: Iterable<string>) => ActionFunc;\n        selectChannel: (channelId: string) => void;\n        selectTeam: (teamId: string) => void;\n        editRole: (role: Role) => void;\n        updateConfig?: (config: AdminConfig) => ActionFunc;\n    };\n}\n\ntype State = {\n    filter: string;\n}\n\n// not every page in the system console will need the license and config, but the vast majority will\ntype ExtraProps = {\n    enterpriseReady: boolean;\n    license?: Record<string, any>;\n    config?: DeepPartial<AdminConfig>;\n    environmentConfig?: Partial<EnvironmentConfig>;\n    setNavigationBlocked?: () => void;\n    roles?: Dictionary<Role>;\n    editRole?: (role: Role) => void;\n    updateConfig?: (config: AdminConfig) => ActionFunc;\n}\n\ntype Item = {\n    isHidden?: (config?: Record<string, any>, state?: Record<string, any>, license?: Record<string, any>, buildEnterpriseReady?: boolean, consoleAccess?: ConsoleAccess, cloud?: CloudState) => boolean;\n    isDisabled?: (config?: Record<string, any>, state?: Record<string, any>, license?: Record<string, any>, buildEnterpriseReady?: boolean, consoleAccess?: ConsoleAccess, cloud?: CloudState) => boolean;\n    schema: Record<string, any>;\n    url: string;\n}\n\nexport default class AdminConsole extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            filter: '',\n        };\n    }\n\n    public componentDidMount(): void {\n        this.props.actions.getConfig();\n        this.props.actions.getEnvironmentConfig();\n        this.props.actions.loadRolesIfNeeded(['channel_user', 'team_user', 'system_user', 'channel_admin', 'team_admin', 'system_admin', 'system_user_manager', 'system_read_only_admin', 'system_manager']);\n        this.props.actions.selectChannel('');\n        this.props.actions.selectTeam('');\n    }\n\n    private onFilterChange = (filter: string) => {\n        this.setState({filter});\n    }\n\n    private mainRolesLoaded(roles: Dictionary<Role>) {\n        return (\n            roles &&\n            roles.channel_admin &&\n            roles.channel_user &&\n            roles.team_admin &&\n            roles.team_user &&\n            roles.system_admin &&\n            roles.system_user &&\n            roles.system_user_manager &&\n            roles.system_read_only_admin &&\n            roles.system_manager\n        );\n    }\n\n    private renderRoutes = (extraProps: ExtraProps) => {\n        const {adminDefinition, config, license, buildEnterpriseReady, consoleAccess, cloud} = this.props;\n\n        const schemas: Item[] = Object.values(adminDefinition).reduce((acc, section) => {\n            let items: Item[] = [];\n\n            let isSectionHidden = false;\n            Object.entries(section).find(([key, value]) => {\n                if (key === 'isHidden') {\n                    if (typeof value === 'function') {\n                        isSectionHidden = value(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud);\n                    } else {\n                        isSectionHidden = Boolean(value);\n                    }\n                }\n                return null;\n            });\n\n            if (!isSectionHidden) {\n                items = Object.values(section).filter((item: Item) => Boolean(item.schema));\n            }\n            return acc.concat(items);\n        }, [] as Item[]);\n\n        let defaultUrl = '';\n\n        const schemaRoutes = schemas.map((item: Item, index: number) => {\n            if (typeof item.isHidden !== 'undefined') {\n                const isHidden = (typeof item.isHidden === 'function') ? item.isHidden(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud) : Boolean(item.isHidden);\n                if (isHidden) {\n                    return false;\n                }\n            }\n\n            let isItemDisabled: boolean;\n\n            if (typeof item.isDisabled === 'function') {\n                isItemDisabled = item.isDisabled(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud);\n            } else {\n                isItemDisabled = Boolean(item.isDisabled);\n            }\n\n            if (!isItemDisabled && defaultUrl === '') {\n                const {url} = schemas[index];\n\n                // Don't use a url as default if it requires an additional ID\n                // in the path.\n                if (!url.includes(':')) {\n                    defaultUrl = url;\n                }\n            }\n\n            return (\n                <Route\n                    key={item.url}\n                    path={`${this.props.match.url}/${item.url}`}\n                    render={(props) => (\n                        <SchemaAdminSettings\n                            {...extraProps}\n                            {...props}\n                            consoleAccess={this.props.consoleAccess}\n                            schema={item.schema}\n                            isDisabled={isItemDisabled}\n                        />\n                    )}\n                />\n            );\n        });\n\n        return (\n            <Switch>\n                {schemaRoutes}\n                {<Redirect to={`${this.props.match.url}/${defaultUrl}`}/>}\n            </Switch>\n        );\n    }\n\n    public render(): JSX.Element | null {\n        const {\n            license,\n            config,\n            environmentConfig,\n            showNavigationPrompt,\n            roles,\n        } = this.props;\n        const {setNavigationBlocked, cancelNavigation, confirmNavigation, editRole, updateConfig} = this.props.actions;\n\n        if (!this.props.currentUserHasAnAdminRole) {\n            return (\n                <Redirect to={this.props.unauthorizedRoute}/>\n            );\n        }\n\n        if (!this.mainRolesLoaded(this.props.roles)) {\n            return null;\n        }\n\n        if (Object.keys(config).length === 0) {\n            return <div/>;\n        }\n\n        if (config && Object.keys(config).length === 0 && config.constructor === Object) {\n            return (\n                <div className='admin-console__wrapper'>\n                    <AnnouncementBar/>\n                    <div className='admin-console'/>\n                </div>\n            );\n        }\n\n        const discardChangesModal: JSX.Element = (\n            <DiscardChangesModal\n                show={showNavigationPrompt}\n                onConfirm={confirmNavigation}\n                onCancel={cancelNavigation}\n            />\n        );\n\n        const extraProps: ExtraProps = {\n            enterpriseReady: this.props.buildEnterpriseReady,\n            license,\n            config,\n            environmentConfig,\n            setNavigationBlocked,\n            roles,\n            editRole,\n            updateConfig,\n        };\n        return (\n            <div\n                className='admin-console__wrapper'\n                id='adminConsoleWrapper'\n            >\n                <AnnouncementBar/>\n                <SystemNotice/>\n                <AdminSidebar onFilterChange={this.onFilterChange}/>\n                <div className='admin-console'>\n                    <Highlight filter={this.state.filter}>\n                        {this.renderRoutes(extraProps)}\n                    </Highlight>\n                </div>\n                {discardChangesModal}\n                <ModalController/>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {getSiteURL} from 'utils/url';\nimport {t} from 'utils/i18n';\nimport {\n    ldapTest, invalidateAllCaches, reloadConfig, testS3Connection,\n    removeIdpSamlCertificate, uploadIdpSamlCertificate,\n    removePrivateSamlCertificate, uploadPrivateSamlCertificate,\n    removePublicSamlCertificate, uploadPublicSamlCertificate,\n    removePrivateLdapCertificate, uploadPrivateLdapCertificate,\n    removePublicLdapCertificate, uploadPublicLdapCertificate,\n    invalidateAllEmailInvites, testSmtp, testSiteURL, getSamlMetadataFromIdp, setSamlIdpCertificateFromMetadata,\n} from 'actions/admin_actions';\nimport SystemAnalytics from 'components/analytics/system_analytics';\nimport TeamAnalytics from 'components/analytics/team_analytics';\nimport PluginManagement from 'components/admin_console/plugin_management';\nimport CustomPluginSettings from 'components/admin_console/custom_plugin_settings';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport OpenIdConvert from './openid_convert';\nimport Audits from './audits';\nimport CustomUrlSchemesSetting from './custom_url_schemes_setting.jsx';\nimport CustomEnableDisableGuestAccountsSetting from './custom_enable_disable_guest_accounts_setting';\nimport LicenseSettings from './license_settings';\nimport PermissionSchemesSettings from './permission_schemes_settings';\nimport PermissionSystemSchemeSettings from './permission_schemes_settings/permission_system_scheme_settings';\nimport PermissionTeamSchemeSettings from './permission_schemes_settings/permission_team_scheme_settings';\nimport SystemRoles from './system_roles';\nimport SystemRole from './system_roles/system_role';\nimport SystemUsers from './system_users';\nimport SystemUserDetail from './system_user_detail';\nimport ServerLogs from './server_logs';\nimport BrandImageSetting from './brand_image_setting/brand_image_setting.jsx';\nimport GroupSettings from './group_settings/group_settings.jsx';\nimport GroupDetails from './group_settings/group_details';\nimport TeamSettings from './team_channel_settings/team';\nimport TeamDetails from './team_channel_settings/team/details';\nimport ChannelSettings from './team_channel_settings/channel';\nimport ChannelDetails from './team_channel_settings/channel/details';\nimport PasswordSettings from './password_settings.jsx';\nimport PushNotificationsSettings from './push_settings.jsx';\nimport DataRetentionSettings from './data_retention_settings.jsx';\nimport MessageExportSettings from './message_export_settings.jsx';\nimport DatabaseSettings from './database_settings.jsx';\nimport ElasticSearchSettings from './elasticsearch_settings.jsx';\nimport BleveSettings from './bleve_settings.jsx';\nimport FeatureFlags from './feature_flags.tsx';\nimport ClusterSettings from './cluster_settings.jsx';\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings';\nimport SessionLengthSettings from './session_length_settings';\nimport LDAPFeatureDiscovery from './feature_discovery/ldap.tsx';\nimport SAMLFeatureDiscovery from './feature_discovery/saml.tsx';\nimport BillingSubscriptions from './billing/billing_subscriptions.tsx';\nimport BillingHistory from './billing/billing_history';\nimport CompanyInfo from './billing/company_info';\nimport PaymentInfo from './billing/payment_info';\nimport CompanyInfoEdit from './billing/company_info_edit';\nimport PaymentInfoEdit from './billing/payment_info_edit';\n\nimport * as DefinitionConstants from './admin_definition_constants';\n\nconst FILE_STORAGE_DRIVER_LOCAL = 'local';\nconst FILE_STORAGE_DRIVER_S3 = 'amazons3';\nconst MEBIBYTE = Math.pow(1024, 2);\n\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1 = 'RSAwithSHA1';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256 = 'RSAwithSHA256';\nconst SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512 = 'RSAwithSHA512';\n\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N = 'Canonical1.0';\nconst SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11 = 'Canonical1.1';\n\n// admin_definitions data structure define the autogenerated admin_console\n// section. It defines the structure of the menu based on sections, subsections\n// and pages. Each page contains an schema which defines a component to use for\n// render the entire section or the name of the section (name and\n// name_default), the section in the config file (id), and a list of options to\n// configure (settings).\n//\n// All text fields contains a translation key, and the <field>_default string are the\n// default text when the translation is still not avaiable (the english version\n// of the text).\n//\n// We can define different types of settings configuration widgets:\n//\n// Widget:\n//   - type: which define the widget type.\n//   - label (and label_default): which define the main text of the setting.\n//   - isDisabled: a function which receive current config, the state of the page and the license.\n//   - isHidden: a function which receive current config, the state of the page and the license.\n//\n// Custom Widget (extends from Widget):\n//   - component: The component used to render the widget\n//\n// JobsTable Widget (extends from Widget):\n//   - job_type: The kind of job from Constants.JobTypes\n//   - render_job: Function to convert a job object into a react component.\n//\n// Banner Widget (extends from Widget):\n//   - banner_type: The type of banner (options: info or warning)\n//\n// Setting Widget (extends from Widget):\n//   - key: The key to store the configuration in the config file.\n//   - help_text (and help_text_default): Long description of the field.\n//   - help_text_markdown: True if the translation text contains markdown.\n//   - help_text_values: Values to fill the translation (if needed).\n//\n// Bool Widget (extends from Setting Widget)\n//\n// Number Widget (extends from Setting Widget)\n//\n// Color Widget (extends from Setting Widget)\n//\n// Text Widget (extends from Setting Widget)\n//   - placeholder (and placeholder_default): Placeholder text to show in the input.\n//   - dynamic_value: function that generate the value of the field based on the current value, the config, the state and the license.\n//   - default_value: function that generate the default value of the field based on the config, the state and the license.\n//   - max_length: The maximun length allowed\n//\n// Button Widget (extends from Setting Widget)\n//   - action: A redux action to execute on click.\n//   - error_message (and error_message_default): Error to show if action doesn't work.\n//   - success_message (and success_message_default): Success message to show if action doesn't work.\n//\n// Language Widget (extends from Setting Widget)\n//   - multiple: If you can select multiple languages.\n//   - no_result (and no_result_default): Text to show on not results found (only for multiple = true).\n//   - not_present (and not_present_default): Text to show when the default language is not present (only for multiple = true).\n//\n// Dropdown Widget (extends from Setting Widget)\n//   - options: List of options of the dropdown (each options has value, display_name, display_name_default and optionally help_text, help_text_default, help_text_values, help_text_markdown fields).\n//\n// Permissions Flag (extends from Setting Widget)\n//   - permissions_mapping_name: A permission name in the utils/policy_roles_adapter.js file.\n//\n// FileUpload (extends from Setting Widget)\n//   - remove_help_text (and remove_help_text_default):  Long description of the field when a file is uploaded.\n//   - remove_help_text_markdown: True if the translation text contains markdown.\n//   - remove_help_text_values: Values to fill the translation (if needed).\n//   - remove_button_text (and remove_button_text_default): Button text for remove when the file is uploaded.\n//   - removing_text (and removing_text_default): Text shown while the system is removing the file.\n//   - uploading_text (and uploading_text_default): Text shown while the system is uploading the file.\n//   - upload_action: An store action to upload the file.\n//   - remove_action: An store action to remove the file.\n//   - fileType: A list of extensions separated by \",\". E.g. \".jpg,.png,.gif\".\n\nexport const it = {\n    not: (func) => (config, state, license, enterpriseReady, consoleAccess, cloud) => {\n        return typeof func === 'function' ? !func(config, state, license, enterpriseReady, consoleAccess, cloud) : !func;\n    },\n    all: (...funcs) => (config, state, license, enterpriseReady, consoleAccess, cloud) => {\n        for (const func of funcs) {\n            if (typeof func === 'function' ? !func(config, state, license, enterpriseReady, consoleAccess, cloud) : !func) {\n                return false;\n            }\n        }\n        return true;\n    },\n    any: (...funcs) => (config, state, license, enterpriseReady, consoleAccess, cloud) => {\n        for (const func of funcs) {\n            if (typeof func === 'function' ? func(config, state, license, enterpriseReady, consoleAccess, cloud) : func) {\n                return true;\n            }\n        }\n        return false;\n    },\n    stateMatches: (key, regex) => (config, state) => state[key].match(regex),\n    stateEquals: (key, value) => (config, state) => state[key] === value,\n    stateIsTrue: (key) => (config, state) => Boolean(state[key]),\n    stateIsFalse: (key) => (config, state) => !state[key],\n    configIsTrue: (group, setting) => (config) => Boolean(config[group][setting]),\n    configIsFalse: (group, setting) => (config) => !config[group][setting],\n    configContains: (group, setting, word) => (config) => Boolean(config[group][setting].includes(word)),\n    enterpriseReady: (config, state, license, enterpriseReady) => enterpriseReady,\n    licensed: (config, state, license) => license.IsLicensed === 'true',\n    licensedForFeature: (feature) => (config, state, license) => license.IsLicensed && license[feature] === 'true',\n    isPaidTier: (config, state, license, enterpriseReady, consoleAccess, cloud) => {\n        if (!cloud?.subscription) {\n            return false;\n        }\n        return cloud.subscription.is_paid_tier === 'true';\n    },\n    userHasReadPermissionOnResource: (key) => (config, state, license, enterpriseReady, consoleAccess) => consoleAccess?.read?.[key],\n    userHasWritePermissionOnResource: (key) => (config, state, license, enterpriseReady, consoleAccess) => consoleAccess?.write?.[key],\n};\n\nconst usesLegacyOauth = (config, state, license, enterpriseReady, consoleAccess, cloud) => {\n    return it.any(\n        it.all(\n            it.not(it.configContains('GitLabSettings', 'Scope', 'openid')),\n            it.any(\n                it.configIsTrue('GitLabSettings', 'Id'),\n                it.configIsTrue('GitLabSettings', 'Secret'),\n            ),\n        ),\n        it.all(\n            it.not(it.configContains('GoogleSettings', 'Scope', 'openid')),\n            it.any(\n                it.configIsTrue('GoogleSettings', 'Id'),\n                it.configIsTrue('GoogleSettings', 'Secret'),\n            ),\n        ),\n        it.all(\n            it.not(it.configContains('Office365Settings', 'Scope', 'openid')),\n            it.any(\n                it.configIsTrue('Office365Settings', 'Id'),\n                it.configIsTrue('Office365Settings', 'Secret'),\n            ),\n        ),\n    )(config, state, license, enterpriseReady, consoleAccess, cloud);\n};\n\nconst AdminDefinition = {\n    about: {\n        icon: 'fa-info-circle',\n        sectionTitle: t('admin.sidebar.about'),\n        sectionTitleDefault: 'About',\n        isHidden: it.any(\n            it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            it.not(it.userHasReadPermissionOnResource('about')),\n        ),\n        license: {\n            url: 'about/license',\n            title: t('admin.sidebar.license'),\n            title_default: 'Edition and License',\n            searchableStrings: [\n                'admin.license.title',\n                'admin.license.uploadDesc',\n                'admin.license.keyRemove',\n                'admin.license.edition',\n                'admin.license.type',\n                'admin.license.key',\n                'Mattermost Enterprise Edition. Unlock enterprise features in this software through the purchase of a subscription from ',\n                'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('about')),\n            schema: {\n                id: 'LicenseSettings',\n                component: LicenseSettings,\n            },\n        },\n    },\n    billing: {\n        icon: 'fa-credit-card', // TODO: Need compass icon\n        sectionTitle: t('admin.sidebar.billing'),\n        sectionTitleDefault: 'Billing & Account',\n        isHidden: it.any(\n            it.not(it.licensedForFeature('Cloud')),\n            it.configIsFalse('ExperimentalSettings', 'CloudBilling'),\n            it.not(it.userHasReadPermissionOnResource('billing')),\n        ),\n        subscription: {\n            url: 'billing/subscription',\n            title: t('admin.sidebar.subscription'),\n            title_default: 'Subscription',\n            searchableStrings: [\n                'admin.billing.subscription.title',\n            ],\n            schema: {\n                id: 'BillingSubscriptions',\n                component: BillingSubscriptions,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n        billing_history: {\n            url: 'billing/billing_history',\n            title: t('admin.sidebar.billing_history'),\n            title_default: 'Billing History',\n            searchableStrings: [\n                'admin.billing.history.title',\n            ],\n            schema: {\n                id: 'BillingHistory',\n                component: BillingHistory,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n        company_info: {\n            url: 'billing/company_info',\n            title: t('admin.sidebar.company_info'),\n            title_default: 'Company Information',\n            searchableStrings: [\n                'admin.billing.company_info.title',\n            ],\n            schema: {\n                id: 'CompanyInfo',\n                component: CompanyInfo,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n        company_info_edit: {\n            url: 'billing/company_info_edit',\n            schema: {\n                id: 'CompanyInfoEdit',\n                component: CompanyInfoEdit,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n        payment_info: {\n            url: 'billing/payment_info',\n            title: t('admin.sidebar.payment_info'),\n            title_default: 'Payment Information',\n            isHidden: it.not(it.isPaidTier),\n            searchableStrings: [\n                'admin.billing.payment_info.title',\n            ],\n            schema: {\n                id: 'PaymentInfo',\n                component: PaymentInfo,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n        payment_info_edit: {\n            url: 'billing/payment_info_edit',\n            schema: {\n                id: 'PaymentInfoEdit',\n                component: PaymentInfoEdit,\n            },\n            isDisabled: it.not(it.userHasWritePermissionOnResource('billing')),\n        },\n    },\n    reporting: {\n        icon: 'fa-bar-chart',\n        sectionTitle: t('admin.sidebar.reporting'),\n        sectionTitleDefault: 'Reporting',\n        isHidden: it.not(it.userHasReadPermissionOnResource('reporting')),\n        system_analytics: {\n            url: 'reporting/system_analytics',\n            title: t('admin.sidebar.siteStatistics'),\n            title_default: 'Site Statistics',\n            searchableStrings: [\n                'analytics.system.title',\n                'analytics.system.totalPosts',\n                'analytics.system.activeUsers',\n                'analytics.system.totalSessions',\n                'analytics.system.totalCommands',\n                'analytics.system.totalIncomingWebhooks',\n                'analytics.system.totalOutgoingWebhooks',\n                'analytics.system.totalWebsockets',\n                'analytics.system.totalMasterDbConnections',\n                'analytics.system.totalReadDbConnections',\n                'analytics.system.postTypes',\n                'analytics.system.channelTypes',\n                'analytics.system.totalUsers',\n                'analytics.system.totalTeams',\n                'analytics.system.totalChannels',\n                'analytics.system.dailyActiveUsers',\n                'analytics.system.monthlyActiveUsers',\n            ],\n            schema: {\n                id: 'SystemAnalytics',\n                component: SystemAnalytics,\n            },\n        },\n        team_statistics: {\n            url: 'reporting/team_statistics',\n            title: t('admin.sidebar.teamStatistics'),\n            title_default: 'Team Statistics',\n            searchableStrings: [\n                ['analytics.team.title', {team: ''}],\n                'analytics.system.info',\n                'analytics.team.totalPosts',\n                'analytics.team.activeUsers',\n                'analytics.team.totalUsers',\n                'analytics.team.publicChannels',\n                'analytics.team.privateGroups',\n                'analytics.team.recentUsers',\n                'analytics.team.newlyCreated',\n            ],\n            schema: {\n                id: 'TeamAnalytics',\n                component: TeamAnalytics,\n            },\n        },\n        server_logs: {\n            url: 'reporting/server_logs',\n            title: t('admin.sidebar.logs'),\n            title_default: 'Server Logs',\n            isHidden: it.any(\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.logs.bannerDesc',\n                'admin.logs.title',\n            ],\n            schema: {\n                id: 'ServerLogs',\n                component: ServerLogs,\n            },\n        },\n    },\n    user_management: {\n        icon: 'fa-users',\n        sectionTitle: t('admin.sidebar.userManagement'),\n        sectionTitleDefault: 'User Management',\n        isHidden: it.all(\n            it.not(it.userHasReadPermissionOnResource('user_management.users')),\n            it.not(it.userHasReadPermissionOnResource('user_management.groups')),\n            it.not(it.userHasReadPermissionOnResource('user_management.teams')),\n            it.not(it.userHasReadPermissionOnResource('user_management.channels')),\n            it.not(it.userHasReadPermissionOnResource('user_management.permissions')),\n        ),\n        system_users: {\n            url: 'user_management/users',\n            title: t('admin.sidebar.users'),\n            title_default: 'Users',\n            searchableStrings: [\n                ['admin.system_users.title', {siteName: ''}],\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.users')),\n            isHidden: it.not(it.userHasReadPermissionOnResource('user_management.users')),\n            schema: {\n                id: 'SystemUsers',\n                component: SystemUsers,\n            },\n        },\n        system_user_detail: {\n            url: 'user_management/user/:user_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.users')),\n            schema: {\n                id: 'SystemUserDetail',\n                component: SystemUserDetail,\n            },\n        },\n        group_detail: {\n            url: 'user_management/groups/:group_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.groups')),\n            schema: {\n                id: 'GroupDetail',\n                component: GroupDetails,\n            },\n        },\n        groups: {\n            url: 'user_management/groups',\n            title: t('admin.sidebar.groups'),\n            title_default: 'Groups',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('LDAPGroups')),\n                it.not(it.userHasReadPermissionOnResource('user_management.groups')),\n            ),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.groups')),\n            schema: {\n                id: 'Groups',\n                component: GroupSettings,\n            },\n        },\n        team_detail: {\n            url: 'user_management/teams/:team_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.teams')),\n            schema: {\n                id: 'TeamDetail',\n                component: TeamDetails,\n            },\n        },\n        teams: {\n            url: 'user_management/teams',\n            title: t('admin.sidebar.teams'),\n            title_default: 'Teams',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('LDAPGroups')),\n                it.not(it.userHasReadPermissionOnResource('user_management.teams')),\n            ),\n            schema: {\n                id: 'Teams',\n                component: TeamSettings,\n            },\n        },\n        channel_detail: {\n            url: 'user_management/channels/:channel_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.channels')),\n            schema: {\n                id: 'ChannelDetail',\n                component: ChannelDetails,\n            },\n        },\n        channel: {\n            url: 'user_management/channels',\n            title: t('admin.sidebar.channels'),\n            title_default: 'Channels',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('LDAPGroups')),\n                it.not(it.userHasReadPermissionOnResource('user_management.channels')),\n            ),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.channels')),\n            schema: {\n                id: 'Channels',\n                component: ChannelSettings,\n            },\n        },\n        systemScheme: {\n            url: 'user_management/permissions/system_scheme',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.permissions')),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionSystemSchemeSettings,\n            },\n        },\n        teamSchemeDetail: {\n            url: 'user_management/permissions/team_override_scheme/:scheme_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.permissions')),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        teamScheme: {\n            url: 'user_management/permissions/team_override_scheme',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.permissions')),\n            schema: {\n                id: 'PermissionSystemScheme',\n                component: PermissionTeamSchemeSettings,\n            },\n        },\n        permissions: {\n            url: 'user_management/permissions/',\n            title: t('admin.sidebar.permissions'),\n            title_default: 'Permissions',\n            searchableStrings: [\n                'admin.permissions.documentationLinkText',\n                'admin.permissions.teamOverrideSchemesNoSchemes',\n                'admin.permissions.loadMoreSchemes',\n                'admin.permissions.introBanner',\n                'admin.permissions.systemSchemeBannerTitle',\n                'admin.permissions.systemSchemeBannerText',\n                'admin.permissions.systemSchemeBannerButton',\n                'admin.permissions.teamOverrideSchemesTitle',\n                'admin.permissions.teamOverrideSchemesBannerText',\n                'admin.permissions.teamOverrideSchemesNewButton',\n            ],\n            isHidden: it.any(\n                it.not(it.licensed),\n                it.not(it.userHasReadPermissionOnResource('user_management.permissions')),\n            ),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.permissions')),\n            schema: {\n                id: 'PermissionSchemes',\n                component: PermissionSchemesSettings,\n            },\n        },\n        system_role: {\n            url: 'user_management/system_roles/:role_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.system_roles')),\n            schema: {\n                id: 'SystemRole',\n                component: SystemRole,\n            },\n        },\n        system_roles: {\n            url: 'user_management/system_roles',\n            title: t('admin.sidebar.systemRoles'),\n            title_default: 'System Roles (Beta)',\n            searchableStrings: [],\n            isHidden: it.any(\n                it.not(it.licensedForFeature('LDAPGroups')),\n                it.not(it.userHasReadPermissionOnResource('user_management.system_roles')),\n            ),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('user_management.system_roles')),\n            schema: {\n                id: 'SystemRoles',\n                component: SystemRoles,\n            },\n        },\n    },\n    environment: {\n        icon: 'fa-server',\n        sectionTitle: t('admin.sidebar.environment'),\n        sectionTitleDefault: 'Environment',\n        isHidden: it.not(it.userHasReadPermissionOnResource('environment')),\n        web_server: {\n            url: 'environment/web_server',\n            title: t('admin.sidebar.webServer'),\n            title_default: 'Web Server',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.environment.webServer'),\n                name_default: 'Web Server',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.SiteURL',\n                        label: t('admin.service.siteURL'),\n                        label_default: 'Site URL:',\n                        help_text: t('admin.service.siteURLDescription'),\n                        help_text_default: 'The URL that users will use to access Mattermost. Standard ports, such as 80 and 443, can be omitted, but non-standard ports are required. For example: http://example.com:8065. This setting is required.\\n \\nMattermost may be hosted at a subpath. For example: http://example.com:8065/company/mattermost. A restart is required before the server will work correctly.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.service.siteURLExample'),\n                        placeholder_default: 'E.g.: \"http://example.com:8065\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'TestSiteURL',\n                        action: testSiteURL,\n                        label: t('admin.service.testSiteURL'),\n                        label_default: 'Test Live URL',\n                        loading: t('admin.service.testSiteURLTesting'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.service.testSiteURLFail'),\n                        error_message_default: 'Test unsuccessful: {error}',\n                        success_message: t('admin.service.testSiteURLSuccess'),\n                        success_message_default: 'Test successful. This is a valid URL.',\n                        isDisabled: it.not(it.userHasReadPermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.ListenAddress',\n                        label: t('admin.service.listenAddress'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.service.listenExample'),\n                        placeholder_default: 'E.g.: \":8065\"',\n                        help_text: t('admin.service.listenDescription'),\n                        help_text_default: 'The address and port to which to bind and listen. Specifying \":8065\" will bind to all network interfaces. Specifying \"127.0.0.1:8065\" will only bind to the network interface having that IP address. If you choose a port of a lower level (called \"system ports\" or \"well-known ports\", in the range of 0-1023), you must have permissions to bind to that port. On Linux you can use: \"sudo setcap cap_net_bind_service=+ep ./bin/mattermost\" to allow Mattermost to bind to well-known ports.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.Forward80To443',\n                        label: t('admin.service.forward80To443'),\n                        label_default: 'Forward port 80 to 443:',\n                        help_text: t('admin.service.forward80To443Description'),\n                        help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.',\n                        disabled_help_text: t('admin.service.forward80To443Description.disabled'),\n                        disabled_help_text_default: 'Forwards all insecure traffic from port 80 to secure port 443. Not recommended when using a proxy server.\\n \\nThis setting cannot be enabled until your server is [listening](#ListenAddress) on port 443.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateMatches('ServiceSettings.ListenAddress', /:443$/)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_WEBSERVER,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSCertFile',\n                        label: t('admin.service.tlsCertFile'),\n                        label_default: 'TLS Certificate File:',\n                        help_text: t('admin.service.tlsCertFileDescription'),\n                        help_text_default: 'The certificate file to use.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.TLSKeyFile',\n                        label: t('admin.service.tlsKeyFile'),\n                        label_default: 'TLS Key File:',\n                        help_text: t('admin.service.tlsKeyFileDescription'),\n                        help_text_default: 'The private key file to use.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsTrue('ServiceSettings.UseLetsEncrypt'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.UseLetsEncrypt',\n                        label: t('admin.service.useLetsEncrypt'),\n                        label_default: 'Use Let\\'s Encrypt:',\n                        help_text: t('admin.service.useLetsEncryptDescription'),\n                        help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.',\n                        disabled_help_text: t('admin.service.useLetsEncryptDescription.disabled'),\n                        disabled_help_text_default: 'Enable the automatic retrieval of certificates from Let\\'s Encrypt. The certificate will be retrieved when a client attempts to connect from a new domain. This will work with multiple domains.\\n \\nThis setting cannot be enabled unless the [Forward port 80 to 443](#Forward80To443) setting is set to true.',\n                        disabled_help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('ServiceSettings.Forward80To443'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.LetsEncryptCertificateCacheFile',\n                        label: t('admin.service.letsEncryptCertificateCacheFile'),\n                        label_default: 'Let\\'s Encrypt Certificate Cache File:',\n                        help_text: t('admin.service.letsEncryptCertificateCacheFileDescription'),\n                        help_text_default: 'Certificates retrieved and other data about the Let\\'s Encrypt service will be stored in this file.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('ServiceSettings.UseLetsEncrypt'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.ReadTimeout',\n                        label: t('admin.service.readTimeout'),\n                        label_default: 'Read Timeout:',\n                        help_text: t('admin.service.readTimeoutDescription'),\n                        help_text_default: 'Maximum time allowed from when the connection is accepted to when the request body is fully read.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.WriteTimeout',\n                        label: t('admin.service.writeTimeout'),\n                        label_default: 'Write Timeout:',\n                        help_text: t('admin.service.writeTimeoutDescription'),\n                        help_text_default: 'If using HTTP (insecure), this is the maximum time allowed from the end of reading the request headers until the response is written. If using HTTPS, it is the total time from when the connection is accepted until the response is written.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.WebserverMode',\n                        label: t('admin.webserverModeTitle'),\n                        label_default: 'Webserver Mode:',\n                        help_text: DefinitionConstants.WEBSERVER_MODE_HELP_TEXT,\n                        options: [\n                            {\n                                value: 'gzip',\n                                display_name: t('admin.webserverModeGzip'),\n                                display_name_default: 'gzip',\n                            },\n                            {\n                                value: 'uncompressed',\n                                display_name: t('admin.webserverModeUncompressed'),\n                                display_name_default: 'Uncompressed',\n                            },\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.webserverModeDisabled'),\n                                display_name_default: 'Disabled',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableInsecureOutgoingConnections',\n                        label: t('admin.service.insecureTlsTitle'),\n                        label_default: 'Enable Insecure Outgoing Connections: ',\n                        help_text: t('admin.service.insecureTlsDesc'),\n                        help_text_default: 'When true, any outgoing HTTPS requests will accept unverified, self-signed certificates. For example, outgoing webhooks to a server with a self-signed TLS certificate, using any domain, will be allowed. Note that this makes these connections susceptible to man-in-the-middle attacks.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.ManagedResourcePaths',\n                        label: t('admin.service.managedResourcePaths'),\n                        label_default: 'Managed Resource Paths:',\n                        help_text: t('admin.service.managedResourcePathsDescription'),\n                        help_text_default: 'A comma-separated list of paths on the Mattermost server that are managed by another service. See [here](!https://docs.mattermost.com/install/desktop-managed-resources.html) for more information.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: reloadConfig,\n                        key: 'ReloadConfigButton',\n                        label: t('admin.reload.button'),\n                        label_default: 'Reload Configuration From Disk',\n                        help_text: t('admin.reload.reloadDescription'),\n                        help_text_default: 'Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {featureName} feature to load the new settings while the server is running. The administrator should then use the {recycleDatabaseConnections} feature to recycle the database connections based on the new settings.',\n                        help_text_values: {\n                            featureName: (\n                                <b>\n                                    <FormattedMessage\n                                        id='admin.reload.reloadDescription.featureName'\n                                        defaultMessage='Reload Configuration from Disk'\n                                    />\n                                </b>\n                            ),\n                            recycleDatabaseConnections: (\n                                <a href='../environment/database'>\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.reload.reloadDescription.recycleDatabaseConnections'\n                                            defaultMessage='Environment > Database > Recycle Database Connections'\n                                        />\n                                    </b>\n                                </a>\n                            ),\n                        },\n                        error_message: t('admin.reload.reloadFail'),\n                        error_message_default: 'Reload unsuccessful: {error}',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'PurgeButton',\n                        action: invalidateAllCaches,\n                        label: t('admin.purge.button'),\n                        label_default: 'Purge All Caches',\n                        help_text: t('admin.purge.purgeDescription'),\n                        help_text_default: 'This will purge all the in-memory caches for things like sessions, accounts, channels, etc. Deployments using High Availability will attempt to purge all the servers in the cluster.  Purging the caches may adversely impact performance.',\n                        error_message: t('admin.purge.purgeFail'),\n                        error_message_default: 'Purging unsuccessful: {error}',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n        database: {\n            url: 'environment/database',\n            title: t('admin.sidebar.database'),\n            title_default: 'Database',\n            searchableStrings: [\n                'admin.database.title',\n                ['admin.recycle.recycleDescription', {featureName: '', reloadConfiguration: ''}],\n                'admin.recycle.recycleDescription.featureName',\n                'admin.recycle.recycleDescription.reloadConfiguration',\n                'admin.recycle.button',\n                'admin.sql.noteDescription',\n                'admin.sql.disableDatabaseSearchTitle',\n                'admin.sql.disableDatabaseSearchDescription',\n                'admin.sql.driverName',\n                'admin.sql.driverNameDescription',\n                'admin.sql.dataSource',\n                'admin.sql.dataSourceDescription',\n                'admin.sql.maxConnectionsTitle',\n                'admin.sql.maxConnectionsDescription',\n                'admin.sql.maxOpenTitle',\n                'admin.sql.maxOpenDescription',\n                'admin.sql.queryTimeoutTitle',\n                'admin.sql.queryTimeoutDescription',\n                'admin.sql.connMaxLifetimeTitle',\n                'admin.sql.connMaxLifetimeDescription',\n                'admin.sql.traceTitle',\n                'admin.sql.traceDescription',\n            ],\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n            schema: {\n                id: 'DatabaseSettings',\n                component: DatabaseSettings,\n            },\n        },\n        elasticsearch: {\n            url: 'environment/elasticsearch',\n            title: t('admin.sidebar.elasticsearch'),\n            title_default: 'Elasticsearch',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('Elasticsearch')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.elasticsearch.title',\n                'admin.elasticsearch.enableIndexingTitle',\n                ['admin.elasticsearch.enableIndexingDescription', {documentationLink: ''}],\n                'admin.elasticsearch.enableIndexingDescription.documentationLinkText',\n                'admin.elasticsearch.connectionUrlTitle',\n                ['admin.elasticsearch.connectionUrlDescription', {documentationLink: ''}],\n                'admin.elasticsearch.connectionUrlExample.documentationLinkText',\n                'admin.elasticsearch.skipTLSVerificationTitle',\n                'admin.elasticsearch.skipTLSVerificationDescription',\n                'admin.elasticsearch.usernameTitle',\n                'admin.elasticsearch.usernameDescription',\n                'admin.elasticsearch.passwordTitle',\n                'admin.elasticsearch.passwordDescription',\n                'admin.elasticsearch.sniffTitle',\n                'admin.elasticsearch.sniffDescription',\n                'admin.elasticsearch.testHelpText',\n                'admin.elasticsearch.elasticsearch_test_button',\n                'admin.elasticsearch.bulkIndexingTitle',\n                'admin.elasticsearch.createJob.help',\n                'admin.elasticsearch.purgeIndexesHelpText',\n                'admin.elasticsearch.purgeIndexesButton',\n                'admin.elasticsearch.purgeIndexesButton.label',\n                'admin.elasticsearch.enableSearchingTitle',\n                'admin.elasticsearch.enableSearchingDescription',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n            schema: {\n                id: 'ElasticSearchSettings',\n                component: ElasticSearchSettings,\n            },\n        },\n        storage: {\n            url: 'environment/file_storage',\n            title: t('admin.sidebar.fileStorage'),\n            title_default: 'File Storage',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'FileSettings',\n                name: t('admin.environment.fileStorage'),\n                name_default: 'File Storage',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'FileSettings.DriverName',\n                        label: t('admin.image.storeTitle'),\n                        label_default: 'File Storage System:',\n                        help_text: t('admin.image.storeDescription'),\n                        help_text_default: 'Storage system where files and image attachments are saved.\\n \\nSelecting \"Amazon S3\" enables fields to enter your Amazon credentials and bucket details.\\n \\nSelecting \"Local File System\" enables the field to specify a local file directory.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: FILE_STORAGE_DRIVER_LOCAL,\n                                display_name: t('admin.image.storeLocal'),\n                                display_name_default: 'Local File System',\n                            },\n                            {\n                                value: FILE_STORAGE_DRIVER_S3,\n                                display_name: t('admin.image.storeAmazonS3'),\n                                display_name_default: 'Amazon S3',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.Directory',\n                        label: t('admin.image.localTitle'),\n                        label_default: 'Local Storage Directory:',\n                        help_text: t('admin.image.localDescription'),\n                        help_text_default: 'Directory to which files and images are written. If blank, defaults to ./data/.',\n                        placeholder: t('admin.image.localExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_LOCAL)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'FileSettings.MaxFileSize',\n                        label: t('admin.image.maxFileSizeTitle'),\n                        label_default: 'Maximum File Size:',\n                        help_text: t('admin.image.maxFileSizeDescription'),\n                        help_text_default: 'Maximum file size for message attachments in megabytes. Caution: Verify server memory can support your setting choice. Large file sizes increase the risk of server crashes and failed uploads due to network interruptions.',\n                        placeholder: t('admin.image.maxFileSizeExample'),\n                        placeholder_default: '50',\n                        onConfigLoad: (configVal) => configVal / MEBIBYTE,\n                        onConfigSave: (displayVal) => displayVal * MEBIBYTE,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Bucket',\n                        label: t('admin.image.amazonS3BucketTitle'),\n                        label_default: 'Amazon S3 Bucket:',\n                        help_text: t('admin.image.amazonS3BucketDescription'),\n                        help_text_default: 'Name you selected for your S3 bucket in AWS.',\n                        placeholder: t('admin.image.amazonS3BucketExample'),\n                        placeholder_default: 'E.g.: \"mattermost-media\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3PathPrefix',\n                        label: t('admin.image.amazonS3PathPrefixTitle'),\n                        label_default: 'Amazon S3 Path Prefix:',\n                        help_text: t('admin.image.amazonS3PathPrefixDescription'),\n                        help_text_default: 'Prefix you selected for your S3 bucket in AWS.',\n                        placeholder: t('admin.image.amazonS3PathPrefixExample'),\n                        placeholder_default: 'E.g.: \"subdir1/\" or you can leave it .',\n                        isDisabled: it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Region',\n                        label: t('admin.image.amazonS3RegionTitle'),\n                        label_default: 'Amazon S3 Region:',\n                        help_text: t('admin.image.amazonS3RegionDescription'),\n                        help_text_default: 'AWS region you selected when creating your S3 bucket. If no region is set, Mattermost attempts to get the appropriate region from AWS, or sets it to \"us-east-1\" if none found.',\n                        placeholder: t('admin.image.amazonS3RegionExample'),\n                        placeholder_default: 'E.g.: \"us-east-1\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3AccessKeyId',\n                        label: t('admin.image.amazonS3IdTitle'),\n                        label_default: 'Amazon S3 Access Key ID:',\n                        help_text: t('admin.image.amazonS3IdDescription'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Only required if you do not want to authenticate to S3 using an [IAM role](!https://about.mattermost.com/default-iam-role). Enter the Access Key ID provided by your Amazon EC2 administrator.',\n                        placeholder: t('admin.image.amazonS3IdExample'),\n                        placeholder_default: 'E.g.: \"AKIADTOVBGERKLCBV\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3Endpoint',\n                        label: t('admin.image.amazonS3EndpointTitle'),\n                        label_default: 'Amazon S3 Endpoint:',\n                        help_text: t('admin.image.amazonS3EndpointDescription'),\n                        help_text_default: 'Hostname of your S3 Compatible Storage provider. Defaults to \"s3.amazonaws.com\".',\n                        placeholder: t('admin.image.amazonS3EndpointExample'),\n                        placeholder_default: 'E.g.: \"s3.amazonaws.com\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'FileSettings.AmazonS3SecretAccessKey',\n                        label: t('admin.image.amazonS3SecretTitle'),\n                        label_default: 'Amazon S3 Secret Access Key:',\n                        help_text: t('admin.image.amazonS3SecretDescription'),\n                        help_text_default: '(Optional) The secret access key associated with your Amazon S3 Access Key ID.',\n                        placeholder: t('admin.image.amazonS3SecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSL',\n                        label: t('admin.image.amazonS3SSLTitle'),\n                        label_default: 'Enable Secure Amazon S3 Connections:',\n                        help_text: t('admin.image.amazonS3SSLDescription'),\n                        help_text_default: 'When false, allow insecure connections to Amazon S3. Defaults to secure connections only.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3SSE',\n                        label: t('admin.image.amazonS3SSETitle'),\n                        label_default: 'Enable Server-Side Encryption for Amazon S3:',\n                        help_text: t('admin.image.amazonS3SSEDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, encrypt files in Amazon S3 using server-side encryption with Amazon S3-managed keys. See [documentation](!https://about.mattermost.com/default-server-side-encryption) to learn more.',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.AmazonS3Trace',\n                        label: t('admin.image.amazonS3TraceTitle'),\n                        label_default: 'Enable Amazon S3 Debugging:',\n                        help_text: t('admin.image.amazonS3TraceDescription'),\n                        help_text_default: '(Development Mode) When true, log additional debugging information to the system logs.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.not(it.stateEquals('FileSettings.DriverName', FILE_STORAGE_DRIVER_S3)),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testS3Connection,\n                        key: 'TestS3Connection',\n                        label: t('admin.s3.connectionS3Test'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.s3.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.s3.s3Fail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.s3.s3Success'),\n                        success_message_default: 'Connection was successful',\n                        isDisabled: it.not(it.userHasReadPermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n        image_proxy: {\n            url: 'environment/image_proxy',\n            title: t('admin.sidebar.imageProxy'),\n            title_default: 'Image Proxy',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ImageProxy',\n                name: t('admin.environment.imageProxy'),\n                name_default: 'Image Proxy',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ImageProxySettings.Enable',\n                        label: t('admin.image.enableProxy'),\n                        label_default: 'Enable Image Proxy:',\n                        help_text: t('admin.image.enableProxyDescription'),\n                        help_text_default: 'When true, enables an image proxy for loading all Markdown images.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ImageProxySettings.ImageProxyType',\n                        label: t('admin.image.proxyType'),\n                        label_default: 'Image Proxy Type:',\n                        help_text: t('admin.image.proxyTypeDescription'),\n                        help_text_default: 'Configure an image proxy to load all Markdown images through a proxy. The image proxy prevents users from making insecure image requests, provides caching for increased performance, and automates image adjustments such as resizing. See [documentation](!https://about.mattermost.com/default-image-proxy-documentation) to learn more.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'atmos/camo',\n                                display_name: t('atmos/camo'),\n                                display_name_default: 'atmos/camo',\n                            },\n                            {\n                                value: 'local',\n                                display_name: t('local'),\n                                display_name_default: 'local',\n                            },\n                        ],\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyURL',\n                        label: t('admin.image.proxyURL'),\n                        label_default: 'Remote Image Proxy URL:',\n                        help_text: t('admin.image.proxyURLDescription'),\n                        help_text_default: 'URL of your remote image proxy server.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ImageProxySettings.RemoteImageProxyOptions',\n                        label: t('admin.image.proxyOptions'),\n                        label_default: 'Remote Image Proxy Options:',\n                        help_text: t('admin.image.proxyOptionsDescription'),\n                        help_text_default: 'Additional options such as the URL signing key. Refer to your image proxy documentation to learn more about what options are supported.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('ImageProxySettings.Enable'),\n                            it.stateEquals('ImageProxySettings.ImageProxyType', 'local'),\n                        ),\n                    },\n                ],\n            },\n        },\n        smtp: {\n            url: 'environment/smtp',\n            title: t('admin.sidebar.smtp'),\n            title_default: 'SMTP',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'SMTP',\n                name: t('admin.environment.smtp'),\n                name_default: 'SMTP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPServer',\n                        label: t('admin.environment.smtp.smtpServer.title'),\n                        label_default: 'SMTP Server:',\n                        placeholder: t('admin.environment.smtp.smtpServer.placeholder'),\n                        placeholder_default: 'Ex: \"smtp.yourcompany.com\", \"email-smtp.us-east-1.amazonaws.com\"',\n                        help_text: t('admin.environment.smtp.smtpServer.description'),\n                        help_text_default: 'Location of SMTP email server.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPort',\n                        label: t('admin.environment.smtp.smtpPort.title'),\n                        label_default: 'SMTP Server Port:',\n                        placeholder: t('admin.environment.smtp.smtpPort.placeholder'),\n                        placeholder_default: 'Ex: \"25\", \"465\", \"587\"',\n                        help_text: t('admin.environment.smtp.smtpPort.description'),\n                        help_text_default: 'Port of SMTP email server.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSMTPAuth',\n                        label: t('admin.environment.smtp.smtpAuth.title'),\n                        label_default: 'Enable SMTP Authentication:',\n                        help_text: t('admin.environment.smtp.smtpAuth.description'),\n                        help_text_default: 'When true, SMTP Authentication is enabled.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPUsername',\n                        label: t('admin.environment.smtp.smtpUsername.title'),\n                        label_default: 'SMTP Server Username:',\n                        placeholder: t('admin.environment.smtp.smtpUsername.placeholder'),\n                        placeholder_default: 'Ex: \"admin@yourcompany.com\", \"AKIADTOVBGERKLCBV\"',\n                        help_text: t('admin.environment.smtp.smtpUsername.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.SMTPPassword',\n                        label: t('admin.environment.smtp.smtpPassword.title'),\n                        label_default: 'SMTP Server Password:',\n                        placeholder: t('admin.environment.smtp.smtpPassword.placeholder'),\n                        placeholder_default: 'Ex: \"yourpassword\", \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        help_text: t('admin.environment.smtp.smtpPassword.description'),\n                        help_text_default: 'Obtain this credential from administrator setting up your email server.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('EmailSettings.EnableSMTPAuth'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.ConnectionSecurity',\n                        label: t('admin.environment.smtp.connectionSecurity.title'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_EMAIL,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.none'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.tls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.environment.smtp.connectionSecurity.option.starttls'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: testSmtp,\n                        key: 'TestSmtpConnection',\n                        label: t('admin.environment.smtp.connectionSmtpTest'),\n                        label_default: 'Test Connection',\n                        loading: t('admin.environment.smtp.testing'),\n                        loading_default: 'Testing...',\n                        error_message: t('admin.environment.smtp.smtpFail'),\n                        error_message_default: 'Connection unsuccessful: {error}',\n                        success_message: t('admin.environment.smtp.smtpSuccess'),\n                        success_message_default: 'No errors were reported while sending an email. Please check your inbox to make sure.',\n                        isDisabled: it.not(it.userHasReadPermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SkipServerCertificateVerification',\n                        label: t('admin.environment.smtp.skipServerCertificateVerification.title'),\n                        label_default: 'Skip Server Certificate Verification:',\n                        help_text: t('admin.environment.smtp.skipServerCertificateVerification.description'),\n                        help_text_default: 'When true, Mattermost will not verify the email server certificate.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSecurityFixAlert',\n                        label: t('admin.environment.smtp.enableSecurityFixAlert.title'),\n                        label_default: 'Enable Security Alerts:',\n                        help_text: t('admin.environment.smtp.enableSecurityFixAlert.description'),\n                        help_text_default: 'When true, System Administrators are notified by email if a relevant security fix alert has been announced in the last 12 hours. Requires email to be enabled.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n        push_notification_server: {\n            url: 'environment/push_notification_server',\n            title: t('admin.sidebar.pushNotificationServer'),\n            title_default: 'Push Notification Server',\n            searchableStrings: [\n                'admin.environment.pushNotificationServer',\n                'admin.email.pushTitle',\n                'admin.email.pushServerTitle',\n                'admin.email.pushContentTitle',\n                'admin.email.pushContentDesc',\n            ],\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n            schema: {\n                id: 'PushNotificationsSettings',\n                component: PushNotificationsSettings,\n            },\n        },\n        high_availability: {\n            url: 'environment/high_availability',\n            title: t('admin.sidebar.highAvailability'),\n            title_default: 'High Availability',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('Cluster')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            searchableStrings: [\n                'admin.advance.cluster',\n                'admin.cluster.noteDescription',\n                'admin.cluster.enableTitle',\n                'admin.cluster.enableDescription',\n                'admin.cluster.ClusterName',\n                'admin.cluster.ClusterNameDesc',\n                'admin.cluster.OverrideHostname',\n                'admin.cluster.OverrideHostnameDesc',\n                'admin.cluster.UseIpAddress',\n                'admin.cluster.UseIpAddressDesc',\n                'admin.cluster.UseExperimentalGossip',\n                'admin.cluster.UseExperimentalGossipDesc',\n                'admin.cluster.EnableExperimentalGossipEncryption',\n                'admin.cluster.EnableExperimentalGossipEncryptionDesc',\n                'admin.cluster.GossipPort',\n                'admin.cluster.GossipPortDesc',\n                'admin.cluster.StreamingPort',\n                'admin.cluster.StreamingPortDesc',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n            schema: {\n                id: 'ClusterSettings',\n                component: ClusterSettings,\n            },\n        },\n        rate_limiting: {\n            url: 'environment/rate_limiting',\n            title: t('admin.sidebar.rateLimiting'),\n            title_default: 'Rate Limiting',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.rate.title'),\n                name_default: 'Rate Limiting',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.rate.noteDescription'),\n                        label_default: 'Changing properties other than Site URL in this section will require a server restart before taking effect.',\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.Enable',\n                        label: t('admin.rate.enableLimiterTitle'),\n                        label_default: 'Enable Rate Limiting:',\n                        help_text: t('admin.rate.enableLimiterDescription'),\n                        help_text_default: 'When true, APIs are throttled at rates specified below.\\n \\nRate limiting prevents server overload from too many requests. This is useful to prevent third-party applications or malicous attacks from impacting your server.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.PerSec',\n                        label: t('admin.rate.queriesTitle'),\n                        label_default: 'Maximum Queries per Second:',\n                        placeholder: t('admin.rate.queriesExample'),\n                        placeholder_default: 'E.g.: \"10\"',\n                        help_text: t('admin.rate.queriesDescription'),\n                        help_text_default: 'Throttles API at this number of requests per second.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MaxBurst',\n                        label: t('admin.rate.maxBurst'),\n                        label_default: 'Maximum Burst Size:',\n                        placeholder: t('admin.rate.maxBurstExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                        help_text: t('admin.rate.maxBurstDescription'),\n                        help_text_default: 'Maximum number of requests allowed beyond the per second query limit.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'RateLimitSettings.MemoryStoreSize',\n                        label: t('admin.rate.memoryTitle'),\n                        label_default: 'Memory Store Size:',\n                        placeholder: t('admin.rate.memoryExample'),\n                        placeholder_default: 'E.g.: \"10000\"',\n                        help_text: t('admin.rate.memoryDescription'),\n                        help_text_default: 'Maximum number of users sessions connected to the system as determined by \"Vary rate limit by remote address\" and \"Vary rate limit by HTTP header\".',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByRemoteAddr',\n                        label: t('admin.rate.remoteTitle'),\n                        label_default: 'Vary rate limit by remote address:',\n                        help_text: t('admin.rate.remoteDescription'),\n                        help_text_default: 'When true, rate limit API access by IP address.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'RateLimitSettings.VaryByUser',\n                        label: t('admin.rate.varyByUser'),\n                        label_default: 'Vary rate limit by user:',\n                        help_text: t('admin.rate.varyByUserDescription'),\n                        help_text_default: 'When true, rate limit API access by user athentication token.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'RateLimitSettings.VaryByHeader',\n                        label: t('admin.rate.httpHeaderTitle'),\n                        label_default: 'Vary rate limit by HTTP header:',\n                        placeholder: t('admin.rate.httpHeaderExample'),\n                        placeholder_default: 'E.g.: \"X-Real-IP\", \"X-Forwarded-For\"',\n                        help_text: t('admin.rate.httpHeaderDescription'),\n                        help_text_default: 'When filled in, vary rate limiting by HTTP header field specified (e.g. when configuring NGINX set to \"X-Real-IP\", when configuring AmazonELB set to \"X-Forwarded-For\").',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateEquals('RateLimitSettings.Enable', false),\n                            it.stateEquals('RateLimitSettings.VaryByRemoteAddr', true),\n                        ),\n                    },\n                ],\n            },\n        },\n        logging: {\n            url: 'environment/logging',\n            title: t('admin.sidebar.logging'),\n            title_default: 'Logging',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'LogSettings',\n                name: t('admin.general.log'),\n                name_default: 'Logging',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableConsole',\n                        label: t('admin.log.consoleTitle'),\n                        label_default: 'Output logs to console: ',\n                        help_text: t('admin.log.consoleDescription'),\n                        help_text_default: 'Typically set to false in production. Developers may set this field to true to output log messages to console based on the console level option.  If true, server writes messages to the standard output stream (stdout). Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.ConsoleLevel',\n                        label: t('admin.log.levelTitle'),\n                        label_default: 'Console Log Level:',\n                        help_text: t('admin.log.levelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the console. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('LogSettings.EnableConsole'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.ConsoleJson',\n                        label: t('admin.log.consoleJsonTitle'),\n                        label_default: 'Output console logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('LogSettings.EnableConsole'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableFile',\n                        label: t('admin.log.fileTitle'),\n                        label_default: 'Output logs to file: ',\n                        help_text: t('admin.log.fileDescription'),\n                        help_text_default: 'Typically set to true in production. When true, logged events are written to the mattermost.log file in the directory specified in the File Log Directory field. The logs are rotated at 10,000 lines and archived to a file in the same directory, and given a name with a datestamp and serial number. For example, mattermost.2017-03-31.001. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LogSettings.FileLevel',\n                        label: t('admin.log.fileLevelTitle'),\n                        label_default: 'File Log Level:',\n                        help_text: t('admin.log.fileLevelDescription'),\n                        help_text_default: 'This setting determines the level of detail at which log events are written to the log file. ERROR: Outputs only error messages. INFO: Outputs error messages and information around startup and initialization. DEBUG: Prints high detail for developers working on debugging issues.',\n                        options: DefinitionConstants.LOG_LEVEL_OPTIONS,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('LogSettings.EnableFile'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.FileJson',\n                        label: t('admin.log.fileJsonTitle'),\n                        label_default: 'Output file logs as JSON:',\n                        help_text: t('admin.log.jsonDescription'),\n                        help_text_default: 'When true, logged events are written in a machine readable JSON format. Otherwise they are printed as plain text. Changing this setting requires a server restart before taking effect.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('LogSettings.EnableFile'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LogSettings.FileLocation',\n                        label: t('admin.log.locationTitle'),\n                        label_default: 'File Log Directory:',\n                        help_text: t('admin.log.locationDescription'),\n                        help_text_default: 'The location of the log files. If blank, they are stored in the ./logs directory. The path that you set must exist and Mattermost must have write permissions in it. Changing this setting requires a server restart before taking effect.',\n                        placeholder: t('admin.log.locationPlaceholder'),\n                        placeholder_default: 'Enter your file location',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('environment')),\n                            it.stateIsFalse('LogSettings.EnableFile'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableWebhookDebugging',\n                        label: t('admin.log.enableWebhookDebugging'),\n                        label_default: 'Enable Webhook Debugging:',\n                        help_text: t('admin.log.enableWebhookDebuggingDescription'),\n                        help_text_default: 'When true, sends webhook debug messages to the server logs. To also output the request body of incoming webhooks, set {boldedLogLevel} to \"DEBUG\".',\n                        help_text_values: {\n                            boldedLogLevel: (\n                                <strong>\n                                    <FormattedMessage\n                                        id='admin.log.logLevel'\n                                        defaultMessage='Log Level'\n                                    />\n                                </strong>\n                            ),\n                        },\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LogSettings.EnableDiagnostics',\n                        label: t('admin.log.enableDiagnostics'),\n                        label_default: 'Enable Diagnostics and Error Reporting:',\n                        help_text: t('admin.log.enableDiagnosticsDescription'),\n                        help_text_default: 'Enable this feature to improve the quality and performance of Mattermost by sending error reporting and diagnostic information to Mattermost, Inc. Read our [privacy policy](!https://about.mattermost.com/default-privacy-policy/) to learn more.',\n                        help_text_markdown: true,\n                        onConfigSave: (displayVal, previousVal) => {\n                            if (previousVal && previousVal !== displayVal) {\n                                trackEvent('ui', 'diagnostics_disabled');\n                            }\n                            return displayVal;\n                        },\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n        session_lengths: {\n            url: 'environment/session_lengths',\n            title: t('admin.sidebar.sessionLengths'),\n            title_default: 'Session Lengths',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            searchableStrings: [\n                'admin.sessionLengths.title',\n                'admin.service.webSessionDaysDesc.extendLength',\n                'admin.service.mobileSessionDaysDesc.extendLength',\n                'admin.service.ssoSessionDaysDesc.extendLength',\n                'admin.service.webSessionDaysDesc',\n                'admin.service.mobileSessionDaysDesc',\n                'admin.service.ssoSessionDaysDesc',\n                'admin.service.sessionIdleTimeout',\n                'admin.service.sessionIdleTimeoutDesc',\n                'admin.service.extendSessionLengthActivity.label',\n                'admin.service.extendSessionLengthActivity.helpText',\n                'admin.service.webSessionDays',\n                'admin.service.sessionDaysEx',\n                'admin.service.mobileSessionDays',\n                'admin.service.ssoSessionDays',\n                'admin.service.sessionCache',\n                'admin.service.sessionCacheDesc',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n            schema: {\n                id: 'SessionLengths',\n                component: SessionLengthSettings,\n            },\n        },\n        metrics: {\n            url: 'environment/performance_monitoring',\n            title: t('admin.sidebar.metrics'),\n            title_default: 'Performance Monitoring',\n            isHidden: it.any(\n                it.not(it.licensedForFeature('Metrics')),\n                it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            ),\n            schema: {\n                id: 'MetricsSettings',\n                name: t('admin.advance.metrics'),\n                name_default: 'Performance Monitoring',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'MetricsSettings.Enable',\n                        label: t('admin.metrics.enableTitle'),\n                        label_default: 'Enable Performance Monitoring:',\n                        help_text: t('admin.metrics.enableDescription'),\n                        help_text_default: 'When true, Mattermost will enable performance monitoring collection and profiling. Please see [documentation](!http://docs.mattermost.com/deployment/metrics.html) to learn more about configuring performance monitoring for Mattermost.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'MetricsSettings.ListenAddress',\n                        label: t('admin.metrics.listenAddressTitle'),\n                        label_default: 'Listen Address:',\n                        placeholder: t('admin.metrics.listenAddressEx'),\n                        placeholder_default: 'E.g.: \":8067\"',\n                        help_text: t('admin.metrics.listenAddressDesc'),\n                        help_text_default: 'The address the server will listen on to expose performance metrics.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n        developer: {\n            url: 'environment/developer',\n            title: t('admin.sidebar.developer'),\n            title_default: 'Developer',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.developer.title'),\n                name_default: 'Developer Settings',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTesting',\n                        label: t('admin.service.testingTitle'),\n                        label_default: 'Enable Testing Commands:',\n                        help_text: t('admin.service.testingDescription'),\n                        help_text_default: 'When true, /test slash command is enabled to load test accounts, data and text formatting. Changing this requires a server restart before taking effect.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableDeveloper',\n                        label: t('admin.service.developerTitle'),\n                        label_default: 'Enable Developer Mode: ',\n                        help_text: t('admin.service.developerDesc'),\n                        help_text_default: 'When true, JavaScript errors are shown in a purple bar at the top of the user interface. Not recommended for use in production.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowedUntrustedInternalConnections',\n                        label: t('admin.service.internalConnectionsTitle'),\n                        label_default: 'Allow untrusted internal connections to: ',\n                        placeholder: t('admin.service.internalConnectionsEx'),\n                        placeholder_default: 'webhooks.internal.example.com 127.0.0.1 10.0.16.0/28',\n                        help_text: t('admin.service.internalConnectionsDesc'),\n                        help_text_default: 'A whitelist of local network addresses that can be requested by the Mattermost server on behalf of a client. Care should be used when configuring this setting to prevent unintended access to your local network. See [documentation](!https://mattermost.com/pl/default-allow-untrusted-internal-connections) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('environment')),\n                    },\n                ],\n            },\n        },\n    },\n    site: {\n        icon: 'fa-cogs',\n        sectionTitle: t('admin.sidebar.site'),\n        sectionTitleDefault: 'Site Configuration',\n        isHidden: it.not(it.userHasReadPermissionOnResource('site')),\n        customization: {\n            url: 'site_config/customization',\n            title: t('admin.sidebar.customization'),\n            title_default: 'Customization',\n            schema: {\n                id: 'Customization',\n                name: t('admin.site.customization'),\n                name_default: 'Customization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.SiteName',\n                        label: t('admin.team.siteNameTitle'),\n                        label_default: 'Site Name:',\n                        help_text: t('admin.team.siteNameDescription'),\n                        help_text_default: 'Name of service shown in login screens and UI. When not specified, it defaults to \"Mattermost\".',\n                        placeholder: t('admin.team.siteNameExample'),\n                        placeholder_default: 'E.g.: \"Mattermost\"',\n                        max_length: Constants.MAX_SITENAME_LENGTH,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.CustomDescriptionText',\n                        label: t('admin.team.brandDescriptionTitle'),\n                        label_default: 'Site Description: ',\n                        help_text: t('admin.team.brandDescriptionHelp'),\n                        help_text_default: 'Description of service shown in login screens and UI. When not specified, \"All team communication in one place, searchable and accessible anywhere\" is displayed.',\n                        placeholder: t('web.root.signup_info'),\n                        placeholder_default: 'All team communication in one place, searchable and accessible anywhere',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableCustomBrand',\n                        label: t('admin.team.brandTitle'),\n                        label_default: 'Enable Custom Branding: ',\n                        help_text: t('admin.team.brandDesc'),\n                        help_text_default: 'Enable custom branding to show an image of your choice, uploaded below, and some help text, written below, on the login page.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: BrandImageSetting,\n                        key: 'CustomBrandImage',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LONG_TEXT,\n                        key: 'TeamSettings.CustomBrandText',\n                        label: t('admin.team.brandTextTitle'),\n                        label_default: 'Custom Brand Text:',\n                        help_text: t('admin.team.brandTextDescription'),\n                        help_text_default: 'Text that will appear below your custom brand image on your login screen. Supports Markdown-formatted text. Maximum 500 characters allowed.',\n                        max_length: Constants.MAX_CUSTOM_BRAND_TEXT_LENGTH,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('TeamSettings.EnableCustomBrand'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SupportSettings.EnableAskCommunityLink',\n                        label: t('admin.support.enableAskCommunityTitle'),\n                        label_default: 'Enable Ask Community Link:',\n                        help_text: t('admin.support.enableAskCommunityDesc'),\n                        help_text_default: 'When true, \"Ask the community\" link appears on the Mattermost user interface and Main Menu, which allows users to join the Mattermost Community to ask questions and help others troubleshoot issues. When false, the link is hidden from users.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.HelpLink',\n                        label: t('admin.support.helpTitle'),\n                        label_default: 'Help Link:',\n                        help_text: t('admin.support.helpDesc'),\n                        help_text_default: 'The URL for the Help link on the Mattermost login page, sign-up pages, and Main Menu. If this field is empty, the Help link is hidden from users.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.SupportEmail',\n                        label: t('admin.support.emailTitle'),\n                        label_default: 'Support Email:',\n                        help_text: t('admin.support.emailHelp'),\n                        help_text_default: 'Email address displayed on email notifications and during tutorial for end users to ask support questions.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.TermsOfServiceLink',\n                        label: t('admin.support.termsTitle'),\n                        label_default: 'Terms of Service Link:',\n                        help_text: t('admin.support.termsDesc'),\n                        help_text_default: 'Link to the terms under which users may use your online service. By default, this includes the \"Mattermost Conditions of Use (End Users)\" explaining the terms under which Mattermost software is provided to end users. If you change the default link to add your own terms for using the service you provide, your new terms must include a link to the default terms so end users are aware of the Mattermost Conditions of Use (End User) for Mattermost software.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.PrivacyPolicyLink',\n                        label: t('admin.support.privacyTitle'),\n                        label_default: 'Privacy Policy Link:',\n                        help_text: t('admin.support.privacyDesc'),\n                        help_text_default: 'The URL for the Privacy link on the login and sign-up pages. If this field is empty, the Privacy link is hidden from users.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.AboutLink',\n                        label: t('admin.support.aboutTitle'),\n                        label_default: 'About Link:',\n                        help_text: t('admin.support.aboutDesc'),\n                        help_text_default: 'The URL for the About link on the Mattermost login and sign-up pages. If this field is empty, the About link is hidden from users.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SupportSettings.ReportAProblemLink',\n                        label: t('admin.support.problemTitle'),\n                        label_default: 'Report a Problem Link:',\n                        help_text: t('admin.support.problemDesc'),\n                        help_text_default: 'The URL for the Report a Problem link in the Main Menu. If this field is empty, the link is removed from the Main Menu.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AppDownloadLink',\n                        label: t('admin.customization.appDownloadLinkTitle'),\n                        label_default: 'Mattermost Apps Download Page Link:',\n                        help_text: t('admin.customization.appDownloadLinkDesc'),\n                        help_text_default: 'Add a link to a download page for the Mattermost apps. When a link is present, an option to \"Download Mattermost Apps\" will be added in the Main Menu so users can find the download page. Leave this field blank to hide the option from the Main Menu.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.AndroidAppDownloadLink',\n                        label: t('admin.customization.androidAppDownloadLinkTitle'),\n                        label_default: 'Android App Download Link:',\n                        help_text: t('admin.customization.androidAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the Android app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'NativeAppSettings.IosAppDownloadLink',\n                        label: t('admin.customization.iosAppDownloadLinkTitle'),\n                        label_default: 'iOS App Download Link:',\n                        help_text: t('admin.customization.iosAppDownloadLinkDesc'),\n                        help_text_default: 'Add a link to download the iOS app. Users who access the site on a mobile web browser will be prompted with a page giving them the option to download the app. Leave this field blank to prevent the page from appearing.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                    },\n                ],\n            },\n        },\n        localization: {\n            url: 'site_config/localization',\n            title: t('admin.sidebar.localization'),\n            title_default: 'Localization',\n            schema: {\n                id: 'LocalizationSettings',\n                name: t('admin.site.localization'),\n                name_default: 'Localization',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultServerLocale',\n                        label: t('admin.general.localization.serverLocaleTitle'),\n                        label_default: 'Default Server Language:',\n                        help_text: t('admin.general.localization.serverLocaleDescription'),\n                        help_text_default: 'Default language for system messages. Changing this will require a server restart before taking effect.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.DefaultClientLocale',\n                        label: t('admin.general.localization.clientLocaleTitle'),\n                        label_default: 'Default Client Language:',\n                        help_text: t('admin.general.localization.clientLocaleDescription'),\n                        help_text_default: 'Default language for newly created users and pages where the user hasn\\'t logged in.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_LANGUAGE,\n                        key: 'LocalizationSettings.AvailableLocales',\n                        label: t('admin.general.localization.availableLocalesTitle'),\n                        label_default: 'Available Languages:',\n                        help_text: t('admin.general.localization.availableLocalesDescription'),\n                        help_text_markdown: true,\n                        help_text_default: 'Set which languages are available for users in Account Settings (leave this field blank to have all supported languages available). If you\\'re manually adding new languages, the **Default Client Language** must be added before saving this setting.\\n \\nWould like to help with translations? Join the [Mattermost Translation Server](!http://translate.mattermost.com/) to contribute.',\n                        multiple: true,\n                        no_result: t('admin.general.localization.availableLocalesNoResults'),\n                        no_result_default: 'No results found',\n                        not_present: t('admin.general.localization.availableLocalesNotPresent'),\n                        not_present_default: 'The default client language must be included in the available list',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        users_and_teams: {\n            url: 'site_config/users_and_teams',\n            title: t('admin.sidebar.usersAndTeams'),\n            title_default: 'Users and Teams',\n            schema: {\n                id: 'UserAndTeamsSettings',\n                name: t('admin.site.usersAndTeams'),\n                name_default: 'Users and Teams',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EnableTeamCreation',\n                        label: t('admin.team.teamCreationTitle'),\n                        label_default: 'Enable Team Creation: ',\n                        help_text: t('admin.team.teamCreationDescription'),\n                        help_text_default: 'When false, only System Administrators can create teams.',\n                        permissions_mapping_name: 'enableTeamCreation',\n                        isHidden: it.licensed,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxUsersPerTeam',\n                        label: t('admin.team.maxUsersTitle'),\n                        label_default: 'Max Users Per Team:',\n                        help_text: t('admin.team.maxUsersDescription'),\n                        help_text_default: 'Maximum total number of users per team, including both active and inactive users.',\n                        placeholder: t('admin.team.maxUsersExample'),\n                        placeholder_default: 'E.g.: \"25\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.MaxChannelsPerTeam',\n                        label: t('admin.team.maxChannelsTitle'),\n                        label_default: 'Max Channels Per Team:',\n                        help_text: t('admin.team.maxChannelsDescription'),\n                        help_text_default: 'Maximum total number of channels per team, including both active and archived channels.',\n                        placeholder: t('admin.team.maxChannelsExample'),\n                        placeholder_default: 'E.g.: \"100\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.RestrictDirectMessage',\n                        label: t('admin.team.restrictDirectMessage'),\n                        label_default: 'Enable users to open Direct Message channels with:',\n                        help_text: t('admin.team.restrictDirectMessageDesc'),\n                        help_text_default: '\"Any user on the Mattermost server\" enables users to open a Direct Message channel with any user on the server, even if they are not on any teams together. \"Any member of the team\" limits the ability in the Direct Messages \"More\" menu to only open Direct Message channels with users who are in the same team.\\n \\nNote: This setting only affects the UI, not permissions on the server.',\n                        options: [\n                            {\n                                value: 'any',\n                                display_name: t('admin.team.restrict_direct_message_any'),\n                                display_name_default: 'Any user on the Mattermost server',\n                            },\n                            {\n                                value: 'team',\n                                display_name: t('admin.team.restrict_direct_message_team'),\n                                display_name_default: 'Any member of the team',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'TeamSettings.TeammateNameDisplay',\n                        label: t('admin.team.teammateNameDisplay'),\n                        label_default: 'Teammate Name Display:',\n                        help_text: t('admin.team.teammateNameDisplayDesc'),\n                        help_text_default: 'Set how to display users\\' names in posts and the Direct Messages list.',\n                        options: [\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_USERNAME,\n                                display_name: t('admin.team.showUsername'),\n                                display_name_default: 'Show username (default)',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_NICKNAME_FULLNAME,\n                                display_name: t('admin.team.showNickname'),\n                                display_name_default: 'Show nickname if one exists, otherwise show first and last name',\n                            },\n                            {\n                                value: Constants.TEAMMATE_NAME_DISPLAY.SHOW_FULLNAME,\n                                display_name: t('admin.team.showFullname'),\n                                display_name_default: 'Show first and last name',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.LockTeammateNameDisplay',\n                        label: t('admin.lockTeammateNameDisplay'),\n                        label_default: 'Lock Teammate Name Display for all users: ',\n                        help_text: t('admin.lockTeammateNameDisplayHelpText'),\n                        help_text_default: 'When true, disables users\\' ability to change settings under Main Menu > Account Settings > Display > Teammate Name Display.',\n                        isHidden: it.not(it.licensedForFeature('LockTeammateNameDisplay')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'TeamSettings.EditOthersPosts',\n                        label: t('admin.team.editOthersPostsTitle'),\n                        label_default: 'Allow Team Administrators to edit others posts:',\n                        help_text: t('admin.team.editOthersPostsDesc'),\n                        help_text_default: 'When true, Team Administrators and System Administrators can edit other user\\'s posts.  When false, only System Administrators can edit other user\\'s posts.',\n                        permissions_mapping_name: 'editOthersPosts',\n                        isHidden: it.any(\n                            it.licensed,\n                            it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                        ),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalViewArchivedChannels',\n                        label: t('admin.viewArchivedChannelsTitle'),\n                        label_default: 'Allow users to view archived channels: ',\n                        help_text: t('admin.viewArchivedChannelsHelpText'),\n                        help_text_default: '(Beta) When true, allows users to view, share and search for content of channels that have been archived. Users can only view the content in channels of which they were a member before the channel was archived.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowEmailAddress',\n                        label: t('admin.privacy.showEmailTitle'),\n                        label_default: 'Show Email Address:',\n                        help_text: t('admin.privacy.showEmailDescription'),\n                        help_text_default: 'When false, hides the email address of members from everyone except System Administrators.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'PrivacySettings.ShowFullName',\n                        label: t('admin.privacy.showFullNameTitle'),\n                        label_default: 'Show Full Name:',\n                        help_text: t('admin.privacy.showFullNameDescription'),\n                        help_text_default: 'When false, hides the full name of members from everyone except System Administrators. Username is shown in place of full name.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        notifications: {\n            url: 'environment/notifications',\n            title: t('admin.sidebar.notifications'),\n            title_default: 'Notifications',\n            schema: {\n                id: 'notifications',\n                name: t('admin.environment.notifications'),\n                name_default: 'Notifications',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableConfirmNotificationsToChannel',\n                        label: t('admin.environment.notifications.enableConfirmNotificationsToChannel.label'),\n                        label_default: 'Show @channel and @all and group mention confirmation dialog:',\n                        help_text: t('admin.environment.notifications.enableConfirmNotificationsToChannel.help'),\n                        help_text_default: 'When true, users will be prompted to confirm when posting @channel, @all and group mentions in channels with over five members. When false, no confirmation is required.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.SendEmailNotifications',\n                        label: t('admin.environment.notifications.enable.label'),\n                        label_default: 'Enable Email Notifications:',\n                        help_text: t('admin.environment.notifications.enable.help'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost attempts to send email notifications. When false, email invitations and user account setting change emails are still sent as long as the SMTP server is configured. Developers may set this field to false to skip email setup for faster development.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnablePreviewModeBanner',\n                        label: t('admin.environment.notifications.enablePreviewModeBanner.label'),\n                        label_default: 'Enable Preview Mode Banner:',\n                        help_text: t('admin.environment.notifications.enablePreviewModeBanner.help'),\n                        help_text_default: 'When true, the Preview Mode banner is displayed so users are aware that email notifications are disabled. When false, the Preview Mode banner is not displayed to users.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsTrue('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableEmailBatching',\n                        label: t('admin.environment.notifications.enableEmailBatching.label'),\n                        label_default: 'Enable Email Batching:',\n                        help_text: t('admin.environment.notifications.enableEmailBatching.help'),\n                        help_text_default: 'When true, users will have email notifications for multiple direct messages and mentions combined into a single email. Batching will occur at a default interval of 15 minutes, configurable in Account Settings > Notifications.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                            it.configIsTrue('ClusterSettings', 'Enable'),\n                            it.configIsFalse('ServiceSettings', 'SiteURL'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.EmailNotificationContentsType',\n                        label: t('admin.environment.notifications.contents.label'),\n                        label_default: 'Email Notification Contents:',\n                        help_text: t('admin.environment.notifications.contents.help'),\n                        help_text_default: '**Send full message contents** - Sender name and channel are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.\\n  **Send generic description with only sender name** - Only the name of the person who sent the message, with no information about channel name or message contents are included in email notifications. Typically used for compliance reasons if Mattermost contains confidential information and policy dictates it cannot be stored in email.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.contents.full'),\n                                display_name_default: 'Send full message contents',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.contents.generic'),\n                                display_name_default: 'Send generic description with only sender name',\n                            },\n                        ],\n                        isHidden: it.not(it.licensedForFeature('EmailNotificationContents')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackName',\n                        label: t('admin.environment.notifications.notificationDisplay.label'),\n                        label_default: 'Notification Display Name:',\n                        placeholder: t('admin.environment.notifications.notificationDisplay.placeholder'),\n                        placeholder_default: 'Ex: \"Mattermost Notification\", \"System\", \"No-Reply\"',\n                        help_text: t('admin.environment.notifications.notificationDisplay.help'),\n                        help_text_default: 'Display name on email account used when sending notification emails from Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackEmail',\n                        label: t('admin.environment.notifications.feedbackEmail.label'),\n                        label_default: 'Notification From Address:',\n                        placeholder: t('admin.environment.notifications.feedbackEmail.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.feedbackEmail.help'),\n                        help_text_default: 'Email address displayed on email account used when sending notification emails from Mattermost.',\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.ReplyToAddress',\n                        label: t('admin.environment.notifications.replyToAddress.label'),\n                        label_default: 'Notification Reply-To Address:',\n                        placeholder: t('admin.environment.notifications.replyToAddress.placeholder'),\n                        placeholder_default: 'Ex: \"mattermost@yourcompany.com\", \"admin@yourcompany.com\"',\n                        help_text: t('admin.environment.notifications.replyToAddress.help'),\n                        help_text_default: 'Email address used in the Reply-To header when sending notification emails from Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'EmailSettings.FeedbackOrganization',\n                        label: t('admin.environment.notifications.feedbackOrganization.label'),\n                        label_default: 'Notification Footer Mailing Address:',\n                        placeholder: t('admin.environment.notifications.feedbackOrganization.placeholder'),\n                        placeholder_default: 'Ex: \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\"',\n                        help_text: t('admin.environment.notifications.feedbackOrganization.help'),\n                        help_text_default: 'Organization name and address displayed on email notifications from Mattermost, such as \"© ABC Corporation, 565 Knight Way, Palo Alto, California, 94305, USA\". If the field is left empty, the organization name and address will not be displayed.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('EmailSettings.SendEmailNotifications'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            },\n                        ],\n                        isHidden: it.licensedForFeature('IDLoadedPushNotifications'),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'EmailSettings.PushNotificationContents',\n                        label: t('admin.environment.notifications.pushContents.label'),\n                        label_default: 'Push Notification Contents:',\n                        help_text: t('admin.environment.notifications.pushContents.withIdLoaded.help'),\n                        help_text_default: '**Generic description with only sender name** - Includes only the name of the person who sent the message in push notifications, with no information about channel name or message contents.\\n **Generic description with sender and channel names** - Includes the name of the person who sent the message and the channel it was sent in, but not the message contents.\\n **Full message content sent in the notification payload** - Includes the message contents in the push notification payload that is relayed through Apple\\'s Push Notification Service (APNS) or Google\\'s Firebase Cloud Messaging (FCM). It is **highly recommended** this option only be used with an \"https\" protocol to encrypt the connection and protect confidential information sent in messages.\\n **Full message content fetched from the server on receipt** - The notification payload relayed through APNS or FCM contains no message content, instead it contains a unique message ID used to fetch message content from the server when a push notification is received by a device. If the server cannot be reached, a generic notification will be displayed.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'generic_no_channel',\n                                display_name: t('admin.environment.notifications.pushContents.genericNoChannel'),\n                                display_name_default: 'Generic description with only sender name',\n                            },\n                            {\n                                value: 'generic',\n                                display_name: t('admin.environment.notifications.pushContents.generic'),\n                                display_name_default: 'Generic description with sender and channel names',\n                            },\n                            {\n                                value: 'full',\n                                display_name: t('admin.environment.notifications.pushContents.full'),\n                                display_name_default: 'Full message content sent in the notification payload',\n                            },\n                            {\n                                value: 'id_loaded',\n                                display_name: t('admin.environment.notifications.pushContents.idLoaded'),\n                                display_name_default: 'Full message content fetched from the server on receipt',\n                            },\n                        ],\n                        isHidden: it.not(it.licensedForFeature('IDLoadedPushNotifications')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        announcement_banner: {\n            url: 'site_config/announcement_banner',\n            title: t('admin.sidebar.announcement'),\n            title_default: 'Announcement Banner',\n            isHidden: it.not(it.licensed),\n            schema: {\n                id: 'AnnouncementSettings',\n                name: t('admin.site.announcementBanner'),\n                name_default: 'Announcement Banner',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.EnableBanner',\n                        label: t('admin.customization.announcement.enableBannerTitle'),\n                        label_default: 'Enable Announcement Banner:',\n                        help_text: t('admin.customization.announcement.enableBannerDesc'),\n                        help_text_default: 'Enable an announcement banner across all teams.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'AnnouncementSettings.BannerText',\n                        label: t('admin.customization.announcement.bannerTextTitle'),\n                        label_default: 'Banner Text:',\n                        help_text: t('admin.customization.announcement.bannerTextDesc'),\n                        help_text_default: 'Text that will appear in the announcement banner.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerColor',\n                        label: t('admin.customization.announcement.bannerColorTitle'),\n                        label_default: 'Banner Color:',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'AnnouncementSettings.BannerTextColor',\n                        label: t('admin.customization.announcement.bannerTextColorTitle'),\n                        label_default: 'Banner Text Color:',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.AllowBannerDismissal',\n                        label: t('admin.customization.announcement.allowBannerDismissalTitle'),\n                        label_default: 'Allow Banner Dismissal:',\n                        help_text: t('admin.customization.announcement.allowBannerDismissalDesc'),\n                        help_text_default: 'When true, users can dismiss the banner until its next update. When false, the banner is permanently visible until it is turned off by the System Admin.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('site')),\n                            it.stateIsFalse('AnnouncementSettings.EnableBanner'),\n                        ),\n                    },\n                ],\n            },\n        },\n        emoji: {\n            url: 'site_config/emoji',\n            title: t('admin.sidebar.emoji'),\n            title_default: 'Emoji',\n            schema: {\n                id: 'EmojiSettings',\n                name: t('admin.site.emoji'),\n                name_default: 'Emoji',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmojiPicker',\n                        label: t('admin.customization.enableEmojiPickerTitle'),\n                        label_default: 'Enable Emoji Picker:',\n                        help_text: t('admin.customization.enableEmojiPickerDesc'),\n                        help_text_default: 'The emoji picker allows users to select emoji to add as reactions or use in messages. Enabling the emoji picker with a large number of custom emoji may slow down performance.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCustomEmoji',\n                        label: t('admin.customization.enableCustomEmojiTitle'),\n                        label_default: 'Enable Custom Emoji:',\n                        help_text: t('admin.customization.enableCustomEmojiDesc'),\n                        help_text_default: 'Enable users to create custom emoji for use in messages. When enabled, Custom Emoji settings can be accessed by switching to a team and clicking the three dots above the channel sidebar, and selecting \"Custom Emoji\".',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        posts: {\n            url: 'site_config/posts',\n            title: t('admin.sidebar.posts'),\n            title_default: 'Posts',\n            schema: {\n                id: 'PostSettings',\n                name: t('admin.site.posts'),\n                name_default: 'Posts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLinkPreviews',\n                        label: t('admin.customization.enableLinkPreviewsTitle'),\n                        label_default: 'Enable Link Previews:',\n                        help_text: t('admin.customization.enableLinkPreviewsDesc'),\n                        help_text_default: 'Display a preview of website content, image links and YouTube links below the message when available. The server must be connected to the internet and have access through the firewall (if applicable) to the websites from which previews are expected. Users can disable these previews from Account Settings > Display > Website Link Previews.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableSVGs',\n                        label: t('admin.customization.enableSVGsTitle'),\n                        label_default: 'Enable SVGs:',\n                        help_text: t('admin.customization.enableSVGsDesc'),\n                        help_text_default: 'Enable previews for SVG file attachments and allow them to appear in messages.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableLatex',\n                        label: t('admin.customization.enableLatexTitle'),\n                        label_default: 'Enable Latex Rendering:',\n                        help_text: t('admin.customization.enableLatexDesc'),\n                        help_text_default: 'Enable rendering of Latex code. If false, Latex code will be highlighted only.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomUrlSchemesSetting,\n                        key: 'DisplaySettings.CustomUrlSchemes',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GoogleDeveloperKey',\n                        label: t('admin.service.googleTitle'),\n                        label_default: 'Google API Key:',\n                        placeholder: t('admin.service.googleExample'),\n                        placeholder_default: 'E.g.: \"7rAh6iwQCkV4cA1Gsg3fgGOXJAQ43QV\"',\n                        help_text: t('admin.service.googleDescription'),\n                        help_text_default: 'Set this key to enable the display of titles for embedded YouTube video previews. Without the key, YouTube previews will still be created based on hyperlinks appearing in messages or comments but they will not show the video title. View a [Google Developers Tutorial](!https://www.youtube.com/watch?v=Im69kzhpR3I) for instructions on how to obtain a key and add YouTube Data API v3 as a service to your key.',\n                        help_text_markdown: true,\n                        isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        file_sharing_downloads: {\n            url: 'site_config/file_sharing_downloads',\n            title: t('admin.sidebar.fileSharingDownloads'),\n            title_default: 'File Sharing and Downloads',\n            schema: {\n                id: 'FileSharingDownloads',\n                name: t('admin.site.fileSharingDownloads'),\n                name_default: 'File Sharing and Downloads',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableFileAttachments',\n                        label: t('admin.file.enableFileAttachments'),\n                        label_default: 'Allow File Sharing:',\n                        help_text: t('admin.file.enableFileAttachmentsDesc'),\n                        help_text_default: 'When false, disables file sharing on the server. All file and image uploads on messages are forbidden across clients and devices, including mobile.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileUpload',\n                        label: t('admin.file.enableMobileUploadTitle'),\n                        label_default: 'Allow File Uploads on Mobile:',\n                        help_text: t('admin.file.enableMobileUploadDesc'),\n                        help_text_default: 'When false, disables file uploads on mobile apps. If Allow File Sharing is set to true, users can still upload files from a mobile web browser.',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnableMobileDownload',\n                        label: t('admin.file.enableMobileDownloadTitle'),\n                        label_default: 'Allow File Downloads on Mobile:',\n                        help_text: t('admin.file.enableMobileDownloadDesc'),\n                        help_text_default: 'When false, disables file downloads on mobile apps. Users can still download files from a mobile web browser.',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        public_links: {\n            url: 'site_config/public_links',\n            title: t('admin.sidebar.publicLinks'),\n            title_default: 'Public Links',\n            schema: {\n                id: 'PublicLinkSettings',\n                name: t('admin.site.public_links'),\n                name_default: 'Public Links',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'FileSettings.EnablePublicLink',\n                        label: t('admin.image.shareTitle'),\n                        label_default: 'Enable Public File Links: ',\n                        help_text: t('admin.image.shareDescription'),\n                        help_text_default: 'Allow users to share public links to files and images.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_GENERATED,\n                        key: 'FileSettings.PublicLinkSalt',\n                        label: t('admin.image.publicLinkTitle'),\n                        label_default: 'Public Link Salt:',\n                        help_text: t('admin.image.publicLinkDescription'),\n                        help_text_default: '32-character salt added to signing of public image links. Randomly generated on install. Click \"Regenerate\" to create new salt.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n        notices: {\n            url: 'site_config/notices',\n            title: t('admin.sidebar.notices'),\n            title_default: 'Notices',\n            schema: {\n                id: 'NoticesSettings',\n                name: t('admin.site.notices'),\n                name_default: 'Notices',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.AdminNoticesEnabled',\n                        label: t('admin.notices.enableAdminNoticesTitle'),\n                        label_default: 'Enable Admin Notices: ',\n                        help_text: t('admin.notices.enableAdminNoticesDescription'),\n                        help_text_default: 'When enabled, System Admins will receive notices about available server upgrades and relevant system administration features. [Learn more about notices](!https://about.mattermost.com/default-notices) in our documentation.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'AnnouncementSettings.UserNoticesEnabled',\n                        label: t('admin.notices.enableEndUserNoticesTitle'),\n                        label_default: 'Enable End User Notices: ',\n                        help_text: t('admin.notices.enableEndUserNoticesDescription'),\n                        help_text_default: 'When enabled, all users will receive notices about available client upgrades and relevant end user features to improve user experience. [Learn more about notices](!https://about.mattermost.com/default-notices) in our documentation.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('site')),\n                    },\n                ],\n            },\n        },\n    },\n    authentication: {\n        icon: 'fa-shield',\n        sectionTitle: t('admin.sidebar.authentication'),\n        sectionTitleDefault: 'Authentication',\n        isHidden: it.not(it.userHasReadPermissionOnResource('authentication')),\n        signup: {\n            url: 'authentication/signup',\n            title: t('admin.sidebar.signup'),\n            title_default: 'Signup',\n            schema: {\n                id: 'SignupSettings',\n                name: t('admin.authentication.signup'),\n                name_default: 'Signup',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserCreation',\n                        label: t('admin.team.userCreationTitle'),\n                        label_default: 'Enable Account Creation: ',\n                        help_text: t('admin.team.userCreationDescription'),\n                        help_text_default: 'When false, the ability to create accounts is disabled. The create account button displays error when pressed.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict new system and team members to specified email domains:',\n                        help_text: t('admin.team.restrictDescription'),\n                        help_text_default: 'New user accounts are restricted to the above specified email domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). New teams can only be created by users from the above domain(s). This setting only affects email login for users.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.licensed,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.RestrictCreationToDomains',\n                        label: t('admin.team.restrictTitle'),\n                        label_default: 'Restrict new system and team members to specified email domains:',\n                        help_text: t('admin.team.restrictGuestDescription'),\n                        help_text_default: 'New user accounts are restricted to the above specified email domain (e.g. \"mattermost.org\") or list of comma-separated domains (e.g. \"corp.mattermost.com, mattermost.org\"). New teams can only be created by users from the above domain(s). This setting affects email login for users. For Guest users, please add domains under Signup > Guest Access.',\n                        placeholder: t('admin.team.restrictExample'),\n                        placeholder_default: 'E.g.: \"corp.mattermost.com, mattermost.org\"',\n                        isHidden: it.not(it.licensed),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableOpenServer',\n                        label: t('admin.team.openServerTitle'),\n                        label_default: 'Enable Open Server: ',\n                        help_text: t('admin.team.openServerDescription'),\n                        help_text_default: 'When true, anyone can signup for a user account on this server without the need to be invited.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableEmailInvitations',\n                        label: t('admin.team.emailInvitationsTitle'),\n                        label_default: 'Enable Email Invitations: ',\n                        help_text: t('admin.team.emailInvitationsDescription'),\n                        help_text_default: 'When true users can invite others to the system using email.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'InvalidateEmailInvitesButton',\n                        action: invalidateAllEmailInvites,\n                        label: t('admin.team.invalidateEmailInvitesTitle'),\n                        label_default: 'Invalidate pending email invites',\n                        help_text: t('admin.team.invalidateEmailInvitesDescription'),\n                        help_text_default: 'This will invalidate active email invitations that have not been accepted by the user.  By default email invitations expire after 48 hours.',\n                        error_message: t('admin.team.invalidateEmailInvitesFail'),\n                        error_message_default: 'Unable to invalidate pending email invites: {error}',\n                        success_message: t('admin.team.invalidateEmailInvitesSuccess'),\n                        success_message_default: 'Pending email invitations invalidated successfully',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                ],\n            },\n        },\n        email: {\n            url: 'authentication/email',\n            title: t('admin.sidebar.email'),\n            title_default: 'Email',\n            schema: {\n                id: 'EmailSettings',\n                name: t('admin.authentication.email'),\n                name_default: 'Email',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignUpWithEmail',\n                        label: t('admin.email.allowSignupTitle'),\n                        label_default: 'Enable account creation with email:',\n                        help_text: t('admin.email.allowSignupDescription'),\n                        help_text_default: 'When true, Mattermost allows account creation using email and password. This value should be false only when you want to limit sign up to a single sign-on service like AD/LDAP, SAML or GitLab.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.RequireEmailVerification',\n                        label: t('admin.email.requireVerificationTitle'),\n                        label_default: 'Require Email Verification: ',\n                        help_text: t('admin.email.requireVerificationDescription'),\n                        help_text_default: 'Typically set to true in production. When true, Mattermost requires email verification after account creation prior to allowing login. Developers may set this field to false to skip sending verification emails for faster development.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithEmail',\n                        label: t('admin.email.allowEmailSignInTitle'),\n                        label_default: 'Enable sign-in with email:',\n                        help_text: t('admin.email.allowEmailSignInDescription'),\n                        help_text_default: 'When true, Mattermost allows users to sign in using their email and password.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.EnableSignInWithUsername',\n                        label: t('admin.email.allowUsernameSignInTitle'),\n                        label_default: 'Enable sign-in with username:',\n                        help_text: t('admin.email.allowUsernameSignInDescription'),\n                        help_text_default: 'When true, users with email login can sign in using their username and password. This setting does not affect AD/LDAP login.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                ],\n            },\n        },\n        password: {\n            url: 'authentication/password',\n            title: t('admin.sidebar.password'),\n            title_default: 'Password',\n            searchableStrings: [\n                'user.settings.security.passwordMinLength',\n                'admin.security.password',\n                ['admin.password.minimumLength', {max: '', min: ''}],\n                ['admin.password.minimumLengthDescription', {max: '', min: ''}],\n                'passwordRequirements',\n                'admin.password.lowercase',\n                'admin.password.uppercase',\n                'admin.password.number',\n                'admin.password.symbol',\n                'admin.password.preview',\n                'admin.service.attemptTitle',\n                'admin.service.attemptDescription',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n            schema: {\n                id: 'PasswordSettings',\n                component: PasswordSettings,\n            },\n        },\n        mfa: {\n            url: 'authentication/mfa',\n            title: t('admin.sidebar.mfa'),\n            title_default: 'MFA',\n            schema: {\n                id: 'ServiceSettings',\n                name: t('admin.authentication.mfa'),\n                name_default: 'Multi-factor Authentication',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.mfa.bannerDesc'),\n                        label_default: '[Multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is available for accounts with AD/LDAP or email login. If other login methods are used, MFA should be configured with the authentication provider.',\n                        label_markdown: true,\n                        banner_type: 'info',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableMultifactorAuthentication',\n                        label: t('admin.service.mfaTitle'),\n                        label_default: 'Enable Multi-factor Authentication:',\n                        help_text: t('admin.service.mfaDesc'),\n                        help_text_default: 'When true, users with AD/LDAP or email login can add multi-factor authentication to their account using Google Authenticator.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.service.enforceMfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication:',\n                        help_text: t('admin.service.enforceMfaDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) is required for login. New users will be required to configure MFA on signup. Logged in users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        isHidden: it.not(it.licensedForFeature('MFA')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('ServiceSettings.EnableMultifactorAuthentication'),\n                        ),\n                    },\n                ],\n            },\n        },\n        ldap: {\n            url: 'authentication/ldap',\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: it.not(it.licensedForFeature('LDAP')),\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.Enable',\n                        label: t('admin.ldap.enableTitle'),\n                        label_default: 'Enable sign-in with AD/LDAP:',\n                        help_text: t('admin.ldap.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows login using AD/LDAP',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableSync',\n                        label: t('admin.ldap.enableSyncTitle'),\n                        label_default: 'Enable Synchronization with AD/LDAP:',\n                        help_text: t('admin.ldap.enableSyncDesc'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes users from AD/LDAP. When false, user attributes are updated from AD/LDAP during user login only.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LdapServer',\n                        label: t('admin.ldap.serverTitle'),\n                        label_default: 'AD/LDAP Server:',\n                        help_text: t('admin.ldap.serverDesc'),\n                        help_text_default: 'The domain or IP address of AD/LDAP server.',\n                        placeholder: t('admin.ldap.serverEx'),\n                        placeholder_default: 'E.g.: \"10.0.0.23\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.LdapPort',\n                        label: t('admin.ldap.portTitle'),\n                        label_default: 'AD/LDAP Port:',\n                        help_text: t('admin.ldap.portDesc'),\n                        help_text_default: 'The port Mattermost will use to connect to the AD/LDAP server. Default is 389.',\n                        placeholder: t('admin.ldap.portEx'),\n                        placeholder_default: 'E.g.: \"389\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'LdapSettings.ConnectionSecurity',\n                        label: t('admin.connectionSecurityTitle'),\n                        label_default: 'Connection Security:',\n                        help_text: DefinitionConstants.CONNECTION_SECURITY_HELP_TEXT_LDAP,\n                        options: [\n                            {\n                                value: '',\n                                display_name: t('admin.connectionSecurityNone'),\n                                display_name_default: 'None',\n                            },\n                            {\n                                value: 'TLS',\n                                display_name: t('admin.connectionSecurityTls'),\n                                display_name_default: 'TLS (Recommended)',\n                            },\n                            {\n                                value: 'STARTTLS',\n                                display_name: t('admin.connectionSecurityStart'),\n                                display_name_default: 'STARTTLS',\n                            },\n                        ],\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'LdapSettings.PrivateKeyFile',\n                        label: t('admin.ldap.privateKeyFileTitle'),\n                        label_default: 'Private Key:',\n                        help_text: t('admin.ldap.privateKeyFileFileDesc'),\n                        help_text_default: 'The private key file for TLS Certificate. If using TLS client certificates as primary authentication mechanism. This will be provided by your LDAP Authentication Provider.',\n                        remove_help_text: t('admin.ldap.privateKeyFileFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the private key file for TLS Certificate.',\n                        remove_button_text: t('admin.ldap.remove.privKey'),\n                        remove_button_text_default: 'Remove TLS Certificate Private Key',\n                        removing_text: t('admin.ldap.removing.privKey'),\n                        removing_text_default: 'Removing Private Key...',\n                        uploading_text: t('admin.ldap.uploading.privateKey'),\n                        uploading_text_default: 'Uploading Private Key...',\n                        isDisabled: it.all(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                        fileType: '.key',\n                        upload_action: uploadPrivateLdapCertificate,\n                        remove_action: removePrivateLdapCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'LdapSettings.PublicCertificateFile',\n                        label: t('admin.ldap.publicCertificateFileTitle'),\n                        label_default: 'Public Certificate:',\n                        help_text: t('admin.ldap.publicCertificateFileDesc'),\n                        help_text_default: 'The public certificate file for TLS Certificate. If using TLS client certificates as primary authentication mechanism.  This will be provided by your LDAP Authentication Provider.',\n                        remove_help_text: t('admin.ldap.publicCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the public certificate file for TLS Certificate.',\n                        remove_button_text: t('admin.ldap.remove.sp_certificate'),\n                        remove_button_text_default: 'Remove Service Provider Certificate',\n                        removing_text: t('admin.ldap.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.ldap.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        isDisabled: it.all(\n                            it.stateIsFalse('LdapSettings.Enable'),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                        fileType: '.crt,.cer',\n                        upload_action: uploadPublicLdapCertificate,\n                        remove_action: removePublicLdapCertificate,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.SkipCertificateVerification',\n                        label: t('admin.ldap.skipCertificateVerification'),\n                        label_default: 'Skip Certificate Verification:',\n                        help_text: t('admin.ldap.skipCertificateVerificationDesc'),\n                        help_text_default: 'Skips the certificate verification step for TLS or STARTTLS connections. Skipping certificate verification is not recommended for production environments where TLS is required.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.ConnectionSecurity'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BaseDN',\n                        label: t('admin.ldap.baseTitle'),\n                        label_default: 'BaseDN:',\n                        help_text: t('admin.ldap.baseDesc'),\n                        help_text_default: 'The Base DN is the Distinguished Name of the location where Mattermost should start its search for user and group objects in the AD/LDAP tree.',\n                        placeholder: t('admin.ldap.baseEx'),\n                        placeholder_default: 'E.g.: \"ou=Unit Name,dc=corp,dc=example,dc=com\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindUsername',\n                        label: t('admin.ldap.bindUserTitle'),\n                        label_default: 'Bind Username:',\n                        help_text: t('admin.ldap.bindUserDesc'),\n                        help_text_default: 'The username used to perform the AD/LDAP search. This should typically be an account created specifically for use with Mattermost. It should have access limited to read the portion of the AD/LDAP tree specified in the BaseDN field.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.BindPassword',\n                        label: t('admin.ldap.bindPwdTitle'),\n                        label_default: 'Bind Password:',\n                        help_text: t('admin.ldap.bindPwdDesc'),\n                        help_text_default: 'Password of the user given in \"Bind Username\".',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UserFilter',\n                        label: t('admin.ldap.userFilterTitle'),\n                        label_default: 'User Filter:',\n                        help_text: t('admin.ldap.userFilterDisc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for user objects. Only the users selected by the query will be able to access Mattermost. For Active Directory, the query to filter out disabled users is (&(objectCategory=Person)(!(UserAccountControl:1.2.840.113556.1.4.803:=2))).',\n                        placeholder: t('admin.ldap.userFilterEx'),\n                        placeholder_default: 'Ex. \"(objectClass=user)\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GuestFilter',\n                        label: t('admin.ldap.guestFilterTitle'),\n                        label_default: 'Guest Filter:',\n                        help_text: t('admin.ldap.guestFilterFilterDesc'),\n                        help_text_default: '(Optional) Requires Guest Access to be enabled before being applied. Enter an AD/LDAP filter to use when searching for guest objects. Only the users selected by the query will be able to access Mattermost as Guests. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this filter is removed/changed, active guests will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.guestFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=user)\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.configIsFalse('GuestAccountsSettings', 'Enable'),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'LdapSettings.EnableAdminFilter',\n                        label: t('admin.ldap.enableAdminFilterTitle'),\n                        label_default: 'Enable Admin Filter:',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.AdminFilter',\n                        label: t('admin.ldap.adminFilterTitle'),\n                        label_default: 'Admin Filter:',\n                        help_text: t('admin.ldap.adminFilterFilterDesc'),\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use for designating System Admins. The users selected by the query will have access to your Mattermost server as System Admins. By default, System Admins have complete access to the Mattermost System Console.\\n \\nExisting members that are identified by this attribute will be promoted from member to System Admin upon next login. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to members in **System Console > User Management** to ensure access is restricted immediately.\\n \\nNote: If this filter is removed/changed, System Admins that were promoted via this filter will be demoted to members and will not retain access to the System Console. When this filter is not in use, System Admins can be manually promoted/demoted in **System Console > User Management**.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.adminFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=user)\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.EnableAdminFilter'),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupFilter',\n                        label: t('admin.ldap.groupFilterTitle'),\n                        label_default: 'Group Filter:',\n                        help_text: t('admin.ldap.groupFilterFilterDesc'),\n                        help_text_markdown: true,\n                        help_text_default: '(Optional) Enter an AD/LDAP filter to use when searching for group objects. Only the groups selected by the query will be available to Mattermost. From [User Management > Groups]({siteURL}/admin_console/user_management/groups), select which AD/LDAP groups should be linked and configured.',\n                        help_text_values: {siteURL: getSiteURL()},\n                        placeholder: t('admin.ldap.groupFilterEx'),\n                        placeholder_default: 'E.g.: \"(objectClass=group)\"',\n                        isHidden: it.not(it.licensedForFeature('LDAPGroups')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupDisplayNameAttribute',\n                        label: t('admin.ldap.groupDisplayNameAttributeTitle'),\n                        label_default: 'Group Display Name Attribute:',\n                        help_text: t('admin.ldap.groupDisplayNameAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the group display names.',\n                        placeholder: t('admin.ldap.groupDisplayNameAttributeEx'),\n                        placeholder_default: 'E.g.: \"cn\"',\n                        isHidden: it.not(it.licensedForFeature('LDAPGroups')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.GroupIdAttribute',\n                        label: t('admin.ldap.groupIdAttributeTitle'),\n                        label_default: 'Group ID Attribute:',\n                        help_text: t('admin.ldap.groupIdAttributeDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier for Groups. This should be a AD/LDAP attribute with a value that does not change such as `entryUUID` for LDAP or `objectGUID` for Active Directory.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.ldap.groupIdAttributeEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"entryUUID\"',\n                        isHidden: it.not(it.licensedForFeature('LDAPGroups')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.FirstNameAttribute',\n                        label: t('admin.ldap.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.ldap.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"givenName\"',\n                        help_text: t('admin.ldap.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the first name of users in Mattermost. When set, users cannot edit their first name, since it is synchronized with the LDAP server. When left blank, users can set their first name in Account Settings.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LastNameAttribute',\n                        label: t('admin.ldap.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.ldap.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"sn\"',\n                        help_text: t('admin.ldap.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the last name of users in Mattermost. When set, users cannot edit their last name, since it is synchronized with the LDAP server. When left blank, users can set their last name in Account Settings.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.NicknameAttribute',\n                        label: t('admin.ldap.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.ldap.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"nickname\"',\n                        help_text: t('admin.ldap.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the nickname of users in Mattermost. When set, users cannot edit their nickname, since it is synchronized with the LDAP server. When left blank, users can set their nickname in Account Settings.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PositionAttribute',\n                        label: t('admin.ldap.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.ldap.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"title\"',\n                        help_text: t('admin.ldap.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the AD/LDAP server used to populate the position field in Mattermost. When set, users cannot edit their position, since it is synchronized with the LDAP server. When left blank, users can set their position in Account Settings.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.EmailAttribute',\n                        label: t('admin.ldap.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.ldap.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"mail\" or \"userPrincipalName\"',\n                        help_text: t('admin.ldap.emailAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the email address field in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.PictureAttribute',\n                        label: t('admin.ldap.pictureAttrTitle'),\n                        label_default: 'Profile Picture Attribute:',\n                        placeholder: t('admin.ldap.pictureAttrEx'),\n                        placeholder_default: 'E.g.: \"thumbnailPhoto\" or \"jpegPhoto\"',\n                        help_text: t('admin.ldap.pictureAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the profile picture in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.UsernameAttribute',\n                        label: t('admin.ldap.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.ldap.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the AD/LDAP server used to populate the username field in Mattermost. This may be the same as the Login ID Attribute.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.IdAttribute',\n                        label: t('admin.ldap.idAttrTitle'),\n                        label_default: 'ID Attribute: ',\n                        placeholder: t('admin.ldap.idAttrEx'),\n                        placeholder_default: 'E.g.: \"objectGUID\" or \"uid\"',\n                        help_text: t('admin.ldap.idAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used as a unique identifier in Mattermost. It should be an AD/LDAP attribute with a value that does not change such as `uid` for LDAP or `objectGUID` for Active Directory. If a user\\'s ID Attribute changes, it will create a new Mattermost account unassociated with their old one.\\n \\nIf you need to change this field after users have already logged in, use the [mattermost ldap idmigrate](!https://about.mattermost.com/default-mattermost-ldap-idmigrate) CLI tool.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateEquals('LdapSettings.Enable', false),\n                                it.stateEquals('LdapSettings.EnableSync', false),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginIdAttribute',\n                        label: t('admin.ldap.loginAttrTitle'),\n                        label_default: 'Login ID Attribute: ',\n                        placeholder: t('admin.ldap.loginIdAttrEx'),\n                        placeholder_default: 'E.g.: \"sAMAccountName\"',\n                        help_text: t('admin.ldap.loginAttrDesc'),\n                        help_text_markdown: true,\n                        help_text_default: 'The attribute in the AD/LDAP server used to log in to Mattermost. Normally this attribute is the same as the \"Username Attribute\" field above.\\n \\nIf your team typically uses domain/username to log in to other services with AD/LDAP, you may enter domain/username in this field to maintain consistency between sites.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'LdapSettings.LoginFieldName',\n                        label: t('admin.ldap.loginNameTitle'),\n                        label_default: 'Login Field Name:',\n                        placeholder: t('admin.ldap.loginNameEx'),\n                        placeholder_default: 'E.g.: \"AD/LDAP Username\"',\n                        help_text: t('admin.ldap.loginNameDesc'),\n                        help_text_default: 'The placeholder text that appears in the login field on the login page. Defaults to \"AD/LDAP Username\".',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.SyncIntervalMinutes',\n                        label: t('admin.ldap.syncIntervalTitle'),\n                        label_default: 'Synchronization Interval (minutes):',\n                        help_text: t('admin.ldap.syncIntervalHelpText'),\n                        help_text_default: 'AD/LDAP Synchronization updates Mattermost user information to reflect updates on the AD/LDAP server. For example, when a user\\'s name changes on the AD/LDAP server, the change updates in Mattermost when synchronization is performed. Accounts removed from or disabled in the AD/LDAP server have their Mattermost accounts set to \"Inactive\" and have their account sessions revoked. Mattermost performs synchronization on the interval entered. For example, if 60 is entered, Mattermost synchronizes every 60 minutes.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.MaxPageSize',\n                        label: t('admin.ldap.maxPageSizeTitle'),\n                        label_default: 'Maximum Page Size:',\n                        placeholder: t('admin.ldap.maxPageSizeEx'),\n                        placeholder_default: 'E.g.: \"2000\"',\n                        help_text: t('admin.ldap.maxPageSizeHelpText'),\n                        help_text_default: 'The maximum number of users the Mattermost server will request from the AD/LDAP server at one time. 0 is unlimited.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'LdapSettings.QueryTimeout',\n                        label: t('admin.ldap.queryTitle'),\n                        label_default: 'Query Timeout (seconds):',\n                        placeholder: t('admin.ldap.queryEx'),\n                        placeholder_default: 'E.g.: \"60\"',\n                        help_text: t('admin.ldap.queryDesc'),\n                        help_text_default: 'The timeout value for queries to the AD/LDAP server. Increase if you are getting timeout errors caused by a slow AD/LDAP server.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        action: ldapTest,\n                        key: 'LdapSettings.LdapTest',\n                        label: t('admin.ldap.ldap_test_button'),\n                        label_default: 'AD/LDAP Test',\n                        help_text: t('admin.ldap.testHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Tests if the Mattermost server can connect to the AD/LDAP server specified. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        error_message: t('admin.ldap.testFailure'),\n                        error_message_default: 'AD/LDAP Test Failure: {error}',\n                        success_message: t('admin.ldap.testSuccess'),\n                        success_message_default: 'AD/LDAP Test Successful',\n                        isDisabled: it.any(\n                            it.not(it.userHasReadPermissionOnResource('authentication')),\n                            it.all(\n                                it.stateIsFalse('LdapSettings.Enable'),\n                                it.stateIsFalse('LdapSettings.EnableSync'),\n                            ),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_JOBSTABLE,\n                        job_type: Constants.JobTypes.LDAP_SYNC,\n                        label: t('admin.ldap.sync_button'),\n                        label_default: 'AD/LDAP Synchronize Now',\n                        help_text: t('admin.ldap.syncNowHelpText'),\n                        help_text_markdown: true,\n                        help_text_default: 'Initiates an AD/LDAP synchronization immediately. See the table below for status of each synchronization. Please review \"System Console > Logs\" and [documentation](!https://mattermost.com/default-ldap-docs) to troubleshoot errors.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('LdapSettings.EnableSync'),\n                        ),\n                        render_job: (job) => {\n                            let ldapUsers = 0;\n                            let deleteCount = 0;\n                            let updateCount = 0;\n                            let linkedLdapGroupsCount; // Deprecated.\n                            let totalLdapGroupsCount = 0;\n                            let groupDeleteCount = 0;\n                            let groupMemberDeleteCount = 0;\n                            let groupMemberAddCount = 0;\n\n                            if (job && job.data) {\n                                if (job.data.ldap_users_count && job.data.ldap_users_count.length > 0) {\n                                    ldapUsers = job.data.ldap_users_count;\n                                }\n\n                                if (job.data.delete_count && job.data.delete_count.length > 0) {\n                                    deleteCount = job.data.delete_count;\n                                }\n\n                                if (job.data.update_count && job.data.update_count.length > 0) {\n                                    updateCount = job.data.update_count;\n                                }\n\n                                // Deprecated groups count representing the number of linked LDAP groups.\n                                if (job.data.ldap_groups_count) {\n                                    linkedLdapGroupsCount = job.data.ldap_groups_count;\n                                }\n\n                                // Groups count representing the total number of LDAP groups available based on\n                                // the configured based DN and groups filter.\n                                if (job.data.total_ldap_groups_count) {\n                                    totalLdapGroupsCount = job.data.total_ldap_groups_count;\n                                }\n\n                                if (job.data.group_delete_count) {\n                                    groupDeleteCount = job.data.group_delete_count;\n                                }\n\n                                if (job.data.group_member_delete_count) {\n                                    groupMemberDeleteCount = job.data.group_member_delete_count;\n                                }\n\n                                if (job.data.group_member_add_count) {\n                                    groupMemberAddCount = job.data.group_member_add_count;\n                                }\n                            }\n\n                            return (\n                                <span>\n                                    <FormattedMessage\n                                        id={linkedLdapGroupsCount ? 'admin.ldap.jobExtraInfo' : 'admin.ldap.jobExtraInfoTotal'}\n                                        defaultMessage={linkedLdapGroupsCount ? 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} linked groups.' : 'Scanned {ldapUsers, number} LDAP users and {ldapGroups, number} groups.'}\n                                        values={{\n                                            ldapUsers,\n                                            ldapGroups: linkedLdapGroupsCount || totalLdapGroupsCount, // Show the old count for jobs records containing the old JSON key.\n                                        }}\n                                    />\n                                    <ul>\n                                        {updateCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.updatedUsers'\n                                                    defaultMessage='Updated {updateCount, number} users.'\n                                                    values={{\n                                                        updateCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {deleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deactivatedUsers'\n                                                    defaultMessage='Deactivated {deleteCount, number} users.'\n                                                    values={{\n                                                        deleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroups'\n                                                    defaultMessage='Deleted {groupDeleteCount, number} groups.'\n                                                    values={{\n                                                        groupDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberDeleteCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.deletedGroupMembers'\n                                                    defaultMessage='Deleted {groupMemberDeleteCount, number} group members.'\n                                                    values={{\n                                                        groupMemberDeleteCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                        {groupMemberAddCount > 0 &&\n                                            <li>\n                                                <FormattedMessage\n                                                    id='admin.ldap.jobExtraInfo.addedGroupMembers'\n                                                    defaultMessage='Added {groupMemberAddCount, number} group members.'\n                                                    values={{\n                                                        groupMemberAddCount,\n                                                    }}\n                                                />\n                                            </li>\n                                        }\n                                    </ul>\n                                </span>\n                            );\n                        },\n                    },\n                ],\n            },\n        },\n        ldap_feature_discovery: {\n            url: 'authentication/ldap',\n            isDiscovery: true,\n            title: t('admin.sidebar.ldap'),\n            title_default: 'AD/LDAP',\n            isHidden: it.any(\n                it.licensedForFeature('LDAP'),\n                it.not(it.enterpriseReady),\n            ),\n            schema: {\n                id: 'LdapSettings',\n                name: t('admin.authentication.ldap'),\n                name_default: 'AD/LDAP',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: LDAPFeatureDiscovery,\n                        key: 'LDAPFeatureDiscovery',\n                    },\n                ],\n            },\n        },\n        saml: {\n            url: 'authentication/saml',\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.not(it.licensedForFeature('SAML')),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Enable',\n                        label: t('admin.saml.enableTitle'),\n                        label_default: 'Enable Login With SAML 2.0:',\n                        help_text: t('admin.saml.enableDescription'),\n                        help_text_default: 'When true, Mattermost allows login using SAML 2.0. Please see [documentation](!http://docs.mattermost.com/deployment/sso-saml.html) to learn more about configuring SAML for Mattermost.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdap',\n                        label: t('admin.saml.enableSyncWithLdapTitle'),\n                        label_default: 'Enable Synchronizing SAML Accounts With AD/LDAP:',\n                        help_text: t('admin.saml.enableSyncWithLdapDescription'),\n                        help_text_default: 'When true, Mattermost periodically synchronizes SAML user attributes, including user deactivation and removal, from AD/LDAP. Enable and configure synchronization settings at **Authentication > AD/LDAP**. When false, user attributes are updated from SAML during user login. See [documentation](!https://about.mattermost.com/default-saml-ldap-sync) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.IgnoreGuestsLdapSync',\n                        label: t('admin.saml.ignoreGuestsLdapSyncTitle'),\n                        label_default: 'Ignore Guest Users when  Synchronizing with AD/LDAP',\n                        help_text: t('admin.saml.ignoreGuestsLdapSyncDesc'),\n                        help_text_default: 'When true, Mattermost will ignore Guest Users who are identified by the Guest Attribute, when synchronizing with AD/LDAP for user deactivation and removal and Guest deactivation will need to be managed manually via System Console > Users.',\n                        isDisabled: it.any(\n                            it.configIsFalse('GuestAccountsSettings', 'Enable'),\n                            it.stateIsFalse('SamlSettings.EnableSyncWithLdap'),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableSyncWithLdapIncludeAuth',\n                        label: t('admin.saml.enableSyncWithLdapIncludeAuthTitle'),\n                        label_default: 'Override SAML bind data with AD/LDAP information:',\n                        help_text: t('admin.saml.enableSyncWithLdapIncludeAuthDescription'),\n                        help_text_default: 'When true, Mattermost will override the SAML ID attribute with the AD/LDAP ID attribute if configured or override the SAML Email attribute with the AD/LDAP Email attribute if SAML ID attribute is not present.  This will allow you automatically migrate users from Email binding to ID binding to prevent creation of new users when an email address changes for a user. Moving from true to false, will remove the override from happening.\\n \\n**Note:** SAML IDs must match the LDAP IDs to prevent disabling of user accounts.  Please review [documentation](!https://docs.mattermost.com/deployment/sso-saml-ldapsync.html) for more information.',\n                        help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.EnableSyncWithLdap'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpMetadataUrl',\n                        label: t('admin.saml.idpMetadataUrlTitle'),\n                        label_default: 'Identity Provider Metadata URL:',\n                        help_text: t('admin.saml.idpMetadataUrlDesc'),\n                        help_text_default: 'The Metadata URL for the Identity Provider you use for SAML requests',\n                        placeholder: t('admin.saml.idpMetadataUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/saml/metadata\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BUTTON,\n                        key: 'getSamlMetadataFromIDPButton',\n                        action: getSamlMetadataFromIdp,\n                        label: t('admin.saml.getSamlMetadataFromIDPUrl'),\n                        label_default: 'Get SAML Metadata from IdP',\n                        loading: t('admin.saml.getSamlMetadataFromIDPFetching'),\n                        loading_default: 'Fetching...',\n                        error_message: t('admin.saml.getSamlMetadataFromIDPFail'),\n                        error_message_default: 'SAML Metadata URL did not connect and pull data successfully',\n                        success_message: t('admin.saml.getSamlMetadataFromIDPSuccess'),\n                        success_message_default: 'SAML Metadata retrieved successfully. Two fields below have been updated',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateEquals('SamlSettings.IdpMetadataUrl', ''),\n                        ),\n                        sourceUrlKey: 'SamlSettings.IdpMetadataUrl',\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpUrl',\n                        label: t('admin.saml.idpUrlTitle'),\n                        label_default: 'SAML SSO URL:',\n                        help_text: t('admin.saml.idpUrlDesc'),\n                        help_text_default: 'The URL where Mattermost sends a SAML request to start login sequence.',\n                        placeholder: t('admin.saml.idpUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/SSO/Login\"',\n                        setFromMetadataField: 'idp_url',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdpDescriptorUrl',\n                        label: t('admin.saml.idpDescriptorUrlTitle'),\n                        label_default: 'Identity Provider Issuer URL:',\n                        help_text: t('admin.saml.idpDescriptorUrlDesc'),\n                        help_text_default: 'The issuer URL for the Identity Provider you use for SAML requests.',\n                        placeholder: t('admin.saml.idpDescriptorUrlEx'),\n                        placeholder_default: 'E.g.: \"https://idp.example.org/SAML2/issuer\"',\n                        setFromMetadataField: 'idp_descriptor_url',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.IdpCertificateFile',\n                        label: t('admin.saml.idpCertificateFileTitle'),\n                        label_default: 'Identity Provider Public Certificate:',\n                        help_text: t('admin.saml.idpCertificateFileDesc'),\n                        help_text_default: 'The public authentication certificate issued by your Identity Provider.',\n                        remove_help_text: t('admin.saml.idpCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the public authentication certificate issued by your Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.idp_certificate'),\n                        remove_button_text_default: 'Remove Identity Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        fileType: '.crt,.cer,.cert,.pem',\n                        upload_action: uploadIdpSamlCertificate,\n                        set_action: setSamlIdpCertificateFromMetadata,\n                        remove_action: removeIdpSamlCertificate,\n                        setFromMetadataField: 'idp_public_certificate',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Verify',\n                        label: t('admin.saml.verifyTitle'),\n                        label_default: 'Verify Signature:',\n                        help_text: t('admin.saml.verifyDescription'),\n                        help_text_default: 'When false, Mattermost will not verify that the signature sent from a SAML Response matches the Service Provider Login URL. Disabling verification is not recommended for production environments.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AssertionConsumerServiceURL',\n                        label: t('admin.saml.assertionConsumerServiceURLTitle'),\n                        label_default: 'Service Provider Login URL:',\n                        help_text: t('admin.saml.assertionConsumerServiceURLPopulatedDesc'),\n                        help_text_default: 'This field is also known as the Assertion Consumer Service URL.',\n                        placeholder: t('admin.saml.assertionConsumerServiceURLEx'),\n                        placeholder_default: 'E.g.: \"https://<your-mattermost-url>/login/sso/saml\"',\n                        onConfigLoad: (value, config) => {\n                            const siteUrl = config.ServiceSettings.SiteURL;\n                            if (siteUrl.length > 0 && value.length === 0) {\n                                const addSlashIfNeeded = siteUrl[siteUrl.length - 1] === '/' ? '' : '/';\n                                return `${siteUrl}${addSlashIfNeeded}login/sso/saml`;\n                            }\n                            return value;\n                        },\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Verify'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.ServiceProviderIdentifier',\n                        label: t('admin.saml.serviceProviderIdentifierTitle'),\n                        label_default: 'Service Provider Identifier:',\n                        help_text: t('admin.saml.serviceProviderIdentifierDesc'),\n                        help_text_default: 'The unique identifier for the Service Provider, usually the same as Service Provider Login URL. In ADFS, this MUST match the Relying Party Identifier.',\n                        placeholder: t('admin.saml.serviceProviderIdentifierEx'),\n                        placeholder_default: \"E.g.: \\\"https://'<your-mattermost-url>'/login/sso/saml\\\"\",\n                        isDisabled: it.stateIsFalse('SamlSettings.Enable'),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.Encrypt',\n                        label: t('admin.saml.encryptTitle'),\n                        label_default: 'Enable Encryption:',\n                        help_text: t('admin.saml.encryptDescription'),\n                        help_text_default: 'When false, Mattermost will not decrypt SAML Assertions encrypted with your Service Provider Public Certificate. Disabling encryption is not recommended for production environments.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PrivateKeyFile',\n                        label: t('admin.saml.privateKeyFileTitle'),\n                        label_default: 'Service Provider Private Key:',\n                        help_text: t('admin.saml.privateKeyFileFileDesc'),\n                        help_text_default: 'The private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_help_text: t('admin.saml.privateKeyFileFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the private key used to decrypt SAML Assertions from the Identity Provider.',\n                        remove_button_text: t('admin.saml.remove.privKey'),\n                        remove_button_text_default: 'Remove Service Provider Private Key',\n                        removing_text: t('admin.saml.removing.privKey'),\n                        removing_text_default: 'Removing Private Key...',\n                        uploading_text: t('admin.saml.uploading.privateKey'),\n                        uploading_text_default: 'Uploading Private Key...',\n                        fileType: '.key',\n                        upload_action: uploadPrivateSamlCertificate,\n                        remove_action: removePrivateSamlCertificate,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_FILE_UPLOAD,\n                        key: 'SamlSettings.PublicCertificateFile',\n                        label: t('admin.saml.publicCertificateFileTitle'),\n                        label_default: 'Service Provider Public Certificate:',\n                        help_text: t('admin.saml.publicCertificateFileDesc'),\n                        help_text_default: 'The certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_help_text: t('admin.saml.publicCertificateFileRemoveDesc'),\n                        remove_help_text_default: 'Remove the certificate used to generate the signature on a SAML request to the Identity Provider for a service provider initiated SAML login, when Mattermost is the Service Provider.',\n                        remove_button_text: t('admin.saml.remove.sp_certificate'),\n                        remove_button_text_default: 'Remove Service Provider Certificate',\n                        removing_text: t('admin.saml.removing.certificate'),\n                        removing_text_default: 'Removing Certificate...',\n                        uploading_text: t('admin.saml.uploading.certificate'),\n                        uploading_text_default: 'Uploading Certificate...',\n                        fileType: '.crt,.cer',\n                        upload_action: uploadPublicSamlCertificate,\n                        remove_action: removePublicSamlCertificate,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.SignRequest',\n                        label: t('admin.saml.signRequestTitle'),\n                        label_default: 'Sign Request:',\n                        help_text: t('admin.saml.signRequestDescription'),\n                        help_text_default: 'When true, Mattermost will sign the SAML request using your private key. When false, Mattermost will not sign the SAML request.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.PrivateKeyFile'),\n                            it.stateIsFalse('SamlSettings.PublicCertificateFile'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.SignatureAlgorithm',\n                        label: t('admin.saml.signatureAlgorithmTitle'),\n                        label_default: 'Signature Algorithm',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                        options: [\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha1'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA1,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha1'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA1). Please see more information provided at http://www.w3.org/2000/09/xmldsig#rsa-sha1',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha256'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA256,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha256'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA256). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha256 [section 6.4.2 RSA (PKCS#1 v1.5)]',\n                            },\n                            {\n                                value: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                display_name: t('admin.saml.signatureAlgorithmDisplay.sha512'),\n                                display_name_default: SAML_SETTINGS_SIGNATURE_ALGORITHM_SHA512,\n                                help_text: t('admin.saml.signatureAlgorithmDescription.sha512'),\n                                help_text_default: 'Specify the Signature algorithm used to sign the request (RSAwithSHA512). Please see more information provided at http://www.w3.org/2001/04/xmldsig-more#rsa-sha512',\n                            },\n                        ],\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'SamlSettings.CanonicalAlgorithm',\n                        label: t('admin.saml.canonicalAlgorithmTitle'),\n                        label_default: 'Canonicalization Algorithm',\n                        options: [\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n10'),\n                                display_name_default: 'Exclusive XML Canonicalization 1.0 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.exc'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Exclusive XML Canonicalization 1.0).  Please see more information provided at http://www.w3.org/2001/10/xml-exc-c14n#',\n                            },\n                            {\n                                value: SAML_SETTINGS_CANONICAL_ALGORITHM_C14N11,\n                                display_name: t('admin.saml.canonicalAlgorithmDisplay.n11'),\n                                display_name_default: 'Canonical XML 1.1 (omit comments)',\n                                help_text: t('admin.saml.canonicalAlgorithmDescription.c14'),\n                                help_text_default: 'Specify the Canonicalization algorithm (Canonical XML 1.1).  Please see more information provided at http://www.w3.org/2006/12/xml-c14n11',\n                            },\n                        ],\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Encrypt'),\n                            it.stateIsFalse('SamlSettings.SignRequest'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.EmailAttribute',\n                        label: t('admin.saml.emailAttrTitle'),\n                        label_default: 'Email Attribute:',\n                        placeholder: t('admin.saml.emailAttrEx'),\n                        placeholder_default: 'E.g.: \"Email\" or \"PrimaryEmail\"',\n                        help_text: t('admin.saml.emailAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the email addresses of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.UsernameAttribute',\n                        label: t('admin.saml.usernameAttrTitle'),\n                        label_default: 'Username Attribute:',\n                        placeholder: t('admin.saml.usernameAttrEx'),\n                        placeholder_default: 'E.g.: \"Username\"',\n                        help_text: t('admin.saml.usernameAttrDesc'),\n                        help_text_default: 'The attribute in the SAML Assertion that will be used to populate the username field in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.IdAttribute',\n                        label: t('admin.saml.idAttrTitle'),\n                        label_default: 'Id Attribute:',\n                        placeholder: t('admin.saml.idAttrEx'),\n                        placeholder_default: 'E.g.: \"Id\"',\n                        help_text: t('admin.saml.idAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to bind users from SAML to users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.GuestAttribute',\n                        label: t('admin.saml.guestAttrTitle'),\n                        label_default: 'Guest Attribute:',\n                        placeholder: t('admin.saml.guestAttrEx'),\n                        placeholder_default: 'E.g.: \"usertype=Guest\" or \"isGuest=true\"',\n                        help_text: t('admin.saml.guestAttrDesc'),\n                        help_text_default: '(Optional) Requires Guest Access to be enabled before being applied. The attribute in the SAML Assertion that will be used to apply a guest role to users in Mattermost. Guests are prevented from accessing teams or channels upon logging in until they are assigned a team and at least one channel.\\n \\nNote: If this attribute is removed/changed from your guest user in SAML and the user is still active, they will not be promoted to a member and will retain their Guest role. Guests can be promoted in **System Console > User Management**.\\n \\n \\nExisting members that are identified by this attribute as a guest will be demoted from a member to a guest when they are asked to login next. The next login is based upon Session lengths set in **System Console > Session Lengths**. It is highly recommend to manually demote users to guests in **System Console > User Management ** to ensure access is restricted immediately.',\n                        help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.configIsFalse('GuestAccountsSettings', 'Enable'),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'SamlSettings.EnableAdminAttribute',\n                        label: t('admin.saml.enableAdminAttrTitle'),\n                        label_default: 'Enable Admin Attribute:',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.AdminAttribute',\n                        label: t('admin.saml.adminAttrTitle'),\n                        label_default: 'Admin Attribute:',\n                        placeholder: t('admin.saml.adminAttrEx'),\n                        placeholder_default: 'E.g.: \"usertype=Admin\" or \"isAdmin=true\"',\n                        help_text: t('admin.saml.adminAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion for designating System Admins. The users selected by the query will have access to your Mattermost server as System Admins. By default, System Admins have complete access to the Mattermost System Console.\\n \\nExisting members that are identified by this attribute will be promoted from member to System Admin upon next login. The next login is based upon Session lengths set in **System Console > Session Lengths.** It is highly recommend to manually demote users to members in **System Console > User Management** to ensure access is restricted immediately.\\n \\nNote: If this filter is removed/changed, System Admins that were promoted via this filter will be demoted to members and will not retain access to the System Console. When this filter is not in use, System Admins can be manually promoted/demoted in **System Console > User Management**.',\n                        help_text_markdown: true,\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.EnableAdminAttribute'),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.FirstNameAttribute',\n                        label: t('admin.saml.firstnameAttrTitle'),\n                        label_default: 'First Name Attribute:',\n                        placeholder: t('admin.saml.firstnameAttrEx'),\n                        placeholder_default: 'E.g.: \"FirstName\"',\n                        help_text: t('admin.saml.firstnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the first name of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LastNameAttribute',\n                        label: t('admin.saml.lastnameAttrTitle'),\n                        label_default: 'Last Name Attribute:',\n                        placeholder: t('admin.saml.lastnameAttrEx'),\n                        placeholder_default: 'E.g.: \"LastName\"',\n                        help_text: t('admin.saml.lastnameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the last name of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.NicknameAttribute',\n                        label: t('admin.saml.nicknameAttrTitle'),\n                        label_default: 'Nickname Attribute:',\n                        placeholder: t('admin.saml.nicknameAttrEx'),\n                        placeholder_default: 'E.g.: \"Nickname\"',\n                        help_text: t('admin.saml.nicknameAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the nickname of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.PositionAttribute',\n                        label: t('admin.saml.positionAttrTitle'),\n                        label_default: 'Position Attribute:',\n                        placeholder: t('admin.saml.positionAttrEx'),\n                        placeholder_default: 'E.g.: \"Role\"',\n                        help_text: t('admin.saml.positionAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the position of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LocaleAttribute',\n                        label: t('admin.saml.localeAttrTitle'),\n                        label_default: 'Preferred Language Attribute:',\n                        placeholder: t('admin.saml.localeAttrEx'),\n                        placeholder_default: 'E.g.: \"Locale\" or \"PrimaryLanguage\"',\n                        help_text: t('admin.saml.localeAttrDesc'),\n                        help_text_default: '(Optional) The attribute in the SAML Assertion that will be used to populate the language of users in Mattermost.',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'SamlSettings.LoginButtonText',\n                        label: t('admin.saml.loginButtonTextTitle'),\n                        label_default: 'Login Button Text:',\n                        placeholder: t('admin.saml.loginButtonTextEx'),\n                        placeholder_default: 'E.g.: \"OKTA\"',\n                        help_text: t('admin.saml.loginButtonTextDesc'),\n                        help_text_default: '(Optional) The text that appears in the login button on the login page. Defaults to \"SAML\".',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('SamlSettings.Enable'),\n                        ),\n                    },\n                ],\n            },\n        },\n        saml_feature_discovery: {\n            url: 'authentication/saml',\n            isDiscovery: true,\n            title: t('admin.sidebar.saml'),\n            title_default: 'SAML 2.0',\n            isHidden: it.any(\n                it.licensedForFeature('SAML'),\n                it.not(it.enterpriseReady),\n            ),\n            schema: {\n                id: 'SamlSettings',\n                name: t('admin.authentication.saml'),\n                name_default: 'SAML 2.0',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: SAMLFeatureDiscovery,\n                        key: 'SAMLFeatureDiscovery',\n                    },\n                ],\n            },\n        },\n        gitlab: {\n            url: 'authentication/gitlab',\n            title: t('admin.sidebar.gitlab'),\n            title_default: 'GitLab',\n            isHidden: it.licensed,\n            schema: {\n                id: 'GitLabSettings',\n                name: t('admin.authentication.gitlab'),\n                name_default: 'GitLab',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GitLabSettings.Enable',\n                        label: t('admin.gitlab.enableTitle'),\n                        label_default: 'Enable authentication with GitLab: ',\n                        help_text: t('admin.gitlab.enableDescription'),\n                        help_text_default: \"When true, Mattermost allows team creation and account signup using GitLab OAuth.\\n \\n1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \\\"'<your-mattermost-url>'/login/gitlab/complete\\\" (example: http://localhost:8065/login/gitlab/complete) and \\\"<your-mattermost-url>/signup/gitlab/complete\\\".\\n3. Then use \\\"Application Secret Key\\\" and \\\"Application ID\\\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.\",\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('GitLabSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('GitLabSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('authentication')),\n                            it.stateIsFalse('GitLabSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                    },\n                ],\n            },\n        },\n        oauth: {\n            url: 'authentication/oauth',\n            title: t('admin.sidebar.oauth'),\n            title_default: 'OAuth 2.0',\n            tag: {\n                value: (\n                    <FormattedMessage\n                        id='admin.sidebar.oauth.tag'\n                        defaultMessage='deprecated'\n                    />\n                ),\n                shouldDisplay: () => false,\n            },\n            isHidden: it.any(\n                it.not(it.licensed),\n            ),\n            schema: {\n                id: 'OAuthSettings',\n                name: t('admin.authentication.oauth'),\n                name_default: 'OAuth 2.0',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    if (config.GitLabSettings && config.GitLabSettings.Enable) {\n                        newState.oauthType = Constants.GITLAB_SERVICE;\n                    }\n                    if (config.Office365Settings && config.Office365Settings.Enable) {\n                        newState.oauthType = Constants.OFFICE365_SERVICE;\n                    }\n                    if (config.GoogleSettings && config.GoogleSettings.Enable) {\n                        newState.oauthType = Constants.GOOGLE_SERVICE;\n                    }\n\n                    newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.GitLabSettings = config.GitLabSettings || {};\n                    newConfig.Office365Settings = config.Office365Settings || {};\n                    newConfig.GoogleSettings = config.GoogleSettings || {};\n                    newConfig.OpenIdSettings = config.OpenIdSettings || {};\n\n                    newConfig.GitLabSettings.Enable = false;\n                    newConfig.Office365Settings.Enable = false;\n                    newConfig.GoogleSettings.Enable = false;\n                    newConfig.OpenIdSettings.Enable = false;\n                    newConfig.GitLabSettings.UserApiEndpoint = config.GitLabSettings.Url.replace(/\\/$/, '') + '/api/v4/user';\n\n                    if (config.oauthType === Constants.GITLAB_SERVICE) {\n                        newConfig.GitLabSettings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.OFFICE365_SERVICE) {\n                        newConfig.Office365Settings.Enable = true;\n                    }\n                    if (config.oauthType === Constants.GOOGLE_SERVICE) {\n                        newConfig.GoogleSettings.Enable = true;\n                    }\n                    delete newConfig.oauthType;\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: OpenIdConvert,\n                        key: 'OpenIdConvert',\n                        isHidden: () => true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'oauthType',\n                        label: t('admin.openid.select'),\n                        label_default: 'Select service provider:',\n                        options: [\n                            {\n                                value: 'off',\n                                display_name: t('admin.oauth.off'),\n                                display_name_default: 'Do not allow sign-in via an OAuth 2.0 provider.',\n                            },\n                            {\n                                value: Constants.GITLAB_SERVICE,\n                                display_name: t('admin.oauth.gitlab'),\n                                display_name_default: 'GitLab',\n                                help_text: t('admin.gitlab.EnableMarkdownDesc'),\n                                help_text_default: '1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.GOOGLE_SERVICE,\n                                display_name: t('admin.oauth.google'),\n                                display_name_default: 'Google Apps',\n                                isHidden: it.not(it.licensedForFeature('GoogleOAuth')),\n                                help_text: t('admin.google.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://accounts.google.com/login) to your Google account.\\n2. Go to [https://console.developers.google.com](!https://console.developers.google.com), click **Credentials** in the left hand sidebar and enter \"Mattermost - your-company-name\" as the **Project Name**, then click **Create**.\\n3. Click the **OAuth consent screen** header and enter \"Mattermost\" as the **Product name shown to users**, then click **Save**.\\n4. Under the **Credentials** header, click **Create credentials**, choose **OAuth client ID** and select **Web Application**.\\n5. Under **Restrictions** and **Authorized redirect URIs** enter **your-mattermost-url/signup/google/complete** (example: http://localhost:8065/signup/google/complete). Click **Create**.\\n6. Paste the **Client ID** and **Client Secret** to the fields below, then click **Save**.\\n7. Go to the [Google People API](!https://console.developers.google.com/apis/library/people.googleapis.com) and click *Enable*.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OFFICE365_SERVICE,\n                                display_name: t('admin.oauth.office365'),\n                                display_name_default: 'Office 365',\n                                isHidden: it.not(it.licensedForFeature('Office365OAuth')),\n                                help_text: t('admin.office365.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://login.microsoftonline.com/) to your Microsoft or Office 365 account. Make sure it`s the account on the same [tenant](!https://msdn.microsoft.com/en-us/library/azure/jj573650.aspx#Anchor_0) that you would like users to log in with.\\n2. Go to [https://apps.dev.microsoft.com](!https://apps.dev.microsoft.com), click **Go to app list** > **Add an app** and use \"Mattermost - your-company-name\" as the **Application Name**.\\n3. Under **Application Secrets**, click **Generate New Password** and paste it to the **Application Secret Password** field below.\\n4. Under **Platforms**, click **Add Platform**, choose **Web** and enter **your-mattermost-url/signup/office365/complete** (example: http://localhost:8065/signup/office365/complete) under **Redirect URIs**. Also uncheck **Allow Implicit Flow**.\\n5. Finally, click **Save** and then paste the **Application ID** below.',\n                                help_text_markdown: true,\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.gitlab.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.gitlab.clientIdDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.gitlab.clientSecretTitle'),\n                        label_default: 'Application Secret Key:',\n                        help_text: t('admin.gitlab.clientSecretDescription'),\n                        help_text_default: 'Obtain this value via the instructions above for logging into GitLab.',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.UserApiEndpoint',\n                        label: t('admin.gitlab.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/api/v4/user';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.AuthEndpoint',\n                        label: t('admin.gitlab.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/authorize';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.TokenEndpoint',\n                        label: t('admin.gitlab.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/oauth/token';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'gitlab')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Id',\n                        label: t('admin.google.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.google.clientIdDescription'),\n                        help_text_default: 'The Client ID you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientIdExample'),\n                        placeholder_default: 'E.g.: \"7602141235235-url0fhs1mayfasbmop5qlfns8dh4.apps.googleusercontent.com\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'google')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Secret',\n                        label: t('admin.google.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.google.clientSecretDescription'),\n                        help_text_default: 'The Client Secret you received when registering your application with Google.',\n                        placeholder: t('admin.google.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'google')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.UserApiEndpoint',\n                        label: t('admin.google.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://people.googleapis.com/v1/people/me?personFields=names,emailAddresses,nicknames,metadata',\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.AuthEndpoint',\n                        label: t('admin.google.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: () => 'https://accounts.google.com/o/oauth2/v2/auth',\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.TokenEndpoint',\n                        label: t('admin.google.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: () => 'https://www.googleapis.com/oauth2/v4/token',\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'google')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Id',\n                        label: t('admin.office365.clientIdTitle'),\n                        label_default: 'Application ID:',\n                        help_text: t('admin.office365.clientIdDescription'),\n                        help_text_default: 'The Application/Client ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Secret',\n                        label: t('admin.office365.clientSecretTitle'),\n                        label_default: 'Application Secret Password:',\n                        help_text: t('admin.office365.clientSecretDescription'),\n                        help_text_default: 'The Application Secret Password you generated when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"shAieM47sNBfgl20f8ci294\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.DirectoryId',\n                        label: t('admin.office365.directoryIdTitle'),\n                        label_default: 'Directory (tenant) ID:',\n                        help_text: t('admin.office365.directoryIdDescription'),\n                        help_text_default: 'The Directory (tenant) ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.directoryIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.UserApiEndpoint',\n                        label: t('admin.office365.userTitle'),\n                        label_default: 'User API Endpoint:',\n                        dynamic_value: () => 'https://graph.microsoft.com/v1.0/me',\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.AuthEndpoint',\n                        label: t('admin.office365.authTitle'),\n                        label_default: 'Auth Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['Office365Settings.DirectoryId']) {\n                                return 'https://login.microsoftonline.com/' + state['Office365Settings.DirectoryId'] + '/oauth2/v2.0/authorize';\n                            }\n                            return 'https://login.microsoftonline.com/{directoryId}/oauth2/v2.0/authorize';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.TokenEndpoint',\n                        label: t('admin.office365.tokenTitle'),\n                        label_default: 'Token Endpoint:',\n                        dynamic_value: (value, config, state) => {\n                            if (state['Office365Settings.DirectoryId']) {\n                                return 'https://login.microsoftonline.com/' + state['Office365Settings.DirectoryId'] + '/oauth2/v2.0/token';\n                            }\n                            return 'https://login.microsoftonline.com/{directoryId}/oauth2/v2.0/token';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('oauthType', 'office365')),\n                    },\n                ],\n            },\n        },\n        openid: {\n            url: 'authentication/openid',\n            title: t('admin.sidebar.openid'),\n            title_default: 'OpenID Connect',\n            isHidden: () => true,\n            schema: {\n                id: 'OpenIdSettings',\n                name: t('admin.authentication.openid'),\n                name_default: 'OpenID Connect',\n                onConfigLoad: (config) => {\n                    const newState = {};\n                    if (config.Office365Settings && config.Office365Settings.Enable) {\n                        newState.openidType = Constants.OFFICE365_SERVICE;\n                    }\n                    if (config.GoogleSettings && config.GoogleSettings.Enable) {\n                        newState.openidType = Constants.GOOGLE_SERVICE;\n                    }\n                    if (config.GitLabSettings && config.GitLabSettings.Enable) {\n                        newState.openidType = Constants.GITLAB_SERVICE;\n                    }\n                    if (config.OpenIdSettings && config.OpenIdSettings.Enable) {\n                        newState.openidType = Constants.OPENID_SERVICE;\n                    }\n                    if (config.GitLabSettings.UserApiEndpoint) {\n                        newState['GitLabSettings.Url'] = config.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n                    } else if (config.GitLabSettings.DiscoveryEndpoint) {\n                        newState['GitLabSettings.Url'] = config.GitLabSettings.DiscoveryEndpoint.replace('/.well-known/openid-configuration', '');\n                    }\n\n                    return newState;\n                },\n                onConfigSave: (config) => {\n                    const newConfig = {...config};\n                    newConfig.Office365Settings = config.Office365Settings || {};\n                    newConfig.GoogleSettings = config.GoogleSettings || {};\n                    newConfig.GitLabSettings = config.GitLabSettings || {};\n                    newConfig.OpenIdSettings = config.OpenIdSettings || {};\n\n                    newConfig.Office365Settings.Enable = false;\n                    newConfig.GoogleSettings.Enable = false;\n                    newConfig.GitLabSettings.Enable = false;\n                    newConfig.OpenIdSettings.Enable = false;\n\n                    let configSetting = '';\n                    if (config.openidType === Constants.OFFICE365_SERVICE) {\n                        configSetting = 'Office365Settings';\n                    } else if (config.openidType === Constants.GOOGLE_SERVICE) {\n                        configSetting = 'GoogleSettings';\n                    } else if (config.openidType === Constants.GITLAB_SERVICE) {\n                        configSetting = 'GitLabSettings';\n                    } else if (config.openidType === Constants.OPENID_SERVICE) {\n                        configSetting = 'OpenIdSettings';\n                    }\n\n                    if (configSetting !== '') {\n                        newConfig[configSetting].Enable = true;\n                        newConfig[configSetting].Scope = Constants.OPENID_SCOPES;\n                        newConfig[configSetting].UserApiEndpoint = '';\n                        newConfig[configSetting].AuthEndpoint = '';\n                        newConfig[configSetting].TokenEndpoint = '';\n                    }\n\n                    delete newConfig.openidType;\n                    return newConfig;\n                },\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: OpenIdConvert,\n                        key: 'OpenIdConvert',\n                        isHidden: it.any(\n                            it.not(it.licensed),\n                            it.not(usesLegacyOauth),\n                        ),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'openidType',\n                        label: t('admin.openid.select'),\n                        label_default: 'Select service provider:',\n                        options: [\n                            {\n                                value: 'off',\n                                display_name: t('admin.openid.off'),\n                                display_name_default: 'Do not allow sign-in via an OpenID provider.',\n                            },\n                            {\n                                value: Constants.GITLAB_SERVICE,\n                                display_name: t('admin.openid.gitlab'),\n                                display_name_default: 'GitLab',\n                                isHidden: it.not(it.licensedForFeature('OpenId')),\n                                help_text: t('admin.gitlab.EnableMarkdownDesc'),\n                                help_text_default: '1. Log in to your GitLab account and go to Profile Settings -> Applications.\\n2. Enter Redirect URIs \"<your-mattermost-url>/login/gitlab/complete\" (example: http://localhost:8065/login/gitlab/complete) and \"<your-mattermost-url>/signup/gitlab/complete\".\\n3. Then use \"Application Secret Key\" and \"Application ID\" fields from GitLab to complete the options below.\\n4. Complete the Endpoint URLs below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.GOOGLE_SERVICE,\n                                display_name: t('admin.openid.google'),\n                                display_name_default: 'Google Apps',\n                                isHidden: it.not(it.licensedForFeature('OpenId')),\n                                help_text: t('admin.google.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://accounts.google.com/login) to your Google account.\\n2. Go to [https://console.developers.google.com](!https://console.developers.google.com), click **Credentials** in the left hand sidebar and enter \"Mattermost - your-company-name\" as the **Project Name**, then click **Create**.\\n3. Click the **OAuth consent screen** header and enter \"Mattermost\" as the **Product name shown to users**, then click **Save**.\\n4. Under the **Credentials** header, click **Create credentials**, choose **OAuth client ID** and select **Web Application**.\\n5. Under **Restrictions** and **Authorized redirect URIs** enter **your-mattermost-url/signup/google/complete** (example: http://localhost:8065/signup/google/complete). Click **Create**.\\n6. Paste the **Client ID** and **Client Secret** to the fields below, then click **Save**.\\n7. Go to the [Google People API](!https://console.developers.google.com/apis/library/people.googleapis.com) and click *Enable*.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OFFICE365_SERVICE,\n                                display_name: t('admin.openid.office365'),\n                                display_name_default: 'Office 365',\n                                isHidden: it.not(it.licensedForFeature('OpenId')),\n                                help_text: t('admin.office365.EnableMarkdownDesc'),\n                                help_text_default: '1. [Log in](!https://login.microsoftonline.com/) to your Microsoft or Office 365 account. Make sure it`s the account on the same [tenant](!https://msdn.microsoft.com/en-us/library/azure/jj573650.aspx#Anchor_0) that you would like users to log in with.\\n2. Go to [https://apps.dev.microsoft.com](!https://apps.dev.microsoft.com), click **Go to app list** > **Add an app** and use \"Mattermost - your-company-name\" as the **Application Name**.\\n3. Under **Application Secrets**, click **Generate New Password** and paste it to the **Application Secret Password** field below.\\n4. Under **Platforms**, click **Add Platform**, choose **Web** and enter **your-mattermost-url/signup/office365/complete** (example: http://localhost:8065/signup/office365/complete) under **Redirect URIs**. Also uncheck **Allow Implicit Flow**.\\n5. Finally, click **Save** and then paste the **Application ID** below.',\n                                help_text_markdown: true,\n                            },\n                            {\n                                value: Constants.OPENID_SERVICE,\n                                display_name: t('admin.oauth.openid'),\n                                display_name_default: 'OpenID Connect (Other)',\n                                isHidden: it.not(it.licensedForFeature('OpenId')),\n                                help_text: t('admin.openid.EnableMarkdownDesc'),\n                                help_text_default: 'Follow provider directions for creating an OpenID Application. Most OpenID Connect providers require authorization of all redirect URIs. In the appropriate field, enter your-mattermost-url/signup/openid/complete (example: http://domain.com/signup/openid/complete)',\n                                help_text_markdown: true,\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Url',\n                        label: t('admin.gitlab.siteUrl'),\n                        label_default: 'GitLab Site URL:',\n                        help_text: t('admin.gitlab.siteUrlDescription'),\n                        help_text_default: 'Enter the URL of your GitLab instance, e.g. https://example.com:3000. If your GitLab instance is not set up with SSL, start the URL with http:// instead of https://.',\n                        placeholder: t('admin.gitlab.siteUrlExample'),\n                        placeholder_default: 'E.g.: https://',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GITLAB_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.DiscoveryEndpoint',\n                        label: t('admin.openid.discoveryEndpointTitle'),\n                        label_default: 'Discovery Endpoint:',\n                        help_text: t('admin.gitlab.discoveryEndpointDesc'),\n                        help_text_default: 'The URL of the discovery document for OpenID Connect with GitLab.',\n                        help_text_markdown: false,\n                        dynamic_value: (value, config, state) => {\n                            if (state['GitLabSettings.Url']) {\n                                return state['GitLabSettings.Url'].replace(/\\/$/, '') + '/.well-known/openid-configuration';\n                            }\n                            return '';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GITLAB_SERVICE)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Id',\n                        label: t('admin.openid.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.openid.clientIdDescription'),\n                        help_text_default: 'Obtaining the Client ID differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.gitlab.clientIdExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx42pnqMxQY\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GITLAB_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GitLabSettings.Secret',\n                        label: t('admin.openid.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.openid.clientSecretDescription'),\n                        help_text_default: 'Obtaining the Client Secret differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.gitlab.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"jcuS8PuvcpGhpgHhlcpT1Mx442pnqMxQY\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GITLAB_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.DiscoveryEndpoint',\n                        label: t('admin.openid.discoveryEndpointTitle'),\n                        label_default: 'Discovery Endpoint:',\n                        help_text: t('admin.google.discoveryEndpointDesc'),\n                        help_text_default: 'The URL of the discovery document for OpenID Connect with Google.',\n                        help_text_markdown: false,\n                        dynamic_value: () => 'https://accounts.google.com/.well-known/openid-configuration',\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GOOGLE_SERVICE)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Id',\n                        label: t('admin.openid.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.openid.clientIdDescription'),\n                        help_text_default: 'Obtaining the Client ID differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.google.clientIdExample'),\n                        placeholder_default: 'E.g.: \"7602141235235-url0fhs1mayfasbmop5qlfns8dh4.apps.googleusercontent.com\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GOOGLE_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GoogleSettings.Secret',\n                        label: t('admin.openid.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.openid.clientSecretDescription'),\n                        help_text_default: 'Obtaining the Client Secret differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.google.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.GOOGLE_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.DirectoryId',\n                        label: t('admin.office365.directoryIdTitle'),\n                        label_default: 'Directory (tenant) ID:',\n                        help_text: t('admin.office365.directoryIdDescription'),\n                        help_text_default: 'The Directory (tenant) ID you received when registering your application with Microsoft.',\n                        placeholder: t('admin.office365.directoryIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OFFICE365_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.DiscoveryEndpoint',\n                        label: t('admin.openid.discoveryEndpointTitle'),\n                        label_default: 'Discovery Endpoint:',\n                        help_text: t('admin.office365.discoveryEndpointDesc'),\n                        help_text_default: 'The URL of the discovery document for OpenID Connect with Office 365.',\n                        help_text_markdown: false,\n                        dynamic_value: (value, config, state) => {\n                            if (state['Office365Settings.DirectoryId']) {\n                                return 'https://login.microsoftonline.com/' + state['Office365Settings.DirectoryId'] + '/v2.0/.well-known/openid-configuration';\n                            }\n                            return 'https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration';\n                        },\n                        isDisabled: true,\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OFFICE365_SERVICE)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Id',\n                        label: t('admin.openid.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.openid.clientIdDescription'),\n                        help_text_default: 'Obtaining the Client ID differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.office365.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OFFICE365_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'Office365Settings.Secret',\n                        label: t('admin.openid.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.openid.clientSecretDescription'),\n                        help_text_default: 'Obtaining the Client Secret differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.office365.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"shAieM47sNBfgl20f8ci294\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OFFICE365_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'OpenIdSettings.ButtonText',\n                        label: t('admin.openid.buttonTextTitle'),\n                        label_default: 'Button Name:',\n                        placeholder: t('admin.openid.buttonTextEx'),\n                        placeholder_default: 'Custom Button Name',\n                        help_text: t('admin.openid.buttonTextDesc'),\n                        help_text_default: 'The text that will show on the login button.',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OPENID_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'OpenIdSettings.ButtonColor',\n                        label: t('admin.openid.buttonColorTitle'),\n                        label_default: 'Button Color:',\n                        help_text: t('admin.openid.buttonColorDesc'),\n                        help_text_default: 'Specify the color of the OpenID login button for white labeling purposes. Use a hex code with a #-sign before the code.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OPENID_SERVICE)),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'OpenIdSettings.DiscoveryEndpoint',\n                        label: t('admin.openid.discoveryEndpointTitle'),\n                        label_default: 'Discovery Endpoint:',\n                        placeholder: t('admin.openid.discovery.placeholder'),\n                        placeholder_default: 'https://id.mydomain.com/.well-known/openid-configuration',\n                        help_text: t('admin.openid.discoveryEndpointDesc'),\n                        help_text_default: 'Enter the URL of the discovery document of the OpenID Connect provider you want to connect with.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OPENID_SERVICE)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'OpenIdSettings.Id',\n                        label: t('admin.openid.clientIdTitle'),\n                        label_default: 'Client ID:',\n                        help_text: t('admin.openid.clientIdDescription'),\n                        help_text_default: 'Obtaining the Client ID differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.openid.clientIdExample'),\n                        placeholder_default: 'E.g.: \"adf3sfa2-ag3f-sn4n-ids0-sh1hdax192qq\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OPENID_SERVICE)),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'OpenIdSettings.Secret',\n                        label: t('admin.openid.clientSecretTitle'),\n                        label_default: 'Client Secret:',\n                        help_text: t('admin.openid.clientSecretDescription'),\n                        help_text_default: 'Obtaining the Client Secret differs across providers. Please check you provider\\'s documentation',\n                        placeholder: t('admin.openid.clientSecretExample'),\n                        placeholder_default: 'E.g.: \"H8sz0Az-dDs2p15-7QzD231\"',\n                        isHidden: it.not(it.stateEquals('openidType', Constants.OPENID_SERVICE)),\n                    },\n                ],\n            },\n        },\n        guest_access: {\n            url: 'authentication/guest_access',\n            title: t('admin.sidebar.guest_access'),\n            title_default: 'Guest Access (Beta)',\n            isHidden: it.not(it.licensed),\n            schema: {\n                id: 'GuestAccountsSettings',\n                name: t('admin.authentication.guest_access'),\n                name_default: 'Guest Access (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_CUSTOM,\n                        component: CustomEnableDisableGuestAccountsSetting,\n                        key: 'GuestAccountsSettings.Enable',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'GuestAccountsSettings.RestrictCreationToDomains',\n                        label: t('admin.guest_access.whitelistedDomainsTitle'),\n                        label_default: 'Whitelisted Guest Domains:',\n                        help_text: t('admin.guest_access.whitelistedDomainsDescription'),\n                        help_text_default: '(Optional) Guest accounts can be created at the system level from this list of allowed guest domains.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.guest_access.whitelistedDomainsExample'),\n                        placeholder_default: 'E.g.: \"company.com, othercorp.org\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnabled'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enabled.',\n                        help_text_markdown: true,\n                        isHidden: it.configIsTrue('ServiceSettings', 'EnableMultifactorAuthentication'),\n                        isDisabled: () => true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescriptionMFANotEnforced'),\n                        help_text_default: '[Multi-factor authentication](./mfa) is currently not enforced.',\n                        help_text_markdown: true,\n                        isHidden: it.any(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsTrue('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                        isDisabled: () => true,\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'GuestAccountsSettings.EnforceMultifactorAuthentication',\n                        label: t('admin.guest_access.mfaTitle'),\n                        label_default: 'Enforce Multi-factor Authentication: ',\n                        help_text: t('admin.guest_access.mfaDescription'),\n                        help_text_default: 'When true, [multi-factor authentication](!https://docs.mattermost.com/deployment/auth.html) for guests is required for login. New guest users will be required to configure MFA on signup. Logged in guest users without MFA configured are redirected to the MFA setup page until configuration is complete.\\n \\nIf your system has guest users with login methods other than AD/LDAP and email, MFA must be enforced with the authentication provider outside of Mattermost.',\n                        help_text_markdown: true,\n                        isHidden: it.any(\n                            it.configIsFalse('ServiceSettings', 'EnableMultifactorAuthentication'),\n                            it.configIsFalse('ServiceSettings', 'EnforceMultifactorAuthentication'),\n                        ),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('authentication')),\n                    },\n                ],\n            },\n        },\n    },\n    plugins: {\n        icon: 'fa-plug',\n        sectionTitle: t('admin.sidebar.plugins'),\n        sectionTitleDefault: 'Plugins (Beta)',\n        id: 'plugins',\n        isHidden: it.not(it.userHasReadPermissionOnResource('plugins')),\n        plugin_management: {\n            url: 'plugins/plugin_management',\n            title: t('admin.plugins.pluginManagement'),\n            title_default: 'Plugin Management',\n            searchableStrings: [\n                'admin.plugin.management.title',\n                'admin.plugins.settings.enable',\n                'admin.plugins.settings.enableDesc',\n                'admin.plugin.uploadTitle',\n                'admin.plugin.installedTitle',\n                'admin.plugin.installedDesc',\n                'admin.plugin.uploadDesc',\n                'admin.plugin.uploadDisabledDesc',\n                'admin.plugins.settings.enableMarketplace',\n                'admin.plugins.settings.enableMarketplaceDesc',\n                'admin.plugins.settings.enableRemoteMarketplace',\n                'admin.plugins.settings.enableRemoteMarketplaceDesc',\n                'admin.plugins.settings.automaticPrepackagedPlugins',\n                'admin.plugins.settings.automaticPrepackagedPluginsDesc',\n                'admin.plugins.settings.marketplaceUrl',\n                'admin.plugins.settings.marketplaceUrlDesc',\n            ],\n            isDisabled: it.not(it.userHasWritePermissionOnResource('plugins')),\n            schema: {\n                id: 'PluginManagementSettings',\n                component: PluginManagement,\n            },\n        },\n        custom: {\n            url: 'plugins/plugin_:plugin_id',\n            isDisabled: it.not(it.userHasWritePermissionOnResource('plugins')),\n            schema: {\n                id: 'CustomPluginSettings',\n                component: CustomPluginSettings,\n            },\n        },\n    },\n    integrations: {\n        icon: 'fa-sitemap',\n        sectionTitle: t('admin.sidebar.integrations'),\n        sectionTitleDefault: 'Integrations',\n        id: 'integrations',\n        isHidden: it.not(it.userHasReadPermissionOnResource('integrations')),\n        integration_management: {\n            url: 'integrations/integration_management',\n            title: t('admin.integrations.integrationManagement'),\n            title_default: 'Integration Management',\n            schema: {\n                id: 'CustomIntegrationSettings',\n                name: t('admin.integrations.integrationManagement.title'),\n                name_default: 'Integration Management',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableIncomingWebhooks',\n                        label: t('admin.service.webhooksTitle'),\n                        label_default: 'Enable Incoming Webhooks: ',\n                        help_text: t('admin.service.webhooksDescription'),\n                        help_text_default: 'When true, incoming webhooks will be allowed. To help combat phishing attacks, all posts from webhooks will be labelled by a BOT tag. See [documentation](!http://docs.mattermost.com/developer/webhooks-incoming.html) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOutgoingWebhooks',\n                        label: t('admin.service.outWebhooksTitle'),\n                        label_default: 'Enable Outgoing Webhooks: ',\n                        help_text: t('admin.service.outWebhooksDesc'),\n                        help_text_default: 'When true, outgoing webhooks will be allowed. See [documentation](!http://docs.mattermost.com/developer/webhooks-outgoing.html) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableCommands',\n                        label: t('admin.service.cmdsTitle'),\n                        label_default: 'Enable Custom Slash Commands: ',\n                        help_text: t('admin.service.cmdsDesc'),\n                        help_text_default: 'When true, custom slash commands will be allowed. See [documentation](!http://docs.mattermost.com/developer/slash-commands.html) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableOAuthServiceProvider',\n                        label: t('admin.oauth.providerTitle'),\n                        label_default: 'Enable OAuth 2.0 Service Provider: ',\n                        help_text: t('admin.oauth.providerDescription'),\n                        help_text_default: 'When true, Mattermost can act as an OAuth 2.0 service provider allowing Mattermost to authorize API requests from external applications. See [documentation](!https://docs.mattermost.com/developer/oauth-2-0-applications.html) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_PERMISSION,\n                        key: 'ServiceSettings.EnableOnlyAdminIntegrations',\n                        label: t('admin.service.integrationAdmin'),\n                        label_default: 'Restrict managing integrations to Admins:',\n                        help_text: t('admin.service.integrationAdminDesc'),\n                        help_text_default: 'When true, webhooks and slash commands can only be created, edited and viewed by Team and System Admins, and OAuth 2.0 applications by System Admins. Integrations are available to all users after they have been created by the Admin.',\n                        permissions_mapping_name: 'enableOnlyAdminIntegrations',\n                        isHidden: it.licensed,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostUsernameOverride',\n                        label: t('admin.service.overrideTitle'),\n                        label_default: 'Enable integrations to override usernames:',\n                        help_text: t('admin.service.overrideDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the username they are posting as. Note: Combined with allowing integrations to override profile picture icons, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePostIconOverride',\n                        label: t('admin.service.iconTitle'),\n                        label_default: 'Enable integrations to override profile picture icons:',\n                        help_text: t('admin.service.iconDescription'),\n                        help_text_default: 'When true, webhooks, slash commands and other integrations, such as [Zapier](!https://docs.mattermost.com/integrations/zapier.html), will be allowed to change the profile picture they post with. Note: Combined with allowing integrations to override usernames, users may be able to perform phishing attacks by attempting to impersonate other users.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserAccessTokens',\n                        label: t('admin.service.userAccessTokensTitle'),\n                        label_default: 'Enable User Access Tokens: ',\n                        help_text: t('admin.service.userAccessTokensDescription'),\n                        help_text_default: 'When true, users can create [user access tokens](!https://about.mattermost.com/default-user-access-tokens) for integrations in **Account Settings > Security**. They can be used to authenticate against the API and give full access to the account.\\n\\n To manage who can create personal access tokens or to search users by token ID, go to the **User Management > Users** page.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                ],\n            },\n        },\n        bot_accounts: {\n            url: 'integrations/bot_accounts',\n            title: t('admin.integrations.botAccounts'),\n            title_default: 'Bot Accounts',\n            schema: {\n                id: 'BotAccountSettings',\n                name: t('admin.integrations.botAccounts.title'),\n                name_default: 'Bot Accounts',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableBotAccountCreation',\n                        label: t('admin.service.enableBotTitle'),\n                        label_default: 'Enable Bot Account Creation: ',\n                        help_text: t('admin.service.enableBotAccountCreation'),\n                        help_text_default: 'When true, System Admins can create bot accounts for integrations in [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). Bot accounts are similar to user accounts except they cannot be used to log in. See [documentation](https://mattermost.com/pl/default-bot-accounts) to learn more.',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.DisableBotsWhenOwnerIsDeactivated',\n                        label: t('admin.service.disableBotOwnerDeactivatedTitle'),\n                        label_default: 'Disable bot accounts when owner is deactivated:',\n                        help_text: t('admin.service.disableBotWhenOwnerIsDeactivated'),\n                        help_text_default: 'When a user is deactivated, disables all bot accounts managed by the user. To re-enable bot accounts, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots).',\n                        help_text_markdown: true,\n                        help_text_values: {siteURL: getSiteURL()},\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                ],\n            },\n        },\n        gif: {\n            url: 'integrations/gif',\n            title: t('admin.sidebar.gif'),\n            title_default: 'GIF (Beta)',\n            schema: {\n                id: 'GifSettings',\n                name: t('admin.integrations.gif'),\n                name_default: 'GIF (Beta)',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableGifPicker',\n                        label: t('admin.customization.enableGifPickerTitle'),\n                        label_default: 'Enable GIF Picker:',\n                        help_text: t('admin.customization.enableGifPickerDesc'),\n                        help_text_default: 'Allow users to select GIFs from the emoji picker via a Gfycat integration.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiKey',\n                        label: t('admin.customization.gfycatApiKey'),\n                        label_default: 'Gfycat API Key:',\n                        help_text: t('admin.customization.gfycatApiKeyDescription'),\n                        help_text_default: 'Request an API key at [https://developers.gfycat.com/signup/#](!https://developers.gfycat.com/signup/#). Enter the client ID you receive via email to this field. When blank, uses the default API key provided by Gfycat.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.GfycatApiSecret',\n                        label: t('admin.customization.gfycatApiSecret'),\n                        label_default: 'Gfycat API Secret:',\n                        help_text: t('admin.customization.gfycatApiSecretDescription'),\n                        help_text_default: 'The API secret generated by Gfycat for your API key. When blank, uses the default API secret provided by Gfycat.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                ],\n            },\n        },\n        cors: {\n            url: 'integrations/cors',\n            title: t('admin.sidebar.cors'),\n            title_default: 'CORS',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            schema: {\n                id: 'CORS',\n                name: t('admin.integrations.cors'),\n                name_default: 'CORS',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.AllowCorsFrom',\n                        label: t('admin.service.corsTitle'),\n                        label_default: 'Enable cross-origin requests from:',\n                        placeholder: t('admin.service.corsEx'),\n                        placeholder_default: 'http://example.com',\n                        help_text: t('admin.service.corsDescription'),\n                        help_text_default: 'Enable HTTP Cross origin request from a specific domain. Use \"*\" if you want to allow CORS from any domain or leave it blank to disable it. Should not be set to \"*\" in production.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ServiceSettings.CorsExposedHeaders',\n                        label: t('admin.service.corsExposedHeadersTitle'),\n                        label_default: 'CORS Exposed Headers:',\n                        placeholder: t('admin.service.corsHeadersEx'),\n                        placeholder_default: 'X-My-Header',\n                        help_text: t('admin.service.corsExposedHeadersDescription'),\n                        help_text_default: 'Whitelist of headers that will be accessible to the requester.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsAllowCredentials',\n                        label: t('admin.service.corsAllowCredentialsLabel'),\n                        label_default: 'CORS Allow Credentials:',\n                        help_text: t('admin.service.corsAllowCredentialsDescription'),\n                        help_text_default: 'When true, requests that pass validation will include the Access-Control-Allow-Credentials header.',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CorsDebug',\n                        label: t('admin.service.CorsDebugLabel'),\n                        label_default: 'CORS Debug:',\n                        help_text: t('admin.service.corsDebugDescription'),\n                        help_text_default: 'When true, prints messages to the logs to help when developing an integration that uses CORS. These messages will include the structured key value pair \"source\":\"cors\".',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('integrations')),\n                    },\n                ],\n            },\n        },\n    },\n    compliance: {\n        icon: 'fa-list',\n        sectionTitle: t('admin.sidebar.compliance'),\n        sectionTitleDefault: 'Compliance',\n        isHidden: it.not(it.userHasReadPermissionOnResource('compliance')),\n        data_retention: {\n            url: 'compliance/data_retention',\n            title: t('admin.sidebar.dataRetentionPolicy'),\n            title_default: 'Data Retention Policy',\n            searchableStrings: [\n                'admin.data_retention.title',\n                'admin.data_retention.messageRetentionDays.description',\n                'admin.data_retention.fileRetentionDays.description',\n                ['admin.data_retention.note.description', {documentationLink: ''}],\n                'admin.data_retention.enableMessageDeletion.title',\n                'admin.data_retention.enableMessageDeletion.description',\n                'admin.data_retention.enableFileDeletion.title',\n                'admin.data_retention.enableFileDeletion.description',\n                'admin.data_retention.deletionJobStartTime.title',\n                'admin.data_retention.deletionJobStartTime.description',\n                'admin.data_retention.createJob.title',\n                'admin.data_retention.createJob.help',\n            ],\n            isHidden: it.not(it.licensedForFeature('DataRetention')),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('compliance')),\n            schema: {\n                id: 'DataRetentionSettings',\n                component: DataRetentionSettings,\n            },\n        },\n        message_export: {\n            url: 'compliance/export',\n            title: t('admin.sidebar.complianceExport'),\n            title_default: 'Compliance Export (Beta)',\n            searchableStrings: [\n                'admin.service.complianceExportTitle',\n                'admin.service.complianceExportDesc',\n                'admin.complianceExport.exportJobStartTime.title',\n                'admin.complianceExport.exportJobStartTime.description',\n                'admin.complianceExport.exportFormat.title',\n                ['admin.complianceExport.exportFormat.description', {siteURL: ''}],\n                'admin.complianceExport.createJob.title',\n                'admin.complianceExport.createJob.help',\n                'admin.complianceExport.globalRelayCustomerType.title',\n                'admin.complianceExport.globalRelayCustomerType.description',\n                'admin.complianceExport.globalRelaySmtpUsername.title',\n                'admin.complianceExport.globalRelaySmtpUsername.description',\n                'admin.complianceExport.globalRelaySmtpPassword.title',\n                'admin.complianceExport.globalRelaySmtpPassword.description',\n                'admin.complianceExport.globalRelayEmailAddress.title',\n                'admin.complianceExport.globalRelayEmailAddress.description',\n            ],\n            isHidden: it.not(it.licensedForFeature('MessageExport')),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('compliance')),\n            schema: {\n                id: 'MessageExportSettings',\n                component: MessageExportSettings,\n            },\n        },\n        audits: {\n            url: 'compliance/monitoring',\n            title: t('admin.sidebar.complianceMonitoring'),\n            title_default: 'Compliance Monitoring',\n            isHidden: it.not(it.licensed),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('compliance')),\n            searchableStrings: [\n                'admin.audits.title',\n                'admin.audits.reload',\n            ],\n            schema: {\n                id: 'Audits',\n                name: t('admin.compliance.complianceMonitoring'),\n                name_default: 'Compliance Monitoring',\n                component: Audits,\n                isHidden: it.not(it.licensedForFeature('Compliance')),\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_BANNER,\n                        label: t('admin.compliance.newComplianceExportBanner'),\n                        label_markdown: true,\n                        label_default: 'This feature is replaced by a new [Compliance Export]({siteURL}/admin_console/compliance/export) feature, and will be removed in a future release. We recommend migrating to the new system.',\n                        label_values: {siteURL: getSiteURL()},\n                        banner_type: 'info',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.Enable',\n                        label: t('admin.compliance.enableTitle'),\n                        label_default: 'Enable Compliance Reporting:',\n                        help_text: t('admin.compliance.enableDesc'),\n                        help_text_default: 'When true, Mattermost allows compliance reporting from the **Compliance and Auditing** tab. See [documentation](!https://docs.mattermost.com/administration/compliance.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('compliance')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'ComplianceSettings.Directory',\n                        label: t('admin.compliance.directoryTitle'),\n                        label_default: 'Compliance Report Directory:',\n                        help_text: t('admin.compliance.directoryDescription'),\n                        help_text_default: 'Directory to which compliance reports are written. If blank, will be set to ./data/.',\n                        placeholder: t('admin.compliance.directoryExample'),\n                        placeholder_default: 'E.g.: \"./data/\"',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('compliance')),\n                            it.stateIsFalse('ComplianceSettings.Enable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ComplianceSettings.EnableDaily',\n                        label: t('admin.compliance.enableDailyTitle'),\n                        label_default: 'Enable Daily Report:',\n                        help_text: t('admin.compliance.enableDailyDesc'),\n                        help_text_default: 'When true, Mattermost will generate a daily compliance report.',\n                        isHidden: it.not(it.licensedForFeature('Compliance')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('compliance')),\n                            it.stateIsFalse('ComplianceSettings.Enable'),\n                        ),\n                    },\n                ],\n            },\n        },\n        custom_terms_of_service: {\n            url: 'compliance/custom_terms_of_service',\n            title: t('admin.sidebar.customTermsOfService'),\n            title_default: 'Custom Terms of Service (Beta)',\n            searchableStrings: [\n                'admin.support.termsOfServiceTitle',\n                'admin.support.enableTermsOfServiceTitle',\n                'admin.support.enableTermsOfServiceHelp',\n                'admin.support.termsOfServiceTextTitle',\n                'admin.support.termsOfServiceTextHelp',\n                'admin.support.termsOfServiceReAcceptanceTitle',\n                'admin.support.termsOfServiceReAcceptanceHelp',\n            ],\n            isHidden: it.not(it.licensedForFeature('CustomTermsOfService')),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('compliance')),\n            schema: {\n                id: 'TermsOfServiceSettings',\n                component: CustomTermsOfServiceSettings,\n            },\n        },\n    },\n    experimental: {\n        icon: 'fa-flask',\n        sectionTitle: t('admin.sidebar.experimental'),\n        sectionTitleDefault: 'Experimental',\n        isHidden: it.not(it.userHasReadPermissionOnResource('experimental')),\n        experimental_features: {\n            url: 'experimental/features',\n            title: t('admin.sidebar.experimentalFeatures'),\n            title_default: 'Features',\n            schema: {\n                id: 'ExperimentalSettings',\n                name: t('admin.experimental.experimentalFeatures'),\n                name_default: 'Experimental Features',\n                settings: [\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'LdapSettings.LoginButtonColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonColor.title'),\n                        label_default: 'AD/LDAP Login Button Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('LDAP')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'LdapSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonBorderColor.title'),\n                        label_default: 'AD/LDAP Login Button Border Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('LDAP')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'LdapSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.ldapSettingsLoginButtonTextColor.title'),\n                        label_default: 'AD/LDAP Login Button Text Color:',\n                        help_text: t('admin.experimental.ldapSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the AD/LDAP login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('LDAP')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableAuthenticationTransfer',\n                        label: t('admin.experimental.experimentalEnableAuthenticationTransfer.title'),\n                        label_default: 'Allow Authentication Transfer:',\n                        help_text: t('admin.experimental.experimentalEnableAuthenticationTransfer.desc'),\n                        help_text_default: 'When true, users can change their sign-in method to any that is enabled on the server, any via Account Settings or the APIs. When false, Users cannot change their sign-in method, regardless of which authentication options are enabled.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensed), // documented as E20 and higher, but only E10 in the code\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.CloseUnusedDirectMessages',\n                        label: t('admin.experimental.closeUnusedDirectMessages.title'),\n                        label_default: 'Autoclose Direct Messages in Sidebar:',\n                        help_text: t('admin.experimental.closeUnusedDirectMessages.desc'),\n                        help_text_default: 'When true, direct message conversations with no activity for 7 days will be hidden from the sidebar. When false, conversations remain in the sidebar until they are manually closed.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ExperimentalSettings.LinkMetadataTimeoutMilliseconds',\n                        label: t('admin.experimental.linkMetadataTimeoutMilliseconds.title'),\n                        label_default: 'Link Metadata Timeout:',\n                        help_text: t('admin.experimental.linkMetadataTimeoutMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait for metadata from a third-party link. Used with Post Metadata.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.linkMetadataTimeoutMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingBufferSize',\n                        label: t('admin.experimental.emailBatchingBufferSize.title'),\n                        label_default: 'Email Batching Buffer Size:',\n                        help_text: t('admin.experimental.emailBatchingBufferSize.desc'),\n                        help_text_default: 'Specify the maximum number of notifications batched into a single email.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingBufferSize.example'),\n                        placeholder_default: 'E.g.: \"256\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'EmailSettings.EmailBatchingInterval',\n                        label: t('admin.experimental.emailBatchingInterval.title'),\n                        label_default: 'Email Batching Interval:',\n                        help_text: t('admin.experimental.emailBatchingInterval.desc'),\n                        help_text_default: 'Specify the maximum frequency, in seconds, which the batching job checks for new notifications. Longer batching intervals will increase performance.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.emailBatchingInterval.example'),\n                        placeholder_default: 'E.g.: \"30\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'EmailSettings.LoginButtonColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonColor.title'),\n                        label_default: 'Email Login Button Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the email login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'EmailSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonBorderColor.title'),\n                        label_default: 'Email Login Button Border Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the email login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'EmailSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.emailSettingsLoginButtonTextColor.title'),\n                        label_default: 'Email Login Button Text Color:',\n                        help_text: t('admin.experimental.emailSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the email login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableUserDeactivation',\n                        label: t('admin.experimental.enableUserDeactivation.title'),\n                        label_default: 'Enable Account Deactivation:',\n                        help_text: t('admin.experimental.enableUserDeactivation.desc'),\n                        help_text_default: 'When true, users may deactivate their own account from **Account Settings > Advanced**. If a user deactivates their own account, they will get an email notification confirming they were deactivated. When false, users may not deactivate their own account.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalEnableAutomaticReplies',\n                        label: t('admin.experimental.experimentalEnableAutomaticReplies.title'),\n                        label_default: 'Enable Automatic Replies:',\n                        help_text: t('admin.experimental.experimentalEnableAutomaticReplies.desc'),\n                        help_text_default: 'When true, users can enable Automatic Replies in **Account Settings > Notifications**. Users set a custom message that will be automatically sent in response to Direct Messages. When false, disables the Automatic Direct Message Replies feature and hides it from Account Settings.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableChannelViewedMessages',\n                        label: t('admin.experimental.enableChannelViewedMessages.title'),\n                        label_default: 'Enable Channel Viewed WebSocket Messages:',\n                        help_text: t('admin.experimental.enableChannelViewedMessages.desc'),\n                        help_text_default: 'This setting determines whether `channel_viewed` WebSocket events are sent, which synchronize unread notifications across clients and devices. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.ClientSideCertEnable',\n                        label: t('admin.experimental.clientSideCertEnable.title'),\n                        label_default: 'Enable Client-Side Certification:',\n                        help_text: t('admin.experimental.clientSideCertEnable.desc'),\n                        help_text_default: 'Enables client-side certification for your Mattermost server. See [documentation](!https://docs.mattermost.com/deployment/certificate-based-authentication.html) to learn more.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ExperimentalSettings.ClientSideCertCheck',\n                        label: t('admin.experimental.clientSideCertCheck.title'),\n                        label_default: 'Client-Side Certification Login Method:',\n                        help_text: t('admin.experimental.clientSideCertCheck.desc'),\n                        help_text_default: 'When **primary**, after the client side certificate is verified, user’s email is retrieved from the certificate and is used to log in without a password. When **secondary**, after the client side certificate is verified, user’s email is retrieved from the certificate and matched against the one supplied by the user. If they match, the user logs in with regular email/password credentials.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'primary',\n                                display_name: 'primary',\n                                display_name_default: 'primary',\n                            },\n                            {\n                                value: 'secondary',\n                                display_name: 'secondary',\n                                display_name_default: 'secondary',\n                            },\n                        ],\n                        isHidden: it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('experimental')),\n                            it.stateIsFalse('ExperimentalSettings.ClientSideCertEnable'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableDefaultChannelLeaveJoinMessages',\n                        label: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.title'),\n                        label_default: 'Enable Default Channel Leave/Join System Messages:',\n                        help_text: t('admin.experimental.experimentalEnableDefaultChannelLeaveJoinMessages.desc'),\n                        help_text_default: 'This setting determines whether team leave/join system messages are posted in the default town-square channel.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalEnableHardenedMode',\n                        label: t('admin.experimental.experimentalEnableHardenedMode.title'),\n                        label_default: 'Enable Hardened Mode:',\n                        help_text: t('admin.experimental.experimentalEnableHardenedMode.desc'),\n                        help_text_default: 'Enables a hardened mode for Mattermost that makes user experience trade-offs in the interest of security. See [documentation](!https://docs.mattermost.com/administration/config-settings.html#enable-hardened-mode-experimental) to learn more.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnablePreviewFeatures',\n                        label: t('admin.experimental.enablePreviewFeatures.title'),\n                        label_default: 'Enable Preview Features:',\n                        help_text: t('admin.experimental.enablePreviewFeatures.desc'),\n                        help_text_default: 'When true, preview features can be enabled from **Account Settings > Advanced > Preview pre-release features**. When false, disables and hides preview features from **Account Settings > Advanced > Preview pre-release features**.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.EnableThemeSelection',\n                        label: t('admin.experimental.enableThemeSelection.title'),\n                        label_default: 'Enable Theme Selection:',\n                        help_text: t('admin.experimental.enableThemeSelection.desc'),\n                        help_text_default: 'Enables the **Display > Theme** tab in Account Settings so users can select their theme.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensed), // E10 and higher\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ThemeSettings.AllowCustomThemes',\n                        label: t('admin.experimental.allowCustomThemes.title'),\n                        label_default: 'Allow Custom Themes:',\n                        help_text: t('admin.experimental.allowCustomThemes.desc'),\n                        help_text_default: 'Enables the **Display > Theme > Custom Theme** section in Account Settings.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensed), // E10 and higher\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('experimental')),\n                            it.stateIsFalse('ThemeSettings.EnableThemeSelection'),\n                        ),\n                    },\n\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'ThemeSettings.AllowedThemes',\n                    //     label: t('admin.experimental.allowedThemes.title'),\n                    //     label_default: 'Allowed Themes:',\n                    //     help_text: t('admin.experimental.allowedThemes.desc'),\n                    //     help_text_default: 'A comma-separated list of themes that can be chosen by users when \"EnableThemeSelection\" is set to true.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.allowedThemes.example'),\n                    //     placeholder_default: 'E.g.: \"default, organization, mattermostDark, windows10\"',\n                    //     isHidden: it.not(it.licensed), // E10 and higher\n                    //     isDisabled: it.stateIsTrue('ThemeSettings.EnableThemeSelection'),\n                    // },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ThemeSettings.DefaultTheme',\n                        label: t('admin.experimental.defaultTheme.title'),\n                        label_default: 'Default Theme:',\n                        help_text: t('admin.experimental.defaultTheme.desc'),\n                        help_text_default: 'Set a default theme that applies to all new users on the system.',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'default',\n                                display_name: 'Mattermost',\n                                display_name_default: 'Mattermost',\n                            },\n                            {\n                                value: 'organization',\n                                display_name: 'Organization',\n                                display_name_default: 'Organization',\n                            },\n                            {\n                                value: 'mattermostDark',\n                                display_name: 'Mattermost Dark',\n                                display_name_default: 'Mattermost Dark',\n                            },\n                            {\n                                value: 'windows10',\n                                display_name: 'Windows Dark',\n                                display_name_default: 'Windows Dark',\n                            },\n                        ],\n                        isHidden: it.not(it.licensed), // E10 and higher\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableTutorial',\n                        label: t('admin.experimental.enableTutorial.title'),\n                        label_default: 'Enable Tutorial:',\n                        help_text: t('admin.experimental.enableTutorial.desc'),\n                        help_text_default: 'When true, users are prompted with a tutorial when they open Mattermost for the first time after account creation. When false, the tutorial is disabled, and users are placed in Town Square when they open Mattermost for the first time after account creation.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.EnableUserTypingMessages',\n                        label: t('admin.experimental.enableUserTypingMessages.title'),\n                        label_default: 'Enable User Typing Messages:',\n                        help_text: t('admin.experimental.enableUserTypingMessages.desc'),\n                        help_text_default: 'This setting determines whether \"user is typing...\" messages are displayed below the message box. Disabling the setting in larger deployments may improve server performance.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'ServiceSettings.TimeBetweenUserTypingUpdatesMilliseconds',\n                        label: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.title'),\n                        label_default: 'User Typing Timeout:',\n                        help_text: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.desc'),\n                        help_text_default: 'The number of milliseconds to wait between emitting user typing websocket events.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.timeBetweenUserTypingUpdatesMilliseconds.example'),\n                        placeholder_default: 'E.g.: \"5000\"',\n                        isDisabled: it.any(\n                            it.not(it.userHasWritePermissionOnResource('experimental')),\n                            it.stateIsFalse('ServiceSettings.EnableUserTypingMessages'),\n                        ),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.EnableXToLeaveChannelsFromLHS',\n                        label: t('admin.experimental.enableXToLeaveChannelsFromLHS.title'),\n                        label_default: 'Enable X to Leave Channels from Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.enableXToLeaveChannelsFromLHS.desc'),\n                        help_text_default: 'When true, users can leave Public and Private Channels by clicking the “x” beside the channel name. When false, users must use the **Leave Channel** option from the channel menu to leave channels.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_TEXT,\n                        key: 'TeamSettings.ExperimentalPrimaryTeam',\n                        label: t('admin.experimental.experimentalPrimaryTeam.title'),\n                        label_default: 'Primary Team:',\n                        help_text: t('admin.experimental.experimentalPrimaryTeam.desc'),\n                        help_text_default: 'The primary team of which users on the server are members. When a primary team is set, the options to join other teams or leave the primary team are disabled.',\n                        help_text_markdown: true,\n                        placeholder: t('admin.experimental.experimentalPrimaryTeam.example'),\n                        placeholder_default: 'E.g.: \"teamname\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ExperimentalSettings.UseNewSAMLLibrary',\n                        label: t('admin.experimental.experimentalUseNewSAMLLibrary.title'),\n                        label_default: 'Use Improved SAML Library (Beta):',\n                        help_text: t('admin.experimental.experimentalUseNewSAMLLibrary.desc'),\n                        help_text_default: 'Enable an updated SAML Library, which does not require the XML Security Library (xmlsec1) to be installed. Warning: Not all providers have been tested. If you experience issues, please contact support: [https://about.mattermost.com/support/](!https://about.mattermost.com/support/). Changing this setting requires a server restart before taking effect.',\n                        help_text_markdown: true,\n                        isHidden: true || it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'SamlSettings.LoginButtonColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonColor.title'),\n                        label_default: 'SAML Login Button Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'SamlSettings.LoginButtonBorderColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonBorderColor.title'),\n                        label_default: 'SAML Login Button Border Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonBorderColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button border for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_COLOR,\n                        key: 'SamlSettings.LoginButtonTextColor',\n                        label: t('admin.experimental.samlSettingsLoginButtonTextColor.title'),\n                        label_default: 'SAML Login Button Text Color:',\n                        help_text: t('admin.experimental.samlSettingsLoginButtonTextColor.desc'),\n                        help_text_default: 'Specify the color of the SAML login button text for white labeling purposes. Use a hex code with a #-sign before the code. This setting only applies to the mobile apps.',\n                        help_text_markdown: false,\n                        isHidden: it.not(it.licensedForFeature('SAML')),\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_DROPDOWN,\n                        key: 'ServiceSettings.ExperimentalChannelSidebarOrganization',\n                        label: t('admin.experimental.experimentalChannelSidebarOrganization.title'),\n                        label_default: 'Experimental Sidebar Features',\n                        help_text: t('admin.experimental.experimentalChannelSidebarOrganization.desc'),\n                        help_text_default: 'When enabled, users can access experimental channel sidebar features, including collapsible sections and unreads filtering. If default on, this enabled the new sidebar features by default for all users on this server. Users can disable the features in **Account Settings > Sidebar > Experimental Sidebar Features**. If default off, users must enable the experimental sidebar features in Account Settings. [Learn more](!https://about.mattermost.com/default-sidebar/) or [give us feedback](!https://about.mattermost.com/default-sidebar-survey/)',\n                        help_text_markdown: true,\n                        options: [\n                            {\n                                value: 'disabled',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.disabled'),\n                                display_name_default: 'Disabled',\n                            },\n                            {\n                                value: 'default_on',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.default_on'),\n                                display_name_default: 'Enabled (Default On)',\n                            },\n                            {\n                                value: 'default_off',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.default_off'),\n                                display_name_default: 'Enabled (Default Off)',\n                            },\n                            {\n                                value: 'always_on',\n                                display_name: t('admin.experimental.experimentalChannelSidebarOrganization.always_on'),\n                                display_name_default: 'Always On',\n                            },\n                        ],\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'ServiceSettings.ExperimentalChannelOrganization',\n                        label: t('admin.experimental.experimentalChannelOrganization.title'),\n                        label_default: 'Channel Grouping and Sorting',\n                        help_text: t('admin.experimental.experimentalChannelOrganization.desc'),\n                        help_text_default: 'Enables channel sidebar organization options in **Account Settings > Sidebar > Channel grouping and sorting** including options for grouping unread channels, sorting channels by most recent post and combining all channel types into a single list. These settings are not available if **Account Settings > Sidebar > Experimental Sidebar Features** are enabled.',\n                        help_text_markdown: true,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'DisplaySettings.ExperimentalTimezone',\n                        label: t('admin.experimental.experimentalTimezone.title'),\n                        label_default: 'Timezone:',\n                        help_text: t('admin.experimental.experimentalTimezone.desc'),\n                        help_text_default: 'Select the timezone used for timestamps in the user interface and email notifications. When true, the Timezone setting is visible in the Account Settings and a time zone is automatically assigned in the next active session. When false, the Timezone setting is hidden in the Account Settings.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalHideTownSquareinLHS',\n                        label: t('admin.experimental.experimentalHideTownSquareinLHS.title'),\n                        label_default: 'Town Square is Hidden in Left-Hand Sidebar:',\n                        help_text: t('admin.experimental.experimentalHideTownSquareinLHS.desc'),\n                        help_text_default: 'When true, hides Town Square in the left-hand sidebar if there are no unread messages in the channel. When false, Town Square is always visible in the left-hand sidebar even if all messages have been read.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensed), // E10 and higher\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'TeamSettings.ExperimentalTownSquareIsReadOnly',\n                        label: t('admin.experimental.experimentalTownSquareIsReadOnly.title'),\n                        label_default: 'Town Square is Read-Only:',\n                        help_text: t('admin.experimental.experimentalTownSquareIsReadOnly.desc'),\n                        help_text_default: 'When true, only System Admins can post in Town Square. Other members are not able to post, reply, upload files, emoji react or pin messages to Town Square, nor are they able to change the channel name, header or purpose. When false, anyone can post in Town Square.',\n                        help_text_markdown: true,\n                        isHidden: it.not(it.licensed), // E10 and higher\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_BOOL,\n                        key: 'EmailSettings.UseChannelInEmailNotifications',\n                        label: t('admin.experimental.useChannelInEmailNotifications.title'),\n                        label_default: 'Use Channel Name in Email Notifications:',\n                        help_text: t('admin.experimental.useChannelInEmailNotifications.desc'),\n                        help_text_default: 'When true, channel and team name appears in email notification subject lines. Useful for servers using only one team. When false, only team name appears in email notification subject line.',\n                        help_text_markdown: false,\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    },\n                    {\n                        type: Constants.SettingsTypes.TYPE_NUMBER,\n                        key: 'TeamSettings.UserStatusAwayTimeout',\n                        label: t('admin.experimental.userStatusAwayTimeout.title'),\n                        label_default: 'User Status Away Timeout:',\n                        help_text: t('admin.experimental.userStatusAwayTimeout.desc'),\n                        help_text_default: 'This setting defines the number of seconds after which the user’s status indicator changes to \"Away\", when they are away from Mattermost.',\n                        help_text_markdown: false,\n                        placeholder: t('admin.experimental.userStatusAwayTimeout.example'),\n                        placeholder_default: 'E.g.: \"300\"',\n                        isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n                    }, // eslint-disable-next-line lines-around-comment\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_BOOL,\n                    //     key: 'ServiceSettings.ExperimentalStrictCSRFEnforcement',\n                    //     label: t('admin.experimental.experimentalStrictCSRFEnforcement.title'),\n                    //     label_default: 'TODO:',\n                    //     help_text: t('admin.experimental.experimentalStrictCSRFEnforcement.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: false,\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_LIST,\n                    //     key: 'TeamSettings.ExperimentalDefaultChannels',\n                    //     label: t('admin.experimental.experimentalDefaultChannels.title'),\n                    //     label_default: 'Default Channels:',\n                    //     help_text: t('admin.experimental.experimentalDefaultChannels.desc'),\n                    //     help_text_default: 'A comma-separated list of default channels every user is added to automatically after joining a new team. Only applies to public channels, but affects all teams on the server. When not set, every user is added to `off-topic` and `town-square` channel by default. Note that even if `town-square` is not listed, every user is added to that channel after joining a new team.',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.experimentalDefaultChannels.example'),\n                    //     placeholder_default: 'E.g.: \"channel1, channel2, off-topic\"',\n                    // },\n                    // {\n                    //     type: Constants.SettingsTypes.TYPE_TEXT,\n                    //     key: 'EmailSettings.ReplyToAddress',\n                    //     label: t('admin.experimental.replyToAddress.title'),\n                    //     label_default: 'Reply To Address:',\n                    //     help_text: t('admin.experimental.replyToAddress.desc'),\n                    //     help_text_default: 'TODO',\n                    //     help_text_markdown: true,\n                    //     placeholder: t('admin.experimental.replyToAddress.example'),\n                    //     placeholder_default: 'E.g.: \"reply-to@example.com\"',\n                    // },\n                ],\n            },\n        },\n        feature_flags: {\n            url: 'experimental/feature_flags',\n            title: t('admin.feature_flags.title'),\n            title_default: 'Feature Flags',\n            isHidden: it.configIsTrue('ExperimentalSettings'),\n            isDisabled: true,\n            searchableStrings: [\n                'admin.feature_flags.title',\n            ],\n            schema: {\n                id: 'Feature Flags',\n                component: FeatureFlags,\n            },\n        },\n        bleve: {\n            url: 'experimental/blevesearch',\n            title: t('admin.sidebar.blevesearch'),\n            title_default: 'Bleve',\n            isHidden: it.configIsTrue('ExperimentalSettings', 'RestrictSystemAdmin'),\n            isDisabled: it.not(it.userHasWritePermissionOnResource('experimental')),\n            searchableStrings: [\n                'admin.bleve.title',\n                'admin.bleve.enableIndexingTitle',\n                ['admin.bleve.enableIndexingDescription', {documentationLink: ''}],\n                'admin.bleve.enableIndexingDescription.documentationLinkText',\n                'admin.bleve.bulkIndexingTitle',\n                'admin.bleve.createJob.help',\n                'admin.bleve.purgeIndexesHelpText',\n                'admin.bleve.purgeIndexesButton',\n                'admin.bleve.purgeIndexesButton.label',\n                'admin.bleve.enableSearchingTitle',\n                'admin.bleve.enableSearchingDescription',\n            ],\n            schema: {\n                id: 'BleveSettings',\n                component: BleveSettings,\n            },\n        },\n    },\n};\n\nt('admin.field_names.allowBannerDismissal');\nt('admin.field_names.bannerColor');\nt('admin.field_names.bannerText');\nt('admin.field_names.bannerTextColor');\nt('admin.field_names.enableBanner');\nt('admin.field_names.enableCommands');\nt('admin.field_names.enableConfirmNotificationsToChannel');\nt('admin.field_names.enableIncomingWebhooks');\nt('admin.field_names.enableOAuthServiceProvider');\nt('admin.field_names.enableOutgoingWebhooks');\nt('admin.field_names.enablePostIconOverride');\nt('admin.field_names.enablePostUsernameOverride');\nt('admin.field_names.enableUserAccessTokens');\nt('admin.field_names.enableUserCreation');\nt('admin.field_names.maxChannelsPerTeam');\nt('admin.field_names.maxNotificationsPerChannel');\nt('admin.field_names.maxUsersPerTeam');\nt('admin.field_names.postEditTimeLimit');\nt('admin.field_names.restrictCreationToDomains');\nt('admin.field_names.restrictDirectMessage');\nt('admin.field_names.teammateNameDisplay');\n\nexport default AdminDefinition;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nconst SECTION_NONE = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNone'\n                defaultMessage='None'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityNoneDescription'\n                defaultMessage='Mattermost will connect over an insecure connection.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_TLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTls'\n                defaultMessage='TLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityTlsDescription'\n                defaultMessage='Encrypts the communication between Mattermost and your server.'\n            />\n        </td>\n    </tr>\n);\n\nconst SECTION_STARTTLS = (\n    <tr>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStart'\n                defaultMessage='STARTTLS'\n            />\n        </td>\n        <td>\n            <FormattedMessage\n                id='admin.connectionSecurityStartDescription'\n                defaultMessage='Takes an existing insecure connection and attempts to upgrade it to a secure connection using TLS.'\n            />\n        </td>\n    </tr>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_EMAIL = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_LDAP = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n            {SECTION_STARTTLS}\n        </tbody>\n    </table>\n);\n\nexport const CONNECTION_SECURITY_HELP_TEXT_WEBSERVER = (\n    <table\n        className='table table-bordered'\n        cellPadding='5'\n    >\n        <tbody>\n            {SECTION_NONE}\n            {SECTION_TLS}\n        </tbody>\n    </table>\n);\n\nexport const WEBSERVER_MODE_HELP_TEXT = (\n    <div>\n        <table\n            className='table table-bordered'\n            cellPadding='5'\n        >\n            <tbody>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzip'\n                            defaultMessage='gzip'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeGzipDescription'\n                            defaultMessage='The Mattermost server will serve static files compressed with gzip.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressed'\n                            defaultMessage='Uncompressed'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeUncompressedDescription'\n                            defaultMessage='The Mattermost server will serve static files uncompressed.'\n                        />\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabled'\n                            defaultMessage='Disabled'\n                        />\n                    </td>\n                    <td>\n                        <FormattedMessage\n                            id='admin.webserverModeDisabledDescription'\n                            defaultMessage='The Mattermost server will not serve static files.'\n                        />\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <p className='help-text'>\n            <FormattedMessage\n                id='admin.webserverModeHelpText'\n                defaultMessage='gzip compression applies to static content files. It is recommended to enable gzip to improve performance unless your environment has specific restrictions, such as a web proxy that distributes gzip files poorly.'\n            />\n        </p>\n    </div>\n);\n\nexport const LOG_LEVEL_OPTIONS = [\n    {\n        value: 'DEBUG',\n        display_name: 'DEBUG',\n        display_name_default: 'DEBUG',\n    },\n    {\n        value: 'INFO',\n        display_name: 'INFO',\n        display_name_default: 'INFO',\n    },\n    {\n        value: 'ERROR',\n        display_name: 'ERROR',\n        display_name_default: 'ERROR',\n    },\n];\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, injectIntl, IntlShape} from 'react-intl';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport * as GlobalActions from 'actions/global_actions';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport {ModalIdentifiers} from 'utils/constants';\n\nimport AboutBuildModal from 'components/about_build_modal';\n\nimport Menu from 'components/widgets/menu/menu';\n\nimport MenuItemBlockableLink from './menu_item_blockable_link';\n\ntype Props = {\n    intl: IntlShape;\n    locale: string;\n    siteName?: string;\n    navigationBlocked?: boolean;\n    teams: Team[];\n    actions: {\n        deferNavigation: (onNavigationConfirmed: any) => any;\n    };\n};\n\nclass AdminNavbarDropdown extends React.PureComponent<Props> {\n    private handleLogout = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (this.props.navigationBlocked) {\n            e.preventDefault();\n            this.props.actions.deferNavigation(GlobalActions.emitUserLoggedOutEvent);\n        } else {\n            GlobalActions.emitUserLoggedOutEvent();\n        }\n    };\n\n    render(): JSX.Element {\n        const {locale, teams, siteName} = this.props;\n        const {formatMessage} = this.props.intl;\n        const teamToRender = []; // Array of team components\n        let switchTeams;\n\n        if (teams && teams.length > 0) {\n            const teamsArray = filterAndSortTeamsByDisplayName(teams, locale);\n\n            for (const team of teamsArray) {\n                teamToRender.push(\n                    <MenuItemBlockableLink\n                        key={'team_' + team.name}\n                        to={'/' + team.name}\n                        text={formatMessage({id: 'navbar_dropdown.switchTo', defaultMessage: 'Switch to '}) + ' ' + team.display_name}\n                    />,\n                );\n            }\n        } else {\n            switchTeams = (\n                <MenuItemBlockableLink\n                    to={'/select_team'}\n                    icon={\n                        <FormattedMessage\n                            id='select_team.icon'\n                            defaultMessage='Select Team Icon'\n                        >\n                            {(title) => {\n                                return (\n                                    <i\n                                        className='fa fa-exchange'\n                                        title={title as string}\n                                    />\n                                );\n                            }}\n                        </FormattedMessage>\n                    }\n                    text={formatMessage({id: 'admin.nav.switch', defaultMessage: 'Team Selection'})}\n                />\n            );\n        }\n\n        return (\n            <Menu ariaLabel={formatMessage({id: 'admin.nav.menuAriaLabel', defaultMessage: 'Admin Console Menu'})}>\n                <Menu.Group>\n                    {teamToRender}\n                    {switchTeams}\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_guide')}\n                        url='https://about.mattermost.com/administrators-guide/'\n                        text={formatMessage({id: 'admin.nav.administratorsGuide', defaultMessage: 'Administrator Guide'})}\n                    />\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_forum')}\n                        url='https://about.mattermost.com/troubleshooting-forum/'\n                        text={formatMessage({id: 'admin.nav.troubleshootingForum', defaultMessage: 'Troubleshooting Forum'})}\n                    />\n                    <Menu.ItemExternalLink\n                        onClick={() => trackEvent('admin', 'click_administrators_support')}\n                        url='https://about.mattermost.com/commercial-support/'\n                        text={formatMessage({id: 'admin.nav.commercialSupport', defaultMessage: 'Commercial Support'})}\n                    />\n                    <Menu.ItemToggleModalRedux\n                        onClick={() => trackEvent('admin', 'click_administrators_about')}\n                        modalId={ModalIdentifiers.ABOUT}\n                        dialogType={AboutBuildModal}\n                        text={formatMessage({id: 'navbar_dropdown.about', defaultMessage: 'About {appTitle}'}, {appTitle: siteName || 'Mattermost'})}\n                    />\n                </Menu.Group>\n                <Menu.Group>\n                    <Menu.ItemAction\n                        onClick={this.handleLogout}\n                        text={formatMessage({id: 'navbar_dropdown.logout', defaultMessage: 'Log Out'})}\n                    />\n                </Menu.Group>\n            </Menu>\n        );\n    }\n}\n\nexport default injectIntl(AdminNavbarDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getMyTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {deferNavigation} from 'actions/admin_actions.jsx';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {getNavigationBlocked} from 'selectors/views/admin';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminNavbarDropdown from './admin_navbar_dropdown';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        locale: getCurrentLocale(state),\n        teams: getMyTeams(state),\n        siteName: getConfig(state).SiteName,\n        navigationBlocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminNavbarDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport menuItem from 'components/widgets/menu/menu_items/menu_item';\n\ntype Props = {\n    to: string;\n    text: string | React.ReactNode;\n};\n\nexport const MenuItemBlockableLinkImpl: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {to, text} = props;\n    return (\n        <BlockableLink to={to}>{text}</BlockableLink>\n    );\n};\n\nconst MenuItemBlockableLink = menuItem(MenuItemBlockableLinkImpl);\nMenuItemBlockableLink.displayName = 'MenuItemBlockableLinkImpl';\n\nexport default MenuItemBlockableLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {AdminConfig, EnvironmentConfig} from 'mattermost-redux/types/config';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\n\nexport type BaseProps = {\n    config?: DeepPartial<AdminConfig>;\n    environmentConfig?: EnvironmentConfig;\n    setNavigationBlocked?: (blocked: boolean) => void;\n    isDisabled?: boolean;\n    updateConfig?: (config: AdminConfig) => {data: AdminConfig; error: ClientErrorPlaceholder};\n}\n\nexport type BaseState = {\n    saveNeeded: boolean;\n    saving: boolean;\n    serverError: string|null;\n    serverErrorId?: string;\n    errorTooltip: boolean;\n}\n\ntype StateKeys = keyof BaseState;\n\n// Placeholder type until ClientError is exported from redux.\n// TODO: remove ClientErrorPlaceholder and change the return type of updateConfig\ntype ClientErrorPlaceholder = {\n    message: string;\n    server_error_id: string;\n}\n\nexport default abstract class AdminSettings <Props extends BaseProps, State extends BaseState> extends React.Component<Props, State> {\n    private errorMessageRef: React.RefObject<HTMLDivElement>;\n    public constructor(props: Props) {\n        super(props);\n        const stateInit = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n        if (props.config) {\n            this.state = Object.assign(this.getStateFromConfig(props.config), stateInit) as Readonly<State>;\n        } else {\n            this.state = stateInit as Readonly<State>;\n        }\n        this.errorMessageRef = React.createRef();\n    }\n\n    protected abstract getStateFromConfig(config: DeepPartial<AdminConfig>): Partial<State>;\n\n    protected abstract getConfigFromState(config: DeepPartial<AdminConfig>): unknown;\n\n    protected abstract renderTitle(): React.ReactElement;\n\n    protected abstract renderSettings(): React.ReactElement;\n\n    protected handleSaved?: ((config: AdminConfig) => React.ReactElement);\n\n    protected canSave?: () => boolean;\n\n    private closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    private openTooltip = (e: React.MouseEvent) => {\n        const elm: HTMLElement|null = e.currentTarget.querySelector('.control-label');\n        if (elm) {\n            const isElipsis = elm.offsetWidth < elm.scrollWidth;\n            this.setState({errorTooltip: isElipsis});\n        }\n    }\n\n    protected handleChange = (id: string, value: boolean) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            saveNeeded: true,\n            [id]: value,\n        }));\n\n        if (this.props.setNavigationBlocked) {\n            this.props.setNavigationBlocked(true);\n        }\n    };\n\n    private handleSubmit = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n        this.doSubmit();\n    }\n\n    protected doSubmit = async (callback?: () => void) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        if (this.props.updateConfig) {\n            const {data, error} = await this.props.updateConfig(config);\n\n            if (data) {\n                this.setState(this.getStateFromConfig(data) as State);\n\n                this.setState({\n                    saveNeeded: false,\n                    saving: false,\n                });\n\n                if (this.props.setNavigationBlocked) {\n                    this.props.setNavigationBlocked(false);\n                }\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            } else if (error) {\n                this.setState({\n                    saving: false,\n                    serverError: error.message,\n                    serverErrorId: error.server_error_id,\n                });\n\n                if (callback) {\n                    callback();\n                }\n\n                if (this.handleSaved) {\n                    this.handleSaved(config);\n                }\n            }\n        }\n    };\n\n    private parseInt = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n)) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntNonNegative = (str: string, defaultValue?: number) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < 0) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 0;\n        }\n\n        return n;\n    };\n\n    private parseIntZeroOrMin = (str: string, minimumValue = 1) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < 0) {\n            return 0;\n        }\n        if (n > 0 && n < minimumValue) {\n            return minimumValue;\n        }\n\n        return n;\n    };\n\n    protected parseIntNonZero = (str: string, defaultValue?: number, minimumValue = 1) => {\n        const n = parseInt(str, 10);\n\n        if (isNaN(n) || n < minimumValue) {\n            if (defaultValue) {\n                return defaultValue;\n            }\n            return 1;\n        }\n\n        return n;\n    };\n\n    private getConfigValue(config: AdminConfig | EnvironmentConfig, path: string) {\n        const pathParts = path.split('.');\n\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        return pathParts.reduce((obj: object | null, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            return obj[(pathPart as keyof object)];\n        }, config);\n    }\n\n    private setConfigValue(config: AdminConfig, path: string, value: any) {\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        function setValue(obj: object, pathParts: string[]) {\n            // eslint-disable-next-line @typescript-eslint/ban-types\n            const part = pathParts[0] as keyof object;\n\n            if (pathParts.length === 1) {\n                Object.assign(obj, {[part]: value});\n            } else {\n                if (obj[part] == null) {\n                    Object.assign(obj, {[part]: {}});\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    protected isSetByEnv = (path: string) => {\n        return Boolean(this.props.environmentConfig && this.getConfigValue(this.props.environmentConfig!, path));\n    };\n\n    public render() {\n        return (\n            <form\n                className='form-horizontal'\n                role='form'\n                onSubmit={this.handleSubmit}\n            >\n                <div className='wrapper--fixed'>\n                    <AdminHeader>\n                        {this.renderTitle()}\n                    </AdminHeader>\n                    {this.renderSettings()}\n                    <div className='admin-console-save'>\n                        <SaveButton\n                            saving={this.state.saving}\n                            disabled={this.props.isDisabled || !this.state.saveNeeded || (this.canSave && !this.canSave())}\n                            onClick={this.handleSubmit}\n                            savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                        />\n                        <div\n                            className='error-message'\n                            ref={this.errorMessageRef}\n                            onMouseOver={this.openTooltip}\n                            onMouseOut={this.closeTooltip}\n                        >\n                            <FormError error={this.state.serverError}/>\n                        </div>\n                        <Overlay\n                            show={this.state.errorTooltip}\n                            placement='top'\n                            target={this.errorMessageRef.current as HTMLElement}\n                        >\n                            <Tooltip id='error-tooltip' >\n                                {this.state.serverError}\n                            </Tooltip>\n                        </Overlay>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage, injectIntl} from 'react-intl';\nimport Scrollbars from 'react-custom-scrollbars';\nimport isEqual from 'lodash/isEqual';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {generateIndex} from 'utils/admin_console_index.jsx';\nimport {browserHistory} from 'utils/browser_history';\nimport {intlShape} from 'utils/react_intl';\n\nimport AdminSidebarCategory from 'components/admin_console/admin_sidebar_category.jsx';\nimport AdminSidebarHeader from 'components/admin_console/admin_sidebar_header';\nimport AdminSidebarSection from 'components/admin_console/admin_sidebar_section.jsx';\nimport Highlight from 'components/admin_console/highlight';\nimport SearchIcon from 'components/widgets/icons/search_icon.jsx';\nimport QuickInput from 'components/quick_input';\n\nconst renderScrollView = (props) => (\n    <div\n        {...props}\n        className='scrollbar--view'\n    />\n);\n\nconst renderScrollThumbHorizontal = (props) => (\n    <div\n        {...props}\n        className='scrollbar--horizontal'\n    />\n);\n\nconst renderScrollThumbVertical = (props) => (\n    <div\n        {...props}\n        className='scrollbar--vertical'\n    />\n);\n\nclass AdminSidebar extends React.PureComponent {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        config: PropTypes.object,\n        plugins: PropTypes.object,\n        adminDefinition: PropTypes.object,\n        cloud: PropTypes.object,\n        buildEnterpriseReady: PropTypes.bool,\n        siteName: PropTypes.string,\n        onFilterChange: PropTypes.func.isRequired,\n        navigationBlocked: PropTypes.bool.isRequired,\n        consoleAccess: PropTypes.object,\n        intl: intlShape.isRequired,\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get installed plugins\n             */\n            getPlugins: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    static defaultProps = {\n        plugins: {},\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sections: null,\n            filter: '',\n        };\n        this.idx = null;\n        this.searchRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.props.config.PluginSettings.Enable) {\n            this.props.actions.getPlugins();\n        }\n\n        if (this.searchRef.current) {\n            this.searchRef.current.focus();\n        }\n\n        this.updateTitle();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.idx !== null &&\n            (!isEqual(this.props.plugins, prevProps.plugins) ||\n                !isEqual(this.props.adminDefinition, prevProps.adminDefinition))) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.props.intl);\n        }\n    }\n\n    onFilterChange = (e) => {\n        const filter = e.target.value;\n        if (filter === '') {\n            this.setState({sections: null, filter});\n            this.props.onFilterChange(filter);\n            return;\n        }\n\n        if (this.idx === null) {\n            this.idx = generateIndex(this.props.adminDefinition, this.props.plugins, this.props.intl);\n        }\n        let query = '';\n        for (const term of filter.split(' ')) {\n            term.trim();\n            if (term !== '') {\n                query += term + ' ';\n                query += term + '* ';\n            }\n        }\n        const sections = this.idx.search(query);\n        this.setState({sections, filter});\n        this.props.onFilterChange(filter);\n\n        if (this.props.navigationBlocked) {\n            return;\n        }\n\n        const validSection = sections.indexOf(browserHistory.location.pathname.replace('/admin_console/', '')) !== -1;\n        if (!validSection) {\n            const visibleSections = this.visibleSections();\n            for (const section of sections) {\n                if (visibleSections.has(section)) {\n                    browserHistory.replace('/admin_console/' + section);\n                    break;\n                }\n            }\n        }\n    }\n\n    updateTitle = () => {\n        let currentSiteName = '';\n        if (this.props.siteName) {\n            currentSiteName = ' - ' + this.props.siteName;\n        }\n\n        document.title = Utils.localizeMessage('sidebar_right_menu.console', 'System Console') + currentSiteName;\n    }\n\n    visibleSections = () => {\n        const {config, license, buildEnterpriseReady, consoleAccess, adminDefinition, cloud} = this.props;\n        const isVisible = (item) => {\n            if (!item.schema) {\n                return false;\n            }\n\n            if (!item.title) {\n                return false;\n            }\n\n            if (item.isHidden && item.isHidden(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud)) {\n                return false;\n            }\n            return true;\n        };\n        const result = new Set();\n        for (const section of Object.values(adminDefinition)) {\n            for (const item of Object.values(section)) {\n                if (isVisible(item)) {\n                    result.add(item.url);\n                }\n            }\n        }\n        return result;\n    }\n\n    renderRootMenu = (definition) => {\n        const {config, license, buildEnterpriseReady, consoleAccess, cloud} = this.props;\n        const sidebarSections = [];\n        Object.entries(definition).forEach(([key, section]) => {\n            let isSectionHidden = false;\n            if (section.isHidden) {\n                isSectionHidden = typeof section.isHidden === 'function' ? section.isHidden(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud) : Boolean(section.isHidden);\n            }\n            if (!isSectionHidden) {\n                const sidebarItems = [];\n                Object.entries(section).forEach(([subKey, item]) => {\n                    if (!item.title) {\n                        return;\n                    }\n\n                    if (item.isHidden) {\n                        if (typeof item.isHidden === 'function' ? item.isHidden(config, this.state, license, buildEnterpriseReady, consoleAccess, cloud) : Boolean(item.isHidden)) {\n                            return;\n                        }\n                    }\n\n                    if (this.state.sections !== null) {\n                        let active = false;\n                        for (const url of this.state.sections) {\n                            if (url === item.url) {\n                                active = true;\n                            }\n                        }\n                        if (!active) {\n                            return;\n                        }\n                    }\n                    const subDefinitionKey = `${key}.${subKey}`;\n                    let tag = '';\n                    if (item.tag?.shouldDisplay(config)) {\n                        tag = item.tag.value;\n                    }\n                    sidebarItems.push((\n                        <AdminSidebarSection\n                            key={subDefinitionKey}\n                            definitionKey={subDefinitionKey}\n                            name={item.url}\n                            tag={tag}\n                            title={\n                                <FormattedMessage\n                                    id={item.title}\n                                    defaultMessage={item.title_default}\n                                />\n                            }\n                        />\n                    ));\n                });\n\n                // Special case for plugins entries\n                let moreSidebarItems = [];\n                if (section.id === 'plugins') {\n                    moreSidebarItems = this.renderPluginsMenu();\n                }\n\n                // If no visible items, don't display this section\n                if (sidebarItems.length === 0 && moreSidebarItems.length === 0) {\n                    return null;\n                }\n\n                if (sidebarItems.length || moreSidebarItems.length) {\n                    sidebarSections.push((\n                        <AdminSidebarCategory\n                            key={key}\n                            definitionKey={key}\n                            parentLink='/admin_console'\n                            icon={section.icon}\n                            sectionClass=''\n                            title={\n                                <FormattedMessage\n                                    id={section.sectionTitle}\n                                    defaultMessage={section.sectionTitleDefault}\n                                />\n                            }\n                        >\n                            {sidebarItems}\n                            {moreSidebarItems}\n                        </AdminSidebarCategory>\n                    ));\n                }\n            }\n            return null;\n        });\n        return sidebarSections;\n    }\n\n    isPluginPresentInSections = (plugin) => {\n        return this.state.sections && this.state.sections.indexOf(`plugin_${plugin.id}`) !== -1;\n    }\n\n    renderPluginsMenu = () => {\n        if (this.props.config.PluginSettings.Enable) {\n            return Object.values(this.props.plugins).sort((a, b) => {\n                const nameCompare = a.name.localeCompare(b.name);\n                if (nameCompare !== 0) {\n                    return nameCompare;\n                }\n\n                return a.id.localeCompare(b.id);\n            }).\n                filter((plugin) => this.state.sections === null || this.isPluginPresentInSections(plugin)).\n                map((plugin) => {\n                    return (\n                        <AdminSidebarSection\n                            key={'customplugin' + plugin.id}\n                            name={'plugins/plugin_' + plugin.id}\n                            title={plugin.name}\n                        />\n                    );\n                });\n        }\n\n        return [];\n    }\n\n    handleClearFilter = () => {\n        this.setState({sections: null, filter: ''});\n        this.props.onFilterChange('');\n    }\n\n    render() {\n        return (\n            <div className='admin-sidebar'>\n                <AdminSidebarHeader/>\n                <div className='filter-container'>\n                    <SearchIcon\n                        className='search__icon'\n                        aria-hidden='true'\n                    />\n                    <QuickInput\n                        className={'filter ' + (this.state.filter ? 'active' : '')}\n                        type='text'\n                        onChange={this.onFilterChange}\n                        value={this.state.filter}\n                        placeholder={Utils.localizeMessage('admin.sidebar.filter', 'Find settings')}\n                        ref={this.searchRef}\n                        id='adminSidebarFilter'\n                        clearable={true}\n                        onClear={this.handleClearFilter}\n                    />\n                </div>\n                <Scrollbars\n                    ref='scrollbar'\n                    autoHide={true}\n                    autoHideTimeout={500}\n                    autoHideDuration={500}\n                    renderThumbHorizontal={renderScrollThumbHorizontal}\n                    renderThumbVertical={renderScrollThumbVertical}\n                    renderView={renderScrollView}\n                >\n                    <div className='nav-pills__container'>\n                        <Highlight filter={this.state.filter}>\n                            <ul className='nav nav-pills nav-stacked'>\n                                {this.renderRootMenu(this.props.adminDefinition)}\n                            </ul>\n                        </Highlight>\n                    </div>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(AdminSidebar);\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getPlugins} from 'mattermost-redux/actions/admin';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {getNavigationBlocked} from 'selectors/views/admin';\nimport {getAdminDefinition, getConsoleAccess} from 'selectors/admin_console';\n\nimport AdminSidebar from './admin_sidebar.jsx';\n\nfunction mapStateToProps(state) {\n    const license = getLicense(state);\n    const config = getConfig(state);\n    const buildEnterpriseReady = config.BuildEnterpriseReady === 'true';\n    const siteName = config.SiteName;\n    const adminDefinition = getAdminDefinition(state);\n    const consoleAccess = getConsoleAccess(state);\n\n    return {\n        license,\n        config: state.entities.admin.config,\n        plugins: state.entities.admin.plugins,\n        navigationBlocked: getNavigationBlocked(state),\n        buildEnterpriseReady,\n        siteName,\n        adminDefinition,\n        consoleAccess,\n        cloud: state.entities.cloud,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getPlugins,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, null, {pure: false})(AdminSidebar);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {NavLink, Route} from 'react-router-dom';\n\nexport default class AdminSidebarCategory extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string,\n            title: PropTypes.node.isRequired,\n            icon: PropTypes.string.isRequired,\n            sectionClass: PropTypes.string,\n            parentLink: PropTypes.string,\n            children: PropTypes.node,\n            action: PropTypes.node,\n            definitionKey: PropTypes.string,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n        };\n    }\n\n    render() {\n        let link = this.props.parentLink;\n        let title = (\n            <div className='category-title category-title--active'>\n                <i className={'category-icon fa ' + this.props.icon}/>\n                <span className='category-title__text'>\n                    {this.props.title}\n                </span>\n                {this.props.action}\n            </div>\n        );\n\n        if (this.props.name) {\n            link += '/' + name;\n            title = (\n                <NavLink\n                    to={link}\n                    className='category-title'\n                    activeClassName='category-title category-title--active'\n                >\n                    {title}\n                </NavLink>\n            );\n        }\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <Route\n                    path={link}\n                    render={() => (\n                        <ul className={'sections ' + this.props.sectionClass}>\n                            {\n                                React.Children.map(this.props.children, (child) => {\n                                    if (child === null) {\n                                        return null;\n                                    }\n\n                                    return React.cloneElement(child, {\n                                        parentLink: link,\n                                    });\n                                })\n                            }\n                        </ul>\n                    )}\n                />\n            );\n        }\n\n        return (\n            <li\n                className='sidebar-category'\n                data-testid={this.props.definitionKey}\n            >\n                {title}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {UserProfile} from 'mattermost-redux/src/types/users';\n\nimport MenuIcon from 'components/widgets/icons/menu_icon';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport AdminNavbarDropdown from 'components/admin_console/admin_navbar_dropdown';\n\ntype Props = {\n    currentUser: UserProfile;\n}\n\nexport default class SidebarHeader extends React.PureComponent<Props> {\n    public render() {\n        const me = this.props.currentUser;\n        let profilePicture = null;\n\n        if (!me) {\n            return null;\n        }\n\n        if (me.last_picture_update) {\n            profilePicture = (\n                <Avatar\n                    username={me.username}\n                    url={Client4.getProfilePictureUrl(me.id, me.last_picture_update)}\n                    size='lg'\n                />\n            );\n        }\n\n        return (\n            <MenuWrapper className='AdminSidebarHeader'>\n                <div>\n                    {profilePicture}\n                    <div className='header__info'>\n                        <div className='team__name'>\n                            <FormattedMessage\n                                id='admin.sidebarHeader.systemConsole'\n                                defaultMessage='System Console'\n                            />\n                        </div>\n                        <div className='user__name overflow--ellipsis whitespace--nowrap'>{'@' + me.username}</div>\n                    </div>\n                    <button\n                        type='button'\n                        className='style--none'\n                    >\n                        <MenuIcon className='menu-icon'/>\n                    </button>\n                </div>\n                <AdminNavbarDropdown/>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminSidebarHeader from './admin_sidebar_header';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        currentUser: getCurrentUser(state),\n    };\n}\n\nexport default connect(mapStateToProps)(AdminSidebarHeader);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class AdminSidebarSection extends React.PureComponent {\n    static get propTypes() {\n        return {\n            name: PropTypes.string.isRequired,\n            title: PropTypes.node.isRequired,\n            type: PropTypes.string,\n            parentLink: PropTypes.string,\n            subsection: PropTypes.bool,\n            children: PropTypes.node,\n            action: PropTypes.node,\n            definitionKey: PropTypes.string,\n            tag: PropTypes.node,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            parentLink: '',\n            subsection: false,\n            children: [],\n        };\n    }\n\n    getLink() {\n        return this.props.parentLink + '/' + this.props.name;\n    }\n\n    render() {\n        const link = this.getLink();\n\n        let clonedChildren = null;\n        if (this.props.children) {\n            clonedChildren = (\n                <ul className='nav nav__sub-menu subsections'>\n                    {\n                        React.Children.map(this.props.children, (child) => {\n                            if (child === null) {\n                                return null;\n                            }\n\n                            return React.cloneElement(child, {\n                                parentLink: link,\n                                subsection: true,\n                            });\n                        })\n                    }\n                </ul>\n            );\n        }\n\n        let className = 'sidebar-section';\n        if (this.props.subsection) {\n            className += ' sidebar-subsection';\n        }\n        let tag = '';\n        if (this.props.tag) {\n            tag = (\n                <span className={`${className}-tag`}>\n                    {this.props.tag}\n                </span>\n            );\n        }\n        const sidebarItemSafeId = Utils.createSafeId(this.props.name);\n        let sidebarItem = (\n            <BlockableLink\n                id={sidebarItemSafeId}\n                className={`${className}-title`}\n                activeClassName={`${className}-title ${className}-title--active`}\n                to={link}\n                onClick={() => trackEvent('admin', sidebarItemSafeId)}\n            >\n                <span className={`${className}-title__text`}>\n                    {this.props.title}{tag}\n                </span>\n                {this.props.action}\n            </BlockableLink>\n        );\n\n        if (this.props.type === 'text') {\n            sidebarItem = (\n                <div\n                    className={`${className}-title`}\n                >\n                    <span className={`${className}-title__text`}>\n                        {this.props.title}\n                    </span>\n                    {this.props.action}\n                </div>\n            );\n        }\n\n        return (\n            <li\n                className={className}\n                data-testid={this.props.definitionKey}\n            >\n                {sidebarItem}\n                {clonedChildren}\n            </li>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Client4} from 'mattermost-redux/client';\n\nimport ProfilePicture from 'components/profile_picture';\nimport * as Utils from 'utils/utils.jsx';\n\nimport './admin_user_card.scss';\n\nconst Bullet = (props) => {\n    if ((props.user.first_name || props.user.last_name) && props.user.nickname) {\n        return (<span>{' • '}</span>);\n    }\n    return null;\n};\n\nconst AdminUserCard = (props) => (\n    <div className='AdminUserCard'>\n        <div className='AdminUserCard__header'>\n            <ProfilePicture\n                src={Client4.getProfilePictureUrl(props.user.id, props.user.last_picture_update)}\n                size='xxl'\n                wrapperClass='admin-user-card'\n                userId={props.user.id}\n            />\n            <div className='AdminUserCard__user-info'>\n                <span>{props.user.first_name} {props.user.last_name}</span>\n                <Bullet user={props.user}/>\n                <span className='AdminUserCard__user-nickname'>{props.user.nickname}</span>\n            </div>\n            <div className='AdminUserCard__user-id'>\n                {Utils.localizeMessage('admin.userManagement.userDetail.userId', 'User ID:')} {props.user.id}\n            </div>\n        </div>\n        <div className='AdminUserCard__body'>\n            {props.body}\n        </div>\n        <div className='AdminUserCard__footer'>\n            {props.footer}\n        </div>\n    </div>\n);\n\nBullet.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n    }),\n};\n\nAdminUserCard.propTypes = {\n    user: PropTypes.shape({\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        nickname: PropTypes.string,\n        last_picture_update: PropTypes.number,\n        id: PropTypes.string,\n    }),\n    body: PropTypes.element,\n    footer: PropTypes.element,\n};\n\nexport default AdminUserCard;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_user_card.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Audit} from 'mattermost-redux/types/audits';\n\nimport ComplianceReports from 'components/admin_console/compliance_reports';\nimport AuditTable from 'components/audit_table';\nimport LoadingScreen from 'components/loading_screen';\n\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\n\ntype Props = {\n    isLicensed: boolean;\n    audits: Audit[];\n    isDisabled?: boolean;\n    actions: {\n        getAudits: () => Promise<{data: Audit[]}>;\n    };\n};\n\ntype State = {\n    loadingAudits: boolean;\n};\n\nexport default class Audits extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loadingAudits: true,\n        };\n    }\n\n    public componentDidMount() {\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false}),\n        );\n    }\n\n    private reload = () => {\n        this.setState({loadingAudits: true});\n        this.props.actions.getAudits().then(\n            () => this.setState({loadingAudits: false}),\n        );\n    };\n\n    private activityLogHeader = () => {\n        const h4Style: CSSProperties = {\n            display: 'inline-block',\n            marginBottom: '6px',\n        };\n        const divStyle: CSSProperties = {\n            clear: 'both',\n        };\n        return (\n            <div style={divStyle}>\n                <h4 style={h4Style}>\n                    <FormattedMessage\n                        id='admin.complianceMonitoring.userActivityLogsTitle'\n                        defaultMessage='User Activity Logs'\n                    />\n                </h4>\n                <button\n                    type='submit'\n                    className='btn btn-link pull-right'\n                    onClick={this.reload}\n                >\n                    <ReloadIcon/>\n                    <FormattedMessage\n                        id='admin.audits.reload'\n                        defaultMessage='Reload User Activity Logs'\n                    />\n                </button>\n            </div>\n        );\n    };\n\n    private renderComplianceReports = () => {\n        if (!this.props.isLicensed) {\n            return <div/>;\n        }\n        return <ComplianceReports readOnly={this.props.isDisabled}/>;\n    };\n\n    public render() {\n        let content = null;\n\n        if (this.state.loadingAudits) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <div>\n                    <AuditTable\n                        audits={this.props.audits}\n                        showUserId={true}\n                        showIp={true}\n                        showSession={true}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                {this.renderComplianceReports()}\n                <div className='panel compliance-panel'>\n                    {this.activityLogHeader()}\n                    <div className='compliance-panel__table'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {Audit} from 'mattermost-redux/types/audits';\nimport {getAudits} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\n\nimport Audits from './audits';\n\ntype Actions = {\n    getAudits: () => Promise<{data: Audit[]}>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const license = getLicense(state);\n    const isLicensed = license.Compliance === 'true';\n\n    return {\n        isLicensed,\n        audits: Object.values(Selectors.getAudits(state)),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getAudits,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Audits);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title?: JSX.Element;\n    description: JSX.Element;\n}\n\nconst Banner: React.FC<Props> = (props: Props) => {\n    let title = (\n        <FormattedMessage\n            id='admin.banner.heading'\n            defaultMessage='Note:'\n        />\n    );\n\n    if (props.title) {\n        title = props.title;\n    }\n\n    return (\n        <div className='banner'>\n            <div className='banner__content'>\n                <h4 className='banner__heading'>\n                    {title}\n                </h4>\n                <p>\n                    {props.description}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default Banner;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./billing_history.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect, useState} from 'react';\nimport {FormattedDate, FormattedMessage, FormattedNumber} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {getCloudProducts, getCloudSubscription, getInvoices} from 'mattermost-redux/actions/cloud';\nimport {Client4} from 'mattermost-redux/client';\nimport {Invoice} from 'mattermost-redux/types/cloud';\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\n\nimport {pageVisited, trackEvent} from 'actions/telemetry_actions';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport noBillingHistoryGraphic from 'images/no_billing_history_graphic.svg';\nimport {CloudLinks} from 'utils/constants';\n\nimport './billing_history.scss';\n\ntype Props = {\n\n};\n\nconst PAGE_LENGTH = 4;\n\nconst noBillingHistorySection = (\n    <div className='BillingHistory__noHistory'>\n        <img\n            className='BillingHistory__noHistory-graphic'\n            src={noBillingHistoryGraphic}\n        />\n        <div className='BillingHistory__noHistory-message'>\n            <FormattedMessage\n                id='admin.billing.history.noBillingHistory'\n                defaultMessage='In the future, this is where your billing history will show.'\n            />\n        </div>\n        <a\n            target='_new'\n            rel='noopener noreferrer'\n            href={CloudLinks.BILLING_DOCS}\n            className='BillingHistory__noHistory-link'\n            onClick={() => trackEvent('cloud_admin', 'click_billing_history', {screen: 'billing'})}\n        >\n            <FormattedMessage\n                id='admin.billing.history.seeHowBillingWorks'\n                defaultMessage='See how billing works'\n            />\n        </a>\n    </div>\n);\n\nconst getPaymentStatus = (status: string) => {\n    switch (status) {\n    case 'failed':\n        return (\n            <div className='BillingHistory__paymentStatus failed'>\n                <i className='icon icon-alert-outline'/>\n                <FormattedMessage\n                    id='admin.billing.history.paymentFailed'\n                    defaultMessage='Payment failed'\n                />\n            </div>\n        );\n    case 'paid':\n        return (\n            <div className='BillingHistory__paymentStatus paid'>\n                <i className='icon icon-check-circle-outline'/>\n                <FormattedMessage\n                    id='admin.billing.history.paid'\n                    defaultMessage='Paid'\n                />\n            </div>\n        );\n    default:\n        return (\n            <div className='BillingHistory__paymentStatus pending'>\n                <i className='icon icon-check-circle-outline'/>\n                <FormattedMessage\n                    id='admin.billing.history.pending'\n                    defaultMessage='Pending'\n                />\n            </div>\n        );\n    }\n};\n\nconst BillingHistory: React.FC<Props> = () => {\n    const dispatch = useDispatch();\n    const invoices = useSelector((state: GlobalState) => state.entities.cloud.invoices);\n    const subscription = useSelector((state: GlobalState) => state.entities.cloud.subscription);\n    const product = useSelector((state: GlobalState) => {\n        if (state.entities.cloud.products && subscription) {\n            return state.entities.cloud.products[subscription?.product_id];\n        }\n        return undefined;\n    });\n\n    const [billingHistory, setBillingHistory] = useState<Invoice[] | undefined>(undefined);\n    const [firstRecord, setFirstRecord] = useState(1);\n\n    const previousPage = () => {\n        if (firstRecord > PAGE_LENGTH) {\n            setFirstRecord(firstRecord - PAGE_LENGTH);\n        }\n    };\n    const nextPage = () => {\n        if (invoices && (firstRecord + PAGE_LENGTH) < Object.values(invoices).length) {\n            setFirstRecord(firstRecord + PAGE_LENGTH);\n        }\n\n        // TODO: When server paging, check if there are more invoices\n    };\n    useEffect(() => {\n        dispatch(getCloudProducts());\n        dispatch(getCloudSubscription());\n        dispatch(getInvoices());\n        pageVisited('cloud_admin', 'pageview_billing_history');\n    }, []);\n\n    useEffect(() => {\n        if (invoices && Object.values(invoices).length) {\n            const invoicesByDate = Object.values(invoices).sort((a, b) => b.period_start - a.period_start);\n            setBillingHistory(invoicesByDate.slice(firstRecord - 1, (firstRecord - 1) + PAGE_LENGTH));\n        }\n    }, [invoices, firstRecord]);\n\n    const paging = (\n        <div className='BillingHistory__paging'>\n            <FormattedMarkdownMessage\n                id='admin.billing.history.pageInfo'\n                defaultMessage='{startRecord} - {endRecord} of {totalRecords}'\n                values={{\n                    startRecord: firstRecord,\n                    endRecord: Math.min(firstRecord + (PAGE_LENGTH - 1), Object.values(invoices || []).length),\n                    totalRecords: Object.values(invoices || []).length,\n                }}\n            />\n            <button\n                onClick={previousPage}\n                disabled={firstRecord <= PAGE_LENGTH}\n            >\n                <i className='icon icon-chevron-left'/>\n            </button>\n            <button\n                onClick={nextPage}\n                disabled={!invoices || (firstRecord + PAGE_LENGTH) >= Object.values(invoices).length}\n            >\n                <i className='icon icon-chevron-right'/>\n            </button>\n        </div>\n    );\n\n    const billingHistoryTable = billingHistory && (\n        <>\n            <table className='BillingHistory__table'>\n                <tr className='BillingHistory__table-header'>\n                    <th>\n                        <FormattedMessage\n                            id='admin.billing.history.date'\n                            defaultMessage='Date'\n                        />\n                    </th>\n                    <th>\n                        <FormattedMessage\n                            id='admin.billing.history.description'\n                            defaultMessage='Description'\n                        />\n                    </th>\n                    <th className='BillingHistory__table-headerTotal'>\n                        <FormattedMessage\n                            id='admin.billing.history.total'\n                            defaultMessage='Total'\n                        />\n                    </th>\n                    <th>\n                        <FormattedMessage\n                            id='admin.billing.history.status'\n                            defaultMessage='Status'\n                        />\n                    </th>\n                    <th>{''}</th>\n                </tr>\n                {billingHistory.map((invoice: Invoice) => {\n                    const fullUsers = invoice.line_items.filter((item) => item.type === 'full').reduce((val, item) => val + item.quantity, 0);\n                    const partialUsers = invoice.line_items.filter((item) => item.type === 'partial').reduce((val, item) => val + item.quantity, 0);\n\n                    return (\n                        <tr\n                            className='BillingHistory__table-row'\n                            key={invoice.id}\n                        >\n                            <td>\n                                <FormattedDate\n                                    value={new Date(invoice.period_start)}\n                                    month='2-digit'\n                                    day='2-digit'\n                                    year='numeric'\n                                    timeZone='UTC'\n                                />\n                            </td>\n                            <td>\n                                <div>{product?.name}</div>\n                                <div className='BillingHistory__table-bottomDesc'>\n                                    <FormattedMarkdownMessage\n                                        id='admin.billing.history.usersAndRates'\n                                        defaultMessage='{fullUsers} users at full rate, {partialUsers} users with partial charges'\n                                        values={{\n                                            fullUsers,\n                                            partialUsers,\n                                        }}\n                                    />\n                                </div>\n                            </td>\n                            <td className='BillingHistory__table-total'>\n                                <FormattedNumber\n                                    value={(invoice.total / 100.0)}\n                                    // eslint-disable-next-line react/style-prop-object\n                                    style='currency'\n                                    currency='USD'\n                                />\n                            </td>\n                            <td>\n                                {getPaymentStatus(invoice.status)}\n                            </td>\n                            <td className='BillingHistory__table-invoice'>\n                                <a\n                                    target='_new'\n                                    rel='noopener noreferrer'\n                                    href={Client4.getInvoicePdfUrl(invoice.id)}\n                                >\n                                    <i className='icon icon-file-pdf-outline'/>\n                                </a>\n                            </td>\n                        </tr>\n                    );\n                })}\n            </table>\n            {paging}\n        </>\n    );\n\n    return (\n        <div className='wrapper--fixed BillingHistory'>\n            <FormattedAdminHeader\n                id='admin.billing.history.title'\n                defaultMessage='Billing History'\n            />\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <div className='BillingHistory__card'>\n                        <div className='BillingHistory__cardHeader'>\n                            <div className='BillingHistory__cardHeaderText'>\n                                <div className='BillingHistory__cardHeaderText-top'>\n                                    <FormattedMessage\n                                        id='admin.billing.history.transactions'\n                                        defaultMessage='Transactions'\n                                    />\n                                </div>\n                                <div className='BillingHistory__cardHeaderText-bottom'>\n                                    <FormattedMessage\n                                        id='admin.billing.history.allPaymentsShowHere'\n                                        defaultMessage='All of your monthly payments will show here'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className='BillingHistory__cardBody'>\n                            {invoices != null && (\n                                <>\n                                    {billingHistory ?\n                                        billingHistoryTable :\n                                        noBillingHistorySection}\n                                </>\n                            )}\n                            {invoices == null && (\n                                <div className='BillingHistory__spinner'>\n                                    <LoadingSpinner/>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BillingHistory;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./billing_subscriptions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect, useState} from 'react';\nimport {useDispatch, useStore, useSelector} from 'react-redux';\nimport {FormattedMessage, useIntl} from 'react-intl';\n\nimport {getStandardAnalytics} from 'mattermost-redux/actions/admin';\nimport {getCloudSubscription, getCloudProducts, getCloudCustomer} from 'mattermost-redux/actions/cloud';\nimport {savePreferences} from 'mattermost-redux/actions/preferences';\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {makeGetCategory} from 'mattermost-redux/selectors/entities/preferences';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {DispatchFunc} from 'mattermost-redux/types/actions';\nimport {PreferenceType} from 'mattermost-redux/types/preferences';\n\nimport {pageVisited, trackEvent} from 'actions/telemetry_actions';\nimport {openModal} from 'actions/views/modals';\nimport AlertBanner from 'components/alert_banner';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport PurchaseModal from 'components/purchase_modal';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport {getCloudContactUsLink, InquiryType} from 'selectors/cloud';\nimport {GlobalState} from 'types/store';\nimport {\n    Preferences,\n    CloudBanners,\n    ModalIdentifiers,\n    TELEMETRY_CATEGORIES,\n} from 'utils/constants';\nimport {isCustomerCardExpired} from 'utils/cloud_utils';\n\nimport privateCloudImage from 'images/private-cloud-image.svg';\nimport upgradeMattermostCloudImage from 'images/upgrade-mattermost-cloud-image.svg';\n\nimport BillingSummary from './billing_summary';\nimport PlanDetails from './plan_details';\n\nimport './billing_subscriptions.scss';\n\nconst WARNING_THRESHOLD = 3;\n\ntype Props = {\n};\n\nconst BillingSubscriptions: React.FC<Props> = () => {\n    const {formatMessage} = useIntl();\n    const dispatch = useDispatch<DispatchFunc>();\n    const store = useStore();\n    const userLimit = useSelector((state: GlobalState) => parseInt(getConfig(state).ExperimentalCloudUserLimit!, 10));\n    const analytics = useSelector((state: GlobalState) => state.entities.admin.analytics);\n    const currentUser = useSelector((state: GlobalState) => getCurrentUser(state));\n    const isCloud = useSelector((state: GlobalState) => getLicense(state).Cloud === 'true');\n    const subscription = useSelector((state: GlobalState) => state.entities.cloud.subscription);\n\n    const products = useSelector((state: GlobalState) => state.entities.cloud.products);\n    const isCardExpired = useSelector((state: GlobalState) => isCustomerCardExpired(state.entities.cloud.customer));\n    const getCategory = makeGetCategory();\n    const preferences = useSelector<GlobalState, PreferenceType[]>((state) => getCategory(state, Preferences.ADMIN_CLOUD_UPGRADE_PANEL));\n\n    const contactSalesLink = useSelector((state: GlobalState) => getCloudContactUsLink(state, InquiryType.Sales));\n\n    const [showCreditCardBanner, setShowCreditCardBanner] = useState(true);\n\n    const onUpgradeMattermostCloud = () => {\n        trackEvent('cloud_admin', 'click_upgrade_mattermost_cloud');\n\n        dispatch(openModal({\n            modalId: ModalIdentifiers.CLOUD_PURCHASE,\n            dialogType: PurchaseModal,\n        }));\n    };\n\n    useEffect(() => {\n        getCloudSubscription()(dispatch, store.getState());\n        getCloudProducts()(dispatch, store.getState());\n        getCloudCustomer()(dispatch, store.getState());\n\n        if (!analytics) {\n            (async function getAllAnalytics() {\n                await dispatch(getStandardAnalytics());\n            }());\n        }\n\n        pageVisited('cloud_admin', 'pageview_billing_subscription');\n\n        if (analytics && shouldShowInfoBanner()) {\n            trackEvent(TELEMETRY_CATEGORIES.CLOUD_ADMIN, 'bannerview_user_limit_warning');\n        }\n    }, []);\n\n    const shouldShowInfoBanner = (): boolean => {\n        if (!analytics || !isCloud || !userLimit || !preferences || !subscription || subscription.is_paid_tier === 'true' || preferences.some((pref: PreferenceType) => pref.name === CloudBanners.HIDE && pref.value === 'true')) {\n            return false;\n        }\n\n        if ((userLimit - Number(analytics.TOTAL_USERS)) <= WARNING_THRESHOLD && (userLimit - Number(analytics.TOTAL_USERS) > 0)) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const shouldShowPaymentFailedBanner = () => {\n        return subscription?.last_invoice?.status === 'failed';\n    };\n\n    const handleHide = async () => {\n        trackEvent(\n            TELEMETRY_CATEGORIES.CLOUD_ADMIN,\n            'click_close_banner_user_limit_warning',\n        );\n        dispatch(savePreferences(currentUser.id, [\n            {\n                category: Preferences.ADMIN_CLOUD_UPGRADE_PANEL,\n                user_id: currentUser.id,\n                name: CloudBanners.HIDE,\n                value: 'true',\n            },\n        ]));\n    };\n\n    const upgradeMattermostCloud = () => (\n        <div className='UpgradeMattermostCloud'>\n            <div className='UpgradeMattermostCloud__image'>\n                <img src={upgradeMattermostCloudImage}/>\n            </div>\n            <div className='UpgradeMattermostCloud__title'>\n                <FormattedMessage\n                    id='admin.billing.subscription.upgradeMattermostCloud.title'\n                    defaultMessage='Need more users?'\n                />\n            </div>\n            <div className='UpgradeMattermostCloud__description'>\n                <FormattedMarkdownMessage\n                    id='admin.billing.subscription.upgradeMattermostCloud.description'\n                    defaultMessage='The free tier is **limited to 10 users.** Get access to more users, teams and other great features'\n                />\n            </div>\n            <button\n                type='button'\n                onClick={onUpgradeMattermostCloud}\n                className='UpgradeMattermostCloud__upgradeButton'\n            >\n                <FormattedMessage\n                    id='admin.billing.subscription.upgradeMattermostCloud.upgradeButton'\n                    defaultMessage='Upgrade Mattermost Cloud'\n                />\n            </button>\n        </div>\n    );\n\n    const privateCloudCard = () => (\n        <div className='PrivateCloudCard'>\n            <div className='PrivateCloudCard__text'>\n                <div className='PrivateCloudCard__text-title'>\n                    <FormattedMessage\n                        id='admin.billing.subscription.privateCloudCard.title'\n                        defaultMessage='Looking for a high-trust private cloud?'\n                    />\n                </div>\n                <div className='PrivateCloudCard__text-description'>\n                    <FormattedMessage\n                        id='admin.billing.subscription.privateCloudCard.description'\n                        defaultMessage='If you need software with dedicated, single-tenant architecture, Mattermost Private Cloud (Beta) is the solution for high-trust collaboration.'\n                    />\n                </div>\n                <a\n                    href={contactSalesLink}\n                    rel='noopener noreferrer'\n                    target='_new'\n                    className='PrivateCloudCard__contactSales'\n                    onClick={() => trackEvent('cloud_admin', 'click_contact_sales')}\n                >\n                    <FormattedMessage\n                        id='admin.billing.subscription.privateCloudCard.contactSales'\n                        defaultMessage='Contact Sales'\n                    />\n                </a>\n            </div>\n            <div className='PrivateCloudCard__image'>\n                <img src={privateCloudImage}/>\n            </div>\n        </div>\n    );\n\n    if (!subscription || !products) {\n        return null;\n    }\n\n    return (\n        <div className='wrapper--fixed BillingSubscriptions'>\n            <FormattedAdminHeader\n                id='admin.billing.subscription.title'\n                defaultMessage='Subscriptions'\n            />\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    {shouldShowPaymentFailedBanner() && (\n                        <AlertBanner\n                            mode='danger'\n                            title={formatMessage({\n                                id: 'billing.subscription.info.mostRecentPaymentFailed',\n                                defaultMessage: 'Your most recent payment failed',\n                            })}\n                            message={\n                                <>\n                                    <FormattedMessage\n                                        id='billing.subscription.info.mostRecentPaymentFailed.description.mostRecentPaymentFailed'\n                                        defaultMessage='It looks your most recent payment failed because the credit card on your account has expired. Please '\n                                    />\n                                    <BlockableLink\n                                        to='/admin_console/billing/payment_info'\n                                    >\n                                        <FormattedMessage\n                                            id='billing.subscription.info.mostRecentPaymentFailed.description.updatePaymentInformation'\n                                            defaultMessage='update your payment information'\n                                        />\n                                    </BlockableLink>\n                                    <FormattedMessage\n                                        id='billing.subscription.info.mostRecentPaymentFailed.description.avoidAnyDisruption'\n                                        defaultMessage=' to avoid any disruption.'\n                                    />\n                                </>\n                            }\n                        />\n                    )}\n                    {shouldShowInfoBanner() && (\n                        <AlertBanner\n                            mode='info'\n                            title={formatMessage({\n                                id: 'billing.subscription.info.headsup',\n                                defaultMessage: 'Just a heads up',\n                            })}\n                            message={formatMessage({\n                                id: 'billing.subscription.info.headsup.description',\n                                defaultMessage:\n                    'You’re nearing the user limit with the free tier of Mattermost Cloud. We’ll let you know if you hit that limit.',\n                            })}\n                            onDismiss={() => handleHide()}\n                        />\n                    )}\n                    {showCreditCardBanner && isCardExpired && (\n                        <AlertBanner\n                            mode='danger'\n                            title={\n                                <FormattedMessage\n                                    id='admin.billing.subscription.creditCardHasExpired'\n                                    defaultMessage='Your credit card has expired'\n                                />\n                            }\n                            message={\n                                <>\n                                    <FormattedMessage\n                                        id='admin.billing.subscription.creditCardHasExpired.please'\n                                        defaultMessage='Please '\n                                    />\n                                    <BlockableLink\n                                        to='/admin_console/billing/payment_info'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.billing.subscription.creditCardHasExpired.description.updatePaymentInformation'\n                                            defaultMessage='update your payment information'\n                                        />\n                                    </BlockableLink>\n                                    <FormattedMessage\n                                        id='admin.billing.subscription.creditCardHasExpired.description.avoidAnyDisruption'\n                                        defaultMessage=' to avoid any disruption.'\n                                    />\n                                </>\n                            }\n                            onDismiss={() => setShowCreditCardBanner(false)}\n                        />\n                    )}\n                    <div className='BillingSubscriptions__topWrapper'>\n                        <PlanDetails/>\n                        {subscription?.is_paid_tier === 'true' ? <BillingSummary/> : upgradeMattermostCloud()}\n                    </div>\n                    {privateCloudCard()}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BillingSubscriptions;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./billing_summary.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Tooltip} from 'react-bootstrap';\nimport {FormattedDate, FormattedMessage, FormattedNumber} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport {trackEvent} from 'actions/telemetry_actions';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport {GlobalState} from 'types/store';\nimport {CloudLinks} from 'utils/constants';\n\nimport noBillingHistoryGraphic from 'images/no_billing_history_graphic.svg';\n\nimport './billing_summary.scss';\n\nconst noBillingHistory = (\n    <div className='BillingSummary__noBillingHistory'>\n        <img\n            className='BillingSummary__noBillingHistory-graphic'\n            src={noBillingHistoryGraphic}\n        />\n        <div className='BillingSummary__noBillingHistory-title'>\n            <FormattedMessage\n                id='admin.billing.subscriptions.billing_summary.noBillingHistory.title'\n                defaultMessage='No billing history yet'\n            />\n        </div>\n        <div className='BillingSummary__noBillingHistory-message'>\n            <FormattedMessage\n                id='admin.billing.subscriptions.billing_summary.noBillingHistory.description'\n                defaultMessage='In the future, this is where your most recent bill summary will show.'\n            />\n        </div>\n        <a\n            target='_new'\n            rel='noopener noreferrer'\n            href={CloudLinks.BILLING_DOCS}\n            className='BillingSummary__noBillingHistory-link'\n            onClick={() => trackEvent('cloud_admin', 'click_how_billing_works', {screen: 'subscriptions'})}\n        >\n            <FormattedMessage\n                id='admin.billing.subscriptions.billing_summary.noBillingHistory.link'\n                defaultMessage='See how billing works'\n            />\n        </a>\n    </div>\n);\n\nconst getPaymentStatus = (status: string) => {\n    switch (status) {\n    case 'failed':\n        return (\n            <div className='BillingSummary__lastInvoice-headerStatus failed'>\n                <FormattedMessage\n                    id='admin.billing.subscriptions.billing_summary.lastInvoice.failed'\n                    defaultMessage='Failed'\n                />\n                <i className='icon icon-alert-outline'/>\n            </div>\n        );\n    case 'paid':\n        return (\n            <div className='BillingSummary__lastInvoice-headerStatus paid'>\n                <FormattedMessage\n                    id='admin.billing.subscriptions.billing_summary.lastInvoice.paid'\n                    defaultMessage='Paid'\n                />\n                <i className='icon icon-check-circle-outline'/>\n            </div>\n        );\n    default:\n        return (\n            <div className='BillingSummary__lastInvoice-headerStatus pending'>\n                <FormattedMessage\n                    id='admin.billing.subscriptions.billing_summary.lastInvoice.pending'\n                    defaultMessage='Pending'\n                />\n                <i className='icon icon-check-circle-outline'/>\n            </div>\n        );\n    }\n};\n\nconst BillingSummary: React.FC = () => {\n    const subscription = useSelector((state: GlobalState) => state.entities.cloud.subscription);\n    const product = useSelector((state: GlobalState) => {\n        if (state.entities.cloud.products && subscription) {\n            return state.entities.cloud.products[subscription?.product_id];\n        }\n        return undefined;\n    });\n\n    let body = noBillingHistory;\n    if (subscription && subscription.last_invoice) {\n        const invoice = subscription.last_invoice;\n\n        const fullCharges = invoice.line_items.filter((item) => item.type === 'full');\n        const partialCharges = invoice.line_items.filter((item) => item.type === 'partial');\n\n        body = (\n            <div className='BillingSummary__lastInvoice'>\n                <div className='BillingSummary__lastInvoice-header'>\n                    <div className='BillingSummary__lastInvoice-headerTitle'>\n                        <FormattedMessage\n                            id='admin.billing.subscriptions.billing_summary.lastInvoice.title'\n                            defaultMessage='Last Invoice'\n                        />\n                    </div>\n                    {getPaymentStatus(invoice.status)}\n                </div>\n                <div className='BillingSummary__lastInvoice-date'>\n                    <FormattedDate\n                        value={new Date(invoice.period_start)}\n                        month='short'\n                        year='numeric'\n                        day='numeric'\n                        timeZone='UTC'\n                    />\n                </div>\n                <div className='BillingSummary__lastInvoice-productName'>\n                    {product?.name}\n                </div>\n                <hr/>\n                {fullCharges.map((charge) => (\n                    <div\n                        key={charge.price_id}\n                        className='BillingSummary__lastInvoice-charge'\n                    >\n                        <div className='BillingSummary__lastInvoice-chargeDescription'>\n                            <FormattedNumber\n                                value={(charge.price_per_unit / 100.0)}\n                                // eslint-disable-next-line react/style-prop-object\n                                style='currency'\n                                currency='USD'\n                            />\n                            <FormattedMarkdownMessage\n                                id='admin.billing.subscriptions.billing_summary.lastInvoice.userCount'\n                                defaultMessage=' x {users} users'\n                                values={{users: charge.quantity}}\n                            />\n                        </div>\n                        <div className='BillingSummary__lastInvoice-chargeAmount'>\n                            <FormattedNumber\n                                value={(charge.total / 100.0)}\n                                // eslint-disable-next-line react/style-prop-object\n                                style='currency'\n                                currency='USD'\n                            />\n                        </div>\n                    </div>\n                ))}\n                {partialCharges.length &&\n                    <div className='BillingSummary__lastInvoice-partialCharges'>\n                        <FormattedMessage\n                            id='admin.billing.subscriptions.billing_summary.lastInvoice.partialCharges'\n                            defaultMessage='Partial charges'\n                        />\n                        <OverlayTrigger\n                            delayShow={500}\n                            placement='bottom'\n                            overlay={(\n                                <Tooltip\n                                    id='BillingSubscriptions__seatOverageTooltip'\n                                    className='BillingSubscriptions__tooltip BillingSubscriptions__tooltip-right'\n                                    positionLeft={390}\n                                >\n                                    <div className='BillingSubscriptions__tooltipTitle'>\n                                        <FormattedMessage\n                                            id='admin.billing.subscriptions.billing_summary.lastInvoice.whatArePartialCharges'\n                                            defaultMessage='What are partial charges?'\n                                        />\n                                    </div>\n                                    <div className='BillingSubscriptions__tooltipMessage'>\n                                        <FormattedMessage\n                                            id='admin.billing.subscriptions.billing_summary.lastInvoice.whatArePartialCharges.message'\n                                            defaultMessage='Users who have not been enabled for the full duration of the month are charged at a prorated monthly rate.'\n                                        />\n                                    </div>\n                                </Tooltip>\n                            )}\n                        >\n                            <i className='icon-information-outline'/>\n                        </OverlayTrigger>\n                    </div>\n                }\n                {partialCharges.map((charge) => (\n                    <div\n                        key={charge.price_id}\n                        className='BillingSummary__lastInvoice-charge'\n                    >\n                        <div className='BillingSummary__lastInvoice-chargeDescription'>\n                            <FormattedMarkdownMessage\n                                id='admin.billing.subscriptions.billing_summary.lastInvoice.userCountPartial'\n                                defaultMessage='{users} users'\n                                values={{users: charge.quantity}}\n                            />\n                        </div>\n                        <div className='BillingSummary__lastInvoice-chargeAmount'>\n                            <FormattedNumber\n                                value={(charge.total / 100.0)}\n                                // eslint-disable-next-line react/style-prop-object\n                                style='currency'\n                                currency='USD'\n                            />\n                        </div>\n                    </div>\n                ))}\n                {Boolean(invoice.tax) &&\n                    <div className='BillingSummary__lastInvoice-charge'>\n                        <div className='BillingSummary__lastInvoice-chargeDescription'>\n                            <FormattedMessage\n                                id='admin.billing.subscriptions.billing_summary.lastInvoice.taxes'\n                                defaultMessage='Taxes'\n                            />\n                        </div>\n                        <div className='BillingSummary__lastInvoice-chargeAmount'>\n                            <FormattedNumber\n                                value={(invoice.tax / 100.0)}\n                                // eslint-disable-next-line react/style-prop-object\n                                style='currency'\n                                currency='USD'\n                            />\n                        </div>\n                    </div>\n                }\n                <hr/>\n                <div className='BillingSummary__lastInvoice-charge total'>\n                    <div className='BillingSummary__lastInvoice-chargeDescription'>\n                        <FormattedMessage\n                            id='admin.billing.subscriptions.billing_summary.lastInvoice.total'\n                            defaultMessage='Total'\n                        />\n                    </div>\n                    <div className='BillingSummary__lastInvoice-chargeAmount'>\n                        <FormattedNumber\n                            value={(invoice.total / 100.0)}\n                            // eslint-disable-next-line react/style-prop-object\n                            style='currency'\n                            currency='USD'\n                        />\n                    </div>\n                </div>\n                <div className='BillingSummary__lastInvoice-download'>\n                    <a\n                        target='_new'\n                        rel='noopener noreferrer'\n                        href={Client4.getInvoicePdfUrl(invoice.id)}\n                        className='BillingSummary__lastInvoice-downloadButton'\n                    >\n                        <i className='icon icon-file-pdf-outline'/>\n                        <FormattedMessage\n                            id='admin.billing.subscriptions.billing_summary.lastInvoice.downloadInvoice'\n                            defaultMessage='Download Invoice'\n                        />\n                    </a>\n                </div>\n                <BlockableLink\n                    to='/admin_console/billing/billing_history'\n                    className='BillingSummary__lastInvoice-billingHistory'\n                >\n                    <FormattedMessage\n                        id='admin.billing.subscriptions.billing_summary.lastInvoice.seeBillingHistory'\n                        defaultMessage='See Billing History'\n                    />\n                </BlockableLink>\n            </div>\n        );\n    }\n\n    return (\n        <div className='BillingSummary'>\n            {body}\n        </div>\n    );\n};\n\nexport default BillingSummary;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect} from 'react';\nimport {useDispatch} from 'react-redux';\n\nimport {DispatchFunc} from 'mattermost-redux/types/actions';\nimport {getCloudCustomer} from 'mattermost-redux/actions/cloud';\n\nimport {pageVisited} from 'actions/telemetry_actions';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport CompanyInfoDisplay from './company_info_display';\n\ntype Props = {\n\n};\n\nconst CompanyInfo: React.FC<Props> = () => {\n    const dispatch = useDispatch<DispatchFunc>();\n\n    useEffect(() => {\n        dispatch(getCloudCustomer());\n\n        pageVisited('cloud_admin', 'pageview_billing_company_info');\n    }, []);\n\n    return (\n        <div className='wrapper--fixed CompanyInfo'>\n            <FormattedAdminHeader\n                id='admin.billing.company_info.title'\n                defaultMessage='Company Information'\n            />\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <CompanyInfoDisplay/>\n                    { /* Billing Admins section\n                        <div style={{border: '1px solid #000', width: '100%', height: '194px', marginTop: '20px'}}>\n                        {'Billing Admins Card'}\n                        </div>\n                    */}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CompanyInfo;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./company_info_display.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport {trackEvent} from 'actions/telemetry_actions';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport noCompanyInfoGraphic from 'images/no_company_info_graphic.svg';\nimport {GlobalState} from 'types/store';\n\nimport './company_info_display.scss';\n\nconst addInfoButton = (\n    <div className='CompanyInfoDisplay__addInfo'>\n        <BlockableLink\n            to='/admin_console/billing/company_info_edit'\n            className='CompanyInfoDisplay__addInfoButton'\n            onClick={() => trackEvent('cloud_admin', 'click_add_company_info')}\n        >\n            <i className='icon icon-plus'/>\n            <FormattedMessage\n                id='admin.billing.company_info.add'\n                defaultMessage='Add Company Information'\n            />\n        </BlockableLink>\n    </div>\n);\n\nconst noCompanyInfoSection = (\n    <div className='CompanyInfoDisplay__noCompanyInfo'>\n        <img\n            className='ComapnyInfoDisplay__noCompanyInfo-graphic'\n            src={noCompanyInfoGraphic}\n        />\n        <div className='CompanyInfoDisplay__noCompanyInfo-message'>\n            <FormattedMessage\n                id='admin.billing.company_info_display.noCompanyInfo'\n                defaultMessage='There is currently no company information on file.'\n            />\n        </div>\n        <BlockableLink\n            to='/admin_console/billing/company_info_edit'\n            className='CompanyInfoDisplay__noCompanyInfo-link'\n            onClick={() => trackEvent('cloud_admin', 'click_add_company_info')}\n        >\n            <FormattedMessage\n                id='admin.billing.company_info.add'\n                defaultMessage='Add Company Information'\n            />\n        </BlockableLink>\n    </div>\n);\n\nconst CompanyInfoDisplay: React.FC = () => {\n    const companyInfo = useSelector((state: GlobalState) => state.entities.cloud.customer);\n\n    if (!companyInfo) {\n        return null;\n    }\n\n    let body = noCompanyInfoSection;\n    const address = companyInfo?.company_address?.line1 ? companyInfo.company_address : companyInfo?.billing_address;\n    if (address?.line1) {\n        body = (\n            <div className='CompanyInfoDisplay__companyInfo'>\n                <div className='CompanyInfoDisplay__companyInfo-text'>\n                    <div className='CompanyInfoDisplay__companyInfo-name'>\n                        {companyInfo?.name}\n                    </div>\n                    {Boolean(companyInfo.num_employees) &&\n                        <div className='CompanyInfoDisplay__companyInfo-numEmployees'>\n                            <FormattedMarkdownMessage\n                                id='admin.billing.company_info.employees'\n                                defaultMessage='{employees} employees'\n                                values={{employees: companyInfo.num_employees}}\n                            />\n                        </div>\n                    }\n                    <div className='CompanyInfoDisplay__companyInfo-addressTitle'>\n                        <FormattedMessage\n                            id='admin.billing.company_info.companyAddress'\n                            defaultMessage='Company Address'\n                        />\n                    </div>\n                    <div className='CompanyInfoDisplay__companyInfo-address'>\n                        <div>{address.line1}</div>\n                        {address.line2 && <div>{address.line2}</div>}\n                        <div>{`${address.city}, ${address.state}, ${address.postal_code}`}</div>\n                        <div>{address.country}</div>\n                    </div>\n                </div>\n                <div className='CompanyInfoDisplay__companyInfo-edit'>\n                    <BlockableLink\n                        to='/admin_console/billing/company_info_edit'\n                        className='CompanyInfoDisplay__companyInfo-editButton'\n                        onClick={() => trackEvent('cloud_admin', 'click_edit_company_info')}\n                    >\n                        <i className='icon icon-pencil-outline'/>\n                    </BlockableLink>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className='CompanyInfoDisplay'>\n            <div className='CompanyInfoDisplay__header'>\n                <div className='CompanyInfoDisplay__headerText'>\n                    <div className='CompanyInfoDisplay__headerText-top'>\n                        <FormattedMessage\n                            id='admin.billing.company_info_display.companyDetails'\n                            defaultMessage='Company Details'\n                        />\n                    </div>\n                    <div className='CompanyInfoDisplay__headerText-bottom'>\n                        <FormattedMessage\n                            id='admin.billing.company_info_display.provideDetails'\n                            defaultMessage='Provide your company name and address'\n                        />\n                    </div>\n                </div>\n                {!address?.line1 && addInfoButton}\n            </div>\n            <div className='CompanyInfoDisplay__body'>\n                {body}\n            </div>\n        </div>\n    );\n};\n\nexport default CompanyInfoDisplay;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./company_info_edit.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getName} from 'country-list';\n\nimport {getCloudCustomer, updateCloudCustomer, updateCloudCustomerAddress} from 'mattermost-redux/actions/cloud';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport DropdownInput from 'components/dropdown_input';\nimport StateSelector from 'components/payment_form/state_selector';\nimport Input from 'components/input';\nimport SaveButton from 'components/save_button';\nimport {GlobalState} from 'types/store';\nimport {browserHistory} from 'utils/browser_history';\nimport {COUNTRIES} from 'utils/countries';\nimport * as Utils from 'utils/utils';\n\nimport './company_info_edit.scss';\n\ntype Props = {\n\n};\n\nconst CompanyInfoEdit: React.FC<Props> = () => {\n    const dispatch = useDispatch();\n    const companyInfo = useSelector((state: GlobalState) => state.entities.cloud.customer);\n\n    if (!companyInfo) {\n        return null;\n    }\n\n    const [companyName, setCompanyName] = useState(companyInfo?.name);\n    const [numEmployees, setNumEmployees] = useState<number | undefined>(companyInfo?.num_employees || undefined);\n\n    const [address, setAddress] = useState(companyInfo?.company_address?.line1);\n    const [address2, setAddress2] = useState(companyInfo?.company_address?.line2);\n    const [city, setCity] = useState(companyInfo?.company_address?.city);\n    const [postalCode, setPostalCode] = useState(companyInfo?.company_address?.postal_code);\n    const [country, setCountry] = useState(companyInfo?.company_address?.country || getName('US'));\n    const [state, setState] = useState(companyInfo?.company_address?.state);\n\n    const [sameAsBillingAddress, setSameAsBillingAddress] = useState(Boolean(!companyInfo?.company_address?.line1 && companyInfo?.billing_address?.line1));\n    const [isValid, setIsValid] = useState<boolean | undefined>(undefined);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const setValidation = () => {\n        if (sameAsBillingAddress) {\n            setIsValid(Boolean(companyName));\n        } else {\n            setIsValid(Boolean(companyName && address && city && postalCode && country && state));\n        }\n    };\n\n    const updateState = (setStateFunc: (value: any) => void) => {\n        return (event: React.ChangeEvent<HTMLInputElement>) => {\n            setStateFunc(event.target.value);\n            setValidation();\n        };\n    };\n\n    const updateNumEmployees = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.value) {\n            setNumEmployees(parseInt(event.target.value, 10));\n        } else {\n            setNumEmployees(undefined);\n        }\n    };\n\n    useEffect(() => {\n        dispatch(getCloudCustomer());\n    }, []);\n\n    useEffect(() => {\n        setValidation();\n    }, [sameAsBillingAddress, companyName, address, city, postalCode, country, state]);\n\n    const handleSubmit = async () => {\n        setIsSaving(true);\n        await dispatch(updateCloudCustomer({name: companyName, num_employees: numEmployees || 0}));\n\n        if (sameAsBillingAddress) {\n            await dispatch(updateCloudCustomerAddress({\n                city: '',\n                country: '',\n                line1: '',\n                line2: '',\n                postal_code: '',\n                state: '',\n            }));\n        } else {\n            await dispatch(updateCloudCustomerAddress({\n                city: city || '',\n                country: country || '',\n                line1: address || '',\n                line2: address2 || '',\n                postal_code: postalCode || '',\n                state: state || '',\n            }));\n        }\n\n        setIsSaving(false);\n        browserHistory.push('/admin_console/billing/company_info');\n    };\n\n    const billingAddressDisplay = (\n        <>\n            <div className='CompanyInfoEdit__companyInfo-addressTitle'>\n                <FormattedMessage\n                    id='admin.billing.company_info.billingAddress'\n                    defaultMessage='Billing Address'\n                />\n            </div>\n            <div className='CompanyInfoEdit__companyInfo-address'>\n                <div>{companyInfo?.billing_address?.line1}</div>\n                {companyInfo?.billing_address?.line2 && <div>{companyInfo?.billing_address?.line2}</div>}\n                <div>{`${companyInfo?.billing_address?.city}, ${companyInfo?.billing_address?.state}, ${companyInfo?.billing_address?.postal_code}`}</div>\n                <div>{companyInfo?.billing_address?.country}</div>\n            </div>\n        </>\n    );\n\n    const companyAddressInput = (\n        <>\n            <DropdownInput\n                onChange={(option) => setCountry(option.value)}\n                value={country ? {value: country, label: country} : undefined}\n                options={COUNTRIES.map((c) => ({value: c.name, label: c.name}))}\n                legend={Utils.localizeMessage('admin.billing.company_info.country', 'Country')}\n                placeholder={Utils.localizeMessage('admin.billing.company_info.country', 'Country')}\n                name={'country_dropdown'}\n            />\n            <div className='form-row'>\n                <Input\n                    name='address'\n                    type='text'\n                    value={address}\n                    onChange={updateState(setAddress)}\n                    placeholder={Utils.localizeMessage('admin.billing.company_info.address', 'Address')}\n                    required={true}\n                />\n            </div>\n            <div className='form-row'>\n                <Input\n                    name='address2'\n                    type='text'\n                    value={address2}\n                    onChange={updateState(setAddress2)}\n                    placeholder={Utils.localizeMessage('admin.billing.company_info.address_2', 'Address 2')}\n                />\n            </div>\n            <div className='form-row'>\n                <Input\n                    name='city'\n                    type='text'\n                    value={city}\n                    onChange={updateState(setCity)}\n                    placeholder={Utils.localizeMessage('admin.billing.company_info.city', 'City')}\n                    required={true}\n                />\n            </div>\n            <div className='form-row'>\n                <div className='form-row-third-1 selector'>\n                    <StateSelector\n                        country={country!}\n                        state={state!}\n                        onChange={(stateValue) => setState(stateValue)}\n                    />\n                </div>\n                <div className='form-row-third-2'>\n                    <Input\n                        name='postalCode'\n                        type='text'\n                        value={postalCode}\n                        onChange={updateState(setPostalCode)}\n                        placeholder={Utils.localizeMessage('admin.billing.company_info.zipcode', 'Zip/Postal Code')}\n                        required={true}\n                    />\n                </div>\n            </div>\n        </>\n    );\n\n    return (\n        <div className='wrapper--fixed CompanyInfoEdit'>\n            <div className='admin-console__header with-back'>\n                <div>\n                    <BlockableLink\n                        to='/admin_console/billing/company_info'\n                        className='fa fa-angle-left back'\n                    />\n                    <FormattedMessage\n                        id='admin.billing.company_info_edit.title'\n                        defaultMessage='Edit Company Information'\n                    />\n                </div>\n            </div>\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <div className='CompanyInfoEdit__card'>\n                        <div className='CompanyInfoEdit__form'>\n                            <div className='section-title'>\n                                <FormattedMessage\n                                    id='admin.billing.company_info_edit.companyDetails'\n                                    defaultMessage='Company Details'\n                                />\n                            </div>\n                            <div className='form-row'>\n                                <Input\n                                    name='companyName'\n                                    type='text'\n                                    value={companyName}\n                                    onChange={updateState(setCompanyName)}\n                                    placeholder={Utils.localizeMessage('admin.billing.company_info.companyName', 'Company name')}\n                                    required={true}\n                                />\n                            </div>\n                            <div className='form-row'>\n                                <Input\n                                    name='numEmployees'\n                                    type='number'\n                                    value={numEmployees}\n                                    onChange={updateNumEmployees}\n                                    placeholder={Utils.localizeMessage('admin.billing.company_info.numEmployees', 'Number of employees (optional)')}\n                                />\n                            </div>\n                            <div className='section-title'>\n                                <FormattedMessage\n                                    id='admin.billing.company_info_edit.company_address'\n                                    defaultMessage='Company Address'\n                                />\n                            </div>\n                            {companyInfo?.billing_address?.line1 &&\n                                <div className='checkbox'>\n                                    <label>\n                                        <input\n                                            type='checkbox'\n                                            checked={sameAsBillingAddress}\n                                            onChange={(event) => setSameAsBillingAddress(event.target.checked)}\n                                        />\n                                        <FormattedMessage\n                                            id='admin.billing.company_info_edit.sameAsBillingAddress'\n                                            defaultMessage='Same as Billing Address'\n                                        />\n                                    </label>\n                                </div>\n                            }\n                            {sameAsBillingAddress && companyInfo?.billing_address?.line1 ? billingAddressDisplay : companyAddressInput}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className='admin-console-save'>\n                <SaveButton\n                    saving={isSaving}\n                    disabled={!isValid}\n                    onClick={handleSubmit}\n                    defaultMessage={(\n                        <FormattedMessage\n                            id='admin.billing.company_info_edit.save'\n                            defaultMessage='Save info'\n                        />\n                    )}\n                />\n                <BlockableLink\n                    className='cancel-button'\n                    to='/admin_console/billing/company_info'\n                >\n                    <FormattedMessage\n                        id='admin.billing.company_info_edit.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </BlockableLink>\n            </div>\n        </div>\n    );\n};\n\nexport default CompanyInfoEdit;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./payment_info.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect, useState} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {FormattedMessage} from 'react-intl';\n\nimport {DispatchFunc} from 'mattermost-redux/types/actions';\nimport {getCloudCustomer} from 'mattermost-redux/actions/cloud';\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport {pageVisited} from 'actions/telemetry_actions';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport AlertBanner from 'components/alert_banner';\n\nimport PaymentInfoDisplay from './payment_info_display';\n\nimport './payment_info.scss';\n\ntype Props = {\n\n};\n\nconst PaymentInfo: React.FC<Props> = () => {\n    const dispatch = useDispatch<DispatchFunc>();\n\n    const isCardAboutToExpire = useSelector((state: GlobalState) => {\n        const {customer} = state.entities.cloud;\n        if (!customer) {\n            return false;\n        }\n\n        const expiryYear = customer.payment_method.exp_year;\n\n        // If not expiry year, or its 0, it's not expired (because it probably isn't set)\n        if (!expiryYear) {\n            return false;\n        }\n\n        // This works because we store the expiry month as the actual 1-12 base month, but Date uses a 0-11 base month\n        // But credit cards expire at the end of their expiry month, so we can just use that number.\n        const lastExpiryDate = new Date(expiryYear, customer.payment_method.exp_month, 1);\n        const currentDatePlus10Days = new Date();\n        currentDatePlus10Days.setDate(currentDatePlus10Days.getDate() + 10);\n        return lastExpiryDate <= currentDatePlus10Days;\n    });\n\n    const [showCreditCardBanner, setShowCreditCardBanner] = useState(true);\n\n    useEffect(() => {\n        dispatch(getCloudCustomer());\n\n        pageVisited('cloud_admin', 'pageview_billing_payment_info');\n    }, []);\n\n    return (\n        <div className='wrapper--fixed PaymentInfo'>\n            <FormattedAdminHeader\n                id='admin.billing.payment_info.title'\n                defaultMessage='Payment Information'\n            />\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    {showCreditCardBanner && isCardAboutToExpire && (\n                        <AlertBanner\n                            mode='info'\n                            title={\n                                <FormattedMessage\n                                    id='admin.billing.payment_info.creditCardAboutToExpire'\n                                    defaultMessage='Your credit card is about to expire'\n                                />\n                            }\n                            message={\n                                <FormattedMessage\n                                    id='admin.billing.payment_info.creditCardAboutToExpire.description'\n                                    defaultMessage='Please update your payment information to avoid any disruption.'\n                                />\n                            }\n                            onDismiss={() => setShowCreditCardBanner(false)}\n                        />\n                    )}\n                    <PaymentInfoDisplay/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentInfo;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./payment_info_display.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\n\nimport {trackEvent} from 'actions/telemetry_actions';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport CardImage from 'components/payment_form/card_image';\nimport noPaymentInfoGraphic from 'images/no_payment_info_graphic.svg';\nimport {GlobalState} from 'types/store';\n\nimport './payment_info_display.scss';\n\nconst addInfoButton = (\n    <div className='PaymentInfoDisplay__addInfo'>\n        <BlockableLink\n            to='/admin_console/billing/payment_info_edit'\n            className='PaymentInfoDisplay__addInfoButton'\n            onClick={() => trackEvent('cloud_admin', 'click_add_credit_card')}\n        >\n            <i className='icon icon-plus'/>\n            <FormattedMessage\n                id='admin.billing.payment_info.add'\n                defaultMessage='Add a Credit Card'\n            />\n        </BlockableLink>\n    </div>\n);\n\nconst noPaymentInfoSection = (\n    <div className='PaymentInfoDisplay__noPaymentInfo'>\n        <img\n            className='ComapnyInfoDisplay__noPaymentInfo-graphic'\n            src={noPaymentInfoGraphic}\n        />\n        <div className='PaymentInfoDisplay__noPaymentInfo-message'>\n            <FormattedMessage\n                id='admin.billing.payment_info_display.noPaymentInfo'\n                defaultMessage='There are currently no credit cards on file.'\n            />\n        </div>\n        <BlockableLink\n            to='/admin_console/billing/payment_info_edit'\n            className='PaymentInfoDisplay__noPaymentInfo-link'\n            onClick={() => trackEvent('cloud_admin', 'click_add_credit_card')}\n        >\n            <FormattedMessage\n                id='admin.billing.payment_info.add'\n                defaultMessage='Add a Credit Card'\n            />\n        </BlockableLink>\n    </div>\n);\n\nconst PaymentInfoDisplay: React.FC = () => {\n    const paymentInfo = useSelector((state: GlobalState) => state.entities.cloud.customer);\n\n    if (!paymentInfo) {\n        return null;\n    }\n\n    let body = noPaymentInfoSection;\n\n    if (paymentInfo?.payment_method && paymentInfo?.billing_address) {\n        const address = paymentInfo.billing_address;\n        body = (\n            <div className='PaymentInfoDisplay__paymentInfo'>\n                <div className='PaymentInfoDisplay__paymentInfo-text'>\n                    <CardImage brand={paymentInfo.payment_method.card_brand}/>\n                    <div className='PaymentInfoDisplay__paymentInfo-cardInfo'>\n                        <FormattedMarkdownMessage\n                            id='admin.billing.payment_info.cardBrandAndDigits'\n                            defaultMessage='{brand} ending in {digits}'\n                            values={{\n                                brand: paymentInfo.payment_method.card_brand,\n                                digits: paymentInfo.payment_method.last_four,\n                            }}\n                        />\n                        <br/>\n                        <FormattedMarkdownMessage\n                            id='admin.billing.payment_info.cardExpiry'\n                            defaultMessage='Expires {month}/{year}'\n                            values={{\n                                month: String(paymentInfo.payment_method.exp_month).padStart(2, '0'),\n                                year: String(paymentInfo.payment_method.exp_year).padStart(2, '0'),\n                            }}\n                        />\n                    </div>\n                    <div className='PaymentInfoDisplay__paymentInfo-addressTitle'>\n                        <FormattedMessage\n                            id='admin.billing.payment_info.billingAddress'\n                            defaultMessage='Billing Address'\n                        />\n                    </div>\n                    <div className='PaymentInfoDisplay__paymentInfo-address'>\n                        <div>{address.line1}</div>\n                        {address.line2 && <div>{address.line2}</div>}\n                        <div>{`${address.city}, ${address.state}, ${address.postal_code}`}</div>\n                        <div>{address.country}</div>\n                    </div>\n                </div>\n                <div className='PaymentInfoDisplay__paymentInfo-edit'>\n                    { // TODO: remove payment info?\n                    /* <a\n                        href='#'\n                        onClick={() => null}\n                        className='PaymentInfoDisplay__paymentInfo-editButton'\n                    >\n                        <i className='icon icon-trash-can-outline'/>\n                    </a> */}\n                    <BlockableLink\n                        to='/admin_console/billing/payment_info_edit'\n                        className='PaymentInfoDisplay__paymentInfo-editButton'\n                    >\n                        <i className='icon icon-pencil-outline'/>\n                    </BlockableLink>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className='PaymentInfoDisplay'>\n            <div className='PaymentInfoDisplay__header'>\n                <div className='PaymentInfoDisplay__headerText'>\n                    <div className='PaymentInfoDisplay__headerText-top'>\n                        <FormattedMessage\n                            id='admin.billing.payment_info_display.savedPaymentDetails'\n                            defaultMessage='Your saved payment details'\n                        />\n                    </div>\n                    <div className='PaymentInfoDisplay__headerText-bottom'>\n                        <FormattedMessage\n                            id='admin.billing.payment_info_display.allCardsAccepted'\n                            defaultMessage='All major credit cards are accepted.'\n                        />\n                    </div>\n                </div>\n                {!(paymentInfo?.payment_method && paymentInfo?.billing_address) && addInfoButton}\n            </div>\n            <div className='PaymentInfoDisplay__body'>\n                {body}\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentInfoDisplay;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./payment_info_edit.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {useEffect, useState} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {useDispatch, useSelector} from 'react-redux';\n\nimport {Stripe} from '@stripe/stripe-js';\nimport {loadStripe} from '@stripe/stripe-js/pure'; // https://github.com/stripe/stripe-js#importing-loadstripe-without-side-effects\nimport {Elements} from '@stripe/react-stripe-js';\n\nimport {getCloudCustomer} from 'mattermost-redux/actions/cloud';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {completeStripeAddPaymentMethod} from 'actions/cloud';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport PaymentForm from 'components/payment_form/payment_form';\nimport {STRIPE_CSS_SRC, STRIPE_PUBLIC_KEY} from 'components/payment_form/stripe';\nimport SaveButton from 'components/save_button';\nimport {areBillingDetailsValid, BillingDetails} from 'types/cloud/sku';\nimport {GlobalState} from 'types/store';\nimport {CloudLinks} from 'utils/constants';\nimport {browserHistory} from 'utils/browser_history';\n\nimport './payment_info_edit.scss';\nimport AlertBanner from 'components/alert_banner';\n\nlet stripePromise: Promise<Stripe | null>;\n\nconst PaymentInfoEdit: React.FC = () => {\n    const dispatch = useDispatch();\n    const isDevMode = useSelector((state: GlobalState) => getConfig(state).EnableDeveloper === 'true');\n    const paymentInfo = useSelector((state: GlobalState) => state.entities.cloud.customer);\n\n    const [showCreditCardWarning, setShowCreditCardWarning] = useState(true);\n    const [isSaving, setIsSaving] = useState(false);\n    const [isValid, setIsValid] = useState<boolean | undefined>(undefined);\n    const [isServerError, setIsServerError] = useState(false);\n    const [billingDetails, setBillingDetails] = useState<BillingDetails>({\n        address: paymentInfo?.billing_address?.line1 || '',\n        address2: paymentInfo?.billing_address?.line2 || '',\n        city: paymentInfo?.billing_address?.city || '',\n        state: paymentInfo?.billing_address?.state || '',\n        country: paymentInfo?.billing_address?.country || '',\n        postalCode: paymentInfo?.billing_address?.postal_code || '',\n        name: '',\n        card: {} as any,\n    });\n\n    useEffect(() => {\n        dispatch(getCloudCustomer());\n    }, []);\n\n    const onPaymentInput = (billing: BillingDetails) => {\n        setIsServerError(false);\n        setIsValid(areBillingDetailsValid(billing));\n        setBillingDetails(billing);\n    };\n\n    const handleSubmit = async () => {\n        setIsSaving(true);\n        const setPaymentMethod = completeStripeAddPaymentMethod((await stripePromise)!, billingDetails!, isDevMode);\n        const success = await setPaymentMethod();\n\n        if (success) {\n            browserHistory.push('/admin_console/billing/payment_info');\n        } else {\n            setIsServerError(true);\n        }\n\n        setIsSaving(false);\n    };\n\n    if (!stripePromise) {\n        stripePromise = loadStripe(STRIPE_PUBLIC_KEY);\n    }\n\n    return (\n        <div className='wrapper--fixed PaymentInfoEdit'>\n            <div className='admin-console__header with-back'>\n                <div>\n                    <BlockableLink\n                        to='/admin_console/billing/payment_info'\n                        className='fa fa-angle-left back'\n                    />\n                    <FormattedMessage\n                        id='admin.billing.payment_info_edit.title'\n                        defaultMessage='Edit Payment Information'\n                    />\n                </div>\n            </div>\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    {showCreditCardWarning &&\n                        <AlertBanner\n                            mode='info'\n                            title={\n                                <FormattedMessage\n                                    id='admin.billing.payment_info_edit.creditCardWarningTitle'\n                                    defaultMessage='NOTE: Your card will not be charged at this time'\n                                />\n                            }\n                            message={\n                                <>\n                                    <FormattedMarkdownMessage\n                                        id='admin.billing.payment_info_edit.creditCardWarningDescription'\n                                        defaultMessage='Credit cards are kept on file for future payments. You’ll only be charged if you move in to the paid tier of Mattermost Cloud and exceed the free tier limits. '\n                                    />\n                                    <a\n                                        target='_new'\n                                        rel='noopener noreferrer'\n                                        href={CloudLinks.BILLING_DOCS}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.billing.subscription.planDetails.howBillingWorks'\n                                            defaultMessage='See how billing works'\n                                        />\n                                    </a>\n                                </>\n                            }\n                            onDismiss={() => setShowCreditCardWarning(false)}\n                        />\n                    }\n                    <div className='PaymentInfoEdit__card'>\n                        <Elements\n                            options={{fonts: [{cssSrc: STRIPE_CSS_SRC}]}}\n                            stripe={stripePromise}\n                        >\n                            <PaymentForm\n                                className='PaymentInfoEdit__paymentForm'\n                                onInputChange={onPaymentInput}\n                                initialBillingDetails={billingDetails}\n                            />\n                        </Elements>\n                    </div>\n                </div>\n            </div>\n            <div className='admin-console-save'>\n                <SaveButton\n                    saving={isSaving}\n                    disabled={!billingDetails || !isValid}\n                    onClick={handleSubmit}\n                    defaultMessage={(\n                        <FormattedMessage\n                            id='admin.billing.payment_info_edit.save'\n                            defaultMessage='Save credit card'\n                        />\n                    )}\n                />\n                <BlockableLink\n                    className='cancel-button'\n                    to='/admin_console/billing/payment_info'\n                >\n                    <FormattedMessage\n                        id='admin.billing.payment_info_edit.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </BlockableLink>\n                {isValid === false &&\n                    <span className='PaymentInfoEdit__error'>\n                        <i className='icon icon-alert-outline'/>\n                        <FormattedMessage\n                            id='admin.billing.payment_info_edit.formError'\n                            defaultMessage='There are errors in the form above'\n                        />\n                    </span>\n                }\n                {isServerError &&\n                    <span className='PaymentInfoEdit__error'>\n                        <i className='icon icon-alert-outline'/>\n                        <FormattedMessage\n                            id='admin.billing.payment_info_edit.serverError'\n                            defaultMessage='Something went wrong while saving payment infomation'\n                        />\n                    </span>\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentInfoEdit;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./plan_details.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Tooltip} from 'react-bootstrap';\nimport {FormattedDate, FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\nimport classNames from 'classnames';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {trackEvent} from 'actions/telemetry_actions';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport {getCurrentLocale} from 'selectors/i18n';\nimport {GlobalState} from 'types/store';\nimport {getMonthLong} from 'utils/i18n';\nimport {CloudLinks} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils';\n\nimport './plan_details.scss';\n\nconst features = [\n    localizeMessage('admin.billing.subscription.planDetails.features.10GBstoragePerUser', '10 GB storage per user'),\n    localizeMessage('admin.billing.subscription.planDetails.features.99uptime', '99.0% uptime'),\n    localizeMessage('admin.billing.subscription.planDetails.features.selfServiceDocumentation', 'Self-Service documentation and forum support'),\n    localizeMessage('admin.billing.subscription.planDetails.features.mfaAuthentication', 'Google, Gitlab, O365 & MFA Authentication'),\n    localizeMessage('admin.billing.subscription.planDetails.features.guestAccounts', 'Guest Accounts'),\n    localizeMessage('admin.billing.subscription.planDetails.features.unlimitedIntegrations', 'Unlimited Integrations'),\n];\n\nconst seatsAndSubscriptionDates = (locale: string, userCount: number, numberOfSeats: number, startDate: Date, endDate: Date) => {\n    return (\n        <div className='PlanDetails__seatsAndSubscriptionDates'>\n            <div className='PlanDetails__seats'>\n                <div className='PlanDetails__seats-total'>\n                    <FormattedMarkdownMessage\n                        id='admin.billing.subscription.planDetails.numberOfSeats'\n                        defaultMessage='{numberOfSeats} seats'\n                        values={{numberOfSeats}}\n                    />\n                </div>\n                <div\n                    className={classNames('PlanDetails__seats-registered', {\n                        overLimit: userCount > numberOfSeats,\n                    })}\n                >\n                    <FormattedMarkdownMessage\n                        id='admin.billing.subscription.planDetails.numberOfSeatsRegistered'\n                        defaultMessage='({userCount} currently registered)'\n                        values={{userCount}}\n                    />\n                    {(userCount > numberOfSeats) &&\n                        <OverlayTrigger\n                            delayShow={500}\n                            placement='bottom'\n                            overlay={(\n                                <Tooltip\n                                    id='BillingSubscriptions__seatOverageTooltip'\n                                    className='BillingSubscriptions__tooltip BillingSubscriptions__tooltip-left'\n                                    positionLeft={390}\n                                >\n                                    <div className='BillingSubscriptions__tooltipTitle'>\n                                        <FormattedMessage\n                                            id='admin.billing.subscription.planDetails.seatCountOverages'\n                                            defaultMessage='Seat count overages'\n                                        />\n                                    </div>\n                                    <div className='BillingSubscriptions__tooltipMessage'>\n                                        <FormattedMarkdownMessage\n                                            id='admin.billing.subscription.planDetails.prolongedOverages'\n                                            defaultMessage='Prolonged overages may result in additional charges.'\n                                        />\n                                        <a\n                                            target='_new'\n                                            rel='noopener noreferrer'\n                                            href={CloudLinks.BILLING_DOCS}\n                                            onClick={() => trackEvent('cloud_admin', 'click_how_billing_works', {screen: 'payment'})}\n                                        >\n                                            <FormattedMessage\n                                                id='admin.billing.subscription.planDetails.howBillingWorks'\n                                                defaultMessage='See how billing works'\n                                            />\n                                        </a>\n                                    </div>\n                                </Tooltip>\n                            )}\n                        >\n                            <i className='icon-information-outline'/>\n                        </OverlayTrigger>\n                    }\n                </div>\n            </div>\n            <div className='PlanDetails__subscriptionDate'>\n                <FormattedMessage\n                    id='admin.billing.subscription.planDetails.startDate'\n                    defaultMessage='Start Date: '\n                />\n                <FormattedDate\n                    value={startDate}\n                    day='numeric'\n                    month={getMonthLong(locale)}\n                    year='numeric'\n                />\n            </div>\n            <div className='PlanDetails__subscriptionDate'>\n                <FormattedMessage\n                    id='admin.billing.subscription.planDetails.endDate'\n                    defaultMessage='End Date: '\n                />\n                <FormattedDate\n                    value={endDate}\n                    day='numeric'\n                    month={getMonthLong(locale)}\n                    year='numeric'\n                />\n            </div>\n        </div>\n    );\n};\n\nconst PlanDetails: React.FC = () => {\n    const locale = useSelector((state: GlobalState) => getCurrentLocale(state));\n    const userCount = useSelector((state: GlobalState) => state.entities.admin.analytics!.TOTAL_USERS) as number;\n    const userLimit = parseInt(useSelector((state: GlobalState) => getConfig(state).ExperimentalCloudUserLimit) || '0', 10);\n    const subscription = useSelector((state: GlobalState) => state.entities.cloud.subscription);\n    const product = useSelector((state: GlobalState) => {\n        if (state.entities.cloud.products && subscription) {\n            return state.entities.cloud.products[subscription?.product_id];\n        }\n        return undefined;\n    });\n\n    if (!subscription || !product) {\n        return null;\n    }\n\n    let planPricing;\n\n    const showSeatsAndSubscriptionDates = false;\n    let userCountDisplay;\n    switch (subscription.is_paid_tier) {\n    case 'false':\n        planPricing = (\n            <div className='PlanDetails__plan'>\n                <div className='PlanDetails__planName'>\n                    <FormattedMessage\n                        id='admin.billing.subscription.planDetails.tiers.free'\n                        defaultMessage='Free'\n                    />\n                </div>\n                <div className='PlanDetails__planCaveat'>\n                    <FormattedMarkdownMessage\n                        id='admin.billing.subscription.planDetails.upToXUsers'\n                        defaultMessage='up to {userLimit} users'\n                        values={{userLimit}}\n                    />\n                </div>\n            </div>\n        );\n        userCountDisplay = (\n            <div\n                className={classNames('PlanDetails__userCount', {\n                    withinLimit: (userLimit - userCount) <= 5,\n                    overLimit: userCount > userLimit,\n                })}\n            >\n                <FormattedMarkdownMessage\n                    id='admin.billing.subscription.planDetails.userCountWithLimit'\n                    defaultMessage='{userCount} / {userLimit} users'\n                    values={{userCount, userLimit}}\n                />\n            </div>\n        );\n        break;\n    case 'true':\n        planPricing = (\n            <div className='PlanDetails__plan'>\n                <div className='PlanDetails__planName'>\n                    {`$${product.price_per_seat.toFixed(2)}`}\n                </div>\n                <div className='PlanDetails__planCaveat'>\n                    <FormattedMessage\n                        id='admin.billing.subscription.planDetails.perUserPerMonth'\n                        defaultMessage='/user/month'\n                    />\n                </div>\n            </div>\n        );\n        userCountDisplay = (\n            <div className='PlanDetails__userCount'>\n                <FormattedMarkdownMessage\n                    id='admin.billing.subscription.planDetails.userCount'\n                    defaultMessage='{userCount} users'\n                    values={{userCount}}\n                />\n            </div>\n        );\n        break;\n\n    // case 'annual':\n    //     planPricing = (\n    //         <div className='PlanDetails__plan'>\n    //             <div className='PlanDetails__planName'>\n    //                 <FormattedMessage\n    //                     id='admin.billing.subscription.planDetails.tiers.annual'\n    //                     defaultMessage='Annual Subscription'\n    //                 />\n    //             </div>\n    //         </div>\n    //     );\n    //     showSeatsAndSubscriptionDates = true;\n    //     break;\n    // case 'beta':\n    //     planPricing = (\n    //         <div className='PlanDetails__plan'>\n    //             <div className='PlanDetails__planName'>\n    //                 <FormattedMessage\n    //                     id='admin.billing.subscription.planDetails.tiers.beta'\n    //                     defaultMessage='Beta Subscription'\n    //                 />\n    //             </div>\n    //         </div>\n    //     );\n    //     showSeatsAndSubscriptionDates = true;\n    //     break;\n    }\n\n    const featureList = features.map((feature, i) => (\n        <div\n            key={`PlanDetails__feature${i}`}\n            className='PlanDetails__feature'\n        >\n            <i className='icon-check'/>\n            <span>{feature}</span>\n        </div>\n    ));\n\n    return (\n        <div className='PlanDetails'>\n            <div className='PlanDetails__top'>\n                <div className='PlanDetails__productName'>\n                    {product.name}\n                </div>\n                {userCountDisplay}\n            </div>\n            {planPricing}\n            {showSeatsAndSubscriptionDates && seatsAndSubscriptionDates(locale, userCount, subscription.seats, new Date(subscription.start_at), new Date(subscription.end_at))}\n            <div className='PlanDetails__description'>\n                <FormattedMessage\n                    id='admin.billing.subscription.planDetails.freeForTenUsers'\n                    defaultMessage='Always free for up to 10 users'\n                />\n            </div>\n            <div className='PlanDetails__teamAndChannelCount'>\n                <FormattedMessage\n                    id='admin.billing.subscription.planDetails.features.unlimitedTeamsAndChannels'\n                    defaultMessage='Unlimited teams, channels, and search history'\n                />\n            </div>\n            {featureList}\n            <div className='PlanDetails__currentPlan'>\n                <i className='icon-check-circle'/>\n                <FormattedMessage\n                    id='admin.billing.subscription.planDetails.currentPlan'\n                    defaultMessage='Current Plan'\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default PlanDetails;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {blevePurgeIndexes} from 'actions/admin_actions.jsx';\nimport {JobStatuses, JobTypes} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport TextSetting from './text_setting';\nimport JobsTable from './jobs';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\n\nexport default class BleveSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.BleveSettings.IndexDir = this.state.indexDir;\n        config.BleveSettings.EnableIndexing = this.state.enableIndexing;\n        config.BleveSettings.EnableSearching = this.state.enableSearching;\n        config.BleveSettings.EnableAutocomplete = this.state.enableAutocomplete;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            enableIndexing: config.BleveSettings.EnableIndexing,\n            indexDir: config.BleveSettings.IndexDir,\n            enableSearching: config.BleveSettings.EnableSearching,\n            enableAutocomplete: config.BleveSettings.EnableAutocomplete,\n            canSave: true,\n            canPurgeAndIndex: config.BleveSettings.EnableIndexing,\n        };\n    }\n\n    handleSettingChanged = (id, value) => {\n        if (id === 'enableIndexing') {\n            if (value === false) {\n                this.setState({\n                    enableSearching: false,\n                    enableAutocomplete: false,\n                });\n            }\n        }\n\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\n            this.setState({\n                canPurgeAndIndex: false,\n            });\n        }\n\n        this.handleChange(id, value);\n    }\n\n    handleSaved = () => {\n        this.setState({\n            canPurgeAndIndex: this.state.enableIndexing && this.state.indexDir !== '',\n        });\n    }\n\n    canSave = () => {\n        return this.state.canSave;\n    }\n\n    getExtraInfo(job) {\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <FormattedMessage\n                    id='admin.bleve.percentComplete'\n                    defaultMessage='{percent}% Complete'\n                    values={{percent: Number(job.progress)}}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.bleve.title'\n                defaultMessage='Bleve'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableIndexing'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableIndexingTitle'\n                            defaultMessage='Enable Bleve Indexing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableIndexingDescription'\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Bleve for search queries\" is enabled. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-bleve-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.bleve.enableIndexingDescription.documentationLinkText'\n                                            defaultMessage='Learn more about Bleve in our documentation.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableIndexing')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='indexDir'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.indexDirTitle'\n                            defaultMessage='Index Directory:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.indexDirDescription'\n                            defaultMessage='Directory path to use for store bleve indexes.'\n                        />\n                    }\n                    value={this.state.indexDir}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.IndexDir')}\n                    disabled={this.props.isDisabled}\n                />\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.bleve.bulkIndexingTitle'\n                            defaultMessage='Bulk Indexing:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='job-table-setting'>\n                            <JobsTable\n                                jobType={JobTypes.BLEVE_POST_INDEXING}\n                                disabled={!this.state.canPurgeAndIndex || this.props.isDisabled}\n                                createJobButtonText={\n                                    <FormattedMessage\n                                        id='admin.bleve.createJob.title'\n                                        defaultMessage='Index Now'\n                                    />\n                                }\n                                createJobHelpText={\n                                    <FormattedMessage\n                                        id='admin.bleve.createJob.help'\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Bleve is available during indexing but search results may be incomplete until the indexing job is complete.'\n                                    />\n                                }\n                                getExtraInfoText={this.getExtraInfo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RequestButton\n                    id='purgeIndexesSection'\n                    requestAction={blevePurgeIndexes}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesHelpText'\n                            defaultMessage='Purging will entirely remove the content of the Bleve index directory. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesButton'\n                            defaultMessage='Purge Index'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.bleve.purgeIndexesButton.success'),\n                        defaultMessage: 'Indexes purged successfully.',\n                    }}\n                    errorMessage={{\n                        id: t('admin.bleve.purgeIndexesButton.error'),\n                        defaultMessage: 'Failed to purge indexes: {error}',\n                    }}\n                    disabled={!this.state.canPurgeAndIndex || this.props.isDisabled}\n                    label={(\n                        <FormattedMessage\n                            id='admin.bleve.purgeIndexesButton.label'\n                            defaultMessage='Purge Indexes:'\n                        />\n                    )}\n                />\n                <BooleanSetting\n                    id='enableSearching'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableSearchingTitle'\n                            defaultMessage='Enable Bleve for search queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableSearchingDescription'\n                            defaultMessage='When true, Bleve will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\n                        />\n                    }\n                    value={this.state.enableSearching}\n                    disabled={!this.state.enableIndexing || this.props.isDisabled}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableSearching')}\n                />\n                <BooleanSetting\n                    id='enableAutocomplete'\n                    label={\n                        <FormattedMessage\n                            id='admin.bleve.enableAutocompleteTitle'\n                            defaultMessage='Enable Bleve for autocomplete queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.bleve.enableAutocompleteDescription'\n                            defaultMessage='When true, Bleve will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\n                        />\n                    }\n                    value={this.state.enableAutocomplete}\n                    disabled={!this.state.enableIndexing || this.props.isDisabled}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('BleveSettings.EnableAutocomplete')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport {browserHistory} from 'utils/browser_history';\n\ntype Props = {\n\n    // Bool whether navigation is blocked\n    blocked: boolean;\n\n    // String Link destination\n    to: string;\n    actions: {\n\n        // Function for deferring navigation while blocked\n        deferNavigation: (func: () => void) => void;\n    };\n    children?: string | React.ReactNode;\n    className?: string;\n    onClick?: (e: React.MouseEvent) => void;\n};\nexport default class BlockableLink extends React.PureComponent<Props> {\n    private handleClick = (e: React.MouseEvent) => {\n        if (this.props.onClick) {\n            this.props.onClick(e);\n        }\n        if (this.props.blocked) {\n            e.preventDefault();\n            this.props.actions.deferNavigation(() => {\n                browserHistory.push(this.props.to);\n            });\n        }\n    };\n\n    public render() {\n        const props = {...this.props};\n        Reflect.deleteProperty(props, 'blocked');\n        Reflect.deleteProperty(props, 'actions');\n\n        return (\n            <NavLink\n                {...props}\n                onClick={this.handleClick}\n            />);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {deferNavigation} from 'actions/admin_actions';\nimport {getNavigationBlocked} from 'selectors/views/admin';\nimport {GlobalState} from 'types/store';\n\nimport BlockableLink from './blockable_link';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        blocked: getNavigationBlocked(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators({\n            deferNavigation,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockableLink);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    value: boolean;\n    onChange: (id: string, foo: boolean) => void;\n    trueText?: React.ReactNode;\n    falseText?: React.ReactNode;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n}\n\nexport default class BooleanSetting extends React.PureComponent<Props> {\n    public static defaultProps = {\n        trueText: (\n            <FormattedMessage\n                id='admin.true'\n                defaultMessage='true'\n            />\n        ),\n        falseText: (\n            <FormattedMessage\n                id='admin.false'\n                defaultMessage='false'\n            />\n        ),\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value === 'true');\n    }\n\n    public render() {\n        let helpText;\n        if (this.props.disabled && this.props.disabledText) {\n            helpText = (\n                <div>\n                    <span className='admin-console__disabled-text'>\n                        {this.props.disabledText}\n                    </span>\n                    {this.props.helpText}\n                </div>\n            );\n        } else {\n            helpText = this.props.helpText;\n        }\n\n        return (\n            <Setting\n                inputId={this.props.id}\n                label={this.props.label}\n                helpText={helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <a id={this.props.id}/>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'true'}\n                        type='radio'\n                        value='true'\n                        id={Utils.createSafeId(this.props.id) + 'true'}\n                        name={this.props.id}\n                        checked={this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.trueText}\n                </label>\n                <label className='radio-inline'>\n                    <input\n                        data-testid={this.props.id + 'false'}\n                        type='radio'\n                        value='false'\n                        id={Utils.createSafeId(this.props.id) + 'false'}\n                        name={this.props.id}\n                        checked={!this.props.value}\n                        onChange={this.handleChange}\n                        disabled={this.props.disabled || this.props.setByEnv}\n                    />\n                    {this.props.falseText}\n                </label>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Tooltip} from 'react-bootstrap';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {uploadBrandImage, deleteBrandImage} from 'actions/admin_actions.jsx';\nimport {Constants} from 'utils/constants';\nimport FormError from 'components/form_error';\nimport OverlayTrigger from 'components/overlay_trigger';\n\nconst HTTP_STATUS_OK = 200;\n\nexport default class BrandImageSetting extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Set for testing purpose\n         */\n        id: PropTypes.string,\n\n        /*\n         * Set to disable the setting\n         */\n        disabled: PropTypes.bool.isRequired,\n\n        /*\n        * Set the save needed in the admin schema settings to trigger the save button to turn on\n        */\n        setSaveNeeded: PropTypes.func.isRequired,\n\n        /*\n        * Registers the function suppose to be run when the save button is pressed\n        */\n        registerSaveAction: PropTypes.func.isRequired,\n\n        /*\n        * Unregisters the function on unmount of the component suppose to be run when the save button is pressed\n        */\n        unRegisterSaveAction: PropTypes.func.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            deleteBrandImage: false,\n            brandImage: null,\n            brandImageExists: false,\n            brandImageTimestamp: Date.now(),\n            error: '',\n        };\n\n        this.imageRef = React.createRef();\n        this.fileInputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        fetch(Client4.getBrandImageUrl(this.state.brandImageTimestamp)).then(\n            (resp) => {\n                if (resp.status === HTTP_STATUS_OK) {\n                    this.setState({brandImageExists: true});\n                } else {\n                    this.setState({brandImageExists: false});\n                }\n            },\n        );\n\n        this.props.registerSaveAction(this.handleSave);\n    }\n\n    componentWillUnmount() {\n        this.props.unRegisterSaveAction(this.handleSave);\n    }\n\n    componentDidUpdate() {\n        if (this.imageRef.current) {\n            const reader = new FileReader();\n\n            const img = this.imageRef.current;\n            reader.onload = (e) => {\n                $(img).attr('src', e.target.result); // eslint-disable-line jquery/no-attr\n            };\n\n            reader.readAsDataURL(this.state.brandImage);\n        }\n    }\n\n    handleImageChange = () => {\n        const element = $(this.fileInputRef.current);\n        if (element.prop('files').length > 0) {\n            this.props.setSaveNeeded();\n            this.setState({\n                brandImage: element.prop('files')[0],\n                deleteBrandImage: false,\n            });\n        }\n    }\n\n    handleDeleteButtonPressed = () => {\n        this.setState({deleteBrandImage: true, brandImage: null, brandImageExists: false});\n        this.props.setSaveNeeded();\n    }\n\n    handleSave = async () => {\n        this.setState({\n            error: '',\n        });\n\n        let error;\n        if (this.state.deleteBrandImage) {\n            await deleteBrandImage(\n                () => {\n                    this.setState({\n                        deleteBrandImage: false,\n                        brandImageExists: false,\n                        brandImage: null,\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                },\n            );\n        } else if (this.state.brandImage) {\n            await uploadBrandImage(\n                this.state.brandImage,\n                () => {\n                    this.setState({\n                        brandImageExists: true,\n                        brandImage: null,\n                        brandImageTimestamp: Date.now(),\n                    });\n                },\n                (err) => {\n                    error = err;\n                    this.setState({\n                        error: err.message,\n                    });\n                },\n            );\n        }\n        return {error};\n    }\n\n    render() {\n        let letbtnDefaultClass = 'btn';\n        if (!this.props.disabled) {\n            letbtnDefaultClass += ' btn-default';\n        }\n\n        let img = null;\n        if (this.state.brandImage) {\n            img = (\n                <div className='remove-image__img mb-5'>\n                    <img\n                        ref={this.imageRef}\n                        alt='brand image'\n                        src=''\n                    />\n                </div>\n            );\n        } else if (this.state.brandImageExists) {\n            let overlay;\n            if (!this.props.disabled) {\n                overlay = (\n                    <OverlayTrigger\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='right'\n                        overlay={(\n                            <Tooltip id='removeIcon'>\n                                <div aria-hidden={true}>\n                                    <FormattedMessage\n                                        id='admin.team.removeBrandImage'\n                                        defaultMessage='Remove brand image'\n                                    />\n                                </div>\n                            </Tooltip>\n                        )}\n                    >\n                        <button\n                            type='button'\n                            className='remove-image__btn'\n                            onClick={this.handleDeleteButtonPressed}\n                        >\n                            <span aria-hidden={true}>{'×'}</span>\n                        </button>\n                    </OverlayTrigger>\n                );\n            }\n            img = (\n                <div className='remove-image__img mb-5'>\n                    <img\n                        alt='brand image'\n                        src={Client4.getBrandImageUrl(this.state.brandImageTimestamp)}\n                    />\n                    {overlay}\n                </div>\n            );\n        } else {\n            img = (\n                <p className='mt-2'>\n                    <FormattedMessage\n                        id='admin.team.noBrandImage'\n                        defaultMessage='No brand image uploaded'\n                    />\n                </p>\n            );\n        }\n\n        return (\n            <div\n                data-testid={this.props.id}\n                className='form-group'\n            >\n                <label className='control-label col-sm-4'>\n                    <FormattedMessage\n                        id='admin.team.brandImageTitle'\n                        defaultMessage='Custom Brand Image:'\n                    />\n                </label>\n                <div className='col-sm-8'>\n                    <div className='remove-image'>\n                        {img}\n                    </div>\n                </div>\n                <div className='col-sm-4'/>\n                <div className='col-sm-8'>\n                    <div className='file__upload mt-5'>\n                        <button\n                            type='button'\n                            className={letbtnDefaultClass}\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.team.chooseImage'\n                                defaultMessage='Select Image'\n                            />\n                        </button>\n                        <input\n                            ref={this.fileInputRef}\n                            type='file'\n                            accept='.jpg,.png,.bmp'\n                            disabled={this.props.disabled}\n                            onChange={this.handleImageChange}\n                        />\n                    </div>\n                    <br/>\n                    <FormError error={this.state.error}/>\n                    <p className='help-text m-0'>\n                        <FormattedMessage\n                            id='admin.team.uploadDesc'\n                            defaultMessage='Customize your user experience by adding a custom image to your login screen. Recommended maximum image size is less than 2 MB.'\n                        />\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport ClusterTableContainer from './cluster_table_container.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ClusterSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ClusterSettings.Enable = this.state.Enable;\n        config.ClusterSettings.ClusterName = this.state.ClusterName;\n        config.ClusterSettings.OverrideHostname = this.state.OverrideHostname;\n        config.ClusterSettings.UseIpAddress = this.state.UseIpAddress;\n        config.ClusterSettings.UseExperimentalGossip = this.state.UseExperimentalGossip;\n        config.ClusterSettings.EnableExperimentalGossipEncryption = this.state.EnableExperimentalGossipEncryption;\n        config.ClusterSettings.GossipPort = this.parseIntNonZero(this.state.GossipPort, 8074);\n        config.ClusterSettings.StreamingPort = this.parseIntNonZero(this.state.StreamingPort, 8075);\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const settings = config.ClusterSettings;\n\n        return {\n            Enable: settings.Enable,\n            ClusterName: settings.ClusterName,\n            OverrideHostname: settings.OverrideHostname,\n            UseIpAddress: settings.UseIpAddress,\n            UseExperimentalGossip: settings.UseExperimentalGossip,\n            EnableExperimentalGossipEncryption: settings.EnableExperimentalGossipEncryption,\n            GossipPort: settings.GossipPort,\n            StreamingPort: settings.StreamingPort,\n            showWarning: false,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.advance.cluster'\n                defaultMessage='High Availability'\n            />\n        );\n    }\n\n    overrideHandleChange = (id, value) => {\n        this.setState({\n            showWarning: true,\n        });\n\n        this.handleChange(id, value);\n    }\n\n    renderSettings = () => {\n        const licenseEnabled = this.props.license.IsLicensed === 'true' && this.props.license.Cluster === 'true';\n        if (!licenseEnabled) {\n            return null;\n        }\n\n        var configLoadedFromCluster = null;\n\n        if (Client4.clusterId) {\n            configLoadedFromCluster = (\n                <div\n                    style={style.configLoadedFromCluster}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.loadedFrom'\n                        defaultMessage='This configuration file was loaded from Node ID {clusterId}. Please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html) if you are accessing the System Console through a load balancer and experiencing issues.'\n                        values={{\n                            clusterId: Client4.clusterId,\n                        }}\n                    />\n                </div>\n            );\n        }\n\n        var warning = null;\n\n        if (this.state.showWarning) {\n            warning = (\n                <div\n                    style={style.warning}\n                    className='alert alert-warning'\n                >\n                    <WarningIcon/>\n                    <FormattedMarkdownMessage\n                        id='admin.cluster.should_not_change'\n                        defaultMessage='WARNING: These settings may not sync with the other servers in the cluster. High Availability inter-node communication will not start until you modify the config.json to be identical on all servers and restart Mattermost. Please see the [documentation](!http://docs.mattermost.com/deployment/cluster.html) on how to add or remove a server from the cluster. If you are accessing the System Console through a load balancer and experiencing issues, please see the Troubleshooting Guide in our [documentation](!http://docs.mattermost.com/deployment/cluster.html).'\n                    />\n                </div>\n            );\n        }\n\n        var clusterTableContainer = null;\n        if (this.state.Enable) {\n            clusterTableContainer = (<ClusterTableContainer/>);\n        }\n\n        return (\n            <SettingsGroup>\n                {configLoadedFromCluster}\n                {clusterTableContainer}\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.cluster.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                {warning}\n                <BooleanSetting\n                    id='Enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.enableTitle'\n                            defaultMessage='Enable High Availability Mode:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.cluster.enableDescription'\n                            defaultMessage='When true, Mattermost will run in High Availability mode. Please see [documentation](!http://docs.mattermost.com/deployment/cluster.html) to learn more about configuring High Availability for Mattermost.'\n                        />\n                    }\n                    value={this.state.Enable}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.Enable')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='ClusterName'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterName'\n                            defaultMessage='Cluster Name:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.ClusterNameEx', 'E.g.: \"Production\" or \"Staging\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.ClusterNameDesc'\n                            defaultMessage='The cluster to join by name.  Only nodes with the same cluster name will join together.  This is to support Blue-Green deployments or staging pointing to the same database.'\n                        />\n                    }\n                    value={this.state.ClusterName}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.ClusterName')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='OverrideHostname'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostname'\n                            defaultMessage='Override Hostname:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.OverrideHostnameEx', 'E.g.: \"app-server-01\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.OverrideHostnameDesc'\n                            defaultMessage=\"The default value of '<blank>' will attempt to get the Hostname from the OS or use the IP Address.  You can override the hostname of this server with this property.  It is not recommended to override the Hostname unless needed. This property can also be set to a specific IP Address if needed.\"\n                        />\n                    }\n                    value={this.state.OverrideHostname}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.OverrideHostname')}\n                    disabled={this.props.isDisabled}\n                />\n                <BooleanSetting\n                    id='UseIpAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseIpAddress'\n                            defaultMessage='Use IP Address:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.UseIpAddressDesc'\n                            defaultMessage='When true, the cluster will attempt to communicate via IP Address vs using the hostname.'\n                        />\n                    }\n                    value={this.state.UseIpAddress}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseIpAddress')}\n                    disabled={this.props.isDisabled}\n                />\n                <BooleanSetting\n                    id='UseExperimentalGossip'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.UseExperimentalGossip'\n                            defaultMessage='Use Gossip:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.UseExperimentalGossipDesc'\n                            defaultMessage='When true, the server will attempt to communicate via the gossip protocol over the gossip port.  When false the server will attempt to communicate over the streaming port. When false the gossip port and protocol are still used to determine cluster health.'\n                        />\n                    }\n                    value={this.state.UseExperimentalGossip}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.UseExperimentalGossip')}\n                    disabled={this.props.isDisabled}\n                />\n                <BooleanSetting\n                    id='EnableExperimentalGossipEncryption'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.EnableExperimentalGossipEncryption'\n                            defaultMessage='Enable Experimental Gossip encryption:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.EnableExperimentalGossipEncryptionDesc'\n                            defaultMessage='When true, all communication through the gossip protocol will be encrypted.'\n                        />\n                    }\n                    value={this.state.EnableExperimentalGossipEncryption}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.EnableExperimentalGossipEncryption')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='GossipPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPort'\n                            defaultMessage='Gossip Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.GossipPortEx', 'E.g.: \"8074\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.GossipPortDesc'\n                            defaultMessage='The port used for the gossip protocol.  Both UDP and TCP should be allowed on this port.'\n                        />\n                    }\n                    value={this.state.GossipPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.GossipPort')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='StreamingPort'\n                    label={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPort'\n                            defaultMessage='Streaming Port:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.cluster.StreamingPortEx', 'E.g.: \"8075\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.cluster.StreamingPortDesc'\n                            defaultMessage='The port used for streaming data between servers.'\n                        />\n                    }\n                    value={this.state.StreamingPort}\n                    onChange={this.overrideHandleChange}\n                    setByEnv={this.isSetByEnv('ClusterSettings.StreamingPort')}\n                    disabled={this.props.isDisabled}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n\nconst style = {\n    configLoadedFromCluster: {marginBottom: 10},\n    warning: {marginBottom: 10},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport statusGreen from 'images/status_green.png';\nimport statusYellow from 'images/status_yellow.png';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\n\nexport default class ClusterTable extends React.PureComponent {\n    static propTypes = {\n        clusterInfos: PropTypes.array.isRequired,\n        reload: PropTypes.func.isRequired,\n    }\n\n    render() {\n        var versionMismatch = (\n            <img\n                alt='version mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var configMismatch = (\n            <img\n                alt='config mismatch'\n                className='cluster-status'\n                src={statusGreen}\n            />\n        );\n\n        var version = '';\n        var configHash = '';\n        var singleItem = false;\n\n        if (this.props.clusterInfos.length) {\n            version = this.props.clusterInfos[0].version;\n            configHash = this.props.clusterInfos[0].config_hash;\n            singleItem = this.props.clusterInfos.length === 1;\n        }\n\n        this.props.clusterInfos.map((clusterInfo) => {\n            if (clusterInfo.version !== version) {\n                versionMismatch = (\n                    <img\n                        alt='version mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            if (clusterInfo.config_hash !== configHash) {\n                configMismatch = (\n                    <img\n                        alt='config mismatch'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            }\n\n            return null;\n        });\n\n        var items = this.props.clusterInfos.map((clusterInfo) => {\n            var status = null;\n\n            if (clusterInfo.hostname === '') {\n                clusterInfo.hostname = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.version === '') {\n                clusterInfo.version = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (clusterInfo.config_hash === '') {\n                clusterInfo.config_hash = Utils.localizeMessage('admin.cluster.unknown', 'unknown');\n            }\n\n            if (singleItem) {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusYellow}\n                    />\n                );\n            } else {\n                status = (\n                    <img\n                        alt='Cluster status'\n                        className='cluster-status'\n                        src={statusGreen}\n                    />\n                );\n            }\n\n            return (\n                <tr key={clusterInfo.ipaddress}>\n                    <td style={style.clusterCell}>{status}</td>\n                    <td style={style.clusterCell}>{clusterInfo.hostname}</td>\n                    <td style={style.clusterCell}>{versionMismatch} {clusterInfo.version}</td>\n                    <td style={style.clusterCell}><div className='config-hash'>{configMismatch} {clusterInfo.config_hash}</div></td>\n                    <td style={style.clusterCell}>{clusterInfo.ipaddress}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div\n                className='cluster-panel__table'\n                style={style.clusterTable}\n            >\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        onClick={this.props.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.cluster.status_table.reload'\n                            defaultMessage=' Reload Cluster Status'\n                        />\n                    </button>\n                </div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.status'\n                                    defaultMessage='Status'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.hostname'\n                                    defaultMessage='Hostname'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.version'\n                                    defaultMessage='Version'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.config_hash'\n                                    defaultMessage='Config File MD5'\n                                />\n                            </th>\n                            <th>\n                                <FormattedMessage\n                                    id='admin.cluster.status_table.url'\n                                    defaultMessage='Gossip Address'\n                                />\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {items}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst style = {\n    clusterTable: {margin: 10, marginBottom: 30},\n    clusterCell: {whiteSpace: 'nowrap'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {getClusterStatus} from 'actions/admin_actions.jsx';\nimport LoadingScreen from '../loading_screen';\n\nimport ClusterTable from './cluster_table.jsx';\n\nexport default class ClusterTableContainer extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.interval = null;\n\n        this.state = {\n            clusterInfos: null,\n        };\n    }\n\n    load = () => {\n        getClusterStatus(\n            (data) => {\n                this.setState({\n                    clusterInfos: data,\n                });\n            },\n            null,\n        );\n    }\n\n    componentDidMount() {\n        this.load();\n\n        // reload the cluster status every 15 seconds\n        this.interval = setInterval(this.load, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    reload = (e) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        this.setState({\n            clusterInfos: null,\n        });\n\n        this.load();\n    }\n\n    render() {\n        if (this.state.clusterInfos == null) {\n            return (<LoadingScreen/>);\n        }\n\n        return (\n            <ClusterTable\n                clusterInfos={this.state.clusterInfos}\n                reload={this.reload}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport ColorInput from 'components/color_input';\n\nimport Setting from './setting';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    helpText?: React.ReactNode;\n    value: string;\n    onChange?: (id: string, color: string) => void;\n    disabled?: boolean;\n}\n\nexport default class ColorSetting extends React.PureComponent<Props> {\n    private handleChange = (color: string) => {\n        if (this.props.onChange) {\n            this.props.onChange(this.props.id, color);\n        }\n    }\n\n    public render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <ColorInput\n                    id={this.props.id}\n                    value={this.props.value}\n                    onChange={this.handleChange}\n                    isDisabled={this.props.disabled}\n                />\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedDate, FormattedMessage, FormattedTime} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {Compliance} from 'mattermost-redux/types/compliance';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport LoadingScreen from 'components/loading_screen';\nimport ReloadIcon from 'components/widgets/icons/fa_reload_icon';\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport {t} from 'utils/i18n.jsx';\n\ntype Props = {\n\n    /*\n        * Set if compliance reports are licensed\n        */\n    isLicensed: boolean;\n\n    /*\n        * Set if compliance reports are enabled in the config\n        */\n    enabled: boolean;\n\n    /*\n        * Array of reports to render\n        */\n    reports: Compliance[];\n    users: Dictionary<UserProfile>;\n\n    /*\n        * Error message to display\n        */\n    serverError?: string;\n\n    readOnly?: boolean;\n\n    actions: {\n\n        /*\n            * Function to get compliance reports\n            */\n        getComplianceReports: () => Promise<{data: Compliance[]}>;\n\n        /*\n            * Function to save compliance reports\n            */\n        createComplianceReport: (job: Partial<Compliance>) => Promise<{data: Compliance; error?: Error}>;\n    };\n}\n\ntype State = {\n    loadingReports: boolean;\n    runningReport?: boolean;\n}\n\nexport default class ComplianceReports extends React.PureComponent<Props, State> {\n    private descInput: React.RefObject<HTMLInputElement>;\n    private emailsInput: React.RefObject<HTMLInputElement>;\n    private fromInput: React.RefObject<HTMLInputElement>;\n    private keywordsInput: React.RefObject<HTMLInputElement>;\n    private toInput: React.RefObject<HTMLInputElement>;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loadingReports: true,\n        };\n\n        this.descInput = React.createRef();\n        this.emailsInput = React.createRef();\n        this.fromInput = React.createRef();\n        this.keywordsInput = React.createRef();\n        this.toInput = React.createRef();\n    }\n\n    componentDidMount() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return;\n        }\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false}),\n        );\n    }\n\n    reload = () => {\n        this.setState({loadingReports: true});\n\n        this.props.actions.getComplianceReports().then(\n            () => this.setState({loadingReports: false}),\n        );\n    }\n\n    runReport = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        this.setState({runningReport: true});\n\n        const job: Partial<Compliance> = {};\n        job.desc = this.descInput.current?.value;\n        job.emails = this.emailsInput.current?.value;\n        job.keywords = this.keywordsInput.current?.value;\n        job.start_at = this.fromInput.current ? Date.parse(this.fromInput.current.value) : undefined;\n        job.end_at = this.toInput.current ? Date.parse(this.toInput.current.value) : undefined;\n\n        this.props.actions.createComplianceReport(job).then(\n            ({data}) => {\n                if (data) {\n                    if (this.emailsInput.current) {\n                        this.emailsInput.current.value = '';\n                    }\n                    if (this.keywordsInput.current) {\n                        this.keywordsInput.current.value = '';\n                    }\n                    if (this.descInput.current) {\n                        this.descInput.current.value = '';\n                    }\n                    if (this.fromInput.current) {\n                        this.fromInput.current.value = '';\n                    }\n                    if (this.toInput.current) {\n                        this.toInput.current.value = '';\n                    }\n                }\n                this.setState({runningReport: false});\n                this.props.actions.getComplianceReports();\n            },\n        );\n    }\n\n    getDateTime(millis: number) {\n        const date = new Date(millis);\n        return (\n            <span style={style.date}>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    render() {\n        if (!this.props.isLicensed || !this.props.enabled) {\n            return <div/>;\n        }\n\n        let content = null;\n        if (this.state.loadingReports) {\n            content = <LoadingScreen/>;\n        } else {\n            const list = [];\n\n            for (let i = 0; i < this.props.reports.length; i++) {\n                const report = this.props.reports[i];\n\n                let params: string | JSX.Element = '';\n                if (report.type === 'adhoc') {\n                    params = (\n                        <span>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />{' '}{this.getDateTime(report.start_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />{' '}{this.getDateTime(report.end_at)}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />{' '}{report.emails}\n                            <br/>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />{' '}{report.keywords}\n                        </span>);\n                }\n                let download: string | JSX.Element = '';\n                let status: string | JSX.Element = '';\n                if (report.status === 'finished') {\n                    download = (\n                        <a href={`${Client4.getBaseRoute()}/compliance/reports/${report.id}/download`}>\n                            <FormattedMessage\n                                id='admin.compliance_table.download'\n                                defaultMessage='Download'\n                            />\n                        </a>\n                    );\n\n                    status = (\n                        <span className='status-icon-success'>\n                            <FormattedMessage\n                                id='admin.compliance_table.success'\n                                defaultMessage='Success'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'running') {\n                    status = (\n                        <span className='status-icon-warning'>\n                            <FormattedMessage\n                                id='admin.compliance_table.pending'\n                                defaultMessage='Pending'\n                            />\n                        </span>\n                    );\n                } else if (report.status === 'failed') {\n                    status = (\n                        <span className='status-icon-error'>\n                            <FormattedMessage\n                                id='admin.compliance_table.failed'\n                                defaultMessage='Failed'\n                            />\n                        </span>\n                    );\n                }\n\n                let user = report.user_id;\n                const profile = this.props.users[report.user_id];\n                if (profile) {\n                    user = profile.email;\n                }\n\n                list[i] = (\n                    <tr key={report.id}>\n                        <td>{status}</td>\n                        <td style={style.dataCell}>{download}</td>\n                        <td>{this.getDateTime(report.create_at)}</td>\n                        <td>{report.count}</td>\n                        <td>{report.type}</td>\n                        <td style={style.dataCell}>{report.desc}</td>\n                        <td>{user}</td>\n                        <td style={style.dataCell}>{params}</td>\n                    </tr>\n                );\n            }\n\n            content = (\n                <div style={style.content}>\n                    <table className='table'>\n                        <thead>\n                            <tr>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.status'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.files'\n                                        defaultMessage='Files'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.timestamp'\n                                        defaultMessage='Timestamp'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.records'\n                                        defaultMessage='Records'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.type'\n                                        defaultMessage='Type'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.desc'\n                                        defaultMessage='Description'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.userId'\n                                        defaultMessage='Requested By'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.compliance_table.params'\n                                        defaultMessage='Params'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {list}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        }\n\n        let serverError: string | JSX.Element = '';\n        if (this.props.serverError) {\n            serverError = (\n                <div\n                    className='form-group has-error'\n                    style={style.serverError}\n                >\n                    <label className='control-label'>{this.props.serverError}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div className='panel compliance-panel'>\n                <h4>\n                    <FormattedMessage\n                        id='admin.compliance_reports.title'\n                        defaultMessage='Compliance Reports'\n                    />\n                </h4>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.desc'\n                                defaultMessage='Job Name:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='desc'\n                            ref={this.descInput}\n                            placeholder={{id: t('admin.compliance_reports.desc_placeholder'), defaultMessage: 'E.g. \"Audit 445 for HR\"'}}\n                            disabled={this.props.readOnly}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.from'\n                                defaultMessage='From:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='from'\n                            ref={this.fromInput}\n                            placeholder={{id: t('admin.compliance_reports.from_placeholder'), defaultMessage: 'E.g. \"2016-03-11\"'}}\n                            disabled={this.props.readOnly}\n                        />\n                    </div>\n                    <div className='col-sm-3 col-md-2 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.to'\n                                defaultMessage='To:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='to'\n                            ref={this.toInput}\n                            placeholder={{id: t('admin.compliance_reports.to_placeholder'), defaultMessage: 'E.g. \"2016-03-15\"'}}\n                            disabled={this.props.readOnly}\n                        />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.emails'\n                                defaultMessage='Emails:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='emails'\n                            ref={this.emailsInput}\n                            placeholder={{id: t('admin.compliance_reports.emails_placeholder'), defaultMessage: 'E.g. \"bill@example.com, bob@example.com\"'}}\n                            disabled={this.props.readOnly}\n                        />\n                    </div>\n                    <div className='col-sm-6 col-md-4 form-group'>\n                        <label>\n                            <FormattedMessage\n                                id='admin.compliance_reports.keywords'\n                                defaultMessage='Keywords:'\n                            />\n                        </label>\n                        <LocalizedInput\n                            type='text'\n                            className='form-control'\n                            id='keywords'\n                            ref={this.keywordsInput}\n                            placeholder={{id: t('admin.compliance_reports.keywords_placeholder'), defaultMessage: 'E.g. \"shorting stock\"'}}\n                            disabled={this.props.readOnly}\n                        />\n                    </div>\n                </div>\n                <div className='clearfix'>\n                    <button\n                        id='run-button'\n                        type='submit'\n                        className='btn btn-primary'\n                        onClick={this.runReport}\n                        disabled={this.props.readOnly}\n                    >\n                        <FormattedMessage\n                            id='admin.compliance_reports.run'\n                            defaultMessage='Run Compliance Report'\n                        />\n                    </button>\n                </div>\n                {serverError}\n                <div className='text-right'>\n                    <button\n                        type='submit'\n                        className='btn btn-link'\n                        disabled={this.state.runningReport}\n                        onClick={this.reload}\n                    >\n                        <ReloadIcon/>\n                        <FormattedMessage\n                            id='admin.compliance_reports.reload'\n                            defaultMessage='Reload Completed Compliance Reports'\n                        />\n                    </button>\n                </div>\n                <div className='compliance-panel__table'>\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst style: Dictionary<React.CSSProperties> = {\n    content: {margin: 10},\n    greenStatus: {color: 'green'},\n    redStatus: {color: 'red'},\n    dataCell: {whiteSpace: 'nowrap'},\n    date: {whiteSpace: 'nowrap'},\n    serverError: {marginTop: '10px'},\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {createComplianceReport, getComplianceReports} from 'mattermost-redux/actions/admin';\nimport {getComplianceReports as selectComplianceReports, getConfig} from 'mattermost-redux/selectors/entities/admin';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {Compliance} from 'mattermost-redux/types/compliance';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport ComplianceReports from './compliance_reports';\n\ntype Actions = {\n    getComplianceReports: () => Promise<{data: Compliance[]}>;\n    createComplianceReport: (job: Partial<Compliance>) => Promise<{data: Compliance; error?: Error}>;\n}\n\nconst getUsersForReports = createSelector(\n    (state: GlobalState) => state.entities.users.profiles,\n    (state: GlobalState) => state.entities.admin.complianceReports,\n    (users, reports) => {\n        const usersMap: Dictionary<UserProfile> = {};\n        Object.values(reports).forEach((r) => {\n            const u = users[r.user_id];\n            if (u) {\n                usersMap[u.id] = u;\n            }\n        });\n        return usersMap;\n    },\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    let enabled = false;\n    const config = getConfig(state);\n    if (config && config.ComplianceSettings) {\n        enabled = config.ComplianceSettings.Enable;\n    }\n\n    let serverError: string | undefined;\n    const error = state.requests.admin.createCompliance.error;\n    if (error) {\n        serverError = error.message;\n    }\n\n    const reports = Object.values(selectComplianceReports(state)).sort((a, b) => {\n        return b.create_at - a.create_at;\n    });\n\n    return {\n        isLicensed,\n        enabled,\n        reports,\n        serverError,\n        users: getUsersForReports(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getComplianceReports,\n            createComplianceReport,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComplianceReports);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport ConfirmModal from 'components/confirm_modal';\n\nimport BooleanSetting from './boolean_setting';\n\ntype Props = {\n    id: string;\n    value: boolean;\n    onChange: (id: string, value: boolean, confirm?: boolean, doSubmit?: boolean, warning?: React.ReactNode | string) => void;\n    cancelSubmit: () => void;\n    disabled?: boolean;\n    setByEnv: boolean;\n    showConfirm: boolean;\n}\n\nexport default class CustomEnableDisableGuestAccountsSetting extends React.PureComponent<Props> {\n    public handleChange = (id: string, value: boolean, submit = false) => {\n        const confirmNeeded = value === false; // Requires confirmation if disabling guest accounts\n        let warning: React.ReactNode | string = '';\n        if (confirmNeeded) {\n            warning = (\n                <FormattedMessage\n                    id='admin.guest_access.disableConfirmWarning'\n                    defaultMessage='All current guest account sessions will be revoked, and marked as inactive'\n                />\n            );\n        }\n        this.props.onChange(id, value, confirmNeeded, submit, warning);\n    };\n\n    public render() {\n        const label = (\n            <FormattedMessage\n                id='admin.guest_access.enableTitle'\n                defaultMessage='Enable Guest Access: '\n            />\n        );\n        const helpText = (\n            <FormattedMarkdownMessage\n                id='admin.guest_access.enableDescription'\n                defaultMessage='When true, external guest can be invited to channels within teams. Please see [Permissions Schemes](../user_management/permissions/system_scheme) for which roles can invite guests.'\n            />\n        );\n\n        return (\n            <>\n                <BooleanSetting\n                    id={this.props.id}\n                    value={this.props.value}\n                    label={label}\n                    helpText={helpText}\n                    setByEnv={this.props.setByEnv}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled}\n                />\n                <ConfirmModal\n                    show={this.props.showConfirm && (this.props.value === false)}\n                    title={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmTitle'\n                            defaultMessage='Save and Disable Guest Access?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmMessage'\n                            defaultMessage='Disabling guest access will revoke all current Guest Account sessions. Guests will no longer be able to login and new guests cannot be invited into Mattermost. Guest users will be marked as inactive in user lists. Enabling this feature will not reinstate previous guest accounts. Are you sure you wish to remove these users?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.guest_access.disableConfirmButton'\n                            defaultMessage='Save and Disable Guest Access'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.handleChange(this.props.id, false, true);\n                        this.setState({showConfirm: false});\n                    }}\n                    onCancel={this.props.cancelSubmit}\n                />\n            </>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport SchemaAdminSettings from 'components/admin_console/schema_admin_settings.jsx';\n\n// No changes required to the base SchemaAdminSettings, except to inject custom props.\nconst CustomPluginSettings = SchemaAdminSettings;\n\nexport default CustomPluginSettings;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {Constants} from '../../../utils/constants';\nimport {t} from '../../../utils/i18n';\nimport SchemaAdminSettings from '../schema_admin_settings';\n\nexport default function getEnablePluginSetting(plugin) {\n    const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n    const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n    return {\n        type: Constants.SettingsTypes.TYPE_BOOL,\n        key: pluginEnabledConfigKey,\n        label: t('admin.plugin.enable_plugin'),\n        label_default: 'Enable Plugin: ',\n        help_text: t('admin.plugin.enable_plugin.help'),\n        help_text_default: 'When true, this plugin is enabled.',\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {createSelector} from 'reselect';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\n\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport {getAdminConsoleCustomComponents} from 'selectors/admin_console';\nimport SchemaAdminSettings from '../schema_admin_settings';\nimport {it} from '../admin_definition';\n\nimport CustomPluginSettings from './custom_plugin_settings.jsx';\nimport getEnablePluginSetting from './enable_plugin_setting';\n\nfunction makeGetPluginSchema() {\n    return createSelector(\n        (state, pluginId) => state.entities.admin.plugins[pluginId],\n        (state, pluginId) => getAdminConsoleCustomComponents(state, pluginId),\n        (plugin, customComponents) => {\n            if (!plugin) {\n                return null;\n            }\n\n            const escapedPluginId = SchemaAdminSettings.escapePathPart(plugin.id);\n            const pluginEnabledConfigKey = 'PluginSettings.PluginStates.' + escapedPluginId + '.Enable';\n\n            let settings = [];\n            if (plugin.settings_schema && plugin.settings_schema.settings) {\n                settings = plugin.settings_schema.settings.map((setting) => {\n                    const key = setting.key.toLowerCase();\n                    let component = null;\n                    let bannerType = '';\n                    let type = setting.type;\n                    let displayName = setting.display_name;\n                    let isDisabled = it.any(it.stateIsFalse(pluginEnabledConfigKey), it.not(it.userHasWritePermissionOnResource('plugins')));\n\n                    if (customComponents[key]) {\n                        component = customComponents[key].component;\n                        type = Constants.SettingsTypes.TYPE_CUSTOM;\n                    } else if (setting.type === Constants.SettingsTypes.TYPE_CUSTOM) {\n                        // Show a warning banner to enable the plugin in order to display the custom component.\n                        type = Constants.SettingsTypes.TYPE_BANNER;\n                        displayName = localizeMessage('admin.plugin.customSetting.pluginDisabledWarning', 'In order to view this setting, enable the plugin and click Save.');\n                        bannerType = 'warning';\n                        isDisabled = it.any(it.stateIsTrue(pluginEnabledConfigKey), it.not(it.userHasWritePermissionOnResource('plugins')));\n                    }\n\n                    return {\n                        ...setting,\n                        type,\n                        key: 'PluginSettings.Plugins.' + escapedPluginId + '.' + key,\n                        help_text_markdown: true,\n                        label: displayName,\n                        translate: Boolean(plugin.translate),\n                        isDisabled,\n                        banner_type: bannerType,\n                        component,\n                        showTitle: customComponents[key] ? customComponents[key].options.showTitle : false,\n                    };\n                });\n            }\n\n            const pluginEnableSetting = getEnablePluginSetting(plugin);\n            pluginEnableSetting.isDisabled = it.any(pluginEnableSetting.isDisabled, it.not(it.userHasWritePermissionOnResource('plugins')));\n            settings.unshift(pluginEnableSetting);\n\n            settings.forEach((s) => {\n                s.isDisabled = it.any(s.isDisabled, it.not(it.userHasWritePermissionOnResource('plugins')));\n            });\n\n            return {\n                ...plugin.settings_schema,\n                id: plugin.id,\n                name: plugin.name,\n                settings,\n                translate: Boolean(plugin.translate),\n            };\n        },\n    );\n}\n\nfunction makeMapStateToProps() {\n    const getPluginSchema = makeGetPluginSchema();\n\n    return (state, ownProps) => {\n        const pluginId = ownProps.match.params.plugin_id;\n\n        return {\n            schema: getPluginSchema(state, pluginId),\n            roles: getRoles(state),\n        };\n    };\n}\n\nexport default connect(makeMapStateToProps)(CustomPluginSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {AdminConfig, ClientLicense} from 'mattermost-redux/types/config';\nimport {TermsOfService} from 'mattermost-redux/types/terms_of_service';\n\nimport AdminSettings, {BaseProps, BaseState} from 'components/admin_console/admin_settings';\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LoadingScreen from 'components/loading_screen';\n\nimport {Constants} from 'utils/constants';\n\ntype Props = BaseProps & {\n    actions: {\n        getTermsOfService: () => Promise<{data: TermsOfService}>;\n        createTermsOfService: (text: string) => Promise<{data: TermsOfService; error?: Error}>;\n    };\n    config: AdminConfig;\n    license: ClientLicense;\n    setNavigationBlocked: () => void;\n\n    /*\n     * Action to save config file\n     */\n    updateConfig: () => void;\n};\n\ntype State = BaseState & {\n    termsEnabled?: boolean;\n    reAcceptancePeriod?: number;\n    loadingTermsText: boolean;\n    receivedTermsText: string;\n    termsText: string;\n    saveNeeded: boolean;\n    saving: boolean;\n    serverError: JSX.Element | string | null;\n    errorTooltip: boolean;\n}\n\nexport default class CustomTermsOfServiceSettings extends AdminSettings<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            termsEnabled: props.config.SupportSettings?.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: props.config.SupportSettings?.CustomTermsOfServiceReAcceptancePeriod,\n            loadingTermsText: true,\n            receivedTermsText: '',\n            termsText: '',\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n        };\n    }\n\n    getStateFromConfig(config: Props['config']) {\n        return {\n            termsEnabled: config.SupportSettings?.CustomTermsOfServiceEnabled,\n            reAcceptancePeriod: this.parseIntNonZero(String(config.SupportSettings?.CustomTermsOfServiceReAcceptancePeriod), Constants.DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD),\n        };\n    }\n\n    getConfigFromState = (config: Props['config']) => {\n        if (config && config.SupportSettings) {\n            config.SupportSettings.CustomTermsOfServiceEnabled = Boolean(this.state.termsEnabled);\n            config.SupportSettings.CustomTermsOfServiceReAcceptancePeriod = this.parseIntNonZero(String(this.state.reAcceptancePeriod), Constants.DEFAULT_TERMS_OF_SERVICE_RE_ACCEPTANCE_PERIOD);\n        }\n        return config;\n    }\n\n    componentDidMount() {\n        this.getTermsOfService();\n    }\n\n    doSubmit = async (callback?: () => void) => {\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.termsEnabled && (this.state.receivedTermsText !== this.state.termsText || !this.props.config?.SupportSettings?.CustomTermsOfServiceEnabled)) {\n            const result = await this.props.actions.createTermsOfService(this.state.termsText);\n            if (result.error) {\n                this.handleAPIError(result.error, callback);\n                return;\n            }\n        }\n\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {data, error} = await this.props.updateConfig(config);\n\n        if (data) {\n            this.setState(this.getStateFromConfig(data));\n\n            this.setState({\n                saveNeeded: false,\n                saving: false,\n            });\n\n            this.props.setNavigationBlocked(false);\n\n            if (callback) {\n                callback();\n            }\n\n            if (this.handleSaved) {\n                this.handleSaved(config);\n            }\n        } else if (error) {\n            this.handleAPIError({id: error.server_error_id, ...error}, callback, config);\n        }\n    };\n\n    handleAPIError = (err: any, callback?: (() => void), config?: Props['config']) => {\n        this.setState({\n            saving: false,\n            serverError: err.message,\n            serverErrorId: err.id,\n        });\n\n        if (callback) {\n            callback();\n        }\n\n        if (this.handleSaved && config) {\n            this.handleSaved(config as AdminConfig);\n        }\n    };\n\n    getTermsOfService = async () => {\n        this.setState({loadingTermsText: true});\n\n        const {data} = await this.props.actions.getTermsOfService();\n        if (data) {\n            this.setState({\n                termsText: data.text,\n                receivedTermsText: data.text,\n            });\n        }\n\n        this.setState({loadingTermsText: false});\n    };\n\n    handleTermsTextChange = (id: string, value: boolean) => {\n        this.handleChange('termsText', value);\n    };\n\n    handleTermsEnabledChange = (id: string, value: boolean) => {\n        this.handleChange('termsEnabled', value);\n    };\n\n    handleReAcceptancePeriodChange = (id: string, value: boolean) => {\n        this.handleChange('reAcceptancePeriod', value);\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.support.termsOfServiceTitle'\n                defaultMessage='Custom Terms of Service (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        if (this.state.loadingTermsText) {\n            return <LoadingScreen/>;\n        }\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    key={'customTermsOfServiceEnabled'}\n                    id={'SupportSettings.CustomTermsOfServiceEnabled'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.enableTermsOfServiceTitle'\n                            defaultMessage='Enable Custom Terms of Service'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.support.enableTermsOfServiceHelp'\n                            defaultMessage='When true, new users must accept the terms of service before accessing any Mattermost teams on desktop, web or mobile. Existing users must accept them after login or a page refresh.\\n \\nTo update terms of service link displayed in account creation and login pages, go to [Site Configuration > Customization](../site_config/customization).'\n                        />\n                    }\n                    value={Boolean(this.state.termsEnabled)}\n                    onChange={this.handleTermsEnabledChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceEnabled')}\n                    disabled={this.props.isDisabled || !(this.props.license.IsLicensed && this.props.license.CustomTermsOfService === 'true')}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceText'}\n                    id={'SupportSettings.CustomTermsOfServiceText'}\n                    type={'textarea'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextTitle'\n                            defaultMessage='Custom Terms of Service Text'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceTextHelp'\n                            defaultMessage='Text that will appear in your custom Terms of Service. Supports Markdown-formatted text.'\n                        />\n                    }\n                    onChange={this.handleTermsTextChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceText')}\n                    value={this.state.termsText}\n                    maxLength={Constants.MAX_TERMS_OF_SERVICE_TEXT_LENGTH}\n                    disabled={this.props.isDisabled || !this.state.termsEnabled}\n                />\n                <TextSetting\n                    key={'customTermsOfServiceReAcceptancePeriod'}\n                    id={'SupportSettings.CustomTermsOfServiceReAcceptancePeriod'}\n                    type={'number'}\n                    label={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceTitle'\n                            defaultMessage='Re-Acceptance Period:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.support.termsOfServiceReAcceptanceHelp'\n                            defaultMessage='The number of days before Terms of Service acceptance expires, and the terms must be re-accepted.'\n                        />\n                    }\n                    value={this.state.reAcceptancePeriod || ''}\n                    onChange={this.handleReAcceptancePeriodChange}\n                    setByEnv={this.isSetByEnv('SupportSettings.CustomTermsOfServiceReAcceptancePeriod')}\n                    disabled={this.props.isDisabled || !this.state.termsEnabled}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {TermsOfService} from 'mattermost-redux/types/terms_of_service';\nimport {getTermsOfService, createTermsOfService} from 'mattermost-redux/actions/users';\n\nimport CustomTermsOfServiceSettings from './custom_terms_of_service_settings';\n\ntype Actions = {\n    getTermsOfService: () => Promise<{data: TermsOfService}>;\n    createTermsOfService: (text: string) => Promise<{data: TermsOfService; error?: Error}>;\n};\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getTermsOfService,\n            createTermsOfService,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(CustomTermsOfServiceSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport * as Utils from 'utils/utils';\nimport {t} from 'utils/i18n.jsx';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport Setting from './setting';\n\nexport default class CustomUrlSchemesSetting extends React.PureComponent {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            value: PropTypes.array.isRequired,\n            onChange: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            setByEnv: PropTypes.bool.isRequired,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            value: this.arrayToString(props.value),\n        };\n    }\n\n    stringToArray = (str) => {\n        return str.split(',').map((s) => s.trim()).filter(Boolean);\n    };\n\n    arrayToString = (arr) => {\n        return arr.join(',');\n    };\n\n    handleChange = (e) => {\n        const valueAsArray = this.stringToArray(e.target.value);\n\n        this.props.onChange(this.props.id, valueAsArray);\n\n        this.setState({\n            value: e.target.value,\n        });\n    };\n\n    render() {\n        const label = Utils.localizeMessage('admin.customization.customUrlSchemes', 'Custom URL Schemes:');\n        const helpText = Utils.localizeMessage(\n            'admin.customization.customUrlSchemesDesc',\n            'Allows message text to link if it begins with any of the comma-separated URL schemes listed. By default, the following schemes will create links: \"http\", \"https\", \"ftp\", \"tel\", and \"mailto\".',\n        );\n\n        return (\n            <Setting\n                label={label}\n                helpText={helpText}\n                inputId={this.props.id}\n                setByEnv={this.props.setByEnv}\n            >\n                <LocalizedInput\n                    id={this.props.id}\n                    className='form-control'\n                    type='text'\n                    placeholder={{id: t('admin.customization.customUrlSchemesPlaceholder'), defaultMessage: 'E.g.: \"git,smtp\"'}}\n                    value={this.state.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                />\n            </Setting>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./data_grid.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\n\nimport DataGridHeader from './data_grid_header';\nimport DataGridRow from './data_grid_row';\nimport DataGridSearch from './data_grid_search';\n\nimport './data_grid.scss';\n\nexport type Column = {\n    name: string | JSX.Element;\n    field: string;\n    fixed?: boolean;\n\n    // Optional styling overrides\n    width?: number;\n    textAlign?: '-moz-initial' | 'inherit' | 'initial' | 'revert' | 'unset' | 'center' | 'end' | 'justify' | 'left' | 'match-parent' | 'right' | 'start' | undefined;\n    overflow?: string;\n}\n\nexport type Row = {\n    cells: {\n        [key: string]: JSX.Element | string;\n    };\n    onClick?: () => void;\n}\n\ntype Props = {\n    rows: Row[];\n    columns: Column[];\n    placeholderEmpty?: JSX.Element;\n    loadingIndicator?: JSX.Element;\n\n    rowsContainerStyles?: CSSProperties;\n\n    minimumColumnWidth?: number;\n\n    page: number;\n    startCount: number;\n    endCount: number;\n    total?: number;\n    loading: boolean;\n\n    nextPage: () => void;\n    previousPage: () => void;\n\n    onSearch?: (term: string) => void;\n    term?: string;\n    searchPlaceholder?: string;\n\n    filterProps?: {\n        options: FilterOptions;\n        keys: string[];\n        onFilter: (options: FilterOptions) => void;\n    };\n};\n\ntype State = {\n    visibleColumns: Column[];\n    fixedColumns: Column[];\n    hiddenColumns: Column[];\n    minimumColumnWidth: number;\n};\n\nconst MINIMUM_COLUMN_WIDTH = 100;\n\nclass DataGrid extends React.PureComponent<Props, State> {\n    private ref: React.RefObject<HTMLDivElement>;\n\n    static defaultProps = {\n        term: '',\n        searchPlaceholder: '',\n    }\n\n    public constructor(props: Props) {\n        super(props);\n\n        const minimumColumnWidth = props.minimumColumnWidth ? props.minimumColumnWidth : MINIMUM_COLUMN_WIDTH;\n\n        this.state = {\n            visibleColumns: this.props.columns,\n            hiddenColumns: [],\n            fixedColumns: this.props.columns.filter((col) => col.fixed),\n            minimumColumnWidth,\n        };\n\n        this.ref = React.createRef();\n    }\n\n    componentDidMount() {\n        this.handleResize();\n        window.addEventListener('resize', this.handleResize);\n    }\n\n    private handleResize = () => {\n        if (!this.ref?.current) {\n            return;\n        }\n\n        const {minimumColumnWidth, fixedColumns} = this.state;\n        const fixedColumnWidth = (fixedColumns.length * minimumColumnWidth);\n\n        let visibleColumns: Column[] = this.props.columns;\n        let availableWidth = this.ref.current.clientWidth - fixedColumnWidth - 50;\n\n        visibleColumns = visibleColumns.filter((column) => {\n            if (availableWidth > minimumColumnWidth) {\n                availableWidth -= minimumColumnWidth;\n                return true;\n            }\n\n            return Boolean(column.fixed);\n        });\n\n        this.setState({visibleColumns});\n    }\n\n    private renderRows(): JSX.Element {\n        const {rows, rowsContainerStyles} = this.props;\n        const {visibleColumns} = this.state;\n        let rowsToRender: JSX.Element | JSX.Element[] | null = null;\n\n        if (this.props.loading) {\n            if (this.props.loadingIndicator) {\n                rowsToRender = (\n                    <div className='DataGrid_loading'>\n                        {this.props.loadingIndicator}\n                    </div>\n                );\n            } else {\n                rowsToRender = (\n                    <div className='DataGrid_loading'>\n                        <LoadingSpinner/>\n                        <FormattedMessage\n                            id='admin.data_grid.loading'\n                            defaultMessage='Loading'\n                        />\n                    </div>\n                );\n            }\n        } else if (rows.length === 0) {\n            const placeholder = this.props.placeholderEmpty || (\n                <FormattedMessage\n                    id='admin.data_grid.empty'\n                    defaultMessage='No items found'\n                />\n            );\n            rowsToRender = (\n                <div className='DataGrid_empty'>\n                    {placeholder}\n                </div>\n            );\n        } else {\n            rowsToRender = rows.map((row, index) => {\n                return (\n                    <DataGridRow\n                        key={index}\n                        row={row}\n                        columns={visibleColumns}\n                    />\n                );\n            });\n        }\n\n        return (\n            <div\n                className='DataGrid_rows'\n                style={rowsContainerStyles || {}}\n            >\n                {rowsToRender}\n            </div>\n        );\n    }\n\n    private renderHeader(): JSX.Element {\n        return (\n            <DataGridHeader\n                columns={this.state.visibleColumns}\n            />\n        );\n    }\n\n    private renderSearch(): JSX.Element | null {\n        if (this.props.onSearch) {\n            return (\n                <DataGridSearch\n                    onSearch={this.search}\n                    placeholder={this.props.searchPlaceholder}\n                    term={this.props.term}\n                    filterProps={this.props.filterProps}\n                />\n            );\n        }\n        return null;\n    }\n\n    private nextPage = () => {\n        if (!this.props.loading) {\n            this.props.nextPage();\n        }\n    }\n\n    private previousPage = () => {\n        if (!this.props.loading) {\n            this.props.previousPage();\n        }\n    }\n\n    private search = (term: string) => {\n        if (this.props.onSearch) {\n            this.props.onSearch(term);\n        }\n    }\n\n    private renderFooter = (): JSX.Element | null => {\n        const {startCount, endCount, total} = this.props;\n        let footer: JSX.Element | null = null;\n\n        if (total) {\n            const firstPage = startCount <= 1;\n            const lastPage = endCount >= total;\n\n            let prevPageFn: () => void = this.previousPage;\n            if (firstPage) {\n                prevPageFn = () => {};\n            }\n\n            let nextPageFn: () => void = this.nextPage;\n            if (lastPage) {\n                nextPageFn = () => {};\n            }\n\n            footer = (\n                <div className='DataGrid_footer'>\n                    <div className='DataGrid_cell'>\n                        <FormattedMessage\n                            id='admin.data_grid.paginatorCount'\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                            values={{\n                                startCount,\n                                endCount,\n                                total,\n                            }}\n                        />\n\n                        <button\n                            type='button'\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={prevPageFn}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            type='button'\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={nextPageFn}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n\n        return footer;\n    }\n\n    public render() {\n        return (\n            <div\n                className='DataGrid'\n                ref={this.ref}\n            >\n                {this.renderSearch()}\n                {this.renderHeader()}\n                {this.renderRows()}\n                {this.renderFooter()}\n            </div>\n        );\n    }\n}\n\nexport default DataGrid;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\n\nimport './data_grid.scss';\n\nimport {Column} from './data_grid';\n\nexport type Props = {\n    columns: Column[];\n}\n\nclass DataGridHeader extends React.Component<Props> {\n    renderHeaderElement(col: Column) {\n        const style: CSSProperties = {};\n        if (col.width) {\n            style.flexGrow = col.width;\n        }\n\n        return (\n            <div\n                key={col.field}\n                className='DataGrid_cell'\n                style={style}\n            >\n                {col.name}\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className='DataGrid_header'>\n                {this.props.columns.map((col) => this.renderHeaderElement(col))}\n            </div>\n        );\n    }\n}\n\nexport default DataGridHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {CSSProperties} from 'react';\n\nimport {Row, Column} from './data_grid';\n\nimport './data_grid.scss';\n\ntype Props = {\n    columns: Column[];\n    row: Row;\n}\n\nclass DataGridRow extends React.Component<Props> {\n    renderCell(row: Row, column: Column) {\n        const style: CSSProperties = {};\n        if (column.width) {\n            style.flexGrow = column.width;\n        }\n\n        if (column.textAlign) {\n            style.textAlign = column.textAlign;\n        }\n\n        if (column.overflow) {\n            style.overflow = column.overflow;\n        }\n\n        return (\n            <div\n                key={column.field}\n                className='DataGrid_cell'\n                style={style}\n            >\n                {row.cells[column.field]}\n            </div>\n        );\n    }\n\n    render() {\n        const cells = this.props.columns.map((col) => this.renderCell(this.props.row, col));\n        return (\n            <div\n                className='DataGrid_row'\n                onClick={this.props.row.onClick}\n            >\n                {cells}\n            </div>\n        );\n    }\n}\n\nexport default DataGridRow;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport FaSearchIcon from 'components/widgets/icons/fa_search_icon';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Filter, {FilterOptions} from 'components/admin_console/filter/filter';\n\nimport './data_grid.scss';\n\ntype Props = {\n    onSearch: (term: string) => void;\n    placeholder?: string;\n    term: string;\n\n    filterProps?: {\n        options: FilterOptions;\n        keys: string[];\n        onFilter: (options: FilterOptions) => void;\n    };\n}\n\ntype State = {\n    term: string;\n}\n\nclass DataGridSearch extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        placeholder: '',\n        term: '',\n    }\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            term: '',\n        };\n    }\n\n    handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const term = e.target.value;\n        this.setState({term});\n        this.props.onSearch(term);\n    }\n\n    resetSearch = () => {\n        this.props.onSearch('');\n    };\n\n    onFilter = (filters: FilterOptions) => {\n        this.props.filterProps?.onFilter(filters);\n    };\n\n    render() {\n        const {filterProps} = this.props;\n\n        let {placeholder} = this.props;\n        if (!placeholder) {\n            placeholder = Utils.localizeMessage('search_bar.search', 'Search');\n        }\n\n        let filter;\n        if (filterProps) {\n            filter = <Filter {...filterProps}/>;\n        }\n\n        return (\n            <div className='DataGrid_search'>\n                <div className='DataGrid_searchBar'>\n                    <span\n                        className='DataGrid_searchIcon'\n                        aria-hidden='true'\n                    >\n                        <FaSearchIcon/>\n                    </span>\n\n                    <input\n                        type='text'\n                        placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                        onChange={this.handleSearch}\n                        value={this.props.term}\n                        data-testid='searchInput'\n                    />\n                    <i\n                        className={'DataGrid_clearButton fa fa-times-circle ' + (this.props.term.length ? '' : 'hidden')}\n                        onClick={this.resetSearch}\n                        data-testid='clear-search'\n                    />\n                </div>\n\n                {filter}\n            </div>\n        );\n    }\n}\n\nexport default DataGridSearch;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DataRetentionSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.DataRetentionSettings.EnableMessageDeletion = this.state.enableMessageDeletion === 'true';\n        config.DataRetentionSettings.EnableFileDeletion = this.state.enableFileDeletion === 'true';\n        config.DataRetentionSettings.MessageRetentionDays = parseInt(this.state.messageRetentionDays, 10);\n        config.DataRetentionSettings.FileRetentionDays = parseInt(this.state.fileRetentionDays, 10);\n        config.DataRetentionSettings.DeletionJobStartTime = this.state.deletionJobStartTime;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            enableMessageDeletion: String(config.DataRetentionSettings.EnableMessageDeletion),\n            enableFileDeletion: String(config.DataRetentionSettings.EnableFileDeletion),\n            messageRetentionDays: config.DataRetentionSettings.MessageRetentionDays,\n            fileRetentionDays: config.DataRetentionSettings.FileRetentionDays,\n            deletionJobStartTime: config.DataRetentionSettings.DeletionJobStartTime,\n            showConfirmModal: false,\n        };\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.setState({showConfirmModal: true});\n    };\n\n    handleSaveConfirmed = () => {\n        this.setState({showConfirmModal: false});\n\n        this.doSubmit();\n    };\n\n    handleSaveCanceled = () => {\n        this.setState({showConfirmModal: false});\n    };\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.title'\n                defaultMessage='Confirm data retention policy'\n            />\n        );\n\n        const messageList = [];\n\n        if (this.state.enableMessageDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageDeletion'\n                    defaultMessage='All messages will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.messageRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />,\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemMessageIndefinite'\n                    defaultMessage='All messages will be retained indefinitely.'\n                />,\n            );\n        }\n\n        if (this.state.enableFileDeletion === 'true') {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileDeletion'\n                    defaultMessage='All files will be permanently deleted after {days} days.'\n                    values={{\n                        days: (\n                            <strong>\n                                {this.state.fileRetentionDays}\n                            </strong>\n                        ),\n                    }}\n                />,\n            );\n        } else {\n            messageList.push(\n                <FormattedMessage\n                    id='admin.data_retention.confirmChangesModal.description.itemFileIndefinite'\n                    defaultMessage='All files will be retained indefinitely.'\n                />,\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.description'\n                        defaultMessage='Are you sure you want to apply the following data retention policy:'\n                    />\n                </p>\n                <ul>\n                    {messageList.map((item, index) => {\n                        return <li key={index}>{item}</li>;\n                    })}\n                </ul>\n                <p>\n                    <FormattedMessage\n                        id='admin.data_retention.confirmChangesModal.clarification'\n                        defaultMessage='Once deleted, messages and files cannot be retrieved.'\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id='admin.data_retention.confirmChangesModal.confirm'\n                defaultMessage='Confirm Settings'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleSaveConfirmed}\n                onCancel={this.handleSaveCanceled}\n            />\n        );\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.data_retention.title'\n                defaultMessage='Data Retention Policy'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const enableMessageDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepMessagesIndefinitely', 'Keep all messages indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepMessageForTime', 'Keep messages for a set amount of time')},\n        ];\n\n        const enableFileDeletionOptions = [\n            {value: 'false', text: Utils.localizeMessage('admin.data_retention.keepFilesIndefinitely', 'Keep all files indefinitely')},\n            {value: 'true', text: Utils.localizeMessage('admin.data_retention.keepFilesForTime', 'Keep files for a set amount of time')},\n        ];\n\n        let messageRetentionDaysSetting = '';\n        if (this.state.enableMessageDeletion === 'true') {\n            messageRetentionDaysSetting = (\n                <TextSetting\n                    id='messageRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.messageRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.messageRetentionDays.description'\n                            defaultMessage='Set how many days messages are kept in Mattermost. Messages, including file attachments older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.messageRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.MessageRetentionDays')}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n\n        let fileRetentionDaysSetting = '';\n        if (this.state.enableFileDeletion === 'true') {\n            fileRetentionDaysSetting = (\n                <TextSetting\n                    id='fileRetentionDays'\n                    label={<span/>}\n                    placeholder={Utils.localizeMessage('admin.data_retention.fileRetentionDays.example', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.fileRetentionDays.description'\n                            defaultMessage='Set how many days file uploads are kept in Mattermost. Files older than the duration you set will be deleted nightly. The minimum time is one day.'\n                        />\n                    }\n                    value={this.state.fileRetentionDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.FileRetentionDays')}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <SettingsGroup>\n                {confirmModal}\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMessage\n                            id='admin.data_retention.note.description'\n                            defaultMessage='Caution: Once a message or a file is deleted, the action is irreversible. Please be careful when setting up a custom data retention policy. See {documentationLink} to learn more.'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-dataretention-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.data_retention.note.description.documentationLinkText'\n                                            defaultMessage='documentation'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    </div>\n                </div>\n                <DropdownSetting\n                    id='enableMessageDeletion'\n                    values={enableMessageDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.title'\n                            defaultMessage='Message Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableMessageDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps messages in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableMessageDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableMessageDeletion')}\n                    disabled={this.props.isDisabled}\n                />\n                {messageRetentionDaysSetting}\n                <DropdownSetting\n                    id='enableFileDeletion'\n                    values={enableFileDeletionOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.title'\n                            defaultMessage='File Retention:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.enableFileDeletion.description'\n                            defaultMessage='Set how long Mattermost keeps file uploads in channels and direct messages.'\n                        />\n                    }\n                    value={this.state.enableFileDeletion}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableFileDeletion')}\n                    disabled={this.props.isDisabled}\n                />\n                {fileRetentionDaysSetting}\n                <TextSetting\n                    id='deletionJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.title'\n                            defaultMessage='Data Deletion Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.data_retention.deletionJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.data_retention.deletionJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled data retention job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.deletionJobStartTime}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DeletionJobStartTime')}\n                    disabled={this.props.isDisabled}\n                />\n                <JobsTable\n                    jobType={JobTypes.DATA_RETENTION}\n                    disabled={this.state.enableMessageDeletion !== 'true' && this.state.enableFileDeletion !== 'true'}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.title'\n                            defaultMessage='Run Deletion Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.data_retention.createJob.help'\n                            defaultMessage='Initiates a Data Retention deletion job immediately.'\n                        />\n                    }\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport {recycleDatabaseConnection} from 'actions/admin_actions.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class DatabaseSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        // driverName and dataSource are read-only from the UI\n\n        config.SqlSettings.MaxIdleConns = this.parseIntNonZero(this.state.maxIdleConns);\n        config.SqlSettings.MaxOpenConns = this.parseIntNonZero(this.state.maxOpenConns);\n        config.SqlSettings.Trace = this.state.trace;\n        config.SqlSettings.DisableDatabaseSearch = this.state.disableDatabaseSearch;\n        config.SqlSettings.QueryTimeout = this.parseIntNonZero(this.state.queryTimeout);\n        config.SqlSettings.ConnMaxLifetimeMilliseconds = this.parseIntNonNegative(this.state.connMaxLifetimeMilliseconds);\n        config.ServiceSettings.MinimumHashtagLength = this.parseIntNonZero(this.state.minimumHashtagLength, 3, 2);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            driverName: config.SqlSettings.DriverName,\n            dataSource: config.SqlSettings.DataSource,\n            maxIdleConns: config.SqlSettings.MaxIdleConns,\n            maxOpenConns: config.SqlSettings.MaxOpenConns,\n            trace: config.SqlSettings.Trace,\n            disableDatabaseSearch: config.SqlSettings.DisableDatabaseSearch,\n            queryTimeout: config.SqlSettings.QueryTimeout,\n            connMaxLifetimeMilliseconds: config.SqlSettings.ConnMaxLifetimeMilliseconds,\n            minimumHashtagLength: config.ServiceSettings.MinimumHashtagLength,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.database.title'\n                defaultMessage='Database Settings'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const dataSource = '**********' + this.state.dataSource.substring(this.state.dataSource.indexOf('@'));\n\n        let recycleDbButton = <div/>;\n        if (this.props.license.IsLicensed === 'true') {\n            recycleDbButton = (\n                <RequestButton\n                    requestAction={recycleDatabaseConnection}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.recycle.recycleDescription'\n                            defaultMessage='Deployments using multiple databases can switch from one master database to another without restarting the Mattermost server by updating \"config.json\" to the new desired configuration and using the {reloadConfiguration} feature to load the new settings while the server is running. The administrator should then use {featureName} feature to recycle the database connections based on the new settings.'\n                            values={{\n                                featureName: (\n                                    <b>\n                                        <FormattedMessage\n                                            id='admin.recycle.recycleDescription.featureName'\n                                            defaultMessage='Recycle Database Connections'\n                                        />\n                                    </b>\n                                ),\n                                reloadConfiguration: (\n                                    <a href='../environment/web_server'>\n                                        <b>\n                                            <FormattedMessage\n                                                id='admin.recycle.recycleDescription.reloadConfiguration'\n                                                defaultMessage='Environment > Web Server > Reload Configuration from Disk'\n                                            />\n                                        </b>\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.recycle.button'\n                            defaultMessage='Recycle Database Connections'\n                        />\n                    }\n                    showSuccessMessage={false}\n                    errorMessage={{\n                        id: t('admin.recycle.reloadFail'),\n                        defaultMessage: 'Recycling unsuccessful: {error}',\n                    }}\n                    includeDetailedError={true}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <div className='banner'>\n                    <FormattedMessage\n                        id='admin.sql.noteDescription'\n                        defaultMessage='Changing properties in this section will require a server restart before taking effect.'\n                    />\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DriverName'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.driverName'\n                            defaultMessage='Driver Name:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={this.state.driverName}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.driverNameDescription'\n                                defaultMessage='Set the database driver in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='DataSource'\n                    >\n                        <FormattedMessage\n                            id='admin.sql.dataSource'\n                            defaultMessage='Data Source:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <input\n                            type='text'\n                            className='form-control'\n                            value={dataSource}\n                            disabled={true}\n                        />\n                        <div className='help-text'>\n                            <FormattedMessage\n                                id='admin.sql.dataSourceDescription'\n                                defaultMessage='Set the database source in the config.json file.'\n                            />\n                        </div>\n                    </div>\n                </div>\n                <TextSetting\n                    id='maxIdleConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsTitle'\n                            defaultMessage='Maximum Idle Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxConnectionsExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxConnectionsDescription'\n                            defaultMessage='Maximum number of idle connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxIdleConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxIdleConns')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='maxOpenConns'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenTitle'\n                            defaultMessage='Maximum Open Connections:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.maxOpenExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.maxOpenDescription'\n                            defaultMessage='Maximum number of open connections held open to the database.'\n                        />\n                    }\n                    value={this.state.maxOpenConns}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.MaxOpenConns')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='queryTimeout'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutTitle'\n                            defaultMessage='Query Timeout:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.queryTimeoutExample', 'E.g.: \"30\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.queryTimeoutDescription'\n                            defaultMessage='The number of seconds to wait for a response from the database after opening a connection and sending the query. Errors that you see in the UI or in the logs as a result of a query timeout can vary depending on the type of query.'\n                        />\n                    }\n                    value={this.state.queryTimeout}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.QueryTimeout')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='connMaxLifetimeMilliseconds'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeTitle'\n                            defaultMessage='Maximum Connection Lifetime:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.sql.connMaxLifetimeExample', 'E.g.: \"3600000\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.connMaxLifetimeDescription'\n                            defaultMessage='Maximum lifetime for a connection to the database in milliseconds.'\n                        />\n                    }\n                    value={this.state.connMaxLifetimeMilliseconds}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.ConnMaxLifetimeMilliseconds')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='minimumHashtagLength'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.minimumHashtagLengthTitle'\n                            defaultMessage='Minimum Hashtag Length:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.minimumHashtagLengthExample', 'E.g.: \"3\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.minimumHashtagLengthDescription'\n                            defaultMessage='Minimum number of characters in a hashtag. This must be greater than or equal to 2. MySQL databases must be configured to support searching strings shorter than three characters, [see documentation](!https://dev.mysql.com/doc/refman/8.0/en/fulltext-fine-tuning.html).'\n                        />\n                    }\n                    value={this.state.minimumHashtagLength}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MinimumHashtagLength')}\n                    disabled={this.props.isDisabled}\n                />\n                <BooleanSetting\n                    id='trace'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.traceTitle'\n                            defaultMessage='SQL Statement Logging: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.sql.traceDescription'\n                            defaultMessage='(Development Mode) When true, executing SQL statements are written to the log.'\n                        />\n                    }\n                    value={this.state.trace}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.Trace')}\n                    disabled={this.props.isDisabled}\n                />\n                {recycleDbButton}\n                <BooleanSetting\n                    id='disableDatabaseSearch'\n                    label={\n                        <FormattedMessage\n                            id='admin.sql.disableDatabaseSearchTitle'\n                            defaultMessage='Disable database search: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.sql.disableDatabaseSearchDescription'\n                            defaultMessage='Disables the use of the database to perform searches. Should only be used when other [search engines](!https://mattermost.com/pl/default-search-engine) are configured.'\n                        />\n                    }\n                    value={this.state.disableDatabaseSearch}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('SqlSettings.DisableDatabaseSearch')}\n                    disabled={this.props.isDisabled}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class DropdownSetting extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n    }\n\n    static defaultProps = {\n        isDisabled: false,\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    render() {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <option\n                    value={value}\n                    key={value}\n                >\n                    {text}\n                </option>,\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <select\n                    data-testid={this.props.id + 'dropdown'}\n                    className='form-control'\n                    id={this.props.id}\n                    value={this.props.value}\n                    onChange={this.handleChange}\n                    disabled={this.props.disabled || this.props.setByEnv}\n                >\n                    {options}\n                </select>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {elasticsearchPurgeIndexes, elasticsearchTest} from 'actions/admin_actions.jsx';\nimport {JobStatuses, JobTypes} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport JobsTable from './jobs';\nimport RequestButton from './request_button/request_button.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class ElasticsearchSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.ElasticsearchSettings.ConnectionUrl = this.state.connectionUrl;\n        config.ElasticsearchSettings.SkipTLSVerification = this.state.skipTLSVerification;\n        config.ElasticsearchSettings.Username = this.state.username;\n        config.ElasticsearchSettings.Password = this.state.password;\n        config.ElasticsearchSettings.Sniff = this.state.sniff;\n        config.ElasticsearchSettings.EnableIndexing = this.state.enableIndexing;\n        config.ElasticsearchSettings.EnableSearching = this.state.enableSearching;\n        config.ElasticsearchSettings.EnableAutocomplete = this.state.enableAutocomplete;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            connectionUrl: config.ElasticsearchSettings.ConnectionUrl,\n            skipTLSVerification: config.ElasticsearchSettings.SkipTLSVerification,\n            username: config.ElasticsearchSettings.Username,\n            password: config.ElasticsearchSettings.Password,\n            sniff: config.ElasticsearchSettings.Sniff,\n            enableIndexing: config.ElasticsearchSettings.EnableIndexing,\n            enableSearching: config.ElasticsearchSettings.EnableSearching,\n            enableAutocomplete: config.ElasticsearchSettings.EnableAutocomplete,\n            configTested: true,\n            canSave: true,\n            canPurgeAndIndex: config.ElasticsearchSettings.EnableIndexing,\n        };\n    }\n\n    handleSettingChanged = (id, value) => {\n        if (id === 'enableIndexing') {\n            if (value === false) {\n                this.setState({\n                    enableSearching: false,\n                    enableAutocomplete: false,\n                });\n            } else {\n                this.setState({\n                    canSave: false,\n                    configTested: false,\n                });\n            }\n        }\n\n        if (id === 'connectionUrl' || id === 'skipTLSVerification' || id === 'username' || id === 'password' || id === 'sniff') {\n            this.setState({\n                configTested: false,\n                canSave: false,\n            });\n        }\n\n        if (id !== 'enableSearching' && id !== 'enableAutocomplete') {\n            this.setState({\n                canPurgeAndIndex: false,\n            });\n        }\n\n        this.handleChange(id, value);\n    }\n\n    handleSaved = () => {\n        this.setState({\n            canPurgeAndIndex: this.state.enableIndexing,\n        });\n    }\n\n    canSave = () => {\n        return this.state.canSave;\n    }\n\n    doTestConfig = (success, error) => {\n        const config = JSON.parse(JSON.stringify(this.props.config));\n        this.getConfigFromState(config);\n\n        elasticsearchTest(\n            config,\n            () => {\n                this.setState({\n                    configTested: true,\n                    canSave: true,\n                });\n                success();\n            },\n            (err) => {\n                this.setState({\n                    configTested: false,\n                    canSave: false,\n                });\n                error(err);\n            },\n        );\n    }\n\n    getExtraInfo(job) {\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <FormattedMessage\n                    id='admin.elasticsearch.percentComplete'\n                    defaultMessage='{percent}% Complete'\n                    values={{percent: Number(job.progress)}}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.elasticsearch.title'\n                defaultMessage='Elasticsearch'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableIndexing'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingTitle'\n                            defaultMessage='Enable Elasticsearch Indexing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableIndexingDescription'\n                            defaultMessage='When true, indexing of new posts occurs automatically. Search queries will use database search until \"Enable Elasticsearch for search queries\" is enabled. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-documentation/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.enableIndexingDescription.documentationLinkText'\n                                            defaultMessage='Learn more about Elasticsearch in our documentation.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableIndexing')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='connectionUrl'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlTitle'\n                            defaultMessage='Server Connection Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.connectionUrlExample', 'E.g.: \"https://elasticsearch.example.org:9200\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.connectionUrlDescription'\n                            defaultMessage='The address of the Elasticsearch server. {documentationLink}'\n                            values={{\n                                documentationLink: (\n                                    <a\n                                        href='https://about.mattermost.com/default-elasticsearch-server-setup/'\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.elasticsearch.connectionUrlExample.documentationLinkText'\n                                            defaultMessage='Please see documentation with server setup instructions.'\n                                        />\n                                    </a>\n                                ),\n                            }}\n                        />\n                    }\n                    value={this.state.connectionUrl}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.ConnectionUrl')}\n                />\n                <BooleanSetting\n                    id='skipTLSVerification'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationTitle'\n                            defaultMessage='Skip TLS Verification:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.skipTLSVerificationDescription'\n                            defaultMessage='When true, Mattermost will not require the Elasticsearch certificate to be signed by a trusted Certificate Authority.'\n                        />\n                    }\n                    value={this.state.skipTLSVerification}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.SkipTLSVerification')}\n                />\n                <TextSetting\n                    id='username'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameTitle'\n                            defaultMessage='Server Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.usernameExample', 'E.g.: \"elastic\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.usernameDescription'\n                            defaultMessage='(Optional) The username to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.username}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Username')}\n                />\n                <TextSetting\n                    id='password'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordTitle'\n                            defaultMessage='Server Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.elasticsearch.password', 'E.g.: \"yourpassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.passwordDescription'\n                            defaultMessage='(Optional) The password to authenticate to the Elasticsearch server.'\n                        />\n                    }\n                    value={this.state.password}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Password')}\n                />\n                <BooleanSetting\n                    id='sniff'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffTitle'\n                            defaultMessage='Enable Cluster Sniffing:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.sniffDescription'\n                            defaultMessage='When true, sniffing finds and connects to all data nodes in your cluster automatically.'\n                        />\n                    }\n                    value={this.state.sniff}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.Sniff')}\n                />\n                <RequestButton\n                    id='testConfig'\n                    requestAction={this.doTestConfig}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.testHelpText'\n                            defaultMessage='Tests if the Mattermost server can connect to the Elasticsearch server specified. Testing the connection only saves the configuration if the test is successful. See log file for more detailed error messages.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.elasticsearch_test_button'\n                            defaultMessage='Test Connection'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.testConfigSuccess'),\n                        defaultMessage: 'Test successful. Configuration saved.',\n                    }}\n                    disabled={!this.state.enableIndexing}\n                />\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.elasticsearch.bulkIndexingTitle'\n                            defaultMessage='Bulk Indexing:'\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='job-table-setting'>\n                            <JobsTable\n                                jobType={JobTypes.ELASTICSEARCH_POST_INDEXING}\n                                disabled={!this.state.canPurgeAndIndex || this.props.isDisabled}\n                                createJobButtonText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.title'\n                                        defaultMessage='Index Now'\n                                    />\n                                }\n                                createJobHelpText={\n                                    <FormattedMessage\n                                        id='admin.elasticsearch.createJob.help'\n                                        defaultMessage='All users, channels and posts in the database will be indexed from oldest to newest. Elasticsearch is available during indexing but search results may be incomplete until the indexing job is complete.'\n                                    />\n                                }\n                                getExtraInfoText={this.getExtraInfo}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <RequestButton\n                    id='purgeIndexesSection'\n                    requestAction={elasticsearchPurgeIndexes}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesHelpText'\n                            defaultMessage='Purging will entirely remove the indexes on the Elasticsearch server. Search results may be incomplete until a bulk index of the existing database is rebuilt.'\n                        />\n                    }\n                    buttonText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton'\n                            defaultMessage='Purge Index'\n                        />\n                    }\n                    successMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.success'),\n                        defaultMessage: 'Indexes purged successfully.',\n                    }}\n                    errorMessage={{\n                        id: t('admin.elasticsearch.purgeIndexesButton.error'),\n                        defaultMessage: 'Failed to purge indexes: {error}',\n                    }}\n                    disabled={this.props.isDisabled || !this.state.canPurgeAndIndex}\n                    label={(\n                        <FormattedMessage\n                            id='admin.elasticsearch.purgeIndexesButton.label'\n                            defaultMessage='Purge Indexes:'\n                        />\n                    )}\n                />\n                <BooleanSetting\n                    id='enableSearching'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingTitle'\n                            defaultMessage='Enable Elasticsearch for search queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableSearchingDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all search queries using the latest index. Search results may be incomplete until a bulk index of the existing post database is finished. When false, database search is used.'\n                        />\n                    }\n                    value={this.state.enableSearching}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableSearching')}\n                />\n                <BooleanSetting\n                    id='enableAutocomplete'\n                    label={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteTitle'\n                            defaultMessage='Enable Elasticsearch for autocomplete queries:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.elasticsearch.enableAutocompleteDescription'\n                            defaultMessage='Requires a successful connection to the Elasticsearch server. When true, Elasticsearch will be used for all autocompletion queries on users and channels using the latest index. Autocompletion results may be incomplete until a bulk index of the existing users and channels database is finished. When false, database autocomplete is used.'\n                        />\n                    }\n                    value={this.state.enableAutocomplete}\n                    disabled={this.props.isDisabled || !this.state.enableIndexing || !this.state.configTested}\n                    onChange={this.handleSettingChanged}\n                    setByEnv={this.isSetByEnv('ElasticsearchSettings.EnableAutocomplete')}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./feature_discovery.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {AnalyticsRow} from 'mattermost-redux/types/admin';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport './feature_discovery.scss';\n\ntype Props = {\n    featureName: string;\n\n    titleID: string;\n    titleDefault: string;\n\n    copyID: string;\n    copyDefault: string;\n\n    learnMoreURL: string;\n\n    imgPath: string;\n\n    stats?: Dictionary<number | AnalyticsRow[]>;\n    actions: {\n        requestTrialLicense: (users: number, termsAccepted: boolean, receiveEmailsAccepted: boolean, featureName: string) => Promise<{error?: string; data?: null}>;\n        getLicenseConfig: () => void;\n    };\n}\n\ntype State = {\n    gettingTrial: boolean;\n    gettingTrialError: string | null;\n}\n\nexport default class FeatureDiscovery extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            gettingTrial: false,\n            gettingTrialError: null,\n        };\n    }\n\n    requestLicense = async (e: React.MouseEvent) => {\n        e.preventDefault();\n        if (this.state.gettingTrial) {\n            return;\n        }\n        this.setState({gettingTrial: true, gettingTrialError: null});\n        let users = 0;\n        if (this.props.stats && (typeof this.props.stats.TOTAL_USERS === 'number')) {\n            users = this.props.stats.TOTAL_USERS;\n        }\n        const requestedUsers = Math.max(users, 30);\n        const {error} = await this.props.actions.requestTrialLicense(requestedUsers, true, true, this.props.featureName);\n        if (error) {\n            this.setState({gettingTrialError: error});\n        }\n        this.setState({gettingTrial: false});\n        this.props.actions.getLicenseConfig();\n    }\n\n    render() {\n        const {\n            titleID,\n            titleDefault,\n            copyID,\n            copyDefault,\n            learnMoreURL,\n            imgPath,\n        } = this.props;\n\n        let gettingTrialError: React.ReactNode = '';\n        if (this.state.gettingTrialError) {\n            gettingTrialError = (\n                <p className='trial-error'>\n                    <FormattedMarkdownMessage\n                        id='admin.license.trial-request.error'\n                        defaultMessage='Trial license could not be retrieved. Visit [https://mattermost.com/trial/](https://mattermost.com/trial/) to request a license.'\n                    />\n                </p>\n            );\n        }\n        return (\n            <div className='FeatureDiscovery'>\n\n                <div className='FeatureDiscovery_copyWrapper'>\n                    <div\n                        className='FeatureDiscovery_title'\n                        data-testid='featureDiscovery_title'\n                    >\n                        <FormattedMessage\n                            id={titleID}\n                            defaultMessage={titleDefault}\n                        />\n                    </div>\n                    <div className='FeatureDiscovery_copy'>\n                        <FormattedMessage\n                            id={copyID}\n                            defaultMessage={copyDefault}\n                        />\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        data-testid='featureDiscovery_primaryCallToAction'\n                        onClick={this.requestLicense}\n                    >\n                        <LoadingWrapper\n                            loading={this.state.gettingTrial}\n                            text={Utils.localizeMessage('admin.license.trial-request.loading', 'Getting trial')}\n                        >\n                            <FormattedMessage\n                                id='admin.ldap_feature_discovery.call_to_action.primary'\n                                defaultMessage='Start trial'\n                            />\n                        </LoadingWrapper>\n                    </button>\n                    <a\n                        className='btn btn-secondary'\n                        href={learnMoreURL}\n                        data-testid='featureDiscovery_secondaryCallToAction'\n                        target='_blank'\n                        rel='noopener noreferrer'\n                    >\n                        <FormattedMessage\n                            id='admin.ldap_feature_discovery.call_to_action.secondary'\n                            defaultMessage='Learn more'\n                        />\n                    </a>\n                    {gettingTrialError}\n                    <p className='trial-legal-terms'>\n                        <FormattedMarkdownMessage\n                            id='admin.license.trial-request.accept-terms'\n                            defaultMessage='By clicking **Start trial**, I agree to the [Mattermost Software Evaluation Agreement](!https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](!https://mattermost.com/privacy-policy/), and receiving product emails.'\n                        />\n                    </p>\n                </div>\n\n                <div className='FeatureDiscovery_imageWrapper'>\n                    <img\n                        className='FeatureDiscovery_image'\n                        src={imgPath}\n                        alt='Feature Discovery Image'\n                    />\n                </div>\n\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {getLicenseConfig} from 'mattermost-redux/actions/general';\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {requestTrialLicense} from 'actions/admin_actions';\n\nimport {GlobalState} from 'types/store';\n\nimport FeatureDiscovery from './feature_discovery';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        stats: state.entities.admin.analytics,\n    };\n}\n\ntype Actions = {\n    requestTrialLicense: () => Promise<{error?: string; data?: null}>;\n    getLicenseConfig: () => void;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            requestTrialLicense,\n            getLicenseConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FeatureDiscovery);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {t} from 'utils/i18n';\nimport ldap from 'images/feature-discovery/ldap.png';\n\nimport FeatureDiscovery from './index';\n\nconst LDAPFeatureDiscovery: React.FC = () => {\n    return (\n        <FeatureDiscovery\n            featureName='ldap'\n            titleID='admin.ldap_feature_discovery.title'\n            titleDefault='Integrate Active Directory/LDAP with Mattermost Enterprise E10'\n            copyID='admin.ldap_feature_discovery.copy'\n            copyDefault={'When you connect Mattermost with your organization\\'s Active Directory/LDAP, users can log in without having to create new usernames and passwords.'}\n            learnMoreURL='https://www.mattermost.com/docs-adldap/?utm_medium=product&utm_source=product-feature-discovery&utm_content=adldap'\n            imgPath={ldap}\n        />\n    );\n};\n\nt('admin.ldap_feature_discovery.title');\nt('admin.ldap_feature_discovery.copy');\n\nexport default LDAPFeatureDiscovery;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {t} from 'utils/i18n';\nimport saml from 'images/feature-discovery/saml.png';\n\nimport FeatureDiscovery from './index';\n\nconst SAMLFeatureDiscovery: React.FC = () => {\n    return (\n        <FeatureDiscovery\n            featureName='saml'\n            titleID='admin.saml_feature_discovery.title'\n            titleDefault='Integrate SAML 2.0 with Mattermost Enterprise E20'\n            copyID='admin.saml_feature_discovery.copy'\n            copyDefault={'When you connect Mattermost with your organization\\'s single sign-on provider, users can access Mattermost without having to re-enter their credentials.'}\n            learnMoreURL='https://www.mattermost.com/docs-saml/?utm_medium=product&utm_source=product-feature-discovery&utm_content=saml'\n            imgPath={saml}\n        />\n    );\n};\n\nt('admin.saml_feature_discovery.title');\nt('admin.saml_feature_discovery.copy');\n\nexport default SAMLFeatureDiscovery;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {AdminConfig} from 'mattermost-redux/types/config';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\ntype Props = {\n    config: AdminConfig;\n};\n\nconst FeatureFlags: React.FC<Props> = (props: Props) => {\n    const flags = props.config.FeatureFlags;\n    let settings = null;\n    if (flags) {\n        settings = Object.keys(flags).map((ffKey) => (\n            <tr key={ffKey}>\n                <td width='20px'/>\n                <td className='whitespace--nowrap'>{ffKey}</td>\n                <td className='whitespace--nowrap'>{String(flags[ffKey])}</td>\n            </tr>\n        ));\n    }\n\n    return (\n        <div className='wrapper--admin'>\n            <FormattedAdminHeader\n                id='admin.feature_flags.title'\n                defaultMessage='Feature Flags'\n            />\n            <div className='admin-console__wrapper'>\n                <div className='admin-logs-content admin-console__content'>\n                    <div className={'banner info'}>\n                        <div className='banner__content'>\n                            <FormattedMessage\n                                id='admin.feature_flags.introBanner'\n                                defaultMessage={'Feature flag values displayed here show the status of features enabled on this server. The values here are used only for troubleshooting by the Mattermost support team.'}\n                            />\n                        </div>\n                    </div>\n                    <div className='job-table__panel'>\n                        <div className='job-table__table'>\n                            <table\n                                className='table'\n                            >\n                                <thead>\n                                    <tr>\n                                        <th/>\n                                        <th>\n                                            <FormattedMessage\n                                                id='admin.feature_flags.flag'\n                                                defaultMessage='Flag'\n                                            />\n                                        </th>\n                                        <th>\n                                            <FormattedMessage\n                                                id='admin.feature_flags.flag_value'\n                                                defaultMessage='Value'\n                                            />\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {settings}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureFlags;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Setting from './setting';\n\nexport default class FileUploadSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            uploadingText: PropTypes.node,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n            fileType: PropTypes.string.isRequired,\n            error: PropTypes.string,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            fileName: null,\n            serverError: props.error,\n        };\n        this.fileInputRef = React.createRef();\n        this.uploadButtonRef = React.createRef();\n    }\n\n    handleChange = () => {\n        const files = this.fileInputRef.current.files;\n        if (files && files.length > 0) {\n            this.setState({fileSelected: true, fileName: files[0].name});\n        }\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        $(this.uploadButtonRef.current).button('loading');\n        this.props.onSubmit(this.props.id, this.fileInputRef.current.files[0], (error) => {\n            $(this.uploadButtonRef.current).button('reset');\n            if (error) {\n                Utils.clearFileInput(this.fileInputRef.current);\n            }\n        });\n    }\n\n    render() {\n        let serverError;\n        if (this.state.serverError) {\n            serverError = <div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.fileName) {\n            fileName = this.state.fileName;\n        } else {\n            fileName = (\n                <FormattedMessage\n                    id='admin.file_upload.noFile'\n                    defaultMessage='No file uploaded'\n                />\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='file__upload'>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            disabled={this.props.disabled}\n                        >\n                            <FormattedMessage\n                                id='admin.file_upload.chooseFile'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref={this.fileInputRef}\n                            type='file'\n                            disabled={this.props.disabled}\n                            accept={this.props.fileType}\n                            onChange={this.handleChange}\n                        />\n                    </div>\n                    <button\n                        type='button'\n                        className={btnClass}\n                        disabled={!this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        ref={this.uploadButtonRef}\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.uploadingText}`}\n                    >\n                        <FormattedMessage\n                            id='admin.file_upload.uploadFile'\n                            defaultMessage='Upload'\n                        />\n                    </button>\n                    <div className='help-text m-0'>\n                        {fileName}\n                    </div>\n                    {serverError}\n                </div>\n            </Setting>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./filter.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport FilterList from './filter_list';\nimport './filter.scss';\n\nexport type Filters = {\n    [filterKey: string]: string[];\n};\n\nexport type FilterValue = {\n    name: string | JSX.Element;\n    value: boolean | string | string[];\n};\n\nexport type FilterValues = {\n    [key: string]: FilterValue;\n};\n\nexport type FilterOption = {\n\n    // Display name of the filter option eg. 'Channels', 'Roles' or <FormattedMessage .../>\n    name: string | JSX.Element;\n\n    // List of keys that match the filter values, used to define the order in which the filters appear\n    keys: string[];\n\n    // Key value map of filter values with keys matching the keys above\n    values: FilterValues;\n\n    // Filter Component type, optional parameter defaults to FilterCheckbox\n    type?: React.ElementType;\n}\n\nexport type FilterOptions = {\n    [key: string]: FilterOption;\n}\n\ntype Props = {\n    onFilter: (filters: FilterOptions) => void;\n    options: FilterOptions;\n    keys: string[];\n}\n\ntype State = {\n    show: boolean;\n    options: FilterOptions;\n    keys: string[];\n    optionsModified: boolean;\n    filterCount: number;\n}\n\nclass Filter extends React.PureComponent<Props, State> {\n    private buttonRef: React.RefObject<HTMLButtonElement>;\n    private filterRef: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n\n        let options = {...props.options};\n        let keys = [...props.keys];\n        let valid = true;\n        keys.forEach((key) => {\n            const option = options[key];\n            if (option && valid) {\n                option.keys.forEach((optionKey) => {\n                    if (!option.values[optionKey]) {\n                        valid = false;\n                    }\n                });\n            } else {\n                valid = false;\n            }\n        });\n\n        if (!valid) {\n            options = {};\n            keys = [];\n        }\n\n        this.state = {\n            show: false,\n            options,\n            keys,\n            optionsModified: false,\n            filterCount: 0,\n        };\n\n        this.filterRef = React.createRef();\n        this.buttonRef = React.createRef();\n    }\n\n    componentDidMount = () => {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleClickOutside = (event: MouseEvent) => {\n        if (this.filterRef?.current?.contains(event.target as Node)) {\n            return;\n        }\n        this.hidePopover();\n    }\n\n    hidePopover = () => {\n        this.setState({show: false});\n        this.buttonRef?.current?.blur();\n    }\n\n    togglePopover = () => {\n        if (this.state.show) {\n            this.hidePopover();\n            return;\n        }\n\n        this.setState({show: true});\n    }\n\n    updateValues = async (values: FilterValues, optionKey: string) => {\n        const options = {\n            ...this.state.options,\n            [optionKey]: {\n                ...this.state.options[optionKey],\n                values: {\n                    ...values,\n                },\n            },\n        };\n        this.setState({options, optionsModified: true});\n    }\n\n    onFilter = () => {\n        this.props.onFilter(this.state.options);\n        this.setState({optionsModified: false, show: false, filterCount: this.calculateFilterCount()});\n    }\n\n    calculateFilterCount = () => {\n        const options = this.state.options;\n        let filterCount = 0;\n        this.props.keys.forEach((key) => {\n            const {values, keys} = options[key];\n            keys.forEach((filterKey: string) => {\n                if (values[filterKey].value instanceof Array) {\n                    filterCount += (values[filterKey].value as string[]).length;\n                } else if (values[filterKey].value) {\n                    filterCount += 1;\n                }\n            });\n        });\n        return filterCount;\n    }\n\n    resetFilters = () => {\n        this.setState({options: {...this.props.options}}, this.onFilter);\n    }\n\n    renderFilterOptions = () => {\n        const {keys, options} = this.state;\n        return keys.map((key: string) => {\n            const filter = options[key];\n            const FilterListComponent = filter.type || FilterList;\n\n            return (\n                <FilterListComponent\n                    option={filter}\n                    optionKey={key}\n                    updateValues={this.updateValues}\n                    key={key}\n                />\n            );\n        });\n    }\n\n    render() {\n        const filters = this.renderFilterOptions();\n        const {filterCount} = this.state;\n\n        return (\n            <div\n                className='Filter'\n                ref={this.filterRef}\n            >\n                <button\n                    type='button'\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    className={classNames('Filter_button', {Filter__active: this.state.show})}\n                    onClick={this.togglePopover}\n                    ref={this.buttonRef}\n                >\n                    <i className='Icon icon-filter-variant'/>\n\n                    <FormattedMessage\n                        id='admin.filter.filters'\n                        defaultMessage='Filters'\n                    />\n                    {filterCount > 0 && ` (${filterCount})`}\n                </button>\n\n                <div\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    className={classNames('Filter_content', {Filter__show: this.state.show})}\n                >\n                    <div className='Filter_header'>\n                        <div className='Filter_title'>\n                            <FormattedMessage\n                                id='admin.filter.title'\n                                defaultMessage='Filter by'\n                            />\n                        </div>\n\n                        <a\n                            className='Filter_reset'\n                            onClick={this.resetFilters}\n                        >\n                            <FormattedMessage\n                                id='admin.filter.reset'\n                                defaultMessage='Reset filters'\n                            />\n                        </a>\n                    </div>\n\n                    <hr/>\n\n                    <div className='Filter_lists'>\n                        {filters}\n                    </div>\n\n                    <button\n                        type='button'\n                        className='Filter_apply style--none btn btn-primary'\n                        disabled={!this.state.optionsModified}\n                        onClick={this.onFilter}\n                    >\n                        <FormattedMessage\n                            id='admin.filter.apply'\n                            defaultMessage='Apply'\n                        />\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    name: string;\n    checked: boolean;\n    label: string | JSX.Element;\n    updateOption: (checked: boolean, name: string) => void;\n};\n\nclass FilterCheckbox extends React.PureComponent<Props> {\n    toggleOption = (e: React.MouseEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const {checked, name, updateOption} = this.props;\n        updateOption(!checked, name);\n    }\n\n    render() {\n        const {name, checked, label} = this.props;\n        return (\n            <div\n                className='FilterList_checkbox'\n                onClick={this.toggleOption}\n            >\n                <label>\n                    {checked &&\n                        <input\n                            type='checkbox'\n                            id={name}\n                            name={name}\n                            defaultChecked={true}\n                        />\n                    }\n\n                    {!checked &&\n                        <input\n                            type='checkbox'\n                            id={name}\n                            name={name}\n                            defaultChecked={false}\n                        />\n                    }\n                    {label}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default FilterCheckbox;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FilterOption, FilterValues} from './filter';\nimport FilterCheckbox from './filter_checkbox';\nimport './filter.scss';\n\ntype Props = {\n    option: FilterOption;\n    optionKey: string;\n    updateValues: (values: FilterValues, optionKey: string) => void;\n}\n\nclass FilterList extends React.PureComponent<Props> {\n    updateOption = async (value: boolean, key: string) => {\n        const values = {\n            ...this.props.option.values,\n            [key]: {\n                ...this.props.option.values[key],\n                value,\n            },\n        };\n        await this.props.updateValues(values, this.props.optionKey);\n    }\n\n    render() {\n        const {option} = this.props;\n        const valuesToRender = option.keys.map((optionKey: string, index: number) => {\n            const currentValue = option.values[optionKey];\n            const {value, name} = currentValue;\n            const FilterItem = option.type || FilterCheckbox;\n\n            return (\n                <div\n                    key={index}\n                    className='FilterList_item'\n                >\n                    <FilterItem\n                        key={index}\n                        name={optionKey}\n                        checked={value}\n                        label={name}\n                        updateOption={this.updateOption}\n                    />\n                </div>\n            );\n        });\n\n        return (\n            <div className='FilterList'>\n                <div className='FilterList_name'>\n                    {option.name}\n                </div>\n\n                {valuesToRender}\n            </div>\n        );\n    }\n}\n\nexport default FilterList;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {createSelector} from 'reselect';\n\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {TeamSearchOpts} from 'mattermost-redux/types/teams';\nimport {getTeams as fetchTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {GlobalState} from 'types/store';\n\nimport TeamFilterDropdown from './team_filter_dropdown';\n\nconst getSortedListOfTeams = createSelector(\n    getTeams,\n    (teams) => Object.values(teams).sort((a, b) => a.display_name.localeCompare(b.display_name)),\n);\n\ntype Actions = {\n    getData: (page: number, perPage: number) => Promise<{ data: any }>;\n    searchTeams: (term: string, opts: TeamSearchOpts) => Promise<{ data: any }>;\n};\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        teams: getSortedListOfTeams(state),\n        total: state.entities.teams.totalCount || 0,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getData: (page, pageSize) => fetchTeams(page, pageSize, true),\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamFilterDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    id: string;\n    name: string;\n    checked: boolean;\n    label: string;\n    updateOption: (checked: boolean, name: string) => void;\n};\n\nclass TeamFilterCheckbox extends React.PureComponent<Props> {\n    toggleOption = () => {\n        const {checked, id, updateOption} = this.props;\n        updateOption(!checked, id);\n    }\n\n    render() {\n        const {id, checked, label} = this.props;\n        return (\n            <div className='TeamFilterDropdown_checkbox'>\n                <label>\n                    <input\n                        type='checkbox'\n                        id={id}\n                        name={name}\n                        checked={checked}\n                        onChange={this.toggleOption}\n                    />\n\n                    {label}\n                </label>\n            </div>\n        );\n    }\n}\n\nexport default TeamFilterCheckbox;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./team_filter_dropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {createSelector} from 'reselect';\n\nimport {Team, TeamSearchOpts} from 'mattermost-redux/types/teams';\nimport {debounce} from 'mattermost-redux/actions/helpers';\n\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport InfiniteScroll from 'components/gif_picker/components/InfiniteScroll';\nimport * as Utils from 'utils/utils.jsx';\n\nimport {FilterOption, FilterValues} from '../filter';\n\nimport TeamFilterCheckbox from './team_filter_checkbox';\n\nimport './team_filter_dropdown.scss';\nimport '../filter.scss';\n\ntype Props = {\n    option: FilterOption;\n    optionKey: string;\n    updateValues: (values: FilterValues, optionKey: string) => void;\n\n    teams: Team[];\n    total: number;\n    actions: {\n        getData: (page: number, perPage: number) => Promise<{ data: any }>;\n        searchTeams: (term: string, opts: TeamSearchOpts) => Promise<{ data: any }>;\n    };\n};\n\ntype State = {\n    page: number;\n    loading: boolean;\n    show: boolean;\n    savedSelectedTeams: Team[];\n    searchResults: Team[];\n    searchTerm: string;\n    searchTotal: number;\n}\n\nconst getSelectedTeams = createSelector(\n    (selectedTeamIds: string[]) => selectedTeamIds,\n    (selectedTeamIds: string[], teams: Team[]) => teams,\n    (selectedTeamIds, teams) => teams.filter((team) => selectedTeamIds.includes(team.id)),\n);\n\nconst getFilteredTeams = createSelector(\n    (term: string) => term.trim().toLowerCase(),\n    (term: string, teams: Team[]) => teams,\n    (term: string, teams: Team[]) => {\n        return teams.filter((team: Team) => team?.display_name?.toLowerCase().includes(term));\n    },\n);\n\nconst TEAMS_PER_PAGE = 50;\nconst MAX_BUTTON_TEXT_LENGTH = 30;\nconst INITIAL_SEARCH_RETRY_TIMEOUT = 300;\nclass TeamFilterDropdown extends React.PureComponent<Props, State> {\n    private ref: React.RefObject<HTMLDivElement>;\n    private searchRef: React.RefObject<HTMLInputElement>;\n    private clearRef: React.RefObject<HTMLInputElement>;\n    private listRef: React.RefObject<HTMLDivElement>;\n    private searchRetryInterval: number;\n    private searchRetryId: number;\n    private scrollPosition: number;\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            loading: false,\n            show: false,\n            savedSelectedTeams: [],\n            searchResults: [],\n            searchTerm: '',\n            searchTotal: 0,\n        };\n\n        this.ref = React.createRef();\n        this.searchRef = React.createRef();\n        this.clearRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchRetryInterval = INITIAL_SEARCH_RETRY_TIMEOUT;\n        this.searchRetryId = 0;\n        this.scrollPosition = 0;\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.props.actions.getData(0, TEAMS_PER_PAGE);\n    }\n\n    componentWillUnmount = () => {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    hidePopover = () => {\n        this.setState({show: false});\n    }\n\n    togglePopover = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        if (this.state.show) {\n            this.hidePopover();\n            return;\n        }\n\n        if (this.clearRef?.current?.contains(event.target as Node)) {\n            return;\n        }\n\n        const selectedTeamIds = this.props.option.values.team_ids.value as string[];\n        const selectedTeams = getSelectedTeams(selectedTeamIds, this.props.teams);\n        const savedSelectedTeams = selectedTeams.sort((a, b) => a.display_name.localeCompare(b.display_name));\n        this.setState({show: true, savedSelectedTeams, searchTerm: ''}, () => {\n            this.searchRef?.current?.focus();\n            if (this.listRef?.current) {\n                this.listRef.current.scrollTop = 0;\n            }\n        });\n    }\n\n    handleClickOutside = (event: MouseEvent) => {\n        if (this.ref?.current?.contains(event.target as Node)) {\n            return;\n        }\n        this.hidePopover();\n    }\n\n    setScrollPosition = (event: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        this.scrollPosition = (event.target as HTMLDivElement).scrollTop;\n    }\n\n    hasMore = (): boolean => {\n        if (this.state.loading) {\n            return false;\n        } else if (this.state.searchTerm.length > 0) {\n            return this.state.searchTotal > this.state.searchResults.length;\n        }\n        return this.props.total > (this.state.page + 1) * TEAMS_PER_PAGE;\n    }\n\n    loadMore = async () => {\n        const {searchTerm, loading} = this.state;\n        if (loading) {\n            return;\n        }\n        this.setState({loading: true});\n        const page = this.state.page + 1;\n        if (searchTerm.length > 0) {\n            this.searchTeams(searchTerm, page);\n        } else {\n            await this.props.actions.getData(page, TEAMS_PER_PAGE);\n        }\n\n        if (this.listRef?.current) {\n            this.listRef.current.scrollTop = this.scrollPosition;\n        }\n\n        this.setState({page, loading: false});\n    }\n\n    searchTeams = async (term: string, page: number) => {\n        let searchResults = [];\n        let searchTotal = 0;\n        const response = await this.props.actions.searchTeams(term, {page, per_page: TEAMS_PER_PAGE});\n        if (response?.data) {\n            const {data} = response;\n            searchResults = page > 0 ? this.state.searchResults.concat(data.teams) : data.teams;\n            searchTotal = data.total_count;\n            this.setState({page, loading: false, searchResults, searchTotal, searchTerm: term});\n            return;\n        }\n        this.searchRetryInterval *= 2;\n        this.searchRetryId = window.setTimeout(this.searchTeams.bind(null, term, page), this.searchRetryInterval);\n    }\n\n    searchTeamsDebounced = debounce((page, term) => this.searchTeams(term, page), INITIAL_SEARCH_RETRY_TIMEOUT, false, () => {});\n\n    handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const searchTerm = e.target.value;\n\n        if (this.searchRetryId !== 0) {\n            clearTimeout(this.searchRetryId);\n            this.searchRetryId = 0;\n            this.searchRetryInterval = INITIAL_SEARCH_RETRY_TIMEOUT;\n        }\n\n        if (searchTerm.length === 0) {\n            const selectedTeamIds = this.props.option.values.team_ids.value as string[];\n            const selectedTeams = getSelectedTeams(selectedTeamIds, this.props.teams);\n            const savedSelectedTeams = selectedTeams.sort((a, b) => a.display_name.localeCompare(b.display_name));\n            this.setState({searchTerm, savedSelectedTeams, searchResults: [], searchTotal: 0, page: 0});\n        } else {\n            this.setState({loading: true, searchTerm, searchResults: [], searchTotal: 0, page: 0});\n        }\n\n        this.searchTeamsDebounced(0, searchTerm);\n    }\n\n    resetTeams = () => {\n        this.setState({savedSelectedTeams: [], show: false, searchResults: [], searchTotal: 0, page: 0, searchTerm: ''});\n        this.props.updateValues({team_ids: {name: 'Teams', value: []}}, 'teams');\n    }\n\n    toggleTeam = (checked: boolean, teamId: string) => {\n        const prevSelectedTeamIds = this.props.option.values.team_ids.value as string[];\n        let selectedTeamIds;\n        if (checked) {\n            selectedTeamIds = [...prevSelectedTeamIds, teamId];\n        } else {\n            selectedTeamIds = prevSelectedTeamIds.filter((id) => id !== teamId);\n        }\n\n        this.props.updateValues({team_ids: {name: 'Teams', value: selectedTeamIds}}, 'teams');\n    }\n\n    generateButtonText = () => {\n        const selectedTeamIds = this.props.option.values.team_ids.value as string[];\n        if (selectedTeamIds.length === 0) {\n            return {\n                buttonText: (\n                    <FormattedMessage\n                        id='admin.filter.all_teams'\n                        defaultMessage='All Teams'\n                    />\n                ),\n                buttonMore: 0,\n            };\n        }\n\n        const selectedTeams = getSelectedTeams(selectedTeamIds, this.props.teams);\n        let buttonText = '';\n        let buttonMore = 0;\n        let buttonOverflowed = false;\n        selectedTeams.forEach((team, index) => {\n            buttonOverflowed = buttonOverflowed || !(MAX_BUTTON_TEXT_LENGTH > (buttonText.length + team.display_name.length));\n            if (index === 0) {\n                buttonText += team.display_name;\n            } else if (buttonOverflowed) {\n                buttonMore += 1;\n            } else {\n                buttonText = `${buttonText}, ${team.display_name}`;\n            }\n        });\n\n        return {buttonText, buttonMore};\n    }\n\n    render() {\n        const selectedTeamIds = this.props.option.values.team_ids.value as string[];\n        const {buttonText, buttonMore} = this.generateButtonText();\n\n        const createFilterCheckbox = (team: Team) => {\n            return (\n                <TeamFilterCheckbox\n                    id={team.id}\n                    name={team.id}\n                    checked={selectedTeamIds.includes(team.id)}\n                    updateOption={this.toggleTeam}\n                    label={team.display_name}\n                    key={team.id}\n                />\n            );\n        };\n\n        let visibleTeams = this.state.searchResults;\n        let selectedTeams: JSX.Element[] = [];\n        if (this.state.searchTerm.length === 0) {\n            visibleTeams = this.props.teams.slice(0, (this.state.page + 1) * TEAMS_PER_PAGE).filter((team) => !this.state.savedSelectedTeams.some((selectedTeam) => selectedTeam.id === team.id));\n            selectedTeams = this.state.savedSelectedTeams.map(createFilterCheckbox);\n        } else {\n            visibleTeams = getFilteredTeams(this.state.searchTerm, visibleTeams);\n        }\n        const teamsToDisplay = visibleTeams.map(createFilterCheckbox);\n        const chevron = this.state.show ? (<i className='Icon icon-chevron-up'/>) : (<i className='Icon icon-chevron-down'/>);\n\n        return (\n            <div\n                className='FilterList FilterList__full'\n            >\n                <div className='FilterList_name'>\n                    {this.props.option.name}\n                </div>\n\n                <div\n                    className='TeamFilterDropdown'\n                    ref={this.ref}\n                >\n                    <button\n                        type='button'\n                        className='TeamFilterDropdownButton'\n                        onClick={this.togglePopover}\n                    >\n                        <div className='TeamFilterDropdownButton_text'>\n                            {buttonText}\n                        </div>\n\n                        {buttonMore > 0 && (\n                            <div className='TeamFilterDropdownButton_more'>\n                                <FormattedMessage\n                                    id='admin.filter.count_more'\n                                    defaultMessage='+{count, number} more'\n                                    values={{count: buttonMore}}\n                                />\n                            </div>\n                        )}\n\n                        {selectedTeamIds.length > 0 && (\n                            <i\n                                className={'TeamFilterDropdownButton_clear fa fa-times-circle'}\n                                onClick={this.resetTeams}\n                                ref={this.clearRef}\n                            />\n                        )}\n\n                        <div className='TeamFilterDropdownButton_icon'>\n                            {chevron}\n                        </div>\n                    </button>\n\n                    <div className={this.state.show ? 'TeamFilterDropdownOptions TeamFilterDropdownOptions__active' : 'TeamFilterDropdownOptions'}>\n                        <input\n                            className='TeamFilterDropdown_search'\n                            type='text'\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                            value={this.state.searchTerm}\n                            onChange={this.handleSearch}\n                            ref={this.searchRef}\n                        />\n\n                        {selectedTeamIds.length > 0 && (\n                            <a\n                                className='TeamFilterDropdown_reset'\n                                onClick={this.resetTeams}\n                            >\n                                <FormattedMessage\n                                    id='admin.filter.reset_teams'\n                                    defaultMessage='Reset to all teams'\n                                />\n                            </a>\n                        )}\n\n                        {selectedTeamIds.length === 0 && (\n                            <div\n                                className='TeamFilterDropdown_allTeams'\n                            >\n                                <FormattedMessage\n                                    id='admin.filter.showing_all_teams'\n                                    defaultMessage='Showing all teams'\n                                />\n                            </div>\n                        )}\n\n                        <div\n                            className='TeamFilterDropdownOptions_list'\n                            ref={this.listRef}\n                            onScroll={this.setScrollPosition}\n                        >\n                            {selectedTeams}\n\n                            {selectedTeams.length > 0 && <div className='TeamFilterDropdown_divider'/>}\n\n                            <InfiniteScroll\n                                hasMore={this.hasMore()}\n                                loadMore={this.loadMore}\n                                threshold={50}\n                                useWindow={false}\n                                initialLoad={false}\n                            >\n                                {teamsToDisplay}\n                            </InfiniteScroll>\n\n                            {this.state.loading && (\n                                <div className='TeamFilterDropdown_loading'>\n                                    <LoadingSpinner/>\n                                    <FormattedMessage\n                                        id='admin.data_grid.loading'\n                                        defaultMessage='Loading'\n                                    />\n                                </div>\n                            )}\n\n                            {teamsToDisplay.length === 0 && selectedTeams.length === 0 && !this.state.loading && (\n                                <div className='TeamFilterDropdown_empty'>\n                                    <FormattedMessage\n                                        id='admin.filter.no_results'\n                                        defaultMessage='No items match'\n                                    />\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TeamFilterDropdown;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport crypto from 'crypto';\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    id: string;\n    label: React.ReactNode;\n    placeholder?: string;\n    value: string;\n    onChange: (id: string, s: string) => void;\n    disabled: boolean;\n    setByEnv: boolean;\n    disabledText?: React.ReactNode;\n    helpText: React.ReactNode;\n    regenerateText: React.ReactNode;\n    regenerateHelpText?: React.ReactNode;\n}\n\nexport default class GeneratedSetting extends React.PureComponent<Props> {\n    public static get defaultProps() {\n        return {\n            disabled: false,\n            regenerateText: (\n                <FormattedMessage\n                    id='admin.regenerate'\n                    defaultMessage='Regenerate'\n                />\n            ),\n        };\n    }\n\n    private regenerate = (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        this.props.onChange(this.props.id, crypto.randomBytes(256).toString('base64').substring(0, 32));\n    }\n\n    public render() {\n        let disabledText = null;\n        if (this.props.disabled && this.props.disabledText) {\n            disabledText = (\n                <div className='admin-console__disabled-text'>\n                    {this.props.disabledText}\n                </div>\n            );\n        }\n\n        let regenerateHelpText = null;\n        if (this.props.regenerateHelpText) {\n            regenerateHelpText = (\n                <div className='help-text'>\n                    {this.props.regenerateHelpText}\n                </div>\n            );\n        }\n\n        let text: React.ReactNode = this.props.value;\n        if (!text) {\n            text = (\n                <span className='placeholder-text'>{this.props.placeholder}</span>\n            );\n        }\n\n        return (\n            <div className='form-group'>\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={this.props.id}\n                >\n                    {this.props.label}\n                </label>\n                <div className='col-sm-8'>\n                    <div\n                        className='form-control disabled'\n                        id={this.props.id}\n                    >\n                        {text}\n                    </div>\n                    {disabledText}\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                    <div className='help-text'>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.regenerate}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        >\n                            {this.props.regenerateText}\n                        </button>\n                    </div>\n                    {regenerateHelpText}\n                    {this.props.setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Groups} from 'mattermost-redux/constants';\n\nimport {t} from 'utils/i18n';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport FormError from 'components/form_error';\nimport {GroupProfileAndSettings} from 'components/admin_console/group_settings/group_details/group_profile_and_settings';\nimport GroupTeamsAndChannels from 'components/admin_console/group_settings/group_details/group_teams_and_channels';\nimport GroupUsers from 'components/admin_console/group_settings/group_details/group_users';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nimport SaveChangesPanel from 'components/admin_console/team_channel_settings/save_changes_panel';\n\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport ChannelSelectorModal from 'components/channel_selector_modal';\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nexport default class GroupDetails extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        group: PropTypes.object,\n        groupTeams: PropTypes.arrayOf(PropTypes.object),\n        groupChannels: PropTypes.arrayOf(PropTypes.object),\n        members: PropTypes.arrayOf(PropTypes.object),\n        memberCount: PropTypes.number.isRequired,\n        isDisabled: PropTypes.bool,\n        actions: PropTypes.shape({\n            getGroup: PropTypes.func.isRequired,\n            getMembers: PropTypes.func.isRequired,\n            getGroupStats: PropTypes.func.isRequired,\n            getGroupSyncables: PropTypes.func.isRequired,\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n            patchGroupSyncable: PropTypes.func.isRequired,\n            patchGroup: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        members: [],\n        groupTeams: [],\n        groupChannels: [],\n        group: {name: '', allow_reference: false},\n        memberCount: 0,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingTeamsAndChannels: true,\n            addTeamOpen: false,\n            addChannelOpen: false,\n            allowReference: Boolean(props.group.allow_reference),\n            groupMentionName: props.group.name,\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            hasAllowReferenceChanged: false,\n            hasGroupMentionNameChanged: false,\n            teamsToAdd: [],\n            channelsToAdd: [],\n            itemsToRemove: [],\n            rolesToChange: {},\n            groupTeams: [],\n            groupChannels: [],\n        };\n    }\n\n    componentDidMount() {\n        const {groupID, actions, group} = this.props;\n        actions.getGroup(groupID);\n\n        Promise.all([\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_TEAM),\n            actions.getGroupSyncables(groupID, Groups.SYNCABLE_TYPE_CHANNEL),\n            actions.getGroupStats(groupID),\n        ]).then(() => {\n            this.setState({\n                loadingTeamsAndChannels: false,\n                group,\n                allowReference: Boolean(this.props.group.allow_reference),\n                groupMentionName: this.props.group.name,\n            });\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        /* eslint-disable react/no-did-update-set-state */\n\n        // groupchannels\n        if (prevState.saveNeeded !== this.state.saveNeeded && !this.state.saveNeeded && prevProps.groupChannels === this.props.groupChannels) {\n            this.setState({groupChannels: this.props.groupChannels});\n        }\n        if (prevProps.groupChannels !== this.props.groupChannels) {\n            let gcs;\n            if (this.state.saveNeeded) {\n                const stateIDs = this.state.groupChannels.map((gc) => gc.channel_id);\n                gcs = this.props.groupChannels.filter((gc) => !stateIDs.includes(gc.channel_id)).concat(this.state.groupChannels);\n            } else {\n                gcs = this.props.groupChannels;\n            }\n            this.setState({groupChannels: gcs});\n        }\n\n        // groupteams\n        if (prevState.saveNeeded !== this.state.saveNeeded && !this.state.saveNeeded && prevProps.groupTeams === this.props.groupTeams) {\n            this.setState({groupTeams: this.props.groupTeams});\n        }\n        if (prevProps.groupTeams !== this.props.groupTeams) {\n            let gcs;\n            if (this.state.saveNeeded) {\n                const stateIDs = this.state.groupTeams.map((gc) => gc.team_id);\n                gcs = this.props.groupTeams.filter((gc) => !stateIDs.includes(gc.team_id)).concat(this.state.groupTeams);\n            } else {\n                gcs = this.props.groupTeams;\n            }\n            this.setState({groupTeams: gcs});\n        }\n    }\n\n    openAddChannel = () => {\n        this.setState({addChannelOpen: true});\n    }\n\n    closeAddChannel = () => {\n        this.setState({addChannelOpen: false});\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    addTeams = (teams) => {\n        const {groupID} = this.props;\n        const {groupTeams} = this.state;\n        const teamsToAdd = teams.map((team) => ({\n            group_id: groupID,\n            scheme_admin: false,\n            team_display_name: team.display_name,\n            team_id: team.id,\n            team_type: team.type,\n        }));\n        this.setState({\n            saveNeeded: true,\n            groupTeams: groupTeams.concat(teamsToAdd),\n            teamsToAdd,\n        });\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addChannels = (channels) => {\n        const {groupID} = this.props;\n        const {groupChannels} = this.state;\n        const channelsToAdd = channels.map((channel) => ({\n            channel_display_name: channel.display_name,\n            channel_id: channel.id,\n            channel_type: channel.type,\n            group_id: groupID,\n            scheme_admin: false,\n            team_display_name: channel.team_display_name,\n            team_id: channel.team_id,\n        }));\n        this.setState({\n            saveNeeded: true,\n            groupChannels: groupChannels.concat(channelsToAdd),\n            channelsToAdd,\n        });\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    onRemoveTeamOrChannel = (id, type) => {\n        const {groupTeams, groupChannels, itemsToRemove, channelsToAdd, teamsToAdd} = this.state;\n        const newState = {saveNeeded: true, itemsToRemove, serverError: null};\n        const syncableType = this.syncableTypeFromEntryType(type);\n\n        let makeAPIRequest = true;\n        if (syncableType === Groups.SYNCABLE_TYPE_CHANNEL) {\n            newState.channelsToAdd = channelsToAdd.filter((item) => item.channel_id !== id);\n            if (!this.props.groupChannels.some((item) => item.channel_id === id)) {\n                makeAPIRequest = false;\n            }\n        } else if (syncableType === Groups.SYNCABLE_TYPE_TEAM) {\n            newState.teamsToAdd = teamsToAdd.filter((item) => item.team_id !== id);\n            if (!this.props.groupTeams.some((item) => item.team_id === id)) {\n                makeAPIRequest = false;\n            }\n        }\n        if (makeAPIRequest) {\n            itemsToRemove.push({id, type});\n        }\n\n        if (this.syncableTypeFromEntryType(type) === Groups.SYNCABLE_TYPE_TEAM) {\n            newState.groupTeams = groupTeams.filter((gt) => gt.team_id !== id);\n        } else {\n            newState.groupChannels = groupChannels.filter((gc) => gc.channel_id !== id);\n        }\n        this.setState(newState);\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    syncableTypeFromEntryType = (entryType) => {\n        switch (entryType) {\n        case 'public-team':\n        case 'private-team':\n            return Groups.SYNCABLE_TYPE_TEAM;\n        case 'public-channel':\n        case 'private-channel':\n            return Groups.SYNCABLE_TYPE_CHANNEL;\n        default:\n            return null;\n        }\n    }\n\n    onChangeRoles = (id, type, schemeAdmin) => {\n        const {rolesToChange, groupTeams, groupChannels} = this.state;\n        let listToUpdate;\n        let keyName;\n        let stateKey;\n\n        const key = `${id}/${type}`;\n        rolesToChange[key] = schemeAdmin;\n\n        if (this.syncableTypeFromEntryType(type) === Groups.SYNCABLE_TYPE_TEAM) {\n            listToUpdate = groupTeams;\n            keyName = 'team_id';\n            stateKey = 'groupTeams';\n        } else {\n            listToUpdate = groupChannels;\n            keyName = 'channel_id';\n            stateKey = 'groupChannels';\n        }\n\n        const updatedItems = listToUpdate.map((item) => ({...item})); // clone list of objects\n        updatedItems.find((item) => item[keyName] === id).scheme_admin = schemeAdmin;\n\n        this.setState({saveNeeded: true, rolesToChange, [stateKey]: updatedItems});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    onMentionToggle = (allowReference) => {\n        const {group} = this.props;\n        const originalAllowReference = group.allow_reference;\n        const saveNeeded = true;\n        let {groupMentionName} = this.state;\n\n        if (!originalAllowReference && allowReference && !groupMentionName) {\n            groupMentionName = group.display_name.toLowerCase().replace(/\\s/g, '-');\n        }\n\n        this.setState({\n            saveNeeded,\n            allowReference,\n            groupMentionName,\n            hasAllowReferenceChanged: allowReference !== originalAllowReference},\n        );\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    onMentionChange = (e) => {\n        const {group} = this.props;\n        const originalGroupMentionName = group.name;\n        const groupMentionName = e.target.value;\n        const saveNeeded = true;\n\n        this.setState({\n            saveNeeded,\n            groupMentionName,\n            hasGroupMentionNameChanged: groupMentionName !== originalGroupMentionName,\n        });\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    handleSubmit = async () => {\n        this.setState({saving: true});\n\n        const patchGroupSuccessful = await this.handlePatchGroup();\n        const addsSuccessful = await this.handleAddedTeamsAndChannels();\n        const removesSuccessful = await this.handleRemovedTeamsAndChannels();\n        const rolesSuccessful = await this.handleRolesToUpdate();\n\n        await Promise.all([\n            this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_CHANNEL),\n            this.props.actions.getGroupSyncables(this.props.groupID, Groups.SYNCABLE_TYPE_TEAM),\n        ]);\n\n        const allSuccuessful = patchGroupSuccessful && addsSuccessful && removesSuccessful && rolesSuccessful;\n\n        this.setState({saveNeeded: !allSuccuessful, saving: false});\n\n        this.props.actions.setNavigationBlocked(!allSuccuessful);\n    }\n\n    roleChangeKey = (groupTeamOrChannel) => {\n        let fieldKey;\n        if (this.syncableTypeFromEntryType(groupTeamOrChannel.type) === Groups.SYNCABLE_TYPE_TEAM) {\n            fieldKey = 'team_id';\n        } else {\n            fieldKey = 'channel_id';\n        }\n        return `${groupTeamOrChannel[fieldKey]}/${groupTeamOrChannel.type}`;\n    };\n\n    handlePatchGroup = async () => {\n        const {allowReference, groupMentionName, hasAllowReferenceChanged, hasGroupMentionNameChanged} = this.state;\n        let serverError = null;\n\n        const GroupNameIsTakenError = (\n            <FormattedMessage\n                id='admin.group_settings.group_detail.duplicateMentionNameError'\n                defaultMessage='Group mention is already taken.'\n            />\n        );\n\n        if (!groupMentionName && allowReference) {\n            serverError = (\n                <FormattedMessage\n                    id='admin.group_settings.need_groupname'\n                    defaultMessage='You must specify a group mention.'\n                />\n            );\n            this.setState({allowReference, serverError});\n            return false;\n        } else if (hasAllowReferenceChanged || hasGroupMentionNameChanged) {\n            let lcGroupMentionName;\n            if (allowReference) {\n                lcGroupMentionName = groupMentionName.toLowerCase();\n            }\n            const result = await this.props.actions.patchGroup(this.props.groupID, {allow_reference: allowReference, name: lcGroupMentionName});\n            if (result.error) {\n                if (result.error.server_error_id === 'store.sql_group.unique_constraint') {\n                    serverError = GroupNameIsTakenError;\n                } else if (result.error.server_error_id === 'model.group.name.invalid_chars.app_error') {\n                    serverError = (\n                        <FormattedMessage\n                            id='admin.group_settings.group_detail.invalidOrReservedMentionNameError'\n                            defaultMessage='Only letters (a-z), numbers(0-9), periods, dashes and underscores are allowed.'\n                        />\n                    );\n                } else if (result.error.server_error_id === 'api.ldap_groups.existing_reserved_name_error' ||\n                    result.error.server_error_id === 'api.ldap_groups.existing_user_name_error' ||\n                    result.error.server_error_id === 'api.ldap_groups.existing_group_name_error') {\n                    serverError = GroupNameIsTakenError;\n                } else if (result.error.server_error_id === 'model.group.name.invalid_length.app_error') {\n                    serverError = (\n                        <FormattedMessage\n                            id='admin.group_settings.group_detail.invalid_length'\n                            defaultMessage='Name must be 1 to 64 lowercase alphanumeric characters.'\n                        />\n                    );\n                } else {\n                    serverError = result.error?.message;\n                }\n            }\n            this.setState({\n                allowReference,\n                groupMentionName: lcGroupMentionName,\n                serverError,\n                hasAllowReferenceChanged: result.error ? hasAllowReferenceChanged : false,\n                hasGroupMentionNameChanged: result.error ? hasGroupMentionNameChanged : false,\n            });\n        }\n\n        return !serverError;\n    };\n\n    handleRolesToUpdate = async () => {\n        const {rolesToChange} = this.state;\n        const promises = Object.entries(rolesToChange).map(([key, value]) => {\n            const [syncableID, type] = key.split('/');\n            return this.props.actions.patchGroupSyncable(this.props.groupID, syncableID, this.syncableTypeFromEntryType(type), {scheme_admin: value});\n        });\n        const results = await Promise.all(promises);\n        const errors = results.map((r) => r.error?.message).filter((item) => item);\n        if (errors.length) {\n            this.setState({serverError: <>{errors[0]}</>});\n            return false;\n        }\n        this.setState({rolesToChange: {}});\n        return true;\n    }\n\n    handleAddedTeamsAndChannels = async () => {\n        const {teamsToAdd, channelsToAdd, rolesToChange} = this.state;\n        const promises = [];\n        if (teamsToAdd.length) {\n            teamsToAdd.forEach((groupTeam) => {\n                const roleChangeKey = this.roleChangeKey(groupTeam);\n                groupTeam.scheme_admin = rolesToChange[roleChangeKey];\n                delete rolesToChange[roleChangeKey]; // delete the key because it won't need a patch, it's being handled by the link request.\n                promises.push(this.props.actions.link(this.props.groupID, groupTeam.team_id, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true, scheme_admin: groupTeam.scheme_admin}));\n            });\n        }\n        if (channelsToAdd.length) {\n            channelsToAdd.forEach((groupChannel) => {\n                const roleChangeKey = this.roleChangeKey(groupChannel);\n                groupChannel.scheme_admin = rolesToChange[roleChangeKey];\n                delete rolesToChange[roleChangeKey]; // delete the key because it won't need a patch, it's being handled by the link request.\n                promises.push(this.props.actions.link(this.props.groupID, groupChannel.channel_id, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true, scheme_admin: groupChannel.scheme_admin}));\n            });\n        }\n        const results = await Promise.all(promises);\n        const errors = results.map((r) => r.error?.message).filter((item) => item);\n        if (errors.length) {\n            this.setState({serverError: <>{errors[0]}</>});\n            return false;\n        }\n        this.setState({teamsToAdd: [], channelsToAdd: []});\n        return true;\n    }\n\n    handleRemovedTeamsAndChannels = async () => {\n        const {itemsToRemove, rolesToChange} = this.state;\n        const promises = [];\n        if (itemsToRemove.length) {\n            itemsToRemove.forEach((item) => {\n                delete rolesToChange[this.roleChangeKey(item)]; // no need to update the roles of group-teams that were unlinked.\n                promises.push(this.props.actions.unlink(this.props.groupID, item.id, this.syncableTypeFromEntryType(item.type)));\n            });\n        }\n        const results = await Promise.all(promises);\n        const errors = results.map((r) => r.error?.message).filter((item) => item);\n        if (errors.length) {\n            this.setState({serverError: <>{errors[0]}</>});\n            return false;\n        }\n        this.setState({itemsToRemove: []});\n        return true;\n    }\n\n    render = () => {\n        const {group, members, memberCount, isDisabled} = this.props;\n        const {groupTeams, groupChannels} = this.state;\n        const {allowReference, groupMentionName, saving, saveNeeded, serverError} = this.state;\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/groups'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.group_settings.group_detail.group_configuration'\n                            defaultMessage='Group Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_detail.introBanner'\n                                    defaultMessage='Configure default teams and channels and view users belonging to this group.'\n                                />\n                            </div>\n                        </div>\n\n                        <GroupProfileAndSettings\n                            displayname={group.display_name || ''}\n                            mentionname={groupMentionName}\n                            allowReference={allowReference}\n                            onToggle={this.onMentionToggle}\n                            onChange={this.onMentionChange}\n                            readOnly={isDisabled}\n                        />\n\n                        <AdminPanel\n                            id='group_teams_and_channels'\n                            titleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsTitle')}\n                            titleDefault='Team and Channel Membership'\n                            subtitleId={t('admin.group_settings.group_detail.groupTeamsAndChannelsDescription')}\n                            subtitleDefault='Set default teams and channels for group members. Teams added will include default channels, town-square, and off-topic. Adding a channel without setting the team will add the implied team to the listing below.'\n                            button={(\n                                <div className='group-profile-add-menu'>\n                                    <MenuWrapper\n                                        isDisabled={isDisabled}\n                                    >\n                                        <button\n                                            type='button'\n                                            id='add_team_or_channel'\n                                            className='btn btn-primary'\n                                        >\n                                            <FormattedMessage\n                                                id='admin.group_settings.group_details.add_team_or_channel'\n                                                defaultMessage='Add Team or Channel'\n                                            />\n                                            <i className={'fa fa-caret-down'}/>\n                                        </button>\n                                        <Menu ariaLabel={localizeMessage('admin.group_settings.group_details.menuAriaLabel', 'Add Team or Channel Menu')}>\n                                            <Menu.ItemAction\n                                                id='add_team'\n                                                onClick={this.openAddTeam}\n                                                text={localizeMessage('admin.group_settings.group_details.add_team', 'Add Team')}\n                                            />\n                                            <Menu.ItemAction\n                                                id='add_channel'\n                                                onClick={this.openAddChannel}\n                                                text={localizeMessage('admin.group_settings.group_details.add_channel', 'Add Channel')}\n                                            />\n                                        </Menu>\n                                    </MenuWrapper>\n                                </div>\n                            )}\n                        >\n                            <GroupTeamsAndChannels\n                                id={this.props.groupID}\n                                teams={groupTeams}\n                                channels={groupChannels}\n                                loading={this.state.loadingTeamsAndChannels}\n                                getGroupSyncables={this.props.actions.getGroupSyncables}\n                                unlink={this.props.actions.unlink}\n                                onChangeRoles={this.onChangeRoles}\n                                onRemoveItem={this.onRemoveTeamOrChannel}\n                                isDisabled={isDisabled}\n                            />\n                        </AdminPanel>\n                        {this.state.addTeamOpen &&\n                            <TeamSelectorModal\n                                onModalDismissed={this.closeAddTeam}\n                                onTeamsSelected={this.addTeams}\n                                alreadySelected={this.props.groupTeams.map((team) => team.team_id)}\n                            />\n                        }\n                        {this.state.addChannelOpen &&\n                            <ChannelSelectorModal\n                                onModalDismissed={this.closeAddChannel}\n                                onChannelsSelected={this.addChannels}\n                                alreadySelected={this.props.groupChannels.map((channel) => channel.channel_id)}\n                                groupID={this.props.groupID}\n                            />\n                        }\n\n                        <AdminPanel\n                            id='group_users'\n                            titleId={t('admin.group_settings.group_detail.groupUsersTitle')}\n                            titleDefault='Users'\n                            subtitleId={t('admin.group_settings.group_detail.groupUsersDescription')}\n                            subtitleDefault='Listing of users in Mattermost associated with this group.'\n                        >\n                            <GroupUsers\n                                members={members}\n                                total={memberCount}\n                                groupID={this.props.groupID}\n                                getMembers={this.props.actions.getMembers}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/groups'\n                    saveNeeded={saveNeeded}\n                    onClick={this.handleSubmit}\n                    serverError={serverError &&\n                        <FormError\n                            iconClassName={'fa-exclamation-triangle'}\n                            textClassName={'has-error'}\n                            error={serverError}\n                        />\n                    }\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport MentionsIcon from 'components/widgets/icons/mentions_icon';\n\nexport default class GroupProfile extends React.PureComponent {\n    static propTypes = {\n        name: PropTypes.string,\n        title: PropTypes.string.isRequired,\n        titleDefault: PropTypes.string.isRequired,\n        customID: PropTypes.string,\n        isDisabled: PropTypes.bool,\n        showAtMention: PropTypes.bool.isRequired,\n        onChange: PropTypes.func,\n    };\n\n    render = () => {\n        const {name, title, titleDefault, customID, isDisabled, showAtMention, onChange} = this.props;\n\n        return (\n            <div\n                className='group-profile form-horizontal'\n                id={customID}\n            >\n                <div className='group-profile-field form-group mb-0'>\n                    <label className='control-label col-sm-4'>\n                        <FormattedMessage\n                            id={title}\n                            defaultMessage={titleDefault}\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <div className='icon-over-input'>\n                            {showAtMention &&\n                                <MentionsIcon\n                                    className='icon icon__mentions'\n                                    aria-hidden='true'\n                                />\n                            }\n                        </div>\n                        <input\n                            type='text'\n                            className='form-control group-at-mention-input'\n                            value={name}\n                            disabled={isDisabled}\n                            onChange={onChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport GroupProfile from 'components/admin_console/group_settings/group_details/group_profile';\n\nimport {t} from 'utils/i18n';\n\nimport LineSwitch from 'components/admin_console/team_channel_settings/line_switch.jsx';\n\nconst GroupSettingsToggle = ({isDefault, allowReference, onToggle, isDisabled}) => (\n    <LineSwitch\n        id={'allowReferenceSwitch'}\n        disabled={isDisabled || isDefault}\n        toggled={allowReference}\n        last={true}\n        onToggle={() => {\n            if (isDefault) {\n                return;\n            }\n            onToggle(!allowReference);\n        }}\n        singleLine={false}\n        title={(\n            <FormattedMessage\n                id='admin.team_settings.team_details.groupDetailsToggle'\n                defaultMessage='Enable Group Mention (Beta)'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.team_settings.team_details.groupDetailsToggleDescr'\n                defaultMessage='When enabled, this group can be mentioned in other channels and teams. This may result in the group member list being visible to all users.'\n            />\n        )}\n    />);\n\nGroupSettingsToggle.propTypes = {\n    isDefault: PropTypes.bool.isRequired,\n    allowReference: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool,\n};\n\nexport const GroupProfileAndSettings = ({displayname, mentionname, allowReference, onToggle, onChange, readOnly}) => (\n    <AdminPanel\n        id='group_profile'\n        titleId={t('admin.group_settings.group_detail.groupProfileTitle')}\n        titleDefault='Group Profile'\n        subtitleId={t('admin.group_settings.group_detail.groupProfileDescription')}\n        subtitleDefault='The name for this group.'\n    >\n        <GroupProfile\n            name={displayname}\n            title={t('admin.group_settings.group_details.group_profile.name')}\n            titleDefault={'Name:'}\n            customID={'groupDisplayName'}\n            isDisabled={true}\n            showAtMention={false}\n        />\n        <div className='group-settings'>\n            <div className='group-settings--body'>\n                <div className='section-separator'><hr className='separator__hr'/></div>\n                <GroupSettingsToggle\n                    isDefault={false}\n                    allowReference={allowReference}\n                    onToggle={onToggle}\n                    isDisabled={readOnly}\n                />\n            </div>\n        </div>\n        {allowReference &&\n            <GroupProfile\n                name={mentionname}\n                title={t('admin.group_settings.group_details.group_mention.name')}\n                titleDefault={'Group Mention:'}\n                customID={'groupMention'}\n                isDisabled={readOnly}\n                showAtMention={true}\n                onChange={onChange}\n            />\n        }\n    </AdminPanel>);\n\nGroupProfileAndSettings.propTypes = {\n    displayname: PropTypes.string.isRequired,\n    mentionname: PropTypes.string,\n    allowReference: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    readOnly: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GroupTeamsAndChannelsRow from 'components/admin_console/group_settings/group_details/group_teams_and_channels_row.jsx';\n\nexport default class GroupTeamsAndChannels extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        teams: PropTypes.arrayOf(PropTypes.object),\n        channels: PropTypes.arrayOf(PropTypes.object),\n        loading: PropTypes.bool.isRequired,\n        onChangeRoles: PropTypes.func.isRequired,\n        onRemoveItem: PropTypes.func.isRequired,\n        isDisabled: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: {},\n        };\n    }\n\n    onToggleCollapse = (id) => {\n        const collapsed = {...this.state.collapsed};\n        collapsed[id] = !collapsed[id];\n        this.setState({collapsed});\n    }\n\n    onRemoveItem = (id, type) => {\n        this.props.onRemoveItem(id, type);\n    }\n\n    onChangeRoles = async (id, type, roleToBe) => {\n        this.props.onChangeRoles(id, type, roleToBe);\n    }\n\n    teamsAndChannelsToEntries = (teams, channels) => {\n        const entries = [];\n\n        const existingTeams = new Set();\n        const teamEntries = [];\n        teams.forEach((team) => {\n            existingTeams.add(team.team_id);\n            teamEntries.push({\n                type: team.team_type === 'O' ? 'public-team' : 'private-team',\n                hasChildren: channels.some((channel) => channel.team_id === team.team_id),\n                name: team.team_display_name,\n                collapsed: this.state.collapsed[team.team_id],\n                id: team.team_id,\n                schemeAdmin: team.scheme_admin,\n            });\n        });\n\n        const channelEntriesByTeam = {};\n        channels.forEach((channel) => {\n            channelEntriesByTeam[channel.team_id] = channelEntriesByTeam[channel.team_id] || [];\n            channelEntriesByTeam[channel.team_id].push({\n                type: channel.channel_type === 'O' ? 'public-channel' : 'private-channel',\n                name: channel.channel_display_name,\n                id: channel.channel_id,\n                schemeAdmin: channel.scheme_admin,\n            });\n\n            if (!existingTeams.has(channel.team_id)) {\n                existingTeams.add(channel.team_id);\n                teamEntries.push({\n                    type: channel.team_type === 'O' ? 'public-team' : 'private-team',\n                    hasChildren: true,\n                    name: channel.team_display_name,\n                    collapsed: this.state.collapsed[channel.team_id],\n                    id: channel.team_id,\n                });\n            }\n        });\n        teamEntries.sort((a, b) => ((a.name && b.name) ? a.name.localeCompare(b.name) : 0));\n        teamEntries.forEach((team) => {\n            entries.push(team);\n            if (team.hasChildren && !team.collapsed) {\n                const teamChannels = channelEntriesByTeam[team.id];\n                teamChannels.sort((a, b) => a.name.localeCompare(b.name));\n                entries.push(...teamChannels);\n            }\n        });\n\n        return entries;\n    }\n\n    render = () => {\n        const entries = this.teamsAndChannelsToEntries(this.props.teams, this.props.channels);\n\n        if (this.props.loading) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-loading'>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                </div>\n            );\n        }\n\n        if (entries.length === 0) {\n            return (\n                <div className='group-teams-and-channels'>\n                    <div className='group-teams-and-channels-empty'>\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels.no-teams-or-channels-speicified'\n                            defaultMessage='No teams or channels specified yet'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className='AdminPanel__content'>\n                <table\n                    id='team_and_channel_membership_table'\n                    className='AdminPanel__table group-teams-and-channels'\n                >\n                    <thead className='group-teams-and-channels--header'>\n                        <tr>\n                            <th width='30%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.name'\n                                    defaultMessage='Name'\n                                />\n                            </th>\n                            <th width='25%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.type'\n                                    defaultMessage='Type'\n                                />\n                            </th>\n                            <th width='25%'>\n                                <FormattedMessage\n                                    id='admin.group_settings.group_profile.group_teams_and_channels.assignedRoles'\n                                    defaultMessage='Assigned Roles'\n                                />\n                            </th>\n                            <th width='20%'/>\n                        </tr>\n                    </thead>\n                    <tbody className='group-teams-and-channels--body'>\n                        {entries.map((entry) => (\n                            <GroupTeamsAndChannelsRow\n                                key={entry.id}\n                                onRemoveItem={this.onRemoveItem}\n                                onChangeRoles={this.onChangeRoles}\n                                onToggleCollapse={this.onToggleCollapse}\n                                isDisabled={this.props.isDisabled}\n                                {...entry}\n                            />\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {isNil} from 'lodash';\nimport classNames from 'classnames';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\n\nexport default class GroupTeamsAndChannelsRow extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        hasChildren: PropTypes.bool,\n        collapsed: PropTypes.bool,\n        onRemoveItem: PropTypes.func.isRequired,\n        onToggleCollapse: PropTypes.func.isRequired,\n        onChangeRoles: PropTypes.func.isRequired,\n        schemeAdmin: PropTypes.bool,\n        isDisabled: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmationModal: false,\n        };\n    }\n\n    removeItem = () => {\n        this.props.onRemoveItem(this.props.id, this.props.type);\n        this.setState({showConfirmationModal: false});\n    }\n\n    changeRoles = () => {\n        this.props.onChangeRoles(this.props.id, this.props.type, !this.props.schemeAdmin);\n    }\n\n    toggleCollapse = () => {\n        this.props.onToggleCollapse(this.props.id);\n    }\n\n    displayAssignedRolesDropdown = () => {\n        const {schemeAdmin, name, isDisabled} = this.props;\n        const channelAdmin = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.channelAdmin'\n                defaultMessage='Channel Admin'\n            />\n        );\n        const teamAdmin = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.teamAdmin'\n                defaultMessage='Team Admin'\n            />\n        );\n        const member = (\n            <FormattedMessage\n                id='admin.group_teams_and_channels_row.member'\n                defaultMessage='Member'\n            />\n        );\n        let dropDown = null;\n        if (!isNil(schemeAdmin)) {\n            let currentRole = member;\n            let roleToBe = (this.props.type.includes('team')) ? teamAdmin : channelAdmin;\n            if (schemeAdmin) {\n                currentRole = (this.props.type.includes('team')) ? teamAdmin : channelAdmin;\n                roleToBe = member;\n            }\n            dropDown = (\n                <div >\n                    <MenuWrapper\n                        isDisabled={isDisabled}\n                    >\n                        <div data-testid={`${name}_current_role`}>\n                            <a>\n                                <span>{currentRole} </span>\n                                <span className='caret'/>\n                            </a>\n                        </div>\n                        <Menu\n                            openLeft={true}\n                            openUp={true}\n                            ariaLabel={localizeMessage('admin.team_channel_settings.group_row.memberRole', 'Member Role')}\n                            id={`${name}_change_role_options`}\n                        >\n                            <Menu.ItemAction\n                                testid={`${name}_role_to_be`}\n                                onClick={this.changeRoles}\n                                text={roleToBe}\n                            />\n                        </Menu>\n                    </MenuWrapper>\n                </div>\n            );\n        }\n\n        return dropDown;\n    }\n\n    render = () => {\n        let extraClasses = '';\n        let arrowIcon = null;\n        if (this.props.hasChildren) {\n            arrowIcon = (\n                <i\n                    className={'fa ' + (this.props.collapsed ? 'fa-caret-right' : 'fa-caret-down')}\n                    onClick={this.toggleCollapse}\n                />\n            );\n            extraClasses += ' has-clidren';\n        }\n\n        if (this.props.collapsed) {\n            extraClasses += ' collapsed';\n        }\n\n        let channelIcon = null;\n        let typeText = null;\n        switch (this.props.type) {\n        case 'public-team':\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.publicTeam'\n                    defaultMessage='Team'\n                />\n            );\n            break;\n        case 'private-team':\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.privateTeam'\n                    defaultMessage='Team (Private)'\n                />\n            );\n            break;\n        }\n\n        switch (this.props.type) {\n        case 'public-channel':\n            channelIcon = (\n                <span className='channel-icon'>\n                    <GlobeIcon className='icon icon__globe'/>\n                </span>\n            );\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.publicChannel'\n                    defaultMessage='Channel'\n                />\n            );\n            break;\n        case 'private-channel':\n            channelIcon = (\n                <span className='channel-icon'>\n                    <LockIcon className='icon icon__lock'/>\n                </span>\n            );\n            typeText = (\n                <FormattedMessage\n                    id='admin.group_settings.group_details.group_teams_and_channels_row.privateChannel'\n                    defaultMessage='Channel (Private)'\n                />\n            );\n            break;\n        }\n\n        const displayType = this.props.type.split('-')[1];\n\n        return (\n            <tr className={'group-teams-and-channels-row' + extraClasses}>\n                <ConfirmModal\n                    show={this.state.showConfirmationModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_header'\n                            defaultMessage='Remove Membership from the {name} {displayType}?'\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_body'\n                            defaultMessage='Removing this membership will prevent future users in this group from being added to the {name} {displayType}.'\n                            values={{name: this.props.name, displayType}}\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove.confirm_button'\n                            defaultMessage='Yes, Remove'\n                        />\n                    }\n                    onConfirm={this.removeItem}\n                    onCancel={() => this.setState({showConfirmationModal: false})}\n                />\n                <td>\n                    <span className='arrow-icon'>\n                        {arrowIcon}\n                    </span>\n                    {channelIcon}\n                    <span className={classNames({'name-no-arrow': isNil(arrowIcon) && isNil(channelIcon)})}>\n                        {this.props.name}\n                    </span>\n                </td>\n                <td className='type'>\n                    {typeText}\n                </td>\n                <td>\n                    {this.displayAssignedRolesDropdown()}\n                </td>\n                <td className='text-right'>\n                    <button\n                        type='button'\n                        className='btn btn-link'\n                        onClick={() => this.setState({showConfirmationModal: true})}\n                        data-testid={`${this.props.name}_groupsyncable_remove`}\n                        disabled={this.props.isDisabled}\n                    >\n                        <FormattedMessage\n                            id='admin.group_settings.group_details.group_teams_and_channels_row.remove'\n                            defaultMessage='Remove'\n                        />\n                    </button>\n                </td>\n            </tr>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GroupUsersRow from 'components/admin_console/group_settings/group_details/group_users_row';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport {getSiteURL} from 'utils/url';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 20;\n\nexport default class GroupUsers extends React.PureComponent {\n    static propTypes = {\n        groupID: PropTypes.string.isRequired,\n        members: PropTypes.arrayOf(PropTypes.object),\n        total: PropTypes.number.isRequired,\n        getMembers: PropTypes.func.isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.props.getMembers(this.props.groupID, 0, GROUP_MEMBERS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    previousPage = () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page});\n    }\n\n    nextPage = async () => {\n        const {total, members, groupID, getMembers} = this.props;\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= total ? this.state.page : this.state.page + 1;\n        if (page === this.state.page) {\n            return;\n        }\n\n        const numberOfMembersToLoad = (page + 1) * GROUP_MEMBERS_PAGE_SIZE >= total ? total : (page + 1) * GROUP_MEMBERS_PAGE_SIZE;\n        if (members.length >= numberOfMembersToLoad) {\n            this.setState({page});\n            return;\n        }\n\n        this.setState({page, loading: true});\n        await getMembers(groupID, page, GROUP_MEMBERS_PAGE_SIZE);\n        this.setState({loading: false});\n    }\n\n    renderRows = () => {\n        if (this.props.members.length === 0) {\n            return (\n                <div className='group-users-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.group_details.group_users.no-users-found'\n                        defaultMessage='No users found'\n                    />\n                </div>\n            );\n        }\n\n        const usersToDisplay = this.props.members.slice((this.state.page * GROUP_MEMBERS_PAGE_SIZE), ((this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE));\n        return usersToDisplay.map((member) => {\n            return (\n                <GroupUsersRow\n                    key={member.id}\n                    username={member.username}\n                    displayName={member.first_name + ' ' + member.last_name}\n                    email={member.email}\n                    userId={member.id}\n                    lastPictureUpdate={member.last_picture_update}\n                />\n            );\n        });\n    }\n\n    renderPagination = () => {\n        if (this.props.members.length === 0) {\n            return (<div className='group-users--footer empty'/>);\n        }\n\n        const startCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n\n        return (\n            <div className='group-users--footer'>\n                <div className='counter'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.paginatorCount'\n                        defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                        values={{\n                            startCount,\n                            endCount,\n                            total,\n                        }}\n                    />\n                </div>\n                <button\n                    type='button'\n                    className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                    onClick={this.previousPage}\n                    disabled={firstPage}\n                >\n                    <PreviousIcon/>\n                </button>\n                <button\n                    type='button'\n                    className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                    onClick={this.nextPage}\n                    disabled={lastPage}\n                >\n                    <NextIcon/>\n                </button>\n            </div>\n        );\n    }\n\n    render = () => {\n        return (\n            <div className='group-users'>\n                <div className='group-users--header'>\n                    <FormattedMarkdownMessage\n                        id='admin.group_settings.group_profile.group_users.ldapConnector'\n                        defaultMessage={'AD/LDAP Connector is configured to sync and manage this group and its users. [Click here to view]({siteURL}/admin_console/authentication/ldap)'}\n                        values={{siteURL: getSiteURL()}}\n                    />\n                </div>\n                <div className='group-users--body'>\n                    <div className={'group-users-loading ' + (this.state.loading ? 'active' : '')}>\n                        <i className='fa fa-spinner fa-pulse fa-2x'/>\n                    </div>\n                    {this.renderRows()}\n                </div>\n                {this.renderPagination()}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport Avatar from 'components/widgets/users/avatar';\n\nexport default class GroupUsersRow extends React.PureComponent {\n    static propTypes = {\n        username: PropTypes.string.isRequired,\n        displayName: PropTypes.string.isRequired,\n        email: PropTypes.string.isRequired,\n        userId: PropTypes.string.isRequired,\n        lastPictureUpdate: PropTypes.number.isRequired,\n    };\n\n    render = () => {\n        return (\n            <div className='group-users-row'>\n                <Avatar\n                    username={this.props.username}\n                    url={Client4.getProfilePictureUrl(this.props.userId, this.props.lastPictureUpdate)}\n                    size='lg'\n                />\n                <div className='user-data'>\n                    <div className='name-row'>\n                        <span className='username'>{'@' + this.props.username}</span>\n                        {'-'}\n                        <span className='display-name'>{this.props.displayName}</span>\n                    </div>\n                    <div>\n                        <span className='email-label'>\n                            <FormattedMessage\n                                id='admin.group_settings.group_details.group_users.email'\n                                defaultMessage='Email:'\n                            />\n                        </span>\n                        <span className='email'>{this.props.email}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n    getGroup as fetchGroup,\n    getGroupStats,\n    getGroupSyncables as fetchGroupSyncables,\n    patchGroupSyncable,\n    patchGroup,\n} from 'mattermost-redux/actions/groups';\nimport {getProfilesInGroup} from 'mattermost-redux/actions/users';\nimport {getGroup, getGroupTeams, getGroupChannels, getGroupMemberCount} from 'mattermost-redux/selectors/entities/groups';\nimport {getProfilesInGroup as selectProfilesInGroup} from 'mattermost-redux/selectors/entities/users';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport GroupDetails from './group_details.jsx';\n\nfunction mapStateToProps(state, props) {\n    const groupID = props.match.params.group_id;\n    const group = getGroup(state, groupID);\n    const groupTeams = getGroupTeams(state, groupID);\n    const groupChannels = getGroupChannels(state, groupID);\n    const members = selectProfilesInGroup(state, groupID);\n    const memberCount = getGroupMemberCount(state, groupID);\n\n    return {\n        groupID,\n        group,\n        groupTeams,\n        groupChannels,\n        members,\n        memberCount,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            setNavigationBlocked,\n            getGroup: fetchGroup,\n            getMembers: getProfilesInGroup,\n            getGroupStats,\n            getGroupSyncables: fetchGroupSyncables,\n            link: linkGroupSyncable,\n            unlink: unlinkGroupSyncable,\n            patchGroupSyncable,\n            patchGroup,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\n\nexport default class GroupRow extends React.PureComponent {\n    static propTypes = {\n        primary_key: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        mattermost_group_id: PropTypes.string,\n        has_syncables: PropTypes.bool,\n        checked: PropTypes.bool,\n        failed: PropTypes.bool,\n        onCheckToggle: PropTypes.func,\n        readOnly: PropTypes.bool,\n        actions: PropTypes.shape({\n            link: PropTypes.func.isRequired,\n            unlink: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n        };\n    }\n\n    onRowClick = () => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onCheckToggle(this.props.primary_key);\n    }\n\n    linkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        if (this.props.readOnly) {\n            return;\n        }\n        this.setState({loading: true});\n        await this.props.actions.link(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    unlinkHandler = async (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n        if (this.props.readOnly) {\n            return;\n        }\n        this.setState({loading: true});\n        await this.props.actions.unlink(this.props.primary_key);\n        this.setState({loading: false});\n    }\n\n    renderActions = () => {\n        if (!this.props.mattermost_group_id) {\n            return null;\n        }\n        if (this.props.has_syncables) {\n            return (\n                <Link\n                    to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}\n                    id={`${this.props.name}_edit`}\n                >\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.edit'\n                        defaultMessage='Edit'\n                    />\n                </Link>\n            );\n        }\n        return (\n            <Link\n                to={'/admin_console/user_management/groups/' + this.props.mattermost_group_id}\n                id={`${this.props.name}_configure`}\n            >\n                <FormattedMessage\n                    id='admin.group_settings.group_row.configure'\n                    defaultMessage='Configure'\n                />\n            </Link>\n        );\n    }\n\n    renderLinked = () => {\n        if (this.state.loading) {\n            return (\n                <a href='#'>\n                    {this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.unlinking', 'Unlinking')}/>\n                    }\n                    {!this.props.mattermost_group_id &&\n                        <LoadingSpinner text={localizeMessage('admin.group_settings.group_row.linking', 'Linking')}/>\n                    }\n                </a>\n            );\n        }\n        if (this.props.mattermost_group_id) {\n            if (this.props.failed) {\n                return (\n                    <a\n                        href='#'\n                        onClick={this.unlinkHandler}\n                        className='warning'\n                    >\n                        <i className='icon fa fa-exclamation-triangle'/>\n                        <FormattedMessage\n                            id='admin.group_settings.group_row.unlink_failed'\n                            defaultMessage='Unlink failed'\n                        />\n                    </a>\n                );\n            }\n            return (\n                <a\n                    href='#'\n                    onClick={this.unlinkHandler}\n                    className={this.props.readOnly ? 'disabled' : ''}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.linked'\n                        defaultMessage='Linked'\n                    />\n                </a>\n            );\n        }\n        if (this.props.failed) {\n            return (\n                <a\n                    href='#'\n                    onClick={this.linkHandler}\n                    className='warning'\n                >\n                    <i className='icon fa fa-exclamation-triangle'/>\n                    <FormattedMessage\n                        id='admin.group_settings.group_row.link_failed'\n                        defaultMessage='Link failed'\n                    />\n                </a>\n            );\n        }\n        return (\n            <a\n                href='#'\n                onClick={this.linkHandler}\n                className={this.props.readOnly ? 'disabled' : ''}\n            >\n                <i className='icon fa fa-unlink'/>\n                <FormattedMessage\n                    id='admin.group_settings.group_row.not_linked'\n                    defaultMessage='Not Linked'\n                />\n            </a>\n        );\n    }\n\n    render = () => {\n        return (\n            <div\n                id={`${this.props.name}_group`}\n                className={'group ' + (this.props.checked ? 'checked' : '')}\n                onClick={this.onRowClick}\n            >\n                <div className='group-row'>\n                    <div className='group-name'>\n                        <div\n                            className={'group-check ' + (this.props.checked ? 'checked' : '')}\n                        >\n                            {this.props.checked && <CheckboxCheckedIcon/>}\n                        </div>\n                        <span>\n                            {this.props.name}\n                        </span>\n                    </div>\n                    <div className='group-content'>\n                        <span className='group-description'>\n                            {this.renderLinked()}\n                        </span>\n                        <span className='group-actions'>\n                            {this.renderActions()}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\nimport GroupsList from 'components/admin_console/group_settings/groups_list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {getSiteURL} from 'utils/url';\n\nexport default class GroupSettings extends React.PureComponent {\n    static propTypes = {\n        isDisabled: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.bool,\n        ]),\n    }\n\n    render = () => {\n        const siteURL = getSiteURL();\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.group_settings.groupsPageTitle'\n                        defaultMessage='Groups'\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <FormattedMarkdownMessage\n                                    id='admin.group_settings.introBanner'\n                                    defaultMessage={'Groups are a way to organize users and apply actions to all users within that group.\\nFor more information on Groups, please see [documentation](!https://www.mattermost.com/default-ad-ldap-groups).'}\n                                />\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            id='ldap_groups'\n                            titleId={t('admin.group_settings.ldapGroupsTitle')}\n                            titleDefault='AD/LDAP Groups'\n                            subtitleId={t('admin.group_settings.ldapGroupsDescription')}\n                            subtitleDefault={`Connect AD/LDAP and create groups in Mattermost. To get started, configure group attributes on the [AD/LDAP] (${siteURL}/admin_console/authentication/ldap) configuration page.`}\n                            subtitleValues={{siteURL}}\n                        >\n                            <GroupsList\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {GroupSearchOpts, MixedUnlinkedGroupRedux} from 'mattermost-redux/types/groups';\n\nimport * as Utils from 'utils/utils';\n\nimport GroupRow from 'components/admin_console/group_settings/group_row';\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\nimport SearchIcon from 'components/widgets/icons/search_icon';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon';\nimport {Constants} from 'utils/constants';\n\nconst LDAP_GROUPS_PAGE_SIZE = 200;\n\ntype Props = {\n    groups: MixedUnlinkedGroupRedux[];\n    total: number;\n    readOnly?: boolean;\n    actions: {\n        getLdapGroups: (page?: number, perPage?: number, opts?: GroupSearchOpts) => Promise<any>;\n        link: (key: string) => Promise<any>;\n        unlink: (key: string) => Promise<any>;\n    };\n}\n\ntype FilterOption = {\n    is_configured?: boolean;\n    is_linked?: boolean;\n}\n\ntype FilterConfig = {\n    filter: string;\n    option: FilterOption;\n}\n\ntype FilterSearchMap = {\n    filterIsConfigured: FilterConfig;\n    filterIsUnconfigured: FilterConfig;\n    filterIsLinked: FilterConfig;\n    filterIsUnlinked: FilterConfig;\n}\n\ntype State = {\n    checked?: any;\n    loading: boolean;\n    page: number;\n    showFilters: boolean;\n    searchString: string;\n    filterIsConfigured?: boolean;\n    filterIsUnconfigured?: boolean;\n    filterIsLinked?: boolean;\n    filterIsUnlinked?: boolean;\n}\n\ntype FilterUpdates = [string, boolean];\n\nconst FILTER_STATE_SEARCH_KEY_MAPPING: FilterSearchMap = {\n    filterIsConfigured: {filter: 'is:configured', option: {is_configured: true}},\n    filterIsUnconfigured: {filter: 'is:notconfigured', option: {is_configured: false}},\n    filterIsLinked: {filter: 'is:linked', option: {is_linked: true}},\n    filterIsUnlinked: {filter: 'is:notlinked', option: {is_linked: false}},\n};\n\nexport default class GroupsList extends React.PureComponent<Props, State> {\n    public static defaultProps: Partial<Props> = {\n        groups: [],\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            checked: {},\n            loading: true,\n            page: 0,\n            showFilters: false,\n            searchString: '',\n            filterIsConfigured: false,\n            filterIsUnconfigured: false,\n            filterIsLinked: false,\n            filterIsUnlinked: false,\n        };\n    }\n\n    public closeFilters = () => {\n        this.setState({showFilters: false});\n    }\n\n    public componentDidMount() {\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public async previousPage(e: any): Promise<void> {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    public async nextPage(e: any): Promise<void> {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({checked: {}, page, loading: true});\n        this.searchGroups(page);\n    }\n\n    public onCheckToggle(key: string) {\n        const newChecked = {...this.state.checked};\n        newChecked[key] = !newChecked[key];\n        this.setState({checked: newChecked});\n    }\n\n    public linkSelectedGroups() {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && !group.mattermost_group_id) {\n                this.props.actions.link(group.primary_key);\n            }\n        }\n    }\n\n    public unlinkSelectedGroups() {\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key] && group.mattermost_group_id) {\n                this.props.actions.unlink(group.primary_key);\n            }\n        }\n    }\n\n    public selectionActionButtonType(): string {\n        let hasSelectedLinked = false;\n        for (const group of this.props.groups) {\n            if (this.state.checked[group.primary_key]) {\n                if (!group.mattermost_group_id) {\n                    return 'link';\n                }\n                hasSelectedLinked = true;\n            }\n        }\n        if (hasSelectedLinked) {\n            return 'unlink';\n        }\n\n        return 'disabled';\n    }\n\n    public renderSelectionActionButton(): JSX.Element {\n        switch (this.selectionActionButtonType()) {\n        case 'link':\n            return (\n                <button\n                    type='button'\n                    className='btn btn-primary'\n                    onClick={() => this.linkSelectedGroups()}\n                    disabled={this.props.readOnly}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        case 'unlink':\n            return (\n                <button\n                    type='button'\n                    className='btn btn-primary'\n                    onClick={() => this.unlinkSelectedGroups()}\n                    disabled={this.props.readOnly}\n                >\n                    <i className='icon fa fa-unlink'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.unlink_selected'\n                        defaultMessage='Unlink Selected Groups'\n                    />\n                </button>\n            );\n        default:\n            return (\n                <button\n                    type='button'\n                    className='btn btn-inactive disabled'\n                    disabled={this.props.readOnly}\n                >\n                    <i className='icon fa fa-link'/>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.link_selected'\n                        defaultMessage='Link Selected Groups'\n                    />\n                </button>\n            );\n        }\n    }\n    renderHeader = () => {\n        if (this.props.groups.length === 0) {\n            return null;\n        }\n        return (\n            <div className='groups-list--header'>\n                <div className='group-name'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.nameHeader'\n                        defaultMessage='Name'\n                    />\n                </div>\n                <div className='group-content'>\n                    <div className='group-description'>\n                        <FormattedMessage\n                            id='admin.group_settings.groups_list.mappingHeader'\n                            defaultMessage='Mattermost Linking'\n                        />\n                    </div>\n                    <div className='group-actions'/>\n                </div>\n            </div>\n        );\n    }\n\n    public renderRows(): JSX.Element | JSX.Element[] {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.groups.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id='admin.group_settings.groups_list.no_groups_found'\n                        defaultMessage='No groups found'\n                    />\n                </div>\n            );\n        }\n        return this.props.groups.map((item) => {\n            return (\n                <GroupRow\n                    key={item.primary_key}\n                    primary_key={item.primary_key}\n                    name={item.name}\n                    mattermost_group_id={item.mattermost_group_id}\n                    has_syncables={item.has_syncables}\n                    failed={item.failed}\n                    checked={Boolean(this.state.checked[item.primary_key])}\n                    onCheckToggle={(key: string) => this.onCheckToggle(key)}\n                    readOnly={this.props.readOnly}\n                    actions={{\n                        link: this.props.actions.link,\n                        unlink: this.props.actions.unlink,\n                    }}\n                />\n            );\n        });\n    }\n\n    public regex(str: string): RegExp {\n        return new RegExp(`(${str})`, 'i');\n    }\n\n    public searchGroups(page?: number) {\n        let {searchString} = this.state;\n\n        const newState = {...this.state};\n        delete newState.page;\n        delete newState.checked;\n\n        let q = searchString;\n        let opts = {q: ''};\n\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([key, value]) => {\n            const re = this.regex(value.filter);\n            if (re.test(searchString)) {\n                (newState as any)[key] = true;\n                q = q.replace(re, '');\n                opts = Object.assign(opts, value.option);\n            } else if ((this.state as any)[key]) {\n                searchString += ' ' + value.filter;\n            }\n        });\n\n        opts.q = q.trim();\n\n        newState.searchString = searchString;\n        newState.showFilters = false;\n        newState.loading = true;\n        newState.showFilters = false;\n        this.setState(newState);\n\n        this.props.actions.getLdapGroups(page, LDAP_GROUPS_PAGE_SIZE, opts).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public handleGroupSearchKeyUp(e: any) {\n        const {key} = e;\n        const {searchString} = this.state;\n        if (key === Constants.KeyCodes.ENTER[0]) {\n            this.setState({page: 0});\n            this.searchGroups();\n        }\n        const newState = {};\n        Object.entries(FILTER_STATE_SEARCH_KEY_MAPPING).forEach(([k, value]) => {\n            if (!this.regex(value.filter).test(searchString)) {\n                (newState as any)[k] = false;\n            }\n        });\n        this.setState(newState);\n    }\n\n    public newSearchString(searchString: string, stateKey: string, checked: boolean): string {\n        let newSearchString = searchString;\n        const {filter} = (FILTER_STATE_SEARCH_KEY_MAPPING as any)[stateKey];\n        const re = this.regex(filter);\n        const stringFilterPresent = re.test(searchString);\n\n        if (stringFilterPresent && !checked) {\n            newSearchString = searchString.replace(re, '').trim();\n        }\n\n        if (!stringFilterPresent && checked) {\n            newSearchString += ' ' + filter;\n        }\n\n        return newSearchString.replace(/\\s{2,}/g, ' ');\n    }\n\n    public handleFilterCheck(updates: FilterUpdates[]) {\n        let {searchString} = this.state;\n        updates.forEach((item: FilterUpdates) => {\n            searchString = this.newSearchString(searchString, item[0], item[1]);\n            this.setState({[item[0]]: item[1]} as any);\n        });\n        this.setState({searchString});\n    }\n\n    public renderSearchFilters(): JSX.Element {\n        return (\n            <div\n                id='group-filters'\n                className='group-search-filters'\n                onClick={(e) => {\n                    e.nativeEvent.stopImmediatePropagation();\n                }}\n            >\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsLinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsLinked', !this.state.filterIsLinked], ['filterIsUnlinked', false]])}\n                    >\n                        {this.state.filterIsLinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isLinked'\n                            defaultMessage='Is Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnlinked ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnlinked', !this.state.filterIsUnlinked], ['filterIsLinked', false]])}\n                    >\n                        {this.state.filterIsUnlinked && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnlinked'\n                            defaultMessage='Is Not Linked'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsConfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsConfigured', !this.state.filterIsConfigured], ['filterIsUnconfigured', false]])}\n                    >\n                        {this.state.filterIsConfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isConfigured'\n                            defaultMessage='Is Configured'\n                        />\n                    </span>\n                </div>\n                <div className='filter-row'>\n                    <span\n                        className={'filter-check ' + (this.state.filterIsUnconfigured ? 'checked' : '')}\n                        onClick={() => this.handleFilterCheck([['filterIsUnconfigured', !this.state.filterIsUnconfigured], ['filterIsConfigured', false]])}\n                    >\n                        {this.state.filterIsUnconfigured && <CheckboxCheckedIcon/>}\n                    </span>\n                    <span>\n                        <FormattedMessage\n                            id='admin.group_settings.filters.isUnconfigured'\n                            defaultMessage='Is Not Configured'\n                        />\n                    </span>\n                </div>\n                <a\n                    onClick={() => {\n                        this.setState({page: 0});\n                        this.searchGroups(0);\n                    }}\n                    className='btn btn-primary search-groups-btn'\n                >\n                    <FormattedMessage\n                        id='search_bar.search'\n                        defaultMessage='Search'\n                    />\n                </a>\n            </div>\n        );\n    }\n\n    resetFiltersAndSearch = () => {\n        const newState: Partial<State> = {\n            showFilters: false,\n            searchString: '',\n            loading: true,\n            page: 0,\n            filterIsConfigured: false,\n            filterIsUnconfigured: false,\n            filterIsLinked: false,\n            filterIsUnlinked: false,\n        };\n        this.setState(newState as any);\n        this.props.actions.getLdapGroups(this.state.page, LDAP_GROUPS_PAGE_SIZE, {q: ''}).then(() => {\n            this.setState({loading: false});\n        });\n    }\n\n    public render(): JSX.Element {\n        const startCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + 1;\n        let endCount = (this.state.page * LDAP_GROUPS_PAGE_SIZE) + LDAP_GROUPS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='groups-list'>\n                <div className='groups-list--global-actions'>\n                    <div className='group-list-search'>\n                        <input\n                            type='text'\n                            placeholder={Utils.localizeMessage('search_bar.search', 'Search')}\n                            onKeyUp={(e: any) => this.handleGroupSearchKeyUp(e)}\n                            onChange={(e) => this.setState({searchString: e.target.value})}\n                            value={this.state.searchString}\n                        />\n                        <SearchIcon\n                            className='search__icon'\n                            aria-hidden='true'\n                        />\n                        <i\n                            className={'fa fa-times-circle group-filter-action ' + (this.state.searchString.length ? '' : 'hidden')}\n                            onClick={() => this.resetFiltersAndSearch()}\n                        />\n                        <i\n                            className={'fa fa-caret-down group-filter-action ' + (this.state.showFilters ? 'hidden' : '')}\n                            onClick={() => {\n                                document.addEventListener('click', this.closeFilters, {once: true});\n                                this.setState({showFilters: true});\n                            }}\n                        />\n                    </div>\n                    {this.state.showFilters && this.renderSearchFilters()}\n                    <div className='group-list-link-unlink'>\n                        {this.renderSelectionActionButton()}\n                    </div>\n                </div>\n                {this.renderHeader()}\n                <div\n                    id='groups-list--body'\n                    className='groups-list--body'\n                >\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='groups-list--footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.group_settings.groups_list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            type='button'\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={(e: any) => this.previousPage(e)}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            type='button'\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={(e: any) => this.nextPage(e)}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {linkLdapGroup, unlinkLdapGroup, getLdapGroups as fetchLdapGroups} from 'mattermost-redux/actions/admin';\nimport {getLdapGroups, getLdapGroupsCount} from 'mattermost-redux/selectors/entities/admin';\n\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport GroupsList from './groups_list';\n\nconst getSortedListOfLdapGroups = createSelector(\n    getLdapGroups,\n    (ldapGroups) => {\n        const groups = Object.values(ldapGroups);\n        groups.sort((a, b) => a.name.localeCompare(b.name));\n        return groups;\n    },\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        groups: getSortedListOfLdapGroups(state),\n        total: getLdapGroupsCount(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, any>({\n            getLdapGroups: fetchLdapGroups,\n            link: linkLdapGroup,\n            unlink: unlinkLdapGroup,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroupsList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport Mark from 'mark.js';\nimport debounce from 'lodash/debounce';\n\ntype Props = {\n    filter: string;\n    children: React.ReactNode;\n}\n\nexport default class Highlight extends React.PureComponent<Props> {\n    private markInstance? : Mark;\n    private ref: React.RefObject<HTMLDivElement>;\n\n    public constructor(props: Props) {\n        super(props);\n        this.ref = React.createRef<HTMLDivElement>();\n    }\n\n    private redrawHighlight = debounce(() => {\n        if (this.markInstance) {\n            this.markInstance.unmark();\n        }\n\n        if (!this.props.filter) {\n            return;\n        }\n\n        if (!this.ref.current) {\n            return;\n        }\n\n        // Is necesary to recreate the instances to get again the DOM elements after the re-render\n        this.markInstance = new Mark(this.ref.current);\n        this.markInstance.mark(this.props.filter, {accuracy: 'complementary'});\n    }, 100, {leading: true, trailing: true});\n\n    public render() {\n        // Run on next frame\n        setTimeout(this.redrawHighlight, 0);\n        return (\n            <div ref={this.ref}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {getConfig, getEnvironmentConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\nimport {withRouter} from 'react-router-dom';\nimport {getConfig as getGeneralConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {selectChannel} from 'mattermost-redux/actions/channels';\nimport {selectTeam} from 'mattermost-redux/actions/teams';\nimport {isCurrentUserSystemAdmin, currentUserHasAnAdminRole, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {ConsoleAccess} from 'mattermost-redux/types/admin';\n\nimport {General} from 'mattermost-redux/constants';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {setNavigationBlocked, deferNavigation, cancelNavigation, confirmNavigation} from 'actions/admin_actions.jsx';\nimport {getNavigationBlocked, showNavigationPrompt} from 'selectors/views/admin';\nimport {getAdminDefinition, getConsoleAccess} from 'selectors/admin_console';\n\nimport LocalStorageStore from 'stores/local_storage_store';\n\nimport {GlobalState} from 'types/store';\n\nimport AdminConsole from './admin_console';\n\nfunction mapStateToProps(state: GlobalState) {\n    const generalConfig = getGeneralConfig(state);\n    const buildEnterpriseReady = generalConfig.BuildEnterpriseReady === 'true';\n    const adminDefinition = getAdminDefinition(state);\n    const teamId = LocalStorageStore.getPreviousTeamId(getCurrentUserId(state));\n    const team = getTeam(state, teamId || '');\n    const unauthorizedRoute = team ? `/${team.name}/channels/${General.DEFAULT_CHANNEL}` : '/';\n    const consoleAccess: ConsoleAccess = getConsoleAccess(state);\n\n    return {\n        config: Selectors.getConfig(state),\n        environmentConfig: Selectors.getEnvironmentConfig(state),\n        license: getLicense(state),\n        buildEnterpriseReady,\n        unauthorizedRoute,\n        navigationBlocked: getNavigationBlocked(state),\n        showNavigationPrompt: showNavigationPrompt(state),\n        isCurrentUserSystemAdmin: isCurrentUserSystemAdmin(state),\n        currentUserHasAnAdminRole: currentUserHasAnAdminRole(state),\n        roles: getRoles(state),\n        adminDefinition,\n        consoleAccess,\n        cloud: state.entities.cloud,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getConfig,\n            getEnvironmentConfig,\n            updateConfig,\n            setNavigationBlocked,\n            deferNavigation,\n            cancelNavigation,\n            confirmNavigation,\n            loadRolesIfNeeded,\n            editRole,\n            selectChannel,\n            selectTeam,\n        }, dispatch),\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(AdminConsole));\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getJobsByType, createJob, cancelJob} from 'mattermost-redux/actions/jobs';\nimport {getConfig} from 'mattermost-redux/selectors/entities/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/jobs';\n\nimport Table from './table.jsx';\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        jobs: Selectors.makeGetJobsByType(ownProps.jobType)(state),\n        downloadExportResults: getConfig(state).MessageExportSettings.DownloadExportResults,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getJobsByType,\n            createJob,\n            cancelJob,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Client4} from 'mattermost-redux/client';\nimport {FormattedDate, FormattedMessage, FormattedTime, injectIntl} from 'react-intl';\n\nimport {JobStatuses, exportFormats, JobTypes} from 'utils/constants';\nimport {intlShape} from 'utils/react_intl';\nimport * as Utils from 'utils/utils.jsx';\n\nclass JobTable extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * Used for formatting dates\n         */\n        intl: intlShape.isRequired,\n\n        /**\n         * Array of jobs\n         */\n        jobs: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /**\n         * Function called when displaying extra text.\n         */\n        getExtraInfoText: PropTypes.func,\n\n        /**\n         * Grey buttons out when disabled\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * Help text under the create job button\n         */\n        createJobHelpText: PropTypes.element.isRequired,\n\n        /**\n         * Button text to create a new job\n         */\n        createJobButtonText: PropTypes.element.isRequired,\n\n        /**\n         * The type of jobs to include in this table.\n         */\n        jobType: PropTypes.string.isRequired,\n\n        /**\n         * A variable set in config.json to determine if results can be downloaded or not.\n         * Note that there is NO front-end associated with this setting due to security.\n         * Only the person with access to the config.json file can enable this option.\n         */\n        downloadExportResults: PropTypes.bool,\n\n        actions: PropTypes.shape({\n            getJobsByType: PropTypes.func.isRequired,\n            cancelJob: PropTypes.func.isRequired,\n            createJob: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.interval = null;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => this.setState({loading: false}),\n        );\n\n        this.interval = setInterval(this.reload, 15000);\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    getDownloadLink = (job) => {\n        if (job.data?.is_downloadable === 'true' && parseInt(job.data?.messages_exported, 10) > 0 && job.data?.export_type !== exportFormats.EXPORT_FORMAT_GLOBALRELAY) { // eslint-disable-line camelcase\n            return (\n                <a\n                    key={job.id}\n                    href={`${Client4.getJobsRoute()}/${job.id}/download`}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.downloadLink'\n                        defaultMessage='Download'\n                    />\n                </a>\n            );\n        }\n\n        return '--';\n    }\n\n    getStatus = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        if (job.status === JobStatuses.PENDING) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusPending'\n                        defaultMessage='Pending'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.IN_PROGRESS) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusInProgress'\n                        defaultMessage='In Progress'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.SUCCESS) {\n            return (\n                <span\n                    className='status-icon-success'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusSuccess'\n                        defaultMessage='Success'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.WARNING) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusWarning'\n                        defaultMessage='Warning'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.ERROR) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusError'\n                        defaultMessage='Error'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span\n                    className='status-icon-warning'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceling'\n                        defaultMessage='Canceling...'\n                    />\n                </span>\n            );\n        } else if (job.status === JobStatuses.CANCELED) {\n            return (\n                <span\n                    className='status-icon-error'\n                    title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}\n                >\n                    <FormattedMessage\n                        id='admin.jobTable.statusCanceled'\n                        defaultMessage='Canceled'\n                    />\n                </span>\n            );\n        }\n\n        return (\n            <span title={formatMessage({id: 'admin.jobTable.jobId', defaultMessage: 'Job ID: '}) + job.id}>{job.status}</span>\n        );\n    }\n\n    getExtraInfoText = (job) => {\n        if (job.data && job.data.error && job.data.error.length > 0) {\n            return <span title={job.data.error}>{job.data.error}</span>;\n        }\n\n        if (this.props.getExtraInfoText) {\n            return this.props.getExtraInfoText(job);\n        }\n\n        return <span/>;\n    }\n\n    getRunLength = (job) => {\n        let millis = job.last_activity_at - job.start_at;\n        if (job.status === JobStatuses.IN_PROGRESS) {\n            const runningMillis = Date.now() - job.start_at;\n            if (runningMillis > millis) {\n                millis = runningMillis;\n            }\n        }\n\n        let lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') + '--';\n\n        if (job.last_activity_at > 0) {\n            lastActivity = Utils.localizeMessage('admin.jobTable.lastActivityAt', 'Last Activity: ') +\n                this.props.intl.formatDate(new Date(job.last_activity_at), {\n                    year: 'numeric',\n                    month: 'short',\n                    day: '2-digit',\n                }) + ' - ' +\n                this.props.intl.formatTime(new Date(job.last_activity_at), {\n                    hour: '2-digit',\n                    minute: '2-digit',\n                    second: '2-digit',\n                });\n        }\n\n        var seconds = Math.round(millis / 1000);\n        var minutes = Math.round(millis / (1000 * 60));\n\n        if (millis <= 0 || job.status === JobStatuses.CANCELED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        if (seconds <= 120) {\n            return (\n                <span\n                    className='whitespace--nowrap'\n                    title={lastActivity}\n                >\n                    {seconds + Utils.localizeMessage('admin.jobTable.runLengthSeconds', ' seconds')}\n                </span>\n            );\n        }\n\n        return (\n            <span\n                className='whitespace--nowrap'\n                title={lastActivity}\n            >\n                {minutes + Utils.localizeMessage('admin.jobTable.runLengthMinutes', ' minutes')}\n            </span>\n        );\n    }\n\n    getFinishAt = (status, millis) => {\n        if (millis === 0 || status === JobStatuses.PENDING || status === JobStatuses.IN_PROGRESS || status === JobStatuses.CANCEL_REQUESTED) {\n            return (\n                <span className='whitespace--nowrap'>{'--'}</span>\n            );\n        }\n\n        const date = new Date(millis);\n\n        return (\n            <span className='whitespace--nowrap'>\n                <FormattedDate\n                    value={date}\n                    day='2-digit'\n                    month='short'\n                    year='numeric'\n                />\n                {' - '}\n                <FormattedTime\n                    value={date}\n                    hour='2-digit'\n                    minute='2-digit'\n                />\n            </span>\n        );\n    }\n\n    reload = () => {\n        this.setState({loading: true});\n\n        this.props.actions.getJobsByType(this.props.jobType).then(\n            () => {\n                this.setState({\n                    loading: false,\n                });\n            },\n        );\n    };\n\n    handleCancelJob = async (e) => {\n        e.preventDefault();\n        const jobId = e.currentTarget.getAttribute('data-job-id');\n        await this.props.actions.cancelJob(jobId);\n        this.reload();\n    };\n\n    handleCreateJob = async (e) => {\n        e.preventDefault();\n        const job = {\n            type: this.props.jobType,\n        };\n\n        await this.props.actions.createJob(job);\n        this.reload();\n    };\n\n    getCancelButton = (job) => {\n        const formatMessage = this.props.intl.formatMessage;\n        let cancelButton = null;\n\n        if (!this.props.disabled && (job.status === JobStatuses.PENDING || job.status === JobStatuses.IN_PROGRESS)) {\n            cancelButton = (\n                <span\n                    data-job-id={job.id}\n                    onClick={this.handleCancelJob}\n                    className='job-table__cancel-button'\n                    title={formatMessage({id: 'admin.jobTable.cancelButton', defaultMessage: 'Cancel'})}\n                >\n                    {'×'}\n                </span>\n            );\n        }\n\n        return cancelButton;\n    }\n\n    render() {\n        const showFilesColumn = this.props.jobType === JobTypes.MESSAGE_EXPORT && this.props.downloadExportResults;\n        var items = this.props.jobs.map((job) => {\n            return (\n                <tr key={job.id}>\n                    <td\n                        width='30px'\n                        className='whitespace--nowrap text-center'\n                    >\n                        {this.getCancelButton(job)}\n                    </td>\n                    <td className='whitespace--nowrap'>{this.getStatus(job)}</td>\n                    {showFilesColumn &&\n                        <td className='whitespace--nowrap'>{this.getDownloadLink(job)}</td>\n                    }\n                    <td className='whitespace--nowrap'>{this.getFinishAt(job.status, job.last_activity_at)}</td>\n                    <td className='whitespace--nowrap'>{this.getRunLength(job)}</td>\n                    <td>{this.getExtraInfoText(job)}</td>\n                </tr>\n            );\n        });\n\n        return (\n            <div className='job-table__panel'>\n                <div className='job-table__create-button'>\n                    <div>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.handleCreateJob}\n                            disabled={this.props.disabled}\n                        >\n                            {this.props.createJobButtonText}\n                        </button>\n                    </div>\n                    <div className='help-text'>\n                        {this.props.createJobHelpText}\n                    </div>\n                </div>\n                <div className='job-table__table'>\n                    <table\n                        className='table'\n                        data-testid='jobTable'\n                    >\n                        <thead>\n                            <tr>\n                                <th width='30px'/>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerStatus'\n                                        defaultMessage='Status'\n                                    />\n                                </th>\n                                {showFilesColumn &&\n                                    <th>\n                                        <FormattedMessage\n                                            id='admin.jobTable.headerFiles'\n                                            defaultMessage='Files'\n                                        />\n                                    </th>\n                                }\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerFinishAt'\n                                        defaultMessage='Finish Time'\n                                    />\n                                </th>\n                                <th>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerRunTime'\n                                        defaultMessage='Run Time'\n                                    />\n                                </th>\n                                <th colSpan='3'>\n                                    <FormattedMessage\n                                        id='admin.jobTable.headerExtraInfo'\n                                        defaultMessage='Details'\n                                    />\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {items}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default injectIntl(JobTable);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getLicenseConfig} from 'mattermost-redux/actions/general';\nimport {uploadLicense, removeLicense} from 'mattermost-redux/actions/admin';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {requestTrialLicense, upgradeToE0Status, upgradeToE0, restartServer, ping} from 'actions/admin_actions';\n\nimport LicenseSettings from './license_settings.jsx';\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    return {\n        stats: state.entities.admin.analytics,\n        upgradedFromTE: config.UpgradedFromTE === 'true',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getLicenseConfig,\n            uploadLicense,\n            removeLicense,\n            upgradeToE0,\n            upgradeToE0Status,\n            restartServer,\n            ping,\n            requestTrialLicense,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LicenseSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedTime, FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {format} from 'utils/markdown';\n\nimport * as AdminActions from 'actions/admin_actions.jsx';\nimport {trackEvent} from 'actions/telemetry_actions';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nexport default class LicenseSettings extends React.PureComponent {\n    static propTypes = {\n        license: PropTypes.object.isRequired,\n        enterpriseReady: PropTypes.bool.isRequired,\n        upgradedFromTE: PropTypes.bool.isRequired,\n        stats: PropTypes.object,\n        config: PropTypes.object,\n        isDisabled: PropTypes.bool,\n        actions: PropTypes.shape({\n            getLicenseConfig: PropTypes.func.isRequired,\n            uploadLicense: PropTypes.func.isRequired,\n            removeLicense: PropTypes.func.isRequired,\n            upgradeToE0: PropTypes.func.isRequired,\n            restartServer: PropTypes.func.isRequired,\n            ping: PropTypes.func.isRequired,\n            upgradeToE0Status: PropTypes.func.isRequired,\n            requestTrialLicense: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.interval = null;\n        this.state = {\n            fileSelected: false,\n            fileName: null,\n            serverError: null,\n            gettingTrialError: null,\n            gettingTrial: false,\n            removing: false,\n            uploading: false,\n            upgradingPercentage: 0,\n            upgradeError: null,\n            restarting: false,\n            restartError: null,\n        };\n\n        this.fileInputRef = React.createRef();\n    }\n\n    componentDidMount() {\n        if (!this.props.enterpriseReady) {\n            this.reloadPercentage();\n        }\n        this.props.actions.getLicenseConfig();\n        AdminActions.getStandardAnalytics();\n    }\n\n    componentWillUnmount() {\n        if (this.interval) {\n            clearInterval(this.interval);\n        }\n    }\n\n    reloadPercentage = async () => {\n        const {percentage, error} = await this.props.actions.upgradeToE0Status();\n        if (percentage === 100 || error) {\n            if (this.interval) {\n                clearInterval(this.interval);\n                this.interval = null;\n                if (error) {\n                    trackEvent('api', 'upgrade_to_e0_failed', {error});\n                } else {\n                    trackEvent('api', 'upgrade_to_e0_success');\n                }\n            }\n        } else if (percentage > 0 && !this.interval) {\n            this.interval = setInterval(this.reloadPercentage, 2000);\n        }\n        this.setState({upgradingPercentage: percentage || 0, upgradeError: error});\n    }\n\n    handleChange = () => {\n        const element = this.fileInputRef.current;\n        if (element && element.files.length > 0) {\n            this.setState({fileSelected: true, fileName: element.files[0].name});\n        }\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const element = this.fileInputRef.current;\n        if (!element || element.files.length === 0) {\n            return;\n        }\n        const file = element.files[0];\n\n        this.setState({uploading: true});\n\n        const {error} = await this.props.actions.uploadLicense(file);\n        if (error) {\n            Utils.clearFileInput(element[0]);\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, uploading: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, uploading: false});\n    }\n\n    handleRemove = async (e) => {\n        e.preventDefault();\n\n        this.setState({removing: true});\n\n        const {error} = await this.props.actions.removeLicense();\n        if (error) {\n            this.setState({fileSelected: false, fileName: null, serverError: error.message, removing: false});\n            return;\n        }\n\n        await this.props.actions.getLicenseConfig();\n        this.setState({fileSelected: false, fileName: null, serverError: null, removing: false});\n    }\n\n    handleUpgrade = async (e) => {\n        e.preventDefault();\n        if (this.state.upgradingPercentage > 0) {\n            return;\n        }\n        try {\n            await this.props.actions.upgradeToE0();\n            this.setState({upgradingPercetage: 1});\n            await this.reloadPercentage();\n        } catch (error) {\n            trackEvent('api', 'upgrade_to_e0_failed', {error: error.message});\n            this.setState({upgradeError: error.message, upgradingPercetage: 0});\n        }\n    }\n\n    requestLicense = async (e) => {\n        e.preventDefault();\n        if (this.state.gettingTrial) {\n            return;\n        }\n        this.setState({gettingTrial: true, gettingTrialError: null});\n        const requestedUsers = Math.max(this.props.stats.TOTAL_USERS, 30);\n        const {error} = await this.props.actions.requestTrialLicense(requestedUsers, true, true, 'license');\n        if (error) {\n            this.setState({gettingTrialError: error});\n        }\n        this.setState({gettingTrial: false});\n        this.props.actions.getLicenseConfig();\n    }\n\n    checkRestarted = () => {\n        this.props.actions.ping().then(() => {\n            window.location.reload();\n        }).catch(() => {\n            setTimeout(this.checkRestarted, 1000);\n        });\n    }\n\n    handleRestart = async (e) => {\n        e.preventDefault();\n        this.setState({restarting: true});\n        try {\n            await this.props.actions.restartServer();\n        } catch (err) {\n            this.setState({restarting: false, restartError: err});\n        }\n        setTimeout(this.checkRestarted, 1000);\n    }\n\n    render() {\n        let gettingTrialError = '';\n        if (this.state.gettingTrialError) {\n            gettingTrialError = (\n                <p className='trial-error'>\n                    <FormattedMarkdownMessage\n                        id='admin.license.trial-request.error'\n                        defaultMessage='Trial license could not be retrieved. Visit [https://mattermost.com/trial/](https://mattermost.com/trial/) to request a license.'\n                    />\n                </p>\n            );\n        }\n\n        const {license, upgradedFromTE, isDisabled} = this.props;\n        const {uploading} = this.state;\n\n        let edition;\n        let licenseType;\n        let licenseContent;\n        let eelicense;\n\n        const issued = (\n            <React.Fragment>\n                <FormattedDate value={new Date(parseInt(license.IssuedAt, 10))}/>\n                {' '}\n                <FormattedTime value={new Date(parseInt(license.IssuedAt, 10))}/>\n            </React.Fragment>\n        );\n        const startsAt = <FormattedDate value={new Date(parseInt(license.StartsAt, 10))}/>;\n        const expiresAt = <FormattedDate value={new Date(parseInt(license.ExpiresAt, 10))}/>;\n\n        if (!this.props.enterpriseReady) { // Team Edition\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            edition = (\n                <div>\n                    <p>{'Mattermost Team Edition. Upgrade to Mattermost Enterprise Edition to add the ability to unlock enterprise features.'}</p>\n                    {this.state.upgradingPercentage !== 100 &&\n                        <div>\n                            <p>\n                                <button\n                                    type='button'\n                                    onClick={this.handleUpgrade}\n                                    className='btn btn-primary'\n                                >\n                                    <LoadingWrapper\n                                        loading={this.state.upgradingPercentage > 0}\n                                        text={\n                                            <FormattedMessage\n                                                id='admin.license.enterprise.upgrading'\n                                                defaultMessage='Upgrading {percentage}%'\n                                                values={{percentage: this.state.upgradingPercentage}}\n                                            />\n                                        }\n                                    >\n                                        <FormattedMessage\n                                            id='admin.license.enterprise.upgrade'\n                                            defaultMessage='Upgrade to Enterprise Edition'\n                                        />\n                                    </LoadingWrapper>\n                                </button>\n                            </p>\n                            <p className='upgrade-legal-terms'>\n                                <FormattedMarkdownMessage\n                                    id='admin.license.enterprise.upgrade.accept-terms'\n                                    defaultMessage='By clicking **Upgrade to Enterprise Edition**, I agree to the terms of the Mattermost Enterprise Edition License.'\n                                />\n                            </p>\n                            {this.state.upgradeError &&\n                                <div className='col-sm-12'>\n                                    <div className='form-group has-error'>\n                                        <label className='control-label'>\n                                            <span dangerouslySetInnerHTML={{__html: format(this.state.upgradeError)}}/>\n                                        </label>\n                                    </div>\n                                </div>}\n                        </div>}\n                    {this.state.upgradingPercentage === 100 &&\n                        <div>\n                            <p>\n                                <FormattedMarkdownMessage\n                                    id='admin.license.upgraded-restart'\n                                    defaultMessage='You have upgraded your binary to mattermost enterprise, please restart the server to start using the new binary. You can do it right here:'\n                                />\n                            </p>\n                            <p>\n                                <button\n                                    type='button'\n                                    onClick={this.handleRestart}\n                                    className='btn btn-primary'\n                                >\n                                    <LoadingWrapper\n                                        loading={this.state.restarting}\n                                        text={Utils.localizeMessage('admin.license.enterprise.restarting', 'Restarting')}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.license.enterprise.restart'\n                                            defaultMessage='Restart Server'\n                                        />\n                                    </LoadingWrapper>\n                                    {this.state.restartError &&\n                                        <div className='col-sm-12'>\n                                            <div className='form-group has-error'>\n                                                <label className='control-label'>{this.state.restartError}</label>\n                                            </div>\n                                        </div>}\n                                </button>\n                            </p>\n                        </div>}\n                </div>\n            );\n\n            licenseType = (\n                <div>\n                    <p>{'When using Mattermost Team Edition, the software is offered under a Mattermost MIT Compiled License. See MIT-COMPILED-LICENSE.md in your root install directory for details.'}</p>\n                    <p>{'When using Mattermost Enterprise Edition, the software is offered under a commercial license. See below for “Enterprise Edition License” for details.'}</p>\n                    <p>{'See NOTICE.txt for information about open source software used in the system.'}</p>\n                </div>\n            );\n\n            eelicense = this.renderEELicenseText();\n        } else if (license.IsLicensed === 'true' && !uploading) {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            const sku = license.SkuShortName ? <React.Fragment>{`Edition: Mattermost Enterprise Edition ${license.SkuShortName}`}<br/></React.Fragment> : null;\n            edition = 'Mattermost Enterprise Edition. Enterprise features on this server have been unlocked with a license key and a valid subscription.';\n            if (upgradedFromTE) {\n                eelicense = this.renderEELicenseText();\n            }\n            licenseType = (\n                <div>\n                    {!upgradedFromTE &&\n                        <p>\n                            {'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.\\n\\nYour subscription details are as follows:'}\n                        </p>}\n                    {upgradedFromTE &&\n                        <div>\n                            <p>{'When using Mattermost Enterprise Edition, the software is offered under a commercial license. See below for “Enterprise Edition License” for details.'}</p>\n                            <p>{'See NOTICE.txt for information about open source software used in the system.'}</p>\n                            <p>{'Your subscription details are as follows:'}</p>\n                        </div>}\n                    {`Name: ${license.Name}`}<br/>\n                    {`Company or organization name: ${license.Company}`}<br/>\n                    {sku}\n                    {`Number of users: ${license.Users}`}<br/>\n                    {'License issued: '}{issued}<br/>\n                    {'Start date of license: '}{startsAt}<br/>\n                    {'Expiry date of license: '}{expiresAt}<br/>\n                    <br/>\n                    {'See also '}\n                    <a\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/enterprise-edition-terms/'\n                    >{'Enterprise Edition Terms of Service'}</a>{' and '}\n                    <a\n                        data-testid='privacyPolicyLink'\n                        rel='noopener noreferrer'\n                        target='_blank'\n                        href='https://about.mattermost.com/default-privacy-policy/'\n                    >{'Privacy Policy.'}</a>\n                </div>\n            );\n            licenseContent = this.renderE10E20Content();\n        } else {\n            // Note: DO NOT LOCALISE THESE STRINGS. Legally we can not since the license is in English.\n            edition = (\n                <div>\n                    {'Mattermost Enterprise Edition. A license is required to unlock enterprise features.'}\n                    <p className='trial'>\n                        <button\n                            type='button'\n                            className='btn btn-primary'\n                            onClick={this.requestLicense}\n                            disabled={isDisabled}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.gettingTrial}\n                                text={Utils.localizeMessage('admin.license.trial-request.loading', 'Getting trial')}\n                            >\n                                <FormattedMessage\n                                    id='admin.license.trial-request.submit'\n                                    defaultMessage='Start trial'\n                                />\n                            </LoadingWrapper>\n                        </button>\n                    </p>\n                    {gettingTrialError}\n                    <p className='trial-legal-terms'>\n                        <FormattedMarkdownMessage\n                            id='admin.license.trial-request.accept-terms'\n                            defaultMessage='By clicking **Start trial**, I agree to the [Mattermost Software Evaluation Agreement](!https://mattermost.com/software-evaluation-agreement/), [Privacy Policy](!https://mattermost.com/privacy-policy/), and receiving product emails.'\n                        />\n                    </p>\n                </div>\n            );\n\n            if (upgradedFromTE) {\n                licenseType = (\n                    <div>\n                        <p>{'When using Mattermost Enterprise Edition, the software is offered under a commercial license. See below for “Enterprise Edition License” for details.'}</p>\n                        <p>{'See NOTICE.txt for information about open source software used in the system.'}</p>\n                    </div>\n                );\n                eelicense = this.renderEELicenseText();\n            } else {\n                licenseType = 'This software is offered under a commercial license.\\n\\nSee ENTERPRISE-EDITION-LICENSE.txt in your root install directory for details. See NOTICE.txt for information about open source software used in this system.';\n            }\n\n            licenseContent = this.renderE0Content();\n        }\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.license.title'\n                    defaultMessage='Edition and License'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                        >\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.edition'\n                                        defaultMessage='Edition: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {edition}\n                                </div>\n                            </div>\n                            <div className='form-group'>\n                                <label\n                                    className='control-label col-sm-4'\n                                >\n                                    <FormattedMessage\n                                        id='admin.license.type'\n                                        defaultMessage='License: '\n                                    />\n                                </label>\n                                <div className='col-sm-8'>\n                                    {licenseType}\n                                </div>\n                            </div>\n                            {licenseContent &&\n                                <div className='form-group'>\n                                    {licenseContent}\n                                </div>}\n                            {eelicense &&\n                                <div className='form-group'>\n                                    {eelicense}\n                                </div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderE10E20Content = () => {\n        let removeButtonText = (\n            <FormattedMessage\n                id='admin.license.keyRemove'\n                defaultMessage='Remove Enterprise License and Downgrade Server'\n            />\n        );\n        if (this.state.removing) {\n            removeButtonText = (\n                <FormattedMessage\n                    id='admin.license.removing'\n                    defaultMessage='Removing License...'\n                />\n            );\n        }\n\n        return (\n            <>\n                <label\n                    className='control-label col-sm-4'\n                >\n                    <FormattedMessage\n                        id='admin.license.key'\n                        defaultMessage='License Key: '\n                    />\n                </label>\n                <div className='col-sm-8'>\n                    <button\n                        type='button'\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        disabled={this.props.isDisabled}\n                        id='remove-button'\n                        data-testid='remove-button'\n                    >\n                        {removeButtonText}\n                    </button>\n                    <br/>\n                    <br/>\n                    <p className='help-text'>\n                        {'If you migrate servers you may need to remove your license key to install it elsewhere. You can remove the key here, which will revert functionality to that of Team Edition.'}\n                    </p>\n                </div>\n            </>\n        );\n    }\n\n    renderE0Content = () => {\n        let serverError = '';\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n\n        var btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.fileName) {\n            fileName = this.state.fileName;\n        } else {\n            fileName = (\n                <FormattedMessage\n                    id='admin.license.noFile'\n                    defaultMessage='No file uploaded'\n                />\n            );\n        }\n\n        let uploadButtonText = (\n            <FormattedMessage\n                id='admin.license.upload'\n                defaultMessage='Upload'\n            />\n        );\n        if (this.state.uploading) {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.license.uploading'\n                    defaultMessage='Uploading License...'\n                />\n            );\n        }\n        return (\n            <>\n                <label\n                    className='control-label col-sm-4'\n                >\n                    <FormattedMessage\n                        id='admin.license.key'\n                        defaultMessage='License Key: '\n                    />\n                </label>\n                <div className='col-sm-8'>\n                    <div className='file__upload'>\n                        <button\n                            type='button'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='admin.license.choose'\n                                defaultMessage='Choose File'\n                            />\n                        </button>\n                        <input\n                            ref={this.fileInputRef}\n                            type='file'\n                            accept='.mattermost-license'\n                            onChange={this.handleChange}\n                            disabled={this.props.isDisabled}\n                        />\n                    </div>\n                    <button\n                        className={btnClass}\n                        disabled={this.props.isDisabled || !this.state.fileSelected}\n                        onClick={this.handleSubmit}\n                        id='upload-button'\n                    >\n                        {uploadButtonText}\n                    </button>\n                    <div className='help-text m-0'>\n                        {fileName}\n                    </div>\n                    <br/>\n                    {serverError}\n                    <p className='help-text m-0'>\n                        <FormattedMarkdownMessage\n                            id='admin.license.uploadDesc'\n                            defaultMessage='Upload a license key for Mattermost Enterprise Edition to upgrade this server. [Visit us online](!http://mattermost.com) to learn more about the benefits of Enterprise Edition or to purchase a key.'\n                        />\n                    </p>\n                </div>\n            </>\n        );\n    }\n\n    renderEELicenseText = () => {\n        return (\n            <>\n                <label\n                    className='control-label col-sm-4'\n                >\n                    <FormattedMessage\n                        id='admin.license.enterprise-edition-license'\n                        defaultMessage='Enterprise Edition License:'\n                    />\n                </label>\n                <div className='col-sm-8 enterprise-license-text'>\n                    <div>\n                        <p>{'The Mattermost Enterprise Edition (EE) license (the “EE License”)'}</p>\n                        <p>{'Copyright (c) 2016-present Mattermost, Inc.'}</p>\n                        <p>{'The subscription-only features of the Mattermost Enterprise Edition software and associated documentation files (the \"Software\") may only be used if you (and any entity that you represent) (i) have agreed to, and are in compliance with, the Mattermost Subscription Terms of Service, available at https://about.mattermost.com/enterprise-edition-terms/ (the “EE Terms”), and (ii) otherwise have a valid Mattermost Enterprise Edition subscription for the correct features, number of user seats and instances of Mattermost Enterprise Edition that you are running, accessing, or using.  You may, however, utilize the free version of the Software (with several features not enabled) under this license without a license key or subscription provided that you otherwise comply with the terms and conditions of this Agreement. Subject to the foregoing, except as explicitly permitted in the EE Terms, it is forbidden to copy, merge, modify, publish, distribute, sublicense, stream, perform, display, create derivative works of and/or sell the Software in either source or executable form without written agreement from Mattermost.  Notwithstanding anything to the contrary, free versions of the Software are provided “AS-IS” without indemnification, support, or warranties of any kind, expressed or implied. You assume all risk associated with any use of free versions of the Software.'}</p>\n                        <p>{'EXCEPT AS OTHERWISE SET FORTH IN A BINDING WRITTEN AGREEMENT BETWEEN YOU AND MATTERMOST, THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.'}</p>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {updateUserRoles} from 'mattermost-redux/actions/users';\n\nimport {GlobalState} from 'types/store';\n\nimport ManageRolesModal, {Props} from './manage_roles_modal';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        userAccessTokensEnabled: state.entities.admin.config.ServiceSettings!.EnableUserAccessTokens,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Props['actions']>({\n            updateUserRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageRolesModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {General} from 'mattermost-redux/constants';\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport Avatar from 'components/widgets/users/avatar';\nimport {isSuccess} from 'types/actions';\n\nexport type Props = {\n    show: boolean;\n    user?: UserProfile;\n    userAccessTokensEnabled: boolean;\n\n    // defining custom function type instead of using React.MouseEventHandler\n    // to make the event optional\n    onModalDismissed: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    actions: { updateUserRoles: (userId: string, roles: string) => Promise<ActionResult>};\n}\n\ntype State = {\n    user?: UserProfile;\n    error: any | null;\n    hasPostAllRole: boolean;\n    hasPostAllPublicRole: boolean;\n    hasUserAccessTokenRole: boolean;\n    isSystemAdmin: boolean;\n}\n\nfunction getStateFromProps(props: Props): State {\n    const roles = props.user && props.user.roles ? props.user.roles : '';\n\n    return {\n        user: props.user,\n        error: null,\n        hasPostAllRole: UserUtils.hasPostAllRole(roles),\n        hasPostAllPublicRole: UserUtils.hasPostAllPublicRole(roles),\n        hasUserAccessTokenRole: UserUtils.hasUserAccessTokenRole(roles),\n        isSystemAdmin: UserUtils.isSystemAdmin(roles),\n    };\n}\n\nexport default class ManageRolesModal extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = getStateFromProps(props);\n    }\n\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n        if (prevState.user?.id !== nextProps.user?.id) {\n            return getStateFromProps(nextProps);\n        }\n        return null;\n    }\n\n    handleError = (error: any) => {\n        this.setState({\n            error,\n        });\n    }\n\n    handleSystemAdminChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.name === 'systemadmin') {\n            this.setState({isSystemAdmin: true});\n        } else if (e.target.name === 'systemmember') {\n            this.setState({isSystemAdmin: false});\n        }\n    };\n\n    handleUserAccessTokenChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasUserAccessTokenRole: e.target.checked,\n        });\n    };\n\n    handlePostAllChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasPostAllRole: e.target.checked,\n        });\n    };\n\n    handlePostAllPublicChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            hasPostAllPublicRole: e.target.checked,\n        });\n    };\n\n    trackRoleChanges = (roles: string, oldRoles: string) => {\n        if (UserUtils.hasUserAccessTokenRole(roles) && !UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        } else if (!UserUtils.hasUserAccessTokenRole(roles) && UserUtils.hasUserAccessTokenRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_USER_ACCESS_TOKEN_ROLE});\n        }\n\n        if (UserUtils.hasPostAllRole(roles) && !UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        } else if (!UserUtils.hasPostAllRole(roles) && UserUtils.hasPostAllRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_ROLE});\n        }\n\n        if (UserUtils.hasPostAllPublicRole(roles) && !UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'add_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        } else if (!UserUtils.hasPostAllPublicRole(roles) && UserUtils.hasPostAllPublicRole(oldRoles)) {\n            trackEvent('actions', 'remove_roles', {role: General.SYSTEM_POST_ALL_PUBLIC_ROLE});\n        }\n    }\n\n    handleSave = async () => {\n        this.setState({error: null});\n\n        let roles = General.SYSTEM_USER_ROLE;\n\n        if (this.state.isSystemAdmin) {\n            roles += ' ' + General.SYSTEM_ADMIN_ROLE;\n        } else if (this.state.hasUserAccessTokenRole) {\n            roles += ' ' + General.SYSTEM_USER_ACCESS_TOKEN_ROLE;\n            if (this.state.hasPostAllRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_ROLE;\n            } else if (this.state.hasPostAllPublicRole) {\n                roles += ' ' + General.SYSTEM_POST_ALL_PUBLIC_ROLE;\n            }\n        }\n\n        const result = await this.props.actions.updateUserRoles(this.props.user!.id, roles);\n        this.trackRoleChanges(roles, this.props.user!.roles);\n\n        if (isSuccess(result)) {\n            this.props.onModalDismissed();\n        } else {\n            this.handleError(\n                <FormattedMessage\n                    id='admin.manage_roles.saveError'\n                    defaultMessage='Unable to save roles.'\n                />,\n            );\n        }\n    }\n\n    renderContents = () => {\n        const {user} = this.props;\n\n        if (user == null) {\n            return <div/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let additionalRoles;\n        if (this.state.hasUserAccessTokenRole || this.state.isSystemAdmin || user.is_bot) {\n            additionalRoles = (\n                <div>\n                    <p>\n                        <FormattedMarkdownMessage\n                            id='admin.manage_roles.additionalRoles'\n                            defaultMessage='Select additional permissions for the account. [Read more about roles and permissions](!https://about.mattermost.com/default-permissions).'\n                        />\n                    </p>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postall'\n                                checked={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.isSystemAdmin}\n                                onChange={this.handlePostAllChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllRoleTitle'\n                                    defaultMessage='post:all'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllRole'\n                                defaultMessage='Access to post to all Mattermost channels including direct messages.'\n                            />\n                        </label>\n                    </div>\n                    <div className='checkbox'>\n                        <label>\n                            <input\n                                type='checkbox'\n                                ref='postallpublic'\n                                checked={this.state.hasPostAllPublicRole || this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                disabled={this.state.hasPostAllRole || this.state.isSystemAdmin}\n                                onChange={this.handlePostAllPublicChange}\n                            />\n                            <strong>\n                                <FormattedMessage\n                                    id='admin.manage_roles.postAllPublicRoleTitle'\n                                    defaultMessage='post:channels'\n                                />\n                            </strong>\n                            <FormattedMessage\n                                id='admin.manage_roles.postAllPublicRole'\n                                defaultMessage='Access to post to all Mattermost public channels.'\n                            />\n                        </label>\n                    </div>\n                </div>\n            );\n        }\n\n        let userAccessTokenContent;\n        if (this.props.userAccessTokensEnabled) {\n            if (user.is_bot) {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='member-row--padded member-row-lone-padding'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            } else {\n                userAccessTokenContent = (\n                    <div>\n                        <div className='checkbox'>\n                            <label>\n                                <input\n                                    type='checkbox'\n                                    ref='postall'\n                                    checked={this.state.hasUserAccessTokenRole || this.state.isSystemAdmin}\n                                    disabled={this.state.isSystemAdmin}\n                                    onChange={this.handleUserAccessTokenChange}\n                                />\n                                <FormattedMarkdownMessage\n                                    id='admin.manage_roles.allowUserAccessTokens'\n                                    defaultMessage='Allow this account to generate [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                                />\n                                <span className='d-block pt-2 pb-2 light'>\n                                    <FormattedMessage\n                                        id='admin.manage_roles.allowUserAccessTokensDesc'\n                                        defaultMessage=\"Removing this permission doesn't delete existing tokens. To delete them, go to the user's Manage Tokens menu.\"\n                                    />\n                                </span>\n                            </label>\n                        </div>\n                        <div className='member-row--padded'>\n                            {additionalRoles}\n                        </div>\n                    </div>\n                );\n            }\n        }\n\n        let email = user.email;\n        if (user.is_bot) {\n            email = '';\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        size='lg'\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                            <BotBadge\n                                show={Boolean(user.is_bot)}\n                                className='badge-admin'\n                            />\n                        </div>\n                        <div className='manage-teams__email'>\n                            {email}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div className='manage-row--inner'>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemadmin'\n                                    type='radio'\n                                    checked={this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemAdmin'\n                                    defaultMessage='System Admin'\n                                />\n                            </label>\n                        </div>\n                        <div className='radio-inline'>\n                            <label>\n                                <input\n                                    name='systemmember'\n                                    type='radio'\n                                    checked={!this.state.isSystemAdmin}\n                                    onChange={this.handleSystemAdminChange}\n                                />\n                                <FormattedMessage\n                                    id='admin.manage_roles.systemMember'\n                                    defaultMessage='Member'\n                                />\n                            </label>\n                        </div>\n                    </div>\n                    {userAccessTokenContent}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageRolesModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageRolesModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.manageRolesTitle'\n                            defaultMessage='Manage Roles'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        className='btn btn-link'\n                        onClick={this.props.onModalDismissed}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleSave}\n                    >\n                        <FormattedMessage\n                            id='admin.manage_roles.save'\n                            defaultMessage='Save'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {updateTeamMemberSchemeRoles, getTeamMembersForUser, getTeamsForUser, removeUserFromTeam} from 'mattermost-redux/actions/teams';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport ManageTeamsModal from './manage_teams_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeamMembersForUser,\n            getTeamsForUser,\n            updateTeamMemberSchemeRoles,\n            removeUserFromTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTeamsModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport default class ManageTeamsDropdown extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        teamMember: PropTypes.object.isRequired,\n        onError: PropTypes.func.isRequired,\n        onMemberChange: PropTypes.func.isRequired,\n        updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    makeTeamAdmin = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, true);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    makeMember = async () => {\n        const {error} = await this.props.updateTeamMemberSchemeRoles(this.props.teamMember.team_id, this.props.user.id, true, false);\n        if (error) {\n            this.props.onError(error.message);\n        } else {\n            this.props.onMemberChange(this.props.teamMember.team_id);\n        }\n    };\n\n    removeFromTeam = () => {\n        this.props.handleRemoveUserFromTeam(this.props.teamMember.team_id);\n    }\n\n    render() {\n        const isTeamAdmin = Utils.isAdmin(this.props.teamMember.roles) || this.props.teamMember.scheme_admin;\n        const isSysAdmin = Utils.isSystemAdmin(this.props.user.roles);\n        const isGuest = Utils.isGuest(this.props.user);\n\n        const {team} = this.props;\n        let title;\n        if (isSysAdmin) {\n            title = Utils.localizeMessage('admin.user_item.sysAdmin', 'System Admin');\n        } else if (isTeamAdmin) {\n            title = Utils.localizeMessage('admin.user_item.teamAdmin', 'Team Admin');\n        } else if (isGuest) {\n            title = Utils.localizeMessage('admin.user_item.guest', 'Guest');\n        } else {\n            title = Utils.localizeMessage('admin.user_item.teamMember', 'Team Member');\n        }\n\n        return (\n            <MenuWrapper>\n                <a>\n                    <span>{title} </span>\n                    <span className='caret'/>\n                </a>\n                <Menu\n                    openLeft={true}\n                    ariaLabel={Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member')}\n                >\n                    <Menu.ItemAction\n                        show={!isTeamAdmin && !isGuest}\n                        onClick={this.makeTeamAdmin}\n                        text={Utils.localizeMessage('admin.user_item.makeTeamAdmin', 'Make Team Admin')}\n                    />\n                    <Menu.ItemAction\n                        show={isTeamAdmin}\n                        onClick={this.makeMember}\n                        text={Utils.localizeMessage('admin.user_item.makeMember', 'Make Team Member')}\n                    />\n                    <Menu.ItemAction\n                        show={!team.group_constrained}\n                        onClick={this.removeFromTeam}\n                        text={Utils.localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport ManageTeamsDropdown from './manage_teams_dropdown.jsx';\nimport RemoveFromTeamButton from './remove_from_team_button.jsx';\n\nexport default class ManageTeamsModal extends React.PureComponent {\n    static propTypes = {\n        locale: PropTypes.string.isRequired,\n        onModalDismissed: PropTypes.func.isRequired,\n        show: PropTypes.bool.isRequired,\n        user: PropTypes.object,\n        actions: PropTypes.shape({\n            getTeamMembersForUser: PropTypes.func.isRequired,\n            getTeamsForUser: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n            teams: null,\n            teamMembers: null,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.user) {\n            this.loadTeamsAndTeamMembers();\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        const userId = this.props.user ? this.props.user.id : '';\n        const nextUserId = nextProps.user ? nextProps.user.id : '';\n\n        if (userId !== nextUserId) {\n            this.setState({\n                teams: null,\n                teamMembers: null,\n            });\n\n            if (nextProps.user) {\n                this.loadTeamsAndTeamMembers(nextProps.user);\n            }\n        }\n    }\n\n    loadTeamsAndTeamMembers = async (user = this.props.user) => {\n        this.getTeamMembers(user.id);\n        const {data} = await this.props.actions.getTeamsForUser(user.id);\n        this.setState({\n            teams: filterAndSortTeamsByDisplayName(data, this.props.locale),\n        });\n    }\n\n    handleError = (error) => {\n        this.setState({\n            error,\n        });\n    }\n\n    getTeamMembers = async (userId = this.props.user.id) => {\n        const {data} = await this.props.actions.getTeamMembersForUser(userId);\n        if (data) {\n            this.setState({\n                teamMembers: data,\n            });\n        }\n    }\n\n    handleMemberRemove = (teamId) => {\n        this.setState({\n            teams: this.state.teams.filter((team) => team.id !== teamId),\n            teamMembers: this.state.teamMembers.filter((teamMember) => teamMember.team_id !== teamId),\n        });\n    }\n\n    handleRemoveUserFromTeam = async (teamId) => {\n        const {actions, user} = this.props;\n\n        const {data, error} = await actions.removeUserFromTeam(teamId, user.id);\n        if (data) {\n            this.handleMemberRemove(teamId);\n        } else if (error) {\n            this.handleError(error.message);\n        }\n    }\n\n    handleMemberChange = () => {\n        this.getTeamMembers(this.props.user.id);\n    };\n\n    renderContents = () => {\n        const {user} = this.props;\n        const {teams, teamMembers} = this.state;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        const isSystemAdmin = Utils.isAdmin(user.roles);\n\n        let name = Utils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let teamList;\n        if (teams && teamMembers) {\n            teamList = teams.map((team) => {\n                const teamMember = teamMembers.find((member) => member.team_id === team.id);\n                if (!teamMember) {\n                    return null;\n                }\n\n                let action;\n                if (isSystemAdmin) {\n                    action = (\n                        <RemoveFromTeamButton\n                            teamId={team.id}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                } else {\n                    action = (\n                        <ManageTeamsDropdown\n                            user={user}\n                            team={team}\n                            teamMember={teamMember}\n                            onError={this.handleError}\n                            onMemberChange={this.handleMemberChange}\n                            updateTeamMemberSchemeRoles={this.props.actions.updateTeamMemberSchemeRoles}\n                            handleRemoveUserFromTeam={this.handleRemoveUserFromTeam}\n                        />\n                    );\n                }\n\n                return (\n                    <div\n                        key={team.id}\n                        className='manage-teams__team'\n                    >\n                        <div className='manage-teams__team-name'>\n                            {team.display_name}\n                        </div>\n                        <div className='manage-teams__team-actions'>\n                            {action}\n                        </div>\n                    </div>\n                );\n            });\n        } else {\n            teamList = <LoadingScreen/>;\n        }\n\n        let systemAdminIndicator = null;\n        if (isSystemAdmin) {\n            systemAdminIndicator = (\n                <div className='manage-teams__system-admin'>\n                    <FormattedMessage\n                        id='admin.user_item.sysAdmin'\n                        defaultMessage='System Admin'\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                    {systemAdminIndicator}\n                </div>\n                <div className='manage-teams__teams'>\n                    {teamList}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams modal--overflow-visible'\n                role='dialog'\n                aria-labelledby='manageTeamsModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTeamsModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.user_item.manageTeams'\n                            defaultMessage='Manage Teams'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class RemoveFromTeamButton extends React.PureComponent {\n    static propTypes = {\n        teamId: PropTypes.string.isRequired,\n        handleRemoveUserFromTeam: PropTypes.func.isRequired,\n    };\n\n    handleClick = (e) => {\n        e.preventDefault();\n        this.props.handleRemoveUserFromTeam(this.props.teamId);\n    }\n\n    render() {\n        return (\n            <button\n                type='button'\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='team_members_dropdown.leave_team'\n                    defaultMessage='Remove from Team'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {getUserAccessTokensForUser} from 'mattermost-redux/actions/users';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport ManageTokensModal, {Props} from './manage_tokens_modal';\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const userId = ownProps.user ? ownProps.user.id : '';\n\n    const userAccessTokens = state.entities.admin.userAccessTokensByUser;\n\n    return {\n        userAccessTokens: userAccessTokens === undefined ? undefined : userAccessTokens[userId],\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Props['actions']>({\n            getUserAccessTokensForUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTokensModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {Client4} from 'mattermost-redux/client';\nimport {UserAccessToken, UserProfile} from 'mattermost-redux/types/users';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\n\nimport RevokeTokenButton from 'components/admin_console/revoke_token_button';\nimport LoadingScreen from 'components/loading_screen';\nimport Avatar from 'components/widgets/users/avatar';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nexport type Props = {\n\n    /**\n     * Set to render the modal\n     */\n    show: boolean;\n\n    /**\n     * The user the roles are being managed for\n     */\n    user?: UserProfile;\n\n    /**\n     * The personal access tokens for a user, object with token ids as keys\n     */\n    userAccessTokens?: Dictionary<UserAccessToken>;\n\n    /**\n     * Function called when modal is dismissed\n     */\n    onModalDismissed: (e?: React.MouseEvent<HTMLButtonElement>) => void;\n    actions: {\n\n        /**\n         * Function to get a user's access tokens\n         */\n        getUserAccessTokensForUser: (userId: string, page: number, perPage: number) => ActionFunc;\n    };\n};\n\ntype State = {\n    error: string | null;\n}\n\nexport default class ManageTokensModal extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            error: null,\n        };\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        const userId = this.props.user ? this.props.user.id : null;\n        const prevUserId = prevProps.user ? prevProps.user.id : null;\n        if (userId && prevUserId !== userId) {\n            this.props.actions.getUserAccessTokensForUser(userId, 0, 200);\n        }\n    }\n\n    private handleError = (error: string): void => {\n        this.setState({\n            error,\n        });\n    }\n\n    private renderContents = (): JSX.Element => {\n        const {user, userAccessTokens} = this.props;\n\n        if (!user) {\n            return <LoadingScreen/>;\n        }\n\n        let name = UserUtils.getFullName(user);\n        if (name) {\n            name += ` (@${user.username})`;\n        } else {\n            name = `@${user.username}`;\n        }\n\n        let tokenList;\n        if (userAccessTokens) {\n            const userAccessTokensList = Object.values(userAccessTokens);\n\n            if (userAccessTokensList.length === 0) {\n                tokenList = (\n                    <div className='manage-row__empty'>\n                        <FormattedMessage\n                            id='admin.manage_tokens.userAccessTokensNone'\n                            defaultMessage='No personal access tokens.'\n                        />\n                    </div>\n                );\n            } else {\n                tokenList = userAccessTokensList.map((token: UserAccessToken) => {\n                    return (\n                        <div\n                            key={token.id}\n                            className='manage-teams__team'\n                        >\n                            <div className='manage-teams__team-name'>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensNameLabel'\n                                        defaultMessage='Token Description: '\n                                    />\n                                    {token.description}\n                                </div>\n                                <div className='whitespace--nowrap overflow--ellipsis'>\n                                    <FormattedMessage\n                                        id='admin.manage_tokens.userAccessTokensIdLabel'\n                                        defaultMessage='Token ID: '\n                                    />\n                                    {token.id}\n                                </div>\n                            </div>\n                            <div className='manage-teams__team-actions'>\n                                <RevokeTokenButton\n                                    tokenId={token.id}\n                                    onError={this.handleError}\n                                />\n                            </div>\n                        </div>\n                    );\n                });\n            }\n        } else {\n            tokenList = <LoadingScreen/>;\n        }\n\n        return (\n            <div>\n                <div className='manage-teams__user'>\n                    <Avatar\n                        username={user.username}\n                        url={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                        size='lg'\n                    />\n                    <div className='manage-teams__info'>\n                        <div className='manage-teams__name'>\n                            {name}\n                        </div>\n                        <div className='manage-teams__email'>\n                            {user.email}\n                        </div>\n                    </div>\n                </div>\n                <div className='pt-3'>\n                    <FormattedMarkdownMessage\n                        id='admin.manage_tokens.userAccessTokensDescription'\n                        defaultMessage='Personal access tokens function similarly to session tokens and can be used by integrations to [interact with this Mattermost server](!https://about.mattermost.com/default-api-authentication). Tokens are disabled if the user is deactivated. Learn more about [personal access tokens](!https://about.mattermost.com/default-user-access-tokens).'\n                    />\n                </div>\n                <div className='manage-teams__teams'>\n                    {tokenList}\n                </div>\n            </div>\n        );\n    }\n\n    public render = (): JSX.Element => {\n        return (\n            <Modal\n                show={this.props.show}\n                onHide={this.props.onModalDismissed}\n                dialogClassName='a11y__modal manage-teams'\n                role='dialog'\n                aria-labelledby='manageTokensModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='manageTokensModalLabel'\n                    >\n                        <FormattedMessage\n                            id='admin.manage_tokens.manageTokensTitle'\n                            defaultMessage='Manage Personal Access Tokens'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {this.renderContents()}\n                    {this.state.error}\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {getGroupStats} from 'mattermost-redux/actions/groups';\nimport {searchProfiles, getProfilesInGroup} from 'mattermost-redux/actions/users';\n\nimport {getGroupMemberCount} from 'mattermost-redux/selectors/entities/groups';\nimport {getProfilesInGroup as selectProfiles, searchProfilesInGroup} from 'mattermost-redux/selectors/entities/users';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport {GlobalState} from 'types/store';\n\nimport MemberListGroup, {Props as MemberListGroupProps} from './member_list_group';\n\ntype Props = {\n    groupID: string;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const {groupID} = ownProps;\n    const searchTerm = state.views.search.modalSearch;\n    let users;\n    if (searchTerm) {\n        users = searchProfilesInGroup(state, groupID, searchTerm);\n    } else {\n        users = selectProfiles(state, groupID);\n    }\n\n    return {\n        searchTerm,\n        users,\n        total: getGroupMemberCount(state, groupID) || 0,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, MemberListGroupProps['actions']>({\n            getProfilesInGroup,\n            searchProfiles,\n            setModalSearchTerm,\n            getGroupStats,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MemberListGroup);\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./member_list_group.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GroupStats} from 'mattermost-redux/types/groups';\n\nimport Constants from 'utils/constants';\nimport UserGridName from 'components/admin_console/user_grid/user_grid_name';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\n\nconst USERS_PER_PAGE = 10;\n\nimport './member_list_group.scss';\n\nexport type Props = {\n    searchTerm: string;\n    users: UserProfile[];\n    groupID: string;\n    total: number;\n    actions: {\n        getProfilesInGroup: (groupID: string, page: number, perPage: number) => Promise<{data: UserProfile[]}>;\n        getGroupStats: (groupID: string) => Promise<{data: GroupStats}>;\n        searchProfiles: (term: string, options?: Record<string, unknown>) => Promise<{data: UserProfile[]}>;\n        setModalSearchTerm: (term: string) => Promise<{data: boolean}>;\n    };\n}\n\ntype State = {\n    loading: boolean;\n    page: number;\n}\n\nexport default class MemberListGroup extends React.PureComponent<Props, State> {\n    private searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    async componentDidMount() {\n        const {actions, groupID} = this.props;\n        await Promise.all([\n            actions.getProfilesInGroup(groupID, 0, USERS_PER_PAGE * 2),\n            actions.getGroupStats(groupID),\n        ]);\n        this.loadComplete();\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setModalSearchTerm('');\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                this.loadComplete();\n                this.searchTimeoutId = 0;\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    const {\n                        searchProfiles,\n                    } = this.props.actions;\n\n                    this.setState({loading: true});\n\n                    await searchProfiles(searchTerm, {in_group_id: this.props.groupID});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n\n                    this.loadComplete();\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    loadComplete = () => {\n        this.setState({loading: false});\n    }\n\n    private nextPage = async () => {\n        const {actions, groupID} = this.props;\n        const page = this.state.page + 1;\n        this.setState({loading: true, page});\n        await actions.getProfilesInGroup(groupID, page, USERS_PER_PAGE * 2);\n        this.setState({loading: false});\n    }\n\n    private previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    private getRows = (): Row[] => {\n        const {users} = this.props;\n        const {startCount, endCount} = this.getPaginationProps();\n\n        let usersToDisplay = users;\n        usersToDisplay = usersToDisplay.slice(startCount - 1, endCount);\n\n        return usersToDisplay.map((user) => {\n            return {\n                cells: {\n                    id: user.id,\n                    name: (\n                        <UserGridName\n                            user={user}\n                        />\n                    ),\n                },\n            };\n        });\n    }\n\n    private getColumns = (): Column[] => {\n        return [\n            {\n                name: (\n                    <FormattedMessage\n                        id='admin.member_list_group.name'\n                        defaultMessage='Name'\n                    />\n                ),\n                field: 'name',\n            },\n        ];\n    }\n\n    private getPaginationProps = () => {\n        let {total} = this.props;\n        const {page} = this.state;\n        const startCount = (this.state.page * USERS_PER_PAGE) + 1;\n        let endCount = (page + 1) * USERS_PER_PAGE;\n\n        if (this.props.searchTerm !== '') {\n            total = this.props.users.length;\n        }\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    public render = (): JSX.Element => {\n        const rows: Row[] = this.getRows();\n        const columns: Column[] = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n\n        const placeholderEmpty: JSX.Element = (\n            <FormattedMessage\n                id='admin.member_list_group.notFound'\n                defaultMessage='No users found'\n            />\n        );\n\n        return (\n            <div className='MemberListGroup'>\n                <DataGrid\n                    columns={columns}\n                    rows={rows}\n                    loading={this.state.loading}\n                    page={this.state.page}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    startCount={startCount}\n                    endCount={endCount}\n                    total={total}\n                    onSearch={this.props.actions.setModalSearchTerm}\n                    term={this.props.searchTerm || ''}\n                    placeholderEmpty={placeholderEmpty}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport {JobTypes, exportFormats} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {getSiteURL} from 'utils/url';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport JobsTable from './jobs';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\nimport RadioSetting from './radio_setting';\n\nexport default class MessageExportSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        config.MessageExportSettings.EnableExport = this.state.enableComplianceExport;\n        config.MessageExportSettings.ExportFormat = this.state.exportFormat;\n        config.MessageExportSettings.DailyRunTime = this.state.exportJobStartTime;\n\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            config.MessageExportSettings.GlobalRelaySettings = {\n                CustomerType: this.state.globalRelayCustomerType,\n                SmtpUsername: this.state.globalRelaySmtpUsername,\n                SmtpPassword: this.state.globalRelaySmtpPassword,\n                EmailAddress: this.state.globalRelayEmailAddress,\n\n            };\n        }\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        const state = {\n            enableComplianceExport: config.MessageExportSettings.EnableExport,\n            exportFormat: config.MessageExportSettings.ExportFormat,\n            exportJobStartTime: config.MessageExportSettings.DailyRunTime,\n        };\n        if (config.MessageExportSettings.GlobalRelaySettings) {\n            state.globalRelayCustomerType = config.MessageExportSettings.GlobalRelaySettings.CustomerType;\n            state.globalRelaySmtpUsername = config.MessageExportSettings.GlobalRelaySettings.SmtpUsername;\n            state.globalRelaySmtpPassword = config.MessageExportSettings.GlobalRelaySettings.SmtpPassword;\n            state.globalRelayEmailAddress = config.MessageExportSettings.GlobalRelaySettings.EmailAddress;\n        }\n        return state;\n    }\n\n    getJobDetails = (job) => {\n        if (job.data) {\n            const message = [];\n            if (job.data.messages_exported) {\n                message.push(\n                    <FormattedMessage\n                        id='admin.complianceExport.messagesExportedCount'\n                        defaultMessage='{count} messages exported.'\n                        values={{\n                            count: job.data.messages_exported,\n                        }}\n                    />,\n                );\n            }\n            if (job.data.warning_count > 0) {\n                if (job.data.export_type === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n                    message.push(\n                        <div>\n                            <FormattedMessage\n                                id='admin.complianceExport.warningCount.globalrelay'\n                                defaultMessage='{count} warning(s) encountered, see log for details'\n                                values={{\n                                    count: job.data.warning_count,\n                                }}\n                            />\n                        </div>,\n                    );\n                } else {\n                    message.push(\n                        <div>\n                            <FormattedMessage\n                                id='admin.complianceExport.warningCount'\n                                defaultMessage='{count} warning(s) encountered, see warning.txt for details'\n                                values={{\n                                    count: job.data.warning_count,\n                                }}\n                            />\n                        </div>,\n                    );\n                }\n            }\n            return message;\n        }\n        return null;\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.complianceExport.title'\n                defaultMessage='Compliance Export (Beta)'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const exportFormatOptions = [\n            {value: exportFormats.EXPORT_FORMAT_ACTIANCE, text: Utils.localizeMessage('admin.complianceExport.exportFormat.actiance', 'Actiance XML')},\n            {value: exportFormats.EXPORT_FORMAT_CSV, text: Utils.localizeMessage('admin.complianceExport.exportFormat.csv', 'CSV')},\n            {value: exportFormats.EXPORT_FORMAT_GLOBALRELAY, text: Utils.localizeMessage('admin.complianceExport.exportFormat.globalrelay', 'GlobalRelay EML')},\n        ];\n\n        // if the export format is globalrelay, the user needs to set some additional parameters\n        let globalRelaySettings;\n        if (this.state.exportFormat === exportFormats.EXPORT_FORMAT_GLOBALRELAY) {\n            const globalRelayCustomerType = (\n                <RadioSetting\n                    id='globalRelayCustomerType'\n                    values={[\n                        {value: 'A9', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a9.description', 'A9/Type 9')},\n                        {value: 'A10', text: Utils.localizeMessage('admin.complianceExport.globalRelayCustomerType.a10.description', 'A10/Type 10')},\n                    ]}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.title'\n                            defaultMessage='Customer Type:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayCustomerType.description'\n                            defaultMessage='The type of GlobalRelay customer account that your organization has.'\n                        />\n                    }\n                    value={this.state.globalRelayCustomerType ? this.state.globalRelayCustomerType : ''}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.CustomerType')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n            );\n\n            const globalRelaySmtpUsername = (\n                <TextSetting\n                    id='globalRelaySmtpUsername'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.title'\n                            defaultMessage='SMTP Username:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpUsername.example', 'E.g.: \"globalRelayUser\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpUsername.description'\n                            defaultMessage='The username that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpUsername ? this.state.globalRelaySmtpUsername : ''}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpUsername')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n            );\n\n            const globalRelaySmtpPassword = (\n                <TextSetting\n                    id='globalRelaySmtpPassword'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.title'\n                            defaultMessage='SMTP Password:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelaySmtpPassword.example', 'E.g.: \"globalRelayPassword\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelaySmtpPassword.description'\n                            defaultMessage='The password that is used to authenticate against the GlobalRelay SMTP server.'\n                        />\n                    }\n                    value={this.state.globalRelaySmtpPassword ? this.state.globalRelaySmtpPassword : ''}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.SmtpPassword')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n            );\n\n            const globalRelayEmail = (\n                <TextSetting\n                    id='globalRelayEmailAddress'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.title'\n                            defaultMessage='Email Address:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.globalRelayEmailAddress.example', 'E.g.: \"globalrelay@mattermost.com\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.globalRelayEmailAddress.description'\n                            defaultMessage='The email address that your GlobalRelay server monitors for incoming Compliance Exports.'\n                        />\n                    }\n                    value={this.state.globalRelayEmailAddress ? this.state.globalRelayEmailAddress : ''}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.GlobalRelaySettings.EmailAddress')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n            );\n\n            globalRelaySettings = (\n                <SettingsGroup id={'globalRelaySettings'} >\n                    {globalRelayCustomerType}\n                    {globalRelaySmtpUsername}\n                    {globalRelaySmtpPassword}\n                    {globalRelayEmail}\n                </SettingsGroup>\n            );\n        }\n\n        const dropdownHelpText = (\n            <FormattedMarkdownMessage\n                id='admin.complianceExport.exportFormat.description'\n                defaultMessage='Format of the compliance export. Corresponds to the system that you want to import the data into.\\n \\nFor Actiance XML, compliance export files are written to the \\\"exports\\\" subdirectory of the configured [Local Storage Directory]({siteURL}/admin_console/environment/file_storage). For Global Relay EML, they are emailed to the configured email address.'\n                values={{siteURL: getSiteURL()}}\n            />\n        );\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='enableComplianceExport'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.complianceExportTitle'\n                            defaultMessage='Enable Compliance Export:'\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.complianceExportDesc'\n                            defaultMessage='When true, Mattermost will export all messages that were posted in the last 24 hours. The export task is scheduled to run once per day. See [the documentation](!https://about.mattermost.com/default-compliance-export-documentation) to learn more.'\n                        />\n                    }\n                    value={this.state.enableComplianceExport}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.EnableExport')}\n                    disabled={this.props.isDisabled}\n                />\n\n                <TextSetting\n                    id='exportJobStartTime'\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportJobStartTime.title'\n                            defaultMessage='Compliance Export Time:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.complianceExport.exportJobStartTime.example', 'E.g.: \"02:00\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportJobStartTime.description'\n                            defaultMessage='Set the start time of the daily scheduled compliance export job. Choose a time when fewer people are using your system. Must be a 24-hour time stamp in the form HH:MM.'\n                        />\n                    }\n                    value={this.state.exportJobStartTime}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.DailyRunTime')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n\n                <DropdownSetting\n                    id='exportFormat'\n                    values={exportFormatOptions}\n                    label={\n                        <FormattedMessage\n                            id='admin.complianceExport.exportFormat.title'\n                            defaultMessage='Export Format:'\n                        />\n                    }\n                    helpText={dropdownHelpText}\n                    value={this.state.exportFormat}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('DataRetentionSettings.ExportFormat')}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n\n                {globalRelaySettings}\n\n                <JobsTable\n                    jobType={JobTypes.MESSAGE_EXPORT}\n                    createJobButtonText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.title'\n                            defaultMessage='Run Compliance Export Job Now'\n                        />\n                    }\n                    createJobHelpText={\n                        <FormattedMessage\n                            id='admin.complianceExport.createJob.help'\n                            defaultMessage='Initiates a Compliance Export job immediately.'\n                        />\n                    }\n                    getExtraInfoText={this.getJobDetails}\n                    disabled={this.props.isDisabled || !this.state.enableComplianceExport}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactSelect from 'react-select';\n\nimport FormError from 'components/form_error';\n\nimport Setting from './setting';\n\nexport default class MultiSelectSetting extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        values: PropTypes.array.isRequired,\n        label: PropTypes.node.isRequired,\n        selected: PropTypes.array.isRequired,\n        onChange: PropTypes.func.isRequired,\n        disabled: PropTypes.bool,\n        setByEnv: PropTypes.bool.isRequired,\n        helpText: PropTypes.node,\n        noResultText: PropTypes.node,\n    };\n\n    static defaultProps = {\n        disabled: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {error: false};\n    }\n\n    handleChange = (newValue) => {\n        const values = newValue.map((n) => {\n            return n.value;\n        });\n\n        this.props.onChange(this.props.id, values);\n        this.setState({error: false});\n    }\n\n    calculateValue = () => {\n        return this.props.selected.reduce((values, item) => {\n            const found = this.props.values.find((e) => {\n                return e.value === item;\n            });\n            if (found !== null) {\n                values.push(found);\n            }\n            return values;\n        }, []);\n    };\n\n    getOptionLabel = ({text}) => text;\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                <ReactSelect\n                    id={this.props.id}\n                    isMulti={true}\n                    getOptionLabel={this.getOptionLabel}\n                    options={this.props.values}\n                    delimiter={','}\n                    clearable={false}\n                    isDisabled={this.props.disabled || this.props.setByEnv}\n                    noResultsText={this.props.noResultText}\n                    onChange={this.handleChange}\n                    value={this.calculateValue()}\n                />\n                <FormError error={this.state.error}/>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {updateConfig} from 'mattermost-redux/actions/admin';\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {AdminConfig} from 'mattermost-redux/types/config';\n\nimport OpenIdConvert from './openid_convert';\n\ntype Actions = {\n    updateConfig: (config: AdminConfig) => ActionFunc;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(OpenIdConvert);\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./openid_convert.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {AdminConfig} from 'mattermost-redux/types/config';\n\nimport {BaseProps} from 'components/admin_console/admin_settings';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {Constants} from 'utils/constants';\n\nimport FormError from 'components/form_error';\n\nimport imagePath from 'images/openid-convert/emoticon-outline.svg';\n\nimport './openid_convert.scss';\n\ntype Props = BaseProps & {\n    disabled?: boolean;\n    actions: {\n        updateConfig: (config: AdminConfig) => ActionFunc & Partial<{error?: ClientErrorPlaceholder}>;\n    };\n};\ntype State = {\n    serverError?: string;\n}\n\ntype ClientErrorPlaceholder = {\n    message: string;\n    server_error_id: string;\n}\n\nexport default class OpenIdConvert extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverError: undefined,\n        };\n    }\n\n    upgradeConfig = async (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        const newConfig = JSON.parse(JSON.stringify(this.props.config));\n\n        if (newConfig.Office365Settings.DirectoryId) {\n            newConfig.Office365Settings.DiscoveryEndpoint = 'https://login.microsoftonline.com/' + newConfig.Office365Settings.DirectoryId + '/v2.0/.well-known/openid-configuration';\n        }\n        newConfig.GoogleSettings.DiscoveryEndpoint = 'https://accounts.google.com/.well-known/openid-configuration';\n\n        if (newConfig.GitLabSettings.UserApiEndpoint) {\n            const url = newConfig.GitLabSettings.UserApiEndpoint.replace('/api/v4/user', '');\n            newConfig.GitLabSettings.DiscoveryEndpoint = url + '/.well-known/openid-configuration';\n        }\n\n        ['Office365Settings', 'GoogleSettings', 'GitLabSettings'].forEach((setting) => {\n            newConfig[setting].Scope = Constants.OPENID_SCOPES;\n            newConfig[setting].UserApiEndpoint = '';\n            newConfig[setting].AuthEndpoint = '';\n            newConfig[setting].TokenEndpoint = '';\n        });\n\n        const {error: err} = await this.props.actions.updateConfig(newConfig);\n        if (err) {\n            this.setState({serverError: err.message});\n        } else {\n            browserHistory.push('/admin_console/authentication/openid');\n        }\n    }\n\n    render() {\n        return (\n            <div className='OpenIdConvert'>\n                <div className='OpenIdConvert_imageWrapper'>\n                    <img\n                        className='OpenIdConvert_image'\n                        src={imagePath}\n                        alt='OpenId Convert Image'\n                    />\n                </div>\n\n                <div className='OpenIdConvert_copyWrapper'>\n                    <div className='OpenIdConvert__heading'>\n                        <FormattedMessage\n                            id='admin.openIdConvert.heading'\n                            defaultMessage='OAuth 2.0 is being deprecated and replace by OpenID Connect.'\n                        />\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='admin.openIdConvert.message'\n                            defaultMessage='Convert your OAuth 2.0 configuration to the new OpenID Connect standard.'\n                        />\n                    </p>\n                    <div className='OpenIdConvert_actionWrapper'>\n                        <button\n                            className='btn'\n                            data-testid='openIdConvert'\n                            disabled={this.props.disabled}\n                            onClick={this.upgradeConfig}\n                        >\n                            <FormattedMessage\n                                id='admin.openIdConvert.text'\n                                defaultMessage='Convert to OpenID Connect'\n                            />\n                        </button>\n                        <a\n                            className='btn-secondary'\n                            href='https://docs.mattermost.com/deployment/sso-gitlab.html'\n                            data-testid='openIdLearnMore'\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        >\n                            <FormattedMessage\n                                id='admin.openIdConvert.help'\n                                defaultMessage='Learn more'\n                            />\n                        </a>\n                        <div\n                            className='error-message'\n                            data-testid='errorMessage'\n                        >\n                            <FormError error={this.state.serverError}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AdminSettings from './admin_settings';\nimport Setting from './setting';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class PasswordSettings extends AdminSettings {\n    constructor(props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            passwordMinimumLength: props.config.PasswordSettings.MinimumLength,\n            passwordLowercase: props.config.PasswordSettings.Lowercase,\n            passwordNumber: props.config.PasswordSettings.Number,\n            passwordUppercase: props.config.PasswordSettings.Uppercase,\n            passwordSymbol: props.config.PasswordSettings.Symbol,\n            maximumLoginAttempts: props.config.ServiceSettings.MaximumLoginAttempts,\n        });\n\n        // Update sample message from config settings\n        t('user.settings.security.passwordErrorLowercase');\n        t('user.settings.security.passwordErrorLowercaseUppercase');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseUppercaseSymbol');\n        t('user.settings.security.passwordErrorLowercaseNumber');\n        t('user.settings.security.passwordErrorLowercaseNumberSymbol');\n        t('user.settings.security.passwordErrorLowercaseSymbol');\n        t('user.settings.security.passwordErrorUppercase');\n        t('user.settings.security.passwordErrorUppercaseNumber');\n        t('user.settings.security.passwordErrorUppercaseNumberSymbol');\n        t('user.settings.security.passwordErrorUppercaseSymbol');\n        t('user.settings.security.passwordErrorNumber');\n        t('user.settings.security.passwordErrorNumberSymbol');\n        t('user.settings.security.passwordErrorSymbol');\n\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (props.config.PasswordSettings.Lowercase) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (props.config.PasswordSettings.Uppercase) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (props.config.PasswordSettings.Number) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (props.config.PasswordSettings.Symbol) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        this.sampleErrorMsg = (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (this.state.passwordMinimumLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    getConfigFromState = (config) => {\n        config.PasswordSettings.MinimumLength = this.parseIntNonZero(this.state.passwordMinimumLength, Constants.MIN_PASSWORD_LENGTH);\n        config.PasswordSettings.Lowercase = this.state.passwordLowercase;\n        config.PasswordSettings.Uppercase = this.state.passwordUppercase;\n        config.PasswordSettings.Number = this.state.passwordNumber;\n        config.PasswordSettings.Symbol = this.state.passwordSymbol;\n\n        config.ServiceSettings.MaximumLoginAttempts = this.parseIntNonZero(this.state.maximumLoginAttempts, Constants.MAXIMUM_LOGIN_ATTEMPTS_DEFAULT);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            passwordMinimumLength: config.PasswordSettings.MinimumLength,\n            passwordLowercase: config.PasswordSettings.Lowercase,\n            passwordNumber: config.PasswordSettings.Number,\n            passwordUppercase: config.PasswordSettings.Uppercase,\n            passwordSymbol: config.PasswordSettings.Symbol,\n            maximumLoginAttempts: config.ServiceSettings.MaximumLoginAttempts,\n        };\n    }\n\n    getSampleErrorMsg = () => {\n        if (this.props.config.PasswordSettings.MinimumLength > Constants.MAX_PASSWORD_LENGTH || this.props.config.PasswordSettings.MinimumLength < Constants.MIN_PASSWORD_LENGTH) {\n            return (\n                <FormattedMessage\n                    id='user.settings.security.passwordMinLength'\n                    default='Invalid minimum length, cannot show preview.'\n                />\n            );\n        }\n        let sampleErrorMsgId = 'user.settings.security.passwordError';\n        if (this.state.passwordLowercase) {\n            sampleErrorMsgId += 'Lowercase';\n        }\n        if (this.state.passwordUppercase) {\n            sampleErrorMsgId += 'Uppercase';\n        }\n        if (this.state.passwordNumber) {\n            sampleErrorMsgId += 'Number';\n        }\n        if (this.state.passwordSymbol) {\n            sampleErrorMsgId += 'Symbol';\n        }\n        return (\n            <FormattedMessage\n                id={sampleErrorMsgId}\n                default='Your password must contain between {min} and {max} characters.'\n                values={{\n                    min: (this.state.passwordMinimumLength || Constants.MIN_PASSWORD_LENGTH),\n                    max: Constants.MAX_PASSWORD_LENGTH,\n                }}\n            />\n        );\n    }\n\n    handlePasswordLengthChange = (id, value) => {\n        this.handleChange(id, value);\n    }\n\n    handleCheckboxChange = (id) => {\n        return ({target: {checked}}) => {\n            this.handleChange(id, checked);\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.security.password'\n                defaultMessage='Password'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        return (\n            <SettingsGroup>\n                <div>\n                    <TextSetting\n                        id='passwordMinimumLength'\n                        label={\n                            <FormattedMessage\n                                id='admin.password.minimumLength'\n                                defaultMessage='Minimum Password Length:'\n                            />\n                        }\n                        placeholder={Utils.localizeMessage('admin.password.minimumLengthExample', 'E.g.: \"5\"')}\n                        helpText={\n                            <FormattedMessage\n                                id='admin.password.minimumLengthDescription'\n                                defaultMessage='Minimum number of characters required for a valid password. Must be a whole number greater than or equal to {min} and less than or equal to {max}.'\n                                values={{\n                                    min: Constants.MIN_PASSWORD_LENGTH,\n                                    max: Constants.MAX_PASSWORD_LENGTH,\n                                }}\n                            />\n                        }\n                        value={this.state.passwordMinimumLength}\n                        onChange={this.handlePasswordLengthChange}\n                        setByEnv={this.isSetByEnv('PasswordSettings.MinimumLength')}\n                        disabled={this.props.isDisabled}\n                    />\n                    <Setting\n                        label={\n                            <FormattedMessage\n                                id='passwordRequirements'\n                                defaultMessage='Password Requirements:'\n                            />\n                        }\n                    >\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref={this.lowercase}\n                                    defaultChecked={this.state.passwordLowercase}\n                                    name='admin.password.lowercase'\n                                    disabled={this.props.isDisabled}\n                                    onChange={this.handleCheckboxChange('passwordLowercase')}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.lowercase'\n                                    defaultMessage='At least one lowercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref={this.uppercase}\n                                    defaultChecked={this.state.passwordUppercase}\n                                    name='admin.password.uppercase'\n                                    disabled={this.props.isDisabled}\n                                    onChange={this.handleCheckboxChange('passwordUppercase')}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.uppercase'\n                                    defaultMessage='At least one uppercase letter'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref={this.number}\n                                    defaultChecked={this.state.passwordNumber}\n                                    name='admin.password.number'\n                                    disabled={this.props.isDisabled}\n                                    onChange={this.handleCheckboxChange('passwordNumber')}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.number'\n                                    defaultMessage='At least one number'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <label className='checkbox-inline'>\n                                <input\n                                    type='checkbox'\n                                    ref={this.symbol}\n                                    defaultChecked={this.state.passwordSymbol}\n                                    name='admin.password.symbol'\n                                    disabled={this.props.isDisabled}\n                                    onChange={this.handleCheckboxChange('passwordSymbol')}\n                                />\n                                <FormattedMessage\n                                    id='admin.password.symbol'\n                                    defaultMessage='At least one symbol (e.g. \"~!@#$%^&*()\")'\n                                />\n                            </label>\n                        </div>\n                        <div>\n                            <br/>\n                            <label>\n                                <FormattedMessage\n                                    id='admin.password.preview'\n                                    defaultMessage='Error message preview:'\n                                />\n                            </label>\n                            <br/>\n                            {this.getSampleErrorMsg()}\n                        </div>\n                    </Setting>\n                </div>\n                <TextSetting\n                    id='maximumLoginAttempts'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.attemptTitle'\n                            defaultMessage='Maximum Login Attempts:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.attemptExample', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.attemptDescription'\n                            defaultMessage='Login attempts allowed before user is locked out and required to reset password via email.'\n                        />\n                    }\n                    value={this.state.maximumLoginAttempts}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.MaximumLoginAttempts')}\n                    disabled={this.props.isDisabled}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Constants} from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nexport default class EditPostTimeLimitButton extends React.PureComponent {\n    static propTypes = {\n        timeLimit: PropTypes.number.isRequired,\n        onClick: PropTypes.func,\n        isDisabled: PropTypes.bool,\n    };\n\n    render = () => {\n        let messageID;\n        if (this.props.timeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            messageID = t('edit_post.time_limit_button.no_limit');\n        } else {\n            messageID = t('edit_post.time_limit_button.for_n_seconds');\n        }\n\n        return (\n            <button\n                type='button'\n                className='edit-post-time-limit-button'\n                onClick={this.props.onClick}\n                disabled={this.props.isDisabled}\n            >\n                <i className='fa fa-gear'/>\n                <FormattedMessage\n                    id={messageID}\n                    values={{n: this.props.timeLimit}}\n                />\n            </button>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport EditPostTimeLimitButton from './edit_post_time_limit_button';\n\nfunction mapStateToProps(state) {\n    const {PostEditTimeLimit} = getConfig(state);\n\n    return {\n        timeLimit: parseInt(PostEditTimeLimit, 10),\n    };\n}\n\nexport default connect(mapStateToProps)(EditPostTimeLimitButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport {Constants} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nconst INT32_MAX = 2147483647;\n\nexport default class EditPostTimeLimitModal extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        show: PropTypes.bool,\n        onClose: PropTypes.func.isRequired,\n        actions: PropTypes.shape({\n            updateConfig: PropTypes.func.isRequired,\n            getConfig: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            postEditTimeLimit: parseInt(props.config.ServiceSettings.PostEditTimeLimit, 10),\n            saving: false,\n            errorMessage: '',\n        };\n    }\n\n    componentDidMount() {\n        this.props.actions.getConfig();\n    }\n\n    save = async () => {\n        this.setState({saving: true, errorMessage: ''});\n\n        const val = parseInt(this.state.postEditTimeLimit, 10);\n        if (val !== Constants.UNSET_POST_EDIT_TIME_LIMIT) {\n            if (val.toString() === 'NaN' || val <= 0 || val > INT32_MAX) {\n                this.setState({errorMessage: localizeMessage('edit_post.time_limit_modal.invalid_time_limit', 'Invalid time limit'), saving: false});\n                return false;\n            }\n        }\n\n        const newConfig = JSON.parse(JSON.stringify(this.props.config));\n        newConfig.ServiceSettings.PostEditTimeLimit = val;\n\n        const {error: err} = await this.props.actions.updateConfig(newConfig);\n        if (err) {\n            this.setState({errorMessage: err, saving: false});\n        } else {\n            this.setState({saving: false});\n            this.props.onClose();\n        }\n\n        return true;\n    }\n\n    handleOptionChange = (e) => {\n        const {value} = e.target;\n        if (value === Constants.ALLOW_EDIT_POST_ALWAYS) {\n            this.setState({postEditTimeLimit: Constants.UNSET_POST_EDIT_TIME_LIMIT});\n        } else {\n            this.setState({postEditTimeLimit: ''});\n        }\n    }\n\n    handleSecondsChange = (e) => {\n        const {value} = e.target;\n        this.setState({postEditTimeLimit: value});\n    }\n\n    render = () => {\n        return (\n            <Modal\n                dialogClassName='a11y__modal admin-modal edit-post-time-limit-modal'\n                show={this.props.show}\n                role='dialog'\n                aria-labelledby='editPostTimeModalLabel'\n            >\n                <Modal.Header\n                    closeButton={true}\n                >\n                    <Modal.Title\n                        componentClass='h1'\n                        id='editPostTimeModalLabel'\n                    >\n                        <FormattedMessage\n                            id='edit_post.time_limit_modal.title'\n                            defaultMessage='Configure Global Edit Post Time Limit'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormattedMarkdownMessage\n                        id='edit_post.time_limit_modal.description'\n                        defaultMessage='Setting a time limit **applies to all users** who have the \"Edit Post\" permissions in any permission scheme.'\n                    />\n                    <div className='pl-3 pb-3 pt-3'>\n                        <div className='pt-3'>\n                            <input\n                                id='anytime'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_ALWAYS}\n                                checked={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='anytime'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_anytime'\n                                    defaultMessage='Anytime'\n                                />\n                            </label>\n                        </div>\n                        <div className='pt-2'>\n                            <input\n                                id='timelimit'\n                                type='radio'\n                                name='limit'\n                                value={Constants.ALLOW_EDIT_POST_TIME_LIMIT}\n                                checked={this.state.postEditTimeLimit !== Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleOptionChange}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.preinput'\n                                    defaultMessage='Can edit for'\n                                />\n                            </label>\n                            <input\n                                type='number'\n                                className='form-control inline'\n                                min='0'\n                                step='1'\n                                max={INT32_MAX}\n                                id='editPostTimeLimit'\n                                readOnly={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT}\n                                onChange={this.handleSecondsChange}\n                                value={this.state.postEditTimeLimit === Constants.UNSET_POST_EDIT_TIME_LIMIT ? '' : this.state.postEditTimeLimit}\n                            />\n                            <label htmlFor='timelimit'>\n                                <FormattedMessage\n                                    id='edit_post.time_limit_modal.option_label_time_limit.postinput'\n                                    defaultMessage='seconds after posting'\n                                />\n                            </label>\n                        </div>\n                        <div className='pt-3 light'>\n                            <FormattedMessage\n                                id='edit_post.time_limit_modal.subscript'\n                                defaultMessage='Set the length of time users have to edit their messages after posting.'\n                            />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <div className='edit-post-time-limit-modal__error'>\n                        {this.state.errorMessage}\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-cancel'\n                        onClick={this.props.onClose}\n                    >\n                        <FormattedMessage\n                            id='confirm_modal.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </button>\n                    <button\n                        id='linkModalCloseButton'\n                        type='button'\n                        className='btn btn-default'\n                        onClick={this.save}\n                        disabled={this.state.saving}\n                    >\n                        <FormattedMessage\n                            id={this.state.saving ? t('save_button.saving') : t('edit_post.time_limit_modal.save_button')}\n                            defaultMessage='Save Edit Time'\n                        />\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getConfig, updateConfig} from 'mattermost-redux/actions/admin';\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport EditPostTimeLimitModal from './edit_post_time_limit_modal';\n\nfunction mapStateToProps(state) {\n    return {\n        config: Selectors.getConfig(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            updateConfig,\n            getConfig,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditPostTimeLimitModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class GuestPermissionsTree extends React.PureComponent {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n        license: PropTypes.object,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            guest_edit_post: {\n                editTimeLimitButton: (\n                    <EditPostTimeLimitButton\n                        onClick={this.openPostTimeLimitModal}\n                        isDisabled={this.props.readOnly}\n                    />\n                ),\n            },\n        };\n\n        this.permissions = [\n            Permissions.CREATE_PRIVATE_CHANNEL,\n            Permissions.EDIT_POST,\n            Permissions.DELETE_POST,\n            {\n                id: 'guest_reactions',\n                combined: true,\n                permissions: [\n                    Permissions.ADD_REACTION,\n                    Permissions.REMOVE_REACTION,\n                ],\n            },\n            Permissions.USE_CHANNEL_MENTIONS,\n        ];\n\n        if (props.license && props.license.IsLicensed === 'true' && props.license.LDAPGroups === 'true') {\n            this.permissions.push(Permissions.USE_GROUP_MENTIONS);\n        }\n        this.permissions.push(Permissions.CREATE_POST);\n        this.permissions = this.permissions.map((permission) => {\n            if (typeof (permission) === 'string') {\n                return {\n                    id: `guest_${permission}`,\n                    combined: true,\n                    permissions: [\n                        permission,\n                    ],\n                };\n            }\n            return permission;\n        });\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree guest'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.permissions}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport GuestPermissionsTree from './guest_permissions_tree.jsx';\n\nexport const GUEST_INCLUDED_PERMISSIONS = [\n    Permissions.CREATE_PRIVATE_CHANNEL,\n    Permissions.EDIT_POST,\n    Permissions.DELETE_POST,\n    Permissions.ADD_REACTION,\n    Permissions.REMOVE_REACTION,\n    Permissions.USE_CHANNEL_MENTIONS,\n    Permissions.USE_GROUP_MENTIONS,\n    Permissions.CREATE_POST,\n];\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const license = getLicense(state);\n\n    return {\n        config,\n        license,\n    };\n}\n\nexport default connect(mapStateToProps)(GuestPermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getSchemeTeams as loadSchemeTeams, getSchemes as loadSchemes} from 'mattermost-redux/actions/schemes';\nimport {getSchemes} from 'mattermost-redux/selectors/entities/schemes';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport PermissionSchemesSettings from './permission_schemes_settings.jsx';\n\nfunction mapStateToProps(state) {\n    const schemes = getSchemes(state);\n    const config = getConfig(state);\n\n    return {\n        schemes,\n        jobsAreEnabled: config.RunJobs === 'true',\n        clusterIsEnabled: config.EnableCluster === 'true',\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadSchemes,\n            loadSchemeTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSchemesSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\nimport CheckboxPartialIcon from 'components/widgets/icons/checkbox_partial_icon.jsx';\n\nexport default class PermissionCheckbox extends React.PureComponent {\n    static propTypes = {\n        value: PropTypes.string.isRequired,\n        id: PropTypes.string,\n    };\n\n    static defaultProps = {\n        value: '',\n        id: '',\n    }\n\n    render() {\n        const {value, id} = this.props;\n        let icon = null;\n        let extraClass = '';\n        if (value === 'checked') {\n            icon = (<CheckboxCheckedIcon/>);\n            extraClass = 'checked';\n        } else if (value === 'intermediate') {\n            icon = (<CheckboxPartialIcon/>);\n            extraClass = 'intermediate';\n        }\n        return (\n            <div\n                className={'permission-check ' + extraClass}\n                data-testid={id}\n            >\n                {icon}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage, injectIntl} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport {generateId} from 'utils/utils.jsx';\nimport {intlShape} from 'utils/react_intl';\nimport Constants from 'utils/constants';\n\nexport class PermissionDescription extends React.PureComponent {\n    static propTypes = {\n        intl: intlShape.isRequired,\n        id: PropTypes.string.isRequired,\n        rowType: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        selectRow: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.id = generateId();\n\n        this.state = {\n            open: false,\n        };\n\n        this.contentRef = React.createRef();\n    }\n\n    closeTooltip = () => {\n        this.setState({open: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('span');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({open: isElipsis});\n    }\n\n    parentPermissionClicked = (e) => {\n        const isInheritLink = e.target.parentElement.parentElement.className === 'inherit-link-wrapper';\n        if (e.target.parentElement.className !== 'permission-description' && !isInheritLink) {\n            e.stopPropagation();\n        } else if (isInheritLink) {\n            this.props.selectRow(this.props.id);\n            e.stopPropagation();\n        }\n    }\n\n    render() {\n        const {inherited, id, rowType} = this.props;\n\n        let content = '';\n        if (inherited) {\n            content = (\n                <span className='inherit-link-wrapper'>\n                    <FormattedMarkdownMessage\n                        id='admin.permissions.inherited_from'\n                        values={{\n                            name: this.props.intl.formatMessage({\n                                id: 'admin.permissions.roles.' + inherited.name + '.name',\n                                defaultMessage: inherited.display_name,\n                            }),\n                        }}\n                    />\n                </span>\n            );\n        } else {\n            content = (\n                <FormattedMessage\n                    id={'admin.permissions.' + rowType + '.' + id + '.description'}\n                    values={this.props.additionalValues}\n                />\n            );\n        }\n        let tooltip = (\n            <Overlay\n                show={this.state.open}\n                delayShow={Constants.OVERLAY_TIME_DELAY}\n                placement='top'\n                target={this.contentRef.current}\n            >\n                <Tooltip id={this.id}>\n                    {content}\n                </Tooltip>\n            </Overlay>\n        );\n        if (content.props.values && Object.keys(content.props.values).length > 0) {\n            tooltip = null;\n        }\n        content = (\n            <span\n                className='permission-description'\n                onClick={this.parentPermissionClicked}\n                ref={this.contentRef}\n                onMouseOver={this.openTooltip}\n                onMouseOut={this.closeTooltip}\n            >\n                {content}\n                {tooltip}\n            </span>\n        );\n\n        return content;\n    }\n}\n\nexport default injectIntl(PermissionDescription);\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {PermissionsScope} from 'utils/constants';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionRow from './permission_row.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nconst getRecursivePermissions = (permissions) => {\n    let result = [];\n    for (const permission of permissions) {\n        if (typeof permission === 'string') {\n            result.push(permission);\n        } else {\n            result = result.concat(getRecursivePermissions(permission.permissions));\n        }\n    }\n    return result;\n};\n\nexport default class PermissionGroup extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        permissions: PropTypes.array.isRequired,\n        readOnly: PropTypes.bool,\n        role: PropTypes.object,\n        parentRole: PropTypes.object,\n        scope: PropTypes.string.isRequired,\n        combined: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        root: PropTypes.bool,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            prevPermissions: [],\n            selected: props.selected,\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.selected !== state.selected) {\n            if (getRecursivePermissions(props.permissions).indexOf(props.selected) !== -1) {\n                return {expanded: true, selected: props.selected};\n            }\n            return {selected: props.selected};\n        }\n        return null;\n    }\n\n    toggleExpanded = (e) => {\n        e.stopPropagation();\n        this.setState({expanded: !this.state.expanded});\n    }\n\n    toggleSelectRow = (id) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange([id]);\n    }\n\n    toggleSelectSubGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(ids);\n    }\n\n    toggleSelectGroup = () => {\n        const {readOnly, permissions, role, onChange} = this.props;\n        if (readOnly) {\n            return;\n        }\n        if (this.getStatus(permissions) === 'checked') {\n            const permissionsToToggle = [];\n            for (const permission of getRecursivePermissions(permissions)) {\n                if (!this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({expanded: true});\n            onChange(permissionsToToggle);\n        } else if (this.getStatus(permissions) === '') {\n            const permissionsToToggle = [];\n            let expanded = true;\n            if (this.state.prevPermissions.length === 0) {\n                for (const permission of getRecursivePermissions(permissions)) {\n                    if (!this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                        expanded = false;\n                    }\n                }\n            } else {\n                for (const permission of getRecursivePermissions(permissions)) {\n                    if (this.state.prevPermissions.indexOf(permission) !== -1 && !this.fromParent(permission)) {\n                        permissionsToToggle.push(permission);\n                    }\n                }\n            }\n            onChange(permissionsToToggle);\n            this.setState({prevPermissions: [], expanded});\n        } else {\n            const permissionsToToggle = [];\n            for (const permission of getRecursivePermissions(permissions)) {\n                if (role.permissions.indexOf(permission) === -1 && !this.fromParent(permission)) {\n                    permissionsToToggle.push(permission);\n                }\n            }\n            this.setState({prevPermissions: role.permissions, expanded: false});\n            onChange(permissionsToToggle);\n        }\n    }\n\n    isInScope = (permission) => {\n        if (this.props.scope === 'channel_scope' && PermissionsScope[permission] !== 'channel_scope') {\n            return false;\n        }\n        if (this.props.scope === 'team_scope' && PermissionsScope[permission] === 'system_scope') {\n            return false;\n        }\n        return true;\n    }\n\n    renderPermission = (permission, additionalValues) => {\n        if (!this.isInScope(permission)) {\n            return null;\n        }\n        const comesFromParent = this.fromParent(permission);\n        const active = comesFromParent || this.props.role.permissions.indexOf(permission) !== -1;\n        return (\n            <PermissionRow\n                key={permission}\n                id={permission}\n                uniqId={this.props.uniqId + '-' + permission}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly || comesFromParent}\n                inherited={comesFromParent ? this.props.parentRole : null}\n                value={active ? 'checked' : ''}\n                onChange={this.toggleSelectRow}\n                additionalValues={additionalValues}\n            />\n        );\n    }\n\n    renderGroup = (g) => {\n        return (\n            <PermissionGroup\n                key={g.id}\n                id={g.id}\n                uniqId={this.props.uniqId + '-' + g.id}\n                selected={this.props.selected}\n                selectRow={this.props.selectRow}\n                readOnly={this.props.readOnly}\n                permissions={g.permissions}\n                additionalValues={this.props.additionalValues}\n                role={this.props.role}\n                parentRole={this.props.parentRole}\n                scope={this.props.scope}\n                onChange={this.toggleSelectSubGroup}\n                combined={g.combined}\n                root={false}\n            />\n        );\n    }\n\n    fromParent = (id) => {\n        return this.props.parentRole && this.props.parentRole.permissions.indexOf(id) !== -1;\n    }\n\n    getStatus = (permissions) => {\n        let anyChecked = false;\n        let anyUnchecked = false;\n        for (const permission of permissions) {\n            if (typeof permission === 'string') {\n                if (!this.isInScope(permission)) {\n                    continue;\n                }\n                anyChecked = anyChecked || this.fromParent(permission) || this.props.role.permissions.indexOf(permission) !== -1;\n                anyUnchecked = anyUnchecked || (!this.fromParent(permission) && this.props.role.permissions.indexOf(permission) === -1);\n            } else {\n                const status = this.getStatus(permission.permissions);\n                if (status === 'intermediate') {\n                    return 'intermediate';\n                }\n                if (status === 'checked') {\n                    anyChecked = true;\n                }\n                if (status === '') {\n                    anyUnchecked = true;\n                }\n            }\n        }\n        if (anyChecked && anyUnchecked) {\n            return 'intermediate';\n        }\n        if (anyChecked && !anyUnchecked) {\n            return 'checked';\n        }\n        return '';\n    }\n\n    hasPermissionsOnScope = () => {\n        return getRecursivePermissions(this.props.permissions).some((permission) => this.isInScope(permission));\n    }\n\n    allPermissionsFromParent = (permissions) => {\n        for (const permission of permissions) {\n            if (typeof permission !== 'string') {\n                if (!this.allPermissionsFromParent(permission.permissions)) {\n                    return false;\n                }\n                continue;\n            }\n            if (this.isInScope(permission) && !this.fromParent(permission)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    render = () => {\n        const {id, uniqId, permissions, readOnly, combined, root, selected, additionalValues} = this.props;\n        if (!this.hasPermissionsOnScope()) {\n            return null;\n        }\n        const permissionsRows = permissions.map((group) => {\n            if (typeof group === 'string') {\n                const addVals = additionalValues && additionalValues[group] ? additionalValues[group] : {};\n                return this.renderPermission(group, addVals);\n            }\n            return this.renderGroup(group);\n        });\n        if (root) {\n            return (\n                <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                    {permissionsRows}\n                </div>\n            );\n        }\n\n        let inherited = null;\n        if (this.allPermissionsFromParent(this.props.permissions) && this.props.combined) {\n            inherited = this.props.parentRole;\n        }\n\n        let classes = '';\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        if (readOnly || this.allPermissionsFromParent(this.props.permissions)) {\n            classes += ' read-only';\n        }\n\n        if (combined) {\n            classes += ' combined';\n        }\n\n        return (\n            <div className='permission-group'>\n                {!root &&\n                    <div\n                        className={'permission-group-row ' + classes}\n                        onClick={this.toggleSelectGroup}\n                        id={uniqId}\n                    >\n                        {!combined &&\n                            <div\n                                className={'fa fa-caret-right permission-arrow ' + (this.state.expanded ? 'open' : '')}\n                                onClick={this.toggleExpanded}\n                            />}\n                        <PermissionCheckbox\n                            value={this.getStatus(this.props.permissions)}\n                            id={`${uniqId}-checkbox`}\n                        />\n                        <span className='permission-name'>\n                            <FormattedMessage id={'admin.permissions.group.' + id + '.name'}/>\n                        </span>\n                        <PermissionDescription\n                            additionalValues={additionalValues?.[id] ? additionalValues[id] : {}}\n                            inherited={inherited}\n                            id={id}\n                            selectRow={this.props.selectRow}\n                            rowType='group'\n                        />\n                    </div>}\n                {!combined &&\n                    <div className={'permission-group-permissions ' + (this.state.expanded ? 'open' : '')}>\n                        {permissionsRows}\n                    </div>}\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport PermissionCheckbox from './permission_checkbox.jsx';\nimport PermissionDescription from './permission_description.jsx';\n\nexport default class PermissionRow extends React.PureComponent {\n    static propTypes = {\n        id: PropTypes.string.isRequired,\n        uniqId: PropTypes.string.isRequired,\n        inherited: PropTypes.object,\n        readOnly: PropTypes.bool,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired,\n        additionalValues: PropTypes.object,\n    };\n\n    toggleSelect = () => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onChange(this.props.id);\n    }\n\n    render = () => {\n        const {id, uniqId, inherited, value, readOnly, selected, additionalValues} = this.props;\n        let classes = 'permission-row';\n        if (readOnly) {\n            classes += ' read-only';\n        }\n\n        if (selected === id) {\n            classes += ' selected';\n        }\n\n        return (\n            <div\n                className={classes}\n                onClick={this.toggleSelect}\n                id={uniqId}\n            >\n                <PermissionCheckbox\n                    value={value}\n                    id={`${uniqId}-checkbox`}\n                />\n                <span className='permission-name'>\n                    <FormattedMessage\n                        id={'admin.permissions.permission.' + id + '.name'}\n                    />\n                </span>\n                <PermissionDescription\n                    inherited={inherited}\n                    id={id}\n                    selectRow={this.props.selectRow}\n                    rowType='permission'\n                    additionalValues={additionalValues}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport * as Utils from 'utils/utils';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport LoadingScreen from 'components/loading_screen';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport AdminPanelWithLink from 'components/widgets/admin_console/admin_panel_with_link';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary';\n\nconst PAGE_SIZE = 30;\nconst PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE = 501;\n\nexport default class PermissionSchemesSettings extends React.PureComponent {\n    static propTypes = {\n        schemes: PropTypes.object.isRequired,\n        jobsAreEnabled: PropTypes.bool,\n        clusterIsEnabled: PropTypes.bool,\n        license: PropTypes.shape({\n            CustomPermissionsSchemes: PropTypes.string,\n        }),\n        actions: PropTypes.shape({\n            loadSchemes: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n        }),\n        isDisabled: PropTypes.bool,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            loadingMore: false,\n            page: 0,\n            phase2MigrationIsComplete: false,\n        };\n    }\n\n    static defaultProps = {\n        schemes: {},\n    };\n\n    componentDidMount() {\n        let phase2MigrationIsComplete = true; // Assume migration is complete unless HTTP status code says otherwise.\n        this.props.actions.loadSchemes('team', 0, PAGE_SIZE).then((schemes) => {\n            if (schemes.error.status_code === PHASE_2_MIGRATION_IMCOMPLETE_STATUS_CODE) {\n                phase2MigrationIsComplete = false;\n            }\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loading: false, phase2MigrationIsComplete}));\n        }).catch(() => {\n            this.setState({loading: false, phase2MigrationIsComplete});\n        });\n    }\n\n    loadMoreSchemes = () => {\n        this.setState({loadingMore: true});\n        this.props.actions.loadSchemes('team', this.state.page + 1, PAGE_SIZE).then((schemes) => {\n            const promises = [];\n            for (const scheme of schemes.data) {\n                promises.push(this.props.actions.loadSchemeTeams(scheme.id));\n            }\n            Promise.all(promises).then(() => this.setState({loadingMore: false, page: this.state.page + 1}));\n        });\n    }\n\n    // |RunJobs && !EnableCluster|(*App).IsPhase2MigrationCompleted|View                                                   |\n    // |-------------------------|---------------------------------|-------------------------------------------------------|\n    // |true                     |true                             |null                                                   |\n    // |false                    |true                             |null (Jobs were disabled after a successful migration.)|\n    // |false                    |false                            |On hold view.                                          |\n    // |true                     |false                            |In progress view.                                      |\n    teamOverrideSchemesMigrationView = () => {\n        if (this.state.phase2MigrationIsComplete) {\n            return null;\n        }\n\n        const docLink = (\n            <a\n                href='https://docs.mattermost.com/administration/config-settings.html#jobs'\n                rel='noopener noreferrer'\n                target='_blank'\n            >\n                <FormattedMessage\n                    id='admin.permissions.documentationLinkText'\n                    defaultMessage='documentation'\n                />\n            </a>\n        );\n\n        if (this.props.jobsAreEnabled && !this.props.clusterIsEnabled) {\n            return this.teamOverrideUnavalableView(\n                t('admin.permissions.teamOverrideSchemesInProgress'),\n                'Migration job in progress: Team Override Schemes are not available until the job server completes the permissions migration. Learn more in the {documentationLink}.',\n                docLink,\n            );\n        }\n\n        return this.teamOverrideUnavalableView(\n            t('admin.permissions.teamOverrideSchemesNoJobsEnabled'),\n            'Migration job on hold: Team Override Schemes are not available until the job server can execute the permissions migration. The job will be automatically started when the job server is enabled. Learn more in the {documentationLink}.',\n            docLink,\n        );\n    }\n\n    teamOverrideUnavalableView = (id, defaultMsg, documentationLink) => {\n        return (\n            <div className='team-override-unavailable'>\n                <div className='team-override-unavailable__inner'>\n                    <FormattedMessage\n                        id={id}\n                        defaultMessage={defaultMsg}\n                        values={{documentationLink}}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    renderTeamOverrideSchemes = () => {\n        const schemes = Object.values(this.props.schemes).map((scheme) => (\n            <PermissionsSchemeSummary\n                scheme={scheme}\n                history={this.props.history}\n                key={scheme.id}\n                isDisabled={this.props.isDisabled}\n            />\n        ));\n        const hasCustomSchemes = this.props.license.CustomPermissionsSchemes === 'true';\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        if (hasCustomSchemes) {\n            return (\n                <AdminPanelWithLink\n                    id='team-override-schemes'\n                    className='permissions-block'\n                    titleId={t('admin.permissions.teamOverrideSchemesTitle')}\n                    titleDefault='Team Override Schemes'\n                    subtitleId={t('admin.permissions.teamOverrideSchemesBannerText')}\n                    subtitleDefault='Use when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                    url='/admin_console/user_management/permissions/team_override_scheme'\n                    disabled={(teamOverrideView !== null) || this.props.isDisabled}\n                    linkTextId={t('admin.permissions.teamOverrideSchemesNewButton')}\n                    linkTextDefault='New Team Override Scheme'\n                >\n                    {schemes.length === 0 && teamOverrideView === null &&\n                        <div className='no-team-schemes'>\n                            <FormattedMessage\n                                id='admin.permissions.teamOverrideSchemesNoSchemes'\n                                defaultMessage='No team override schemes created.'\n                            />\n                        </div>}\n                    {teamOverrideView}\n                    {schemes.length > 0 && schemes}\n                    {schemes.length === (PAGE_SIZE * (this.state.page + 1)) &&\n                        <button\n                            type='button'\n                            className='more-schemes theme style--none color--link'\n                            onClick={this.loadMoreSchemes}\n                            disabled={this.props.isDisabled || this.state.loadingMore}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.loadingMore}\n                                text={Utils.localizeMessage('admin.permissions.loadingMoreSchemes', 'Loading...')}\n                            >\n                                <FormattedMessage\n                                    id='admin.permissions.loadMoreSchemes'\n                                    defaultMessage='Load more schemes'\n                                />\n                            </LoadingWrapper>\n                        </button>}\n                </AdminPanelWithLink>\n            );\n        }\n        return false;\n    }\n\n    render = () => {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        const teamOverrideView = this.teamOverrideSchemesMigrationView();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.permissions.permissionSchemes'\n                    defaultMessage='Permission Schemes'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='banner info'>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.introBanner'\n                                        defaultMessage='Permission Schemes set the default permissions for Team Admins, Channel Admins and everyone else. Learn more about permission schemes in our [documentation](!https://about.mattermost.com/default-advanced-permissions).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanelWithLink\n                            id='systemScheme'\n                            titleId={t('admin.permissions.systemSchemeBannerTitle')}\n                            titleDefault='System Scheme'\n                            subtitleId={t('admin.permissions.systemSchemeBannerText')}\n                            subtitleDefault='Set the default permissions inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied.'\n                            url='/admin_console/user_management/permissions/system_scheme'\n                            disabled={teamOverrideView !== null}\n                            linkTextId={t('admin.permissions.systemSchemeBannerButton')}\n                            linkTextDefault='Edit Scheme'\n                        />\n\n                        {this.renderTeamOverrideSchemes()}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nt('admin.permissions.group.delete_posts.description');\nt('admin.permissions.group.delete_posts.name');\nt('admin.permissions.group.integrations.description');\nt('admin.permissions.group.integrations.name');\nt('admin.permissions.group.posts.description');\nt('admin.permissions.group.posts.name');\nt('admin.permissions.group.private_channel.description');\nt('admin.permissions.group.private_channel.name');\nt('admin.permissions.group.public_channel.description');\nt('admin.permissions.group.public_channel.name');\nt('admin.permissions.group.reactions.description');\nt('admin.permissions.group.reactions.name');\nt('admin.permissions.group.send_invites.description');\nt('admin.permissions.group.send_invites.name');\nt('admin.permissions.group.teams.description');\nt('admin.permissions.group.teams.name');\nt('admin.permissions.group.edit_posts.description');\nt('admin.permissions.group.edit_posts.name');\nt('admin.permissions.group.teams_team_scope.description');\nt('admin.permissions.group.teams_team_scope.name');\nt('admin.permissions.permission.assign_system_admin_role.description');\nt('admin.permissions.permission.assign_system_admin_role.name');\nt('admin.permissions.permission.convert_public_channel_to_private.description');\nt('admin.permissions.permission.convert_public_channel_to_private.name');\nt('admin.permissions.permission.convert_private_channel_to_public.description');\nt('admin.permissions.permission.convert_private_channel_to_public.name');\nt('admin.permissions.permission.create_direct_channel.description');\nt('admin.permissions.permission.create_direct_channel.name');\nt('admin.permissions.permission.create_group_channel.description');\nt('admin.permissions.permission.create_group_channel.name');\nt('admin.permissions.permission.create_post.description');\nt('admin.permissions.permission.create_post.name');\nt('admin.permissions.permission.create_private_channel.description');\nt('admin.permissions.permission.create_private_channel.name');\nt('admin.permissions.permission.create_public_channel.description');\nt('admin.permissions.permission.create_public_channel.name');\nt('admin.permissions.permission.create_team.description');\nt('admin.permissions.permission.create_team.name');\nt('admin.permissions.permission.create_user_access_token.description');\nt('admin.permissions.permission.create_user_access_token.name');\nt('admin.permissions.permission.delete_others_posts.description');\nt('admin.permissions.permission.delete_others_posts.name');\nt('admin.permissions.permission.delete_post.description');\nt('admin.permissions.permission.delete_post.name');\nt('admin.permissions.permission.delete_private_channel.description');\nt('admin.permissions.permission.delete_private_channel.name');\nt('admin.permissions.permission.delete_public_channel.description');\nt('admin.permissions.permission.delete_public_channel.name');\nt('admin.permissions.permission.edit_other_users.description');\nt('admin.permissions.permission.edit_other_users.name');\nt('admin.permissions.permission.edit_post.description');\nt('admin.permissions.group.guest_reactions.description');\nt('admin.permissions.group.guest_reactions.name');\nt('admin.permissions.group.guest_create_post.description');\nt('admin.permissions.group.guest_create_post.name');\nt('admin.permissions.group.guest_create_private_channel.description');\nt('admin.permissions.group.guest_create_private_channel.name');\nt('admin.permissions.group.guest_delete_post.description');\nt('admin.permissions.group.guest_delete_post.name');\nt('admin.permissions.group.guest_edit_post.description');\nt('admin.permissions.group.guest_edit_post.name');\nt('admin.permissions.group.guest_use_channel_mentions.description');\nt('admin.permissions.group.guest_use_channel_mentions.name');\nt('admin.permissions.group.guest_use_group_mentions.description');\nt('admin.permissions.group.guest_use_group_mentions.name');\nt('admin.permissions.permission.edit_post.name');\nt('admin.permissions.permission.import_team.description');\nt('admin.permissions.permission.import_team.name');\nt('admin.permissions.permission.list_team_channels.description');\nt('admin.permissions.permission.list_team_channels.name');\nt('admin.permissions.permission.list_users_without_team.description');\nt('admin.permissions.permission.list_users_without_team.name');\nt('admin.permissions.permission.manage_channel_roles.description');\nt('admin.permissions.permission.manage_channel_roles.name');\nt('admin.permissions.permission.create_emojis.description');\nt('admin.permissions.permission.create_emojis.name');\nt('admin.permissions.permission.delete_emojis.description');\nt('admin.permissions.permission.delete_emojis.name');\nt('admin.permissions.permission.delete_others_emojis.description');\nt('admin.permissions.permission.delete_others_emojis.name');\nt('admin.permissions.permission.manage_jobs.description');\nt('admin.permissions.permission.manage_jobs.name');\nt('admin.permissions.permission.manage_oauth.description');\nt('admin.permissions.permission.manage_oauth.name');\nt('admin.permissions.group.manage_private_channel_members_and_read_groups.description');\nt('admin.permissions.group.manage_private_channel_members_and_read_groups.name');\nt('admin.permissions.permission.manage_private_channel_properties.description');\nt('admin.permissions.permission.manage_private_channel_properties.name');\nt('admin.permissions.group.manage_public_channel_members_and_read_groups.description');\nt('admin.permissions.group.manage_public_channel_members_and_read_groups.name');\nt('admin.permissions.group.convert_public_channel_to_private.description');\nt('admin.permissions.group.convert_public_channel_to_private.name');\nt('admin.permissions.permission.manage_public_channel_properties.description');\nt('admin.permissions.permission.manage_public_channel_properties.name');\nt('admin.permissions.permission.manage_roles.description');\nt('admin.permissions.permission.manage_roles.name');\nt('admin.permissions.permission.manage_slash_commands.description');\nt('admin.permissions.permission.manage_slash_commands.name');\nt('admin.permissions.permission.manage_system.description');\nt('admin.permissions.permission.manage_system.name');\nt('admin.permissions.permission.manage_team.description');\nt('admin.permissions.permission.manage_team.name');\nt('admin.permissions.permission.manage_team_roles.description');\nt('admin.permissions.permission.manage_team_roles.name');\nt('admin.permissions.permission.manage_incoming_webhooks.description');\nt('admin.permissions.permission.manage_incoming_webhooks.name');\nt('admin.permissions.permission.manage_outgoing_webhooks.description');\nt('admin.permissions.permission.manage_outgoing_webhooks.name');\nt('admin.permissions.permission.permanent_delete_user.description');\nt('admin.permissions.permission.permanent_delete_user.name');\nt('admin.permissions.permission.read_channel.description');\nt('admin.permissions.permission.read_channel.name');\nt('admin.permissions.permission.read_user_access_token.description');\nt('admin.permissions.permission.read_user_access_token.name');\nt('admin.permissions.permission.remove_user_from_team.description');\nt('admin.permissions.permission.remove_user_from_team.name');\nt('admin.permissions.permission.revoke_user_access_token.description');\nt('admin.permissions.permission.revoke_user_access_token.name');\nt('admin.permissions.permission.upload_file.description');\nt('admin.permissions.permission.upload_file.name');\nt('admin.permissions.permission.use_channel_mentions.description');\nt('admin.permissions.permission.use_channel_mentions.name');\nt('admin.permissions.permission.use_group_mentions.description');\nt('admin.permissions.permission.use_group_mentions.name');\nt('admin.permissions.permission.view_team.description');\nt('admin.permissions.permission.view_team.name');\nt('admin.permissions.permission.edit_others_posts.description');\nt('admin.permissions.permission.edit_others_posts.name');\nt('admin.permissions.permission.invite_guest.name');\nt('admin.permissions.permission.invite_guest.description');\nt('admin.permissions.roles.all_users.name');\nt('admin.permissions.roles.channel_admin.name');\nt('admin.permissions.roles.channel_user.name');\nt('admin.permissions.roles.system_admin.name');\nt('admin.permissions.roles.system_user.name');\nt('admin.permissions.roles.team_admin.name');\nt('admin.permissions.roles.team_user.name');\nt('admin.permissions.group.manage_shared_channels.name');\nt('admin.permissions.group.manage_shared_channels.description');\nt('admin.permissions.permission.manage_shared_channels.name');\nt('admin.permissions.permission.manage_shared_channels.description');\nt('admin.permissions.permission.manage_remote_clusters.name');\nt('admin.permissions.permission.manage_remote_clusters.description');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionSystemSchemeSettings from './permission_system_scheme_settings.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        config: getConfig(state),\n        license: getLicense(state),\n        roles: getRoles(state),\n        rolesRequest: state.requests.roles.getRolesByNames,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            editRole,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PermissionSystemSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport ConfirmModal from 'components/confirm_modal';\n\nimport {PermissionsScope, DefaultRolePermissions} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree, {EXCLUDED_PERMISSIONS} from '../permissions_tree';\nimport GuestPermissionsTree, {GUEST_INCLUDED_PERMISSIONS} from '../guest_permissions_tree';\n\nexport default class PermissionSystemSchemeSettings extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object.isRequired,\n        roles: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        isDisabled: PropTypes.bool,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showResetDefaultModal: false,\n            loaded: false,\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: {},\n            openRoles: {\n                guests: true,\n                all_users: true,\n                system_admin: true,\n                team_admin: true,\n                channel_admin: true,\n            },\n            urlParams: new URLSearchParams(props.location.search),\n        };\n        this.rolesNeeded = [\n            GeneralConstants.SYSTEM_ADMIN_ROLE,\n            GeneralConstants.SYSTEM_USER_ROLE,\n            GeneralConstants.TEAM_ADMIN_ROLE,\n            GeneralConstants.TEAM_USER_ROLE,\n            GeneralConstants.CHANNEL_ADMIN_ROLE,\n            GeneralConstants.CHANNEL_USER_ROLE,\n            GeneralConstants.SYSTEM_GUEST_ROLE,\n            GeneralConstants.TEAM_GUEST_ROLE,\n            GeneralConstants.CHANNEL_GUEST_ROLE,\n        ];\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(this.rolesNeeded);\n        if (this.rolesNeeded.every((roleName) => this.props.roles[roleName])) {\n            this.loadRolesIntoState(this.props);\n        }\n\n        if (this.state.urlParams.get('rowIdFromQuery')) {\n            setTimeout(() => {\n                this.selectRow(this.state.urlParams.get('rowIdFromQuery'));\n            }, 1000);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) { // eslint-disable-line camelcase\n        if (!this.state.loaded && this.rolesNeeded.every((roleName) => nextProps.roles[roleName])) {\n            this.loadRolesIntoState(nextProps);\n        }\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    loadRolesIntoState(props) {\n        /* eslint-disable camelcase */\n        const {\n            system_admin,\n            team_admin,\n            channel_admin,\n            system_user,\n            team_user,\n            channel_user,\n            system_guest,\n            team_guest,\n            channel_guest,\n        } = props.roles;\n        /* eslint-enable camelcase */\n\n        this.setState({\n            selectedPermission: null,\n            loaded: true,\n            roles: {\n                system_admin,\n                team_admin,\n                channel_admin,\n                all_users: {\n                    name: 'all_users',\n                    displayName: 'All members',\n                    permissions: system_user.permissions.concat(team_user.permissions).concat(channel_user.permissions),\n                },\n                guests: {\n                    name: 'guests',\n                    displayName: 'Guests',\n                    permissions: system_guest.permissions.concat(team_guest.permissions).concat(channel_guest.permissions),\n                },\n            },\n        });\n    }\n\n    deriveRolesFromAllUsers = (role) => {\n        return {\n            system_user: {\n                ...this.props.roles.system_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_user: {\n                ...this.props.roles.team_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...this.props.roles.channel_user,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    deriveRolesFromGuests = (role) => {\n        return {\n            system_guest: {\n                ...this.props.roles.system_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'system_scope'),\n            },\n            team_guest: {\n                ...this.props.roles.team_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_guest: {\n                ...this.props.roles.channel_guest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (roles) => {\n        for (const permission of this.props.roles.system_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_user.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    restoreGuestPermissions = (roles) => {\n        for (const permission of this.props.roles.system_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.system_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.team_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of this.props.roles.channel_guest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_guest.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleSubmit = async () => {\n        const teamAdminPromise = this.props.actions.editRole(this.state.roles.team_admin);\n        const channelAdminPromise = this.props.actions.editRole(this.state.roles.channel_admin);\n        const roles = this.restoreExcludedPermissions(this.deriveRolesFromAllUsers(this.state.roles.all_users));\n        const guestRoles = this.restoreGuestPermissions(this.deriveRolesFromGuests(this.state.roles.guests));\n        const systemUserPromise = this.props.actions.editRole(roles.system_user);\n        const teamUserPromise = this.props.actions.editRole(roles.team_user);\n        const channelUserPromise = this.props.actions.editRole(roles.channel_user);\n\n        const promises = [teamAdminPromise, channelAdminPromise, systemUserPromise, teamUserPromise, channelUserPromise];\n\n        if (this.haveGuestAccountsPermissions()) {\n            const systemGuestPromise = this.props.actions.editRole(guestRoles.system_guest);\n            const teamGuestPromise = this.props.actions.editRole(guestRoles.team_guest);\n            const channelGuestPromise = this.props.actions.editRole(guestRoles.channel_guest);\n            promises.push(systemGuestPromise, teamGuestPromise, channelGuestPromise);\n        }\n\n        this.setState({saving: true});\n\n        const results = await Promise.all(promises);\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.state.roles};\n        const role = {...roles[roleId]};\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        roles[roleId] = role;\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    resetDefaults = () => {\n        const newRolesState = JSON.parse(JSON.stringify({...this.state.roles}));\n\n        Object.entries(DefaultRolePermissions).forEach(([roleName, permissions]) => {\n            newRolesState[roleName].permissions = permissions;\n        });\n\n        this.setState({roles: newRolesState, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    haveGuestAccountsPermissions = () => {\n        return this.props.license.GuestAccountsPermissions === 'true';\n    }\n\n    render = () => {\n        if (!this.state.loaded) {\n            return <LoadingScreen/>;\n        }\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme'\n                            defaultMessage='System Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.systemScheme.introBanner'\n                                        defaultMessage='Configure the default permissions for Team Admins, Channel Admins and other members. This scheme is inherited by all teams unless a [Team Override Scheme](!https://about.mattermost.com/default-team-override-scheme) is applied in specific teams.'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        {this.props.license && this.props.config.EnableGuestAccounts === 'true' &&\n                            <AdminPanelTogglable\n                                className='permissions-block'\n                                open={this.state.openRoles.guests}\n                                id='all_users'\n                                onToggle={() => this.toggleRole('guests')}\n                                titleId={t('admin.permissions.systemScheme.GuestsTitle')}\n                                titleDefault='Guests'\n                                subtitleId={t('admin.permissions.systemScheme.GuestsDescription')}\n                                subtitleDefault='Permissions granted to guest users.'\n                            >\n                                <GuestPermissionsTree\n                                    selected={this.state.selectedPermission}\n                                    role={this.state.roles.guests}\n                                    scope={'system_scope'}\n                                    onToggle={this.togglePermission}\n                                    selectRow={this.selectRow}\n                                    readOnly={this.props.isDisabled || !this.haveGuestAccountsPermissions()}\n                                />\n                            </AdminPanelTogglable>}\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={this.state.roles.all_users}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                        >\n                            <PermissionsTree\n                                parentRole={this.state.roles.all_users}\n                                role={this.state.roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block'\n                            open={this.state.openRoles.system_admin}\n                            onToggle={() => this.toggleRole('system_admin')}\n                            titleId={t('admin.permissions.systemScheme.systemAdminsTitle')}\n                            titleDefault='System Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.systemAdminsDescription')}\n                            subtitleDefault='Full permissions granted to System Administrators.'\n                        >\n                            <PermissionsTree\n                                readOnly={true}\n                                role={this.state.roles.system_admin}\n                                scope={'system_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={this.props.isDisabled || !this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <a\n                        data-testid='resetPermissionsToDefault'\n                        onClick={() => this.setState({showResetDefaultModal: true})}\n                        className='cancel-button reset-defaults-btn'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButton'\n                            defaultMessage='Reset to Defaults'\n                        />\n                    </a>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n\n                <ConfirmModal\n                    show={this.state.showResetDefaultModal}\n                    title={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalTitle'\n                            defaultMessage='Reset to Default?'\n                        />\n                    }\n                    message={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsButtonModalBody'\n                            defaultMessage='This will reset all selections on this page to their default settings. Are you sure you want to reset?'\n                        />\n                    }\n                    confirmButtonText={\n                        <FormattedMessage\n                            id='admin.permissions.systemScheme.resetDefaultsConfirmationButton'\n                            defaultMessage='Yes, Reset'\n                        />\n                    }\n                    onConfirm={() => {\n                        this.resetDefaults();\n                        this.setState({showResetDefaultModal: false});\n                    }}\n                    onCancel={() => this.setState({showResetDefaultModal: false})}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {loadRolesIfNeeded, editRole} from 'mattermost-redux/actions/roles';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense, getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getScheme, makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport {getScheme as loadScheme, patchScheme, createScheme, getSchemeTeams as loadSchemeTeams} from 'mattermost-redux/actions/schemes';\n\nimport {updateTeamScheme} from 'mattermost-redux/actions/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport PermissionTeamSchemeSettings from './permission_team_scheme_settings.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return (state, ownProps) => {\n        const schemeId = ownProps.match.params.scheme_id;\n        return {\n            config: getConfig(state),\n            license: getLicense(state),\n            schemeId,\n            scheme: schemeId ? getScheme(state, schemeId) : null,\n            teams: schemeId ? getSchemeTeams(state, {schemeId}) : null,\n            roles: getRoles(state),\n            rolesRequest: state.requests.roles.getRolesByNames,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadRolesIfNeeded,\n            loadScheme,\n            loadSchemeTeams,\n            editRole,\n            patchScheme,\n            updateTeamScheme,\n            createScheme,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionTeamSchemeSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {PermissionsScope, ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport SaveButton from 'components/save_button';\nimport LoadingScreen from 'components/loading_screen';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport AdminPanelTogglable from 'components/widgets/admin_console/admin_panel_togglable';\nimport AdminPanelWithButton from 'components/widgets/admin_console/admin_panel_with_button';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport PermissionsTree, {EXCLUDED_PERMISSIONS} from '../permissions_tree';\nimport GuestPermissionsTree, {GUEST_INCLUDED_PERMISSIONS} from '../guest_permissions_tree';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport TeamInList from './team_in_list';\n\nexport default class PermissionTeamSchemeSettings extends React.PureComponent {\n    static propTypes = {\n        schemeId: PropTypes.string,\n        scheme: PropTypes.object,\n        config: PropTypes.object.isRequired,\n        roles: PropTypes.object.isRequired,\n        license: PropTypes.object.isRequired,\n        teams: PropTypes.array,\n        isDisabled: PropTypes.bool,\n        actions: PropTypes.shape({\n            loadRolesIfNeeded: PropTypes.func.isRequired,\n            loadScheme: PropTypes.func.isRequired,\n            loadSchemeTeams: PropTypes.func.isRequired,\n            editRole: PropTypes.func.isRequired,\n            patchScheme: PropTypes.func.isRequired,\n            createScheme: PropTypes.func.isRequired,\n            updateTeamScheme: PropTypes.func.isRequired,\n            setNavigationBlocked: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            roles: null,\n            teams: null,\n            addTeamOpen: false,\n            selectedPermission: null,\n            openRoles: {\n                all_users: true,\n                team_admin: true,\n                channel_admin: true,\n                guests: true,\n            },\n            urlParams: new URLSearchParams(props.location.search),\n        };\n    }\n\n    static defaultProps = {\n        scheme: null,\n    }\n\n    componentDidMount() {\n        this.props.actions.loadRolesIfNeeded(['team_admin', 'team_user', 'channel_admin', 'channel_user', 'team_guest', 'channel_guest']);\n        if (this.props.schemeId) {\n            this.props.actions.loadScheme(this.props.schemeId).then((result) => {\n                this.props.actions.loadRolesIfNeeded([\n                    result.data.default_team_guest_role,\n                    result.data.default_team_user_role,\n                    result.data.default_team_admin_role,\n                    result.data.default_channel_guest_role,\n                    result.data.default_channel_user_role,\n                    result.data.default_channel_admin_role,\n                ]);\n            });\n            this.props.actions.loadSchemeTeams(this.props.schemeId);\n        }\n\n        if (this.state.urlParams.get('rowIdFromQuery')) {\n            setTimeout(() => {\n                this.selectRow(this.state.urlParams.get('rowIdFromQuery'));\n            }, 1000);\n        }\n    }\n\n    isLoaded = (props) => {\n        if (props.schemeId) {\n            if (props.scheme !== null &&\n                props.teams !== null &&\n                props.roles[props.scheme.default_team_guest_role] &&\n                props.roles[props.scheme.default_team_user_role] &&\n                props.roles[props.scheme.default_team_admin_role] &&\n                props.roles[props.scheme.default_channel_guest_role] &&\n                props.roles[props.scheme.default_channel_user_role] &&\n                props.roles[props.scheme.default_channel_admin_role]) {\n                return true;\n            }\n            return false;\n        } else if (props.roles.team_guest &&\n            props.roles.team_user &&\n            props.roles.team_admin &&\n            props.roles.channel_guest &&\n            props.roles.channel_user &&\n            props.roles.channel_admin) {\n            return true;\n        }\n        return false;\n    }\n\n    goToSelectedRow = () => {\n        const selected = document.querySelector('.permission-row.selected,.permission-group-row.selected');\n        if (selected) {\n            if (this.state.openRoles.all_users) {\n                selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n            } else {\n                this.toggleRole('all_users');\n\n                // Give it time to open and show everything\n                setTimeout(() => {\n                    selected.scrollIntoView({behavior: 'smooth', block: 'center'});\n                }, 300);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    selectRow = (permission) => {\n        this.setState({selectedPermission: permission});\n\n        // Wait until next render\n        setTimeout(this.goToSelectedRow);\n\n        // Remove selection after animation\n        setTimeout(() => {\n            this.setState({selectedPermission: null});\n        }, 3000);\n    }\n\n    getStateRoles = () => {\n        if (this.state.roles !== null) {\n            return this.state.roles;\n        }\n\n        let teamGuest = null;\n        let teamUser = null;\n        let teamAdmin = null;\n        let channelGuest = null;\n        let channelUser = null;\n        let channelAdmin = null;\n\n        if (this.props.schemeId) {\n            if (this.isLoaded(this.props)) {\n                teamGuest = this.props.roles[this.props.scheme.default_team_guest_role];\n                teamUser = this.props.roles[this.props.scheme.default_team_user_role];\n                teamAdmin = this.props.roles[this.props.scheme.default_team_admin_role];\n                channelGuest = this.props.roles[this.props.scheme.default_channel_guest_role];\n                channelUser = this.props.roles[this.props.scheme.default_channel_user_role];\n                channelAdmin = this.props.roles[this.props.scheme.default_channel_admin_role];\n            }\n        } else if (this.isLoaded(this.props)) {\n            teamGuest = this.props.roles.team_guest;\n            teamUser = this.props.roles.team_user;\n            teamAdmin = this.props.roles.team_admin;\n            channelGuest = this.props.roles.channel_guest;\n            channelUser = this.props.roles.channel_user;\n            channelAdmin = this.props.roles.channel_admin;\n        } else {\n            return null;\n        }\n        return {\n            team_admin: teamAdmin,\n            channel_admin: channelAdmin,\n            team_guest: teamGuest,\n            team_user: teamUser,\n            channel_guest: channelGuest,\n            channel_user: channelUser,\n            all_users: {\n                name: 'all_users',\n                displayName: 'All members',\n                permissions: teamUser.permissions.concat(channelUser.permissions),\n            },\n            guests: {\n                name: 'guests',\n                displayName: 'Guests',\n                permissions: teamGuest.permissions.concat(channelGuest.permissions),\n            },\n        };\n    }\n\n    deriveRolesFromGuests = (teamGuest, channelGuest, role) => {\n        return {\n            team_guest: {\n                ...teamGuest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_guest: {\n                ...channelGuest,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreGuestPermissions = (teamGuest, channelGuest, roles) => {\n        for (const permission of teamGuest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_guest.permissions.push(permission);\n            }\n        }\n        for (const permission of channelGuest.permissions) {\n            if (!GUEST_INCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_guest.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    deriveRolesFromAllUsers = (baseTeam, baseChannel, role) => {\n        return {\n            team_user: {\n                ...baseTeam,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'team_scope'),\n            },\n            channel_user: {\n                ...baseChannel,\n                permissions: role.permissions.filter((p) => PermissionsScope[p] === 'channel_scope'),\n            },\n        };\n    }\n\n    restoreExcludedPermissions = (baseTeam, baseChannel, roles) => {\n        for (const permission of baseTeam.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.team_user.permissions.push(permission);\n            }\n        }\n        for (const permission of baseChannel.permissions) {\n            if (EXCLUDED_PERMISSIONS.includes(permission)) {\n                roles.channel_user.permissions.push(permission);\n            }\n        }\n        return roles;\n    }\n\n    handleNameChange = (e) => {\n        this.setState({schemeName: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleDescriptionChange = (e) => {\n        this.setState({schemeDescription: e.target.value, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleSubmit = async () => {\n        const roles = this.getStateRoles();\n        let teamAdmin = roles.team_admin;\n        let channelAdmin = roles.channel_admin;\n        const allUsers = roles.all_users;\n        const guests = roles.guests;\n\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        let teamUser = null;\n        let channelUser = null;\n        let teamGuest = null;\n        let channelGuest = null;\n        let schemeId = null;\n\n        this.setState({saving: true});\n\n        let derived = this.deriveRolesFromAllUsers(\n            roles.team_user,\n            roles.channel_user,\n            allUsers,\n        );\n        derived = this.restoreExcludedPermissions(\n            roles.team_user,\n            roles.channel_user,\n            derived,\n        );\n        teamUser = derived.team_user;\n        channelUser = derived.channel_user;\n\n        let derivedGuests = this.deriveRolesFromGuests(\n            roles.team_guest,\n            roles.channel_guest,\n            guests,\n        );\n        derivedGuests = this.restoreGuestPermissions(\n            roles.team_guest,\n            roles.channel_guest,\n            derivedGuests,\n        );\n        teamGuest = derivedGuests.team_guest;\n        channelGuest = derivedGuests.channel_guest;\n\n        if (this.props.schemeId) {\n            await this.props.actions.patchScheme(this.props.schemeId, {\n                display_name: schemeName,\n                description: schemeDescription,\n            });\n            schemeId = this.props.schemeId;\n        } else {\n            const result = await this.props.actions.createScheme({\n                display_name: schemeName,\n                description: schemeDescription,\n                scope: 'team',\n            });\n            if (result.error) {\n                this.setState({serverError: result.error.message, saving: false, saveNeeded: true});\n                this.props.actions.setNavigationBlocked(true);\n                return;\n            }\n            const newScheme = result.data;\n            schemeId = newScheme.id;\n            await this.props.actions.loadRolesIfNeeded([\n                newScheme.default_team_guest_role,\n                newScheme.default_team_user_role,\n                newScheme.default_team_admin_role,\n                newScheme.default_channel_guest_role,\n                newScheme.default_channel_user_role,\n                newScheme.default_channel_admin_role,\n            ]);\n            teamGuest = {...teamGuest, id: this.props.roles[newScheme.default_team_guest_role].id};\n            teamUser = {...teamUser, id: this.props.roles[newScheme.default_team_user_role].id};\n            teamAdmin = {...teamAdmin, id: this.props.roles[newScheme.default_team_admin_role].id};\n            channelGuest = {...channelGuest, id: this.props.roles[newScheme.default_channel_guest_role].id};\n            channelUser = {...channelUser, id: this.props.roles[newScheme.default_channel_user_role].id};\n            channelAdmin = {...channelAdmin, id: this.props.roles[newScheme.default_channel_admin_role].id};\n        }\n\n        const teamAdminPromise = this.props.actions.editRole(teamAdmin);\n        const channelAdminPromise = this.props.actions.editRole(channelAdmin);\n        const promises = [teamAdminPromise, channelAdminPromise];\n\n        const teamUserPromise = this.props.actions.editRole(teamUser);\n        const channelUserPromise = this.props.actions.editRole(channelUser);\n        promises.push(teamUserPromise);\n        promises.push(channelUserPromise);\n\n        if (this.haveGuestAccountsPermissions()) {\n            const teamGuestPromise = this.props.actions.editRole(teamGuest);\n            const channelGuestPromise = this.props.actions.editRole(channelGuest);\n            promises.push(teamGuestPromise, channelGuestPromise);\n        }\n\n        const currentTeams = new Set((this.state.teams || this.props.teams || []).map((team) => team.id));\n        const serverTeams = new Set((this.props.teams || []).map((team) => team.id));\n\n        // Difference of sets (currentTeams - serverTeams)\n        const addedTeams = new Set([...currentTeams].filter((team) => !serverTeams.has(team)));\n\n        // Difference of sets (serverTeams - currentTeams)\n        const removedTeams = new Set([...serverTeams].filter((team) => !currentTeams.has(team)));\n\n        for (const teamId of addedTeams) {\n            promises.push(this.props.actions.updateTeamScheme(teamId, schemeId));\n        }\n\n        for (const teamId of removedTeams) {\n            promises.push(this.props.actions.updateTeamScheme(teamId, ''));\n        }\n\n        const results = await Promise.all(promises);\n\n        let serverError = null;\n        let saveNeeded = false;\n        for (const result of results) {\n            if (result.error) {\n                serverError = result.error.message;\n                saveNeeded = true;\n                break;\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded});\n        this.props.actions.setNavigationBlocked(saveNeeded);\n        this.props.history.push('/admin_console/user_management/permissions');\n    }\n\n    toggleRole = (roleId) => {\n        const newOpenRoles = {...this.state.openRoles};\n        newOpenRoles[roleId] = !newOpenRoles[roleId];\n        this.setState({openRoles: newOpenRoles});\n    }\n\n    togglePermission = (roleId, permissions) => {\n        const roles = {...this.getStateRoles()};\n        let role = null;\n        if (roles.team_admin.name === roleId) {\n            role = {...roles.team_admin};\n        } else if (roles.channel_admin.name === roleId) {\n            role = {...roles.channel_admin};\n        } else if (roles.all_users.name === roleId) {\n            role = {...roles.all_users};\n        } else if (roles.guests.name === roleId) {\n            role = {...roles.guests};\n        }\n        const newPermissions = [...role.permissions];\n        for (const permission of permissions) {\n            if (newPermissions.indexOf(permission) === -1) {\n                newPermissions.push(permission);\n            } else {\n                newPermissions.splice(newPermissions.indexOf(permission), 1);\n            }\n        }\n        role.permissions = newPermissions;\n        if (roles.team_admin.name === roleId) {\n            roles.team_admin = role;\n        } else if (roles.channel_admin.name === roleId) {\n            roles.channel_admin = role;\n        } else if (roles.all_users.name === roleId) {\n            roles.all_users = role;\n        } else if (roles.guests.name === roleId) {\n            roles.guests = role;\n        }\n\n        this.setState({roles, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    openAddTeam = () => {\n        this.setState({addTeamOpen: true});\n    }\n\n    removeTeam = (teamId) => {\n        const teams = (this.state.teams || this.props.teams).filter((team) => team.id !== teamId);\n        this.setState({teams, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addTeams = (teams) => {\n        const currentTeams = this.state.teams || this.props.teams || [];\n        this.setState({\n            teams: [...currentTeams, ...teams],\n            saveNeeded: true,\n        });\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    closeAddTeam = () => {\n        this.setState({addTeamOpen: false});\n    }\n\n    haveGuestAccountsPermissions = () => {\n        return this.props.license.GuestAccountsPermissions === 'true';\n    }\n\n    render = () => {\n        if (!this.isLoaded(this.props)) {\n            return <LoadingScreen/>;\n        }\n        const roles = this.getStateRoles();\n        const teams = this.state.teams || this.props.teams || [];\n        const schemeName = this.state.schemeName || (this.props.scheme && this.props.scheme.display_name) || '';\n        const schemeDescription = this.state.schemeDescription || (this.props.scheme && this.props.scheme.description) || '';\n        return (\n            <div className='wrapper--fixed'>\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        modalID={ModalIdentifiers.ADD_TEAMS_TO_SCHEME}\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        currentSchemeId={this.props.schemeId}\n                        alreadySelected={teams.map((team) => team.id)}\n                    />\n                }\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/permissions'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.permissions.teamScheme'\n                            defaultMessage='Team Scheme'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className={'banner info'}>\n                            <div className='banner__content'>\n                                <span>\n                                    <FormattedMarkdownMessage\n                                        id='admin.permissions.teamScheme.introBanner'\n                                        defaultMessage='[Team Override Schemes](!https://about.mattermost.com/default-team-override-scheme) set the permissions for Team Admins, Channel Admins and other members in specific teams. Use a Team Override Scheme when specific teams need permission exceptions to the [System Scheme](!https://about.mattermost.com/default-system-scheme).'\n                                    />\n                                </span>\n                            </div>\n                        </div>\n\n                        <AdminPanel\n                            titleId={t('admin.permissions.teamScheme.schemeDetailsTitle')}\n                            titleDefault='Scheme Details'\n                            subtitleId={t('admin.permissions.teamScheme.schemeDetailsDescription')}\n                            subtitleDefault='Set the name and description for this scheme.'\n                        >\n                            <div className='team-scheme-details'>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-name'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeNameLabel'\n                                            defaultMessage='Scheme Name:'\n                                        />\n                                    </label>\n                                    <LocalizedInput\n                                        id='scheme-name'\n                                        className='form-control'\n                                        type='text'\n                                        value={schemeName}\n                                        placeholder={{id: t('admin.permissions.teamScheme.schemeNamePlaceholder'), defaultMessage: 'Scheme Name'}}\n                                        onChange={this.handleNameChange}\n                                        disabled={this.props.isDisabled}\n                                    />\n                                </div>\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label'\n                                        htmlFor='scheme-description'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.schemeDescriptionLabel'\n                                            defaultMessage='Scheme Description:'\n                                        />\n                                    </label>\n                                    <textarea\n                                        id='scheme-description'\n                                        className='form-control'\n                                        rows='5'\n                                        value={schemeDescription}\n                                        placeholder={localizeMessage('admin.permissions.teamScheme.schemeDescriptionPlaceholder', 'Scheme Description')}\n                                        onChange={this.handleDescriptionChange}\n                                        disabled={this.props.isDisabled}\n                                    />\n                                </div>\n                            </div>\n                        </AdminPanel>\n\n                        <AdminPanelWithButton\n                            className='permissions-block'\n                            titleId={t('admin.permissions.teamScheme.selectTeamsTitle')}\n                            titleDefault='Select teams to override permissions'\n                            subtitleId={t('admin.permissions.teamScheme.selectTeamsDescription')}\n                            subtitleDefault='Select teams where permission exceptions are required.'\n                            onButtonClick={this.openAddTeam}\n                            buttonTextId={t('admin.permissions.teamScheme.addTeams')}\n                            buttonTextDefault='Add Teams'\n                            disabled={this.props.isDisabled}\n                        >\n                            <div className='teams-list'>\n                                {teams.length === 0 &&\n                                    <div className='no-team-schemes'>\n                                        <FormattedMessage\n                                            id='admin.permissions.teamScheme.noTeams'\n                                            defaultMessage='No team selected. Please add teams to this list.'\n                                        />\n                                    </div>}\n                                {teams.map((team) => (\n                                    <TeamInList\n                                        key={team.id}\n                                        team={team}\n                                        onRemoveTeam={this.removeTeam}\n                                        isDisabled={this.props.isDisabled}\n                                    />\n                                ))}\n                            </div>\n                        </AdminPanelWithButton>\n\n                        {this.props.license && this.props.config.EnableGuestAccounts === 'true' &&\n                            <AdminPanelTogglable\n                                className='permissions-block'\n                                open={this.state.openRoles.guests}\n                                id='guests'\n                                onToggle={() => this.toggleRole('guests')}\n                                titleId={t('admin.permissions.systemScheme.GuestsTitle')}\n                                titleDefault='Guests'\n                                subtitleId={t('admin.permissions.systemScheme.GuestsDescription')}\n                                subtitleDefault='Permissions granted to guest users.'\n                                disabled={this.props.isDisabled}\n                            >\n                                <GuestPermissionsTree\n                                    selected={this.state.selectedPermission}\n                                    role={roles.guests}\n                                    scope={'team_scope'}\n                                    onToggle={this.togglePermission}\n                                    selectRow={this.selectRow}\n                                    readOnly={this.props.isDisabled || !this.haveGuestAccountsPermissions()}\n                                />\n                            </AdminPanelTogglable>\n                        }\n\n                        <AdminPanelTogglable\n                            className='permissions-block all_users'\n                            open={this.state.openRoles.all_users}\n                            id='all_users'\n                            onToggle={() => this.toggleRole('all_users')}\n                            titleId={t('admin.permissions.systemScheme.allMembersTitle')}\n                            titleDefault='All Members'\n                            subtitleId={t('admin.permissions.systemScheme.allMembersDescription')}\n                            subtitleDefault='Permissions granted to all members, including administrators and newly created users.'\n                            disabled={this.props.isDisabled}\n                        >\n                            <PermissionsTree\n                                selected={this.state.selectedPermission}\n                                role={roles.all_users}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block channel_admin'\n                            open={this.state.openRoles.channel_admin}\n                            onToggle={() => this.toggleRole('channel_admin')}\n                            titleId={t('admin.permissions.systemScheme.channelAdminsTitle')}\n                            titleDefault='Channel Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.channelAdminsDescription')}\n                            subtitleDefault='Permissions granted to channel creators and any users promoted to Channel Administrator.'\n                            disabled={this.props.isDisabled}\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.channel_admin}\n                                scope={'channel_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n\n                        <AdminPanelTogglable\n                            className='permissions-block team_admin'\n                            open={this.state.openRoles.team_admin}\n                            onToggle={() => this.toggleRole('team_admin')}\n                            titleId={t('admin.permissions.systemScheme.teamAdminsTitle')}\n                            titleDefault='Team Administrators'\n                            subtitleId={t('admin.permissions.systemScheme.teamAdminsDescription')}\n                            subtitleDefault='Permissions granted to team creators and any users promoted to Team Administrator.'\n                            disabled={this.props.isDisabled}\n                        >\n                            <PermissionsTree\n                                parentRole={roles.all_users}\n                                role={roles.team_admin}\n                                scope={'team_scope'}\n                                onToggle={this.togglePermission}\n                                selectRow={this.selectRow}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanelTogglable>\n                    </div>\n                </div>\n\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={this.props.isDisabled || !this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <BlockableLink\n                        className='cancel-button'\n                        to='/admin_console/user_management/permissions'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionSchemes.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </BlockableLink>\n                    <div className='error-message'>\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\n\nimport {getTeamStats} from 'mattermost-redux/selectors/entities/teams';\n\nimport TeamInList from './team_in_list.jsx';\n\nfunction mapStateToProps(state) {\n    return {\n        stats: getTeamStats(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            loadTeamStats,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamInList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport {imageURLForTeam} from 'utils/utils';\n\nexport default class TeamInList extends React.PureComponent {\n    static propTypes = {\n        team: PropTypes.object.isRequired,\n        onRemoveTeam: PropTypes.func,\n        isDisabled: PropTypes.bool,\n    }\n\n    handleRemoveTeam = () => {\n        const {team, isDisabled, onRemoveTeam} = this.props;\n        if (isDisabled) {\n            return;\n        }\n        onRemoveTeam(team.id);\n    }\n\n    render() {\n        const {team, isDisabled} = this.props;\n        return (\n            <div\n                className='team'\n                key={team.id}\n            >\n                <div className='team-info-block'>\n                    <TeamIcon\n                        name={team.display_name}\n                        url={imageURLForTeam(team)}\n                    />\n                    <div className='team-data'>\n                        <div className='title'>{team.display_name}</div>\n                    </div>\n                </div>\n                <a\n                    className={isDisabled ? 'remove disabled' : 'remove'}\n                    onClick={this.handleRemoveTeam}\n                >\n                    <FormattedMessage\n                        id='admin.permissions.teamScheme.removeTeam'\n                        defaultMessage='Remove'\n                    />\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\n\nimport {deleteScheme} from 'mattermost-redux/actions/schemes';\n\nimport {makeGetSchemeTeams} from 'mattermost-redux/selectors/entities/schemes';\n\nimport PermissionsSchemeSummary from './permissions_scheme_summary.jsx';\n\nfunction makeMapStateToProps() {\n    const getSchemeTeams = makeGetSchemeTeams();\n\n    return function mapStateToProps(state, ownProps) {\n        return {\n            teams: getSchemeTeams(state, {schemeId: ownProps.scheme.id}),\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            deleteScheme,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(PermissionsSchemeSummary);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport OverlayTrigger from 'components/overlay_trigger';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\n\nimport * as Utils from 'utils/utils.jsx';\nimport Constants from 'utils/constants';\n\nconst MAX_TEAMS_PER_SCHEME_SUMMARY = 8;\n\nexport default class PermissionsSchemeSummary extends React.PureComponent {\n    static propTypes = {\n        scheme: PropTypes.object.isRequired,\n        teams: PropTypes.array,\n        isDisabled: PropTypes.func,\n        actions: PropTypes.shape({\n            deleteScheme: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showConfirmModal: false,\n            deleting: false,\n            serverError: null,\n        };\n    }\n\n    renderConfirmModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.permissions.permissionsSchemeSummary.deleteSchemeTitle'\n                defaultMessage='Delete {scheme} scheme?'\n                values={{scheme: this.props.scheme.display_name}}\n            />\n        );\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='permission-scheme-summary-error-message'>\n                    <i className='fa fa-exclamation-circle'/> {this.state.serverError}\n                </div>\n            );\n        }\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMessage\n                        id='admin.permissions.permissionsSchemeSummary.deleteConfirmQuestion'\n                        defaultMessage='The permissions in the teams using this scheme will reset to the defaults in the System Scheme. Are you sure you want to delete the {schemeName} scheme?'\n                        values={{schemeName: this.props.scheme.display_name}}\n                    />\n                </p>\n                {serverError}\n            </div>\n        );\n\n        const confirmButton = (\n            <LoadingWrapper\n                loading={this.state.deleting}\n                text={Utils.localizeMessage('admin.permissions.permissionsSchemeSummary.deleting', 'Deleting...')}\n            >\n                <FormattedMessage\n                    id='admin.permissions.permissionsSchemeSummary.deleteConfirmButton'\n                    defaultMessage='Yes, Delete'\n                />\n            </LoadingWrapper>\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showConfirmModal}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButton}\n                onConfirm={this.handleDeleteConfirmed}\n                onCancel={this.handleDeleteCanceled}\n            />\n        );\n    }\n\n    stopPropagation = (e) => {\n        e.stopPropagation();\n    }\n\n    handleDeleteCanceled = () => {\n        this.setState({\n            showConfirmModal: false,\n        });\n    }\n\n    handleDeleteConfirmed = async () => {\n        this.setState({deleting: true, serverError: null});\n        const data = await this.props.actions.deleteScheme(this.props.scheme.id);\n        if (data.error) {\n            this.setState({deleting: false, serverError: data.error.message});\n        } else {\n            this.setState({deleting: false, showConfirmModal: false});\n        }\n    }\n\n    delete = (e) => {\n        e.stopPropagation();\n        if (this.props.isDisabled) {\n            return;\n        }\n        this.setState({showConfirmModal: true, serverError: null});\n    }\n\n    goToEdit = () => {\n        this.props.history.push('/admin_console/user_management/permissions/team_override_scheme/' + this.props.scheme.id);\n    }\n\n    render = () => {\n        const {scheme, isDisabled} = this.props;\n\n        let teams = this.props.teams ? this.props.teams.map((team) => (\n            <span\n                className='team'\n                key={team.id}\n            >\n                {team.display_name}\n            </span>\n        )) : [];\n\n        let extraTeams = null;\n        if (teams.length > MAX_TEAMS_PER_SCHEME_SUMMARY) {\n            extraTeams = (\n                <OverlayTrigger\n                    delayShow={Constants.OVERLAY_TIME_DELAY}\n                    placement='bottom'\n                    overlay={\n                        <Tooltip\n                            className='team-scheme-extra-teams-overlay'\n                            id={scheme.id + '-extra-teams-overlay'}\n                        >\n                            {teams.slice(MAX_TEAMS_PER_SCHEME_SUMMARY)}\n                        </Tooltip>\n                    }\n                >\n                    <span\n                        className='team'\n                        key='extra-teams'\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.permissionsSchemeSummary.moreTeams'\n                            defaultMessage='+{number} more'\n                            values={{number: teams.length - MAX_TEAMS_PER_SCHEME_SUMMARY}}\n                        />\n                    </span>\n                </OverlayTrigger>\n            );\n            teams = teams.slice(0, MAX_TEAMS_PER_SCHEME_SUMMARY);\n        }\n        const confirmModal = this.renderConfirmModal();\n\n        return (\n            <div\n                className='permissions-scheme-summary'\n                data-testid='permissions-scheme-summary'\n                onClick={this.goToEdit}\n            >\n                <div onClick={this.stopPropagation}>{confirmModal}</div>\n                <div\n                    className='permissions-scheme-summary--header'\n                >\n                    <div className='title'>\n                        {scheme.display_name}\n                    </div>\n                    <div className='actions'>\n                        <Link\n                            data-testid={`${scheme.display_name}-edit`}\n                            className='edit-button'\n                            to={'/admin_console/user_management/permissions/team_override_scheme/' + scheme.id}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.edit'\n                                defaultMessage='Edit'\n                            />\n                        </Link>\n                        {'-'}\n                        <a\n                            data-testid={`${scheme.display_name}-delete`}\n                            className={isDisabled ? 'delete-button disabled' : 'delete-button'}\n                            onClick={this.delete}\n                        >\n                            <FormattedMessage\n                                id='admin.permissions.permissionsSchemeSummary.delete'\n                                defaultMessage='Delete'\n                            />\n                        </a>\n                    </div>\n                </div>\n                <div className='permissions-scheme-summary--description'>\n                    {scheme.description}\n                </div>\n                <div className='permissions-scheme-summary--teams'>\n                    {teams}\n                    {extraTeams}\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {getConfig, getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionsTree from './permissions_tree.jsx';\n\nexport const EXCLUDED_PERMISSIONS = [\n    Permissions.VIEW_MEMBERS,\n    Permissions.JOIN_PUBLIC_TEAMS,\n    Permissions.LIST_PUBLIC_TEAMS,\n    Permissions.JOIN_PRIVATE_TEAMS,\n    Permissions.LIST_PRIVATE_TEAMS,\n];\n\nfunction mapStateToProps(state) {\n    const config = getConfig(state);\n    const license = getLicense(state);\n\n    return {\n        config,\n        license,\n    };\n}\n\nexport default connect(mapStateToProps)(PermissionsTree);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport PermissionGroup from '../permission_group.jsx';\n\nimport EditPostTimeLimitButton from '../edit_post_time_limit_button';\nimport EditPostTimeLimitModal from '../edit_post_time_limit_modal';\n\nexport default class PermissionsTree extends React.PureComponent {\n    static propTypes = {\n        scope: PropTypes.string.isRequired,\n        config: PropTypes.object.isRequired,\n        role: PropTypes.object.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        parentRole: PropTypes.object,\n        selected: PropTypes.string,\n        selectRow: PropTypes.func.isRequired,\n        readOnly: PropTypes.bool,\n        license: PropTypes.object,\n    };\n\n    static defaultProps = {\n        role: {\n            permissions: [],\n        },\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editTimeLimitModalIsVisible: false,\n        };\n\n        this.ADDITIONAL_VALUES = {\n            edit_post: {\n                editTimeLimitButton: (\n                    <EditPostTimeLimitButton\n                        onClick={this.openPostTimeLimitModal}\n                        isDisabled={this.props.readOnly}\n                    />\n                ),\n            },\n        };\n\n        this.groups = [\n            {\n                id: 'teams',\n                permissions: [\n                    {\n                        id: 'send_invites',\n                        combined: true,\n                        permissions: [\n                            Permissions.INVITE_USER,\n                            Permissions.GET_PUBLIC_LINK,\n                            Permissions.ADD_USER_TO_TEAM,\n                        ],\n                    },\n                    Permissions.CREATE_TEAM,\n                ],\n            },\n            {\n                id: 'public_channel',\n                permissions: [\n                    Permissions.CREATE_PUBLIC_CHANNEL,\n                    Permissions.MANAGE_PUBLIC_CHANNEL_PROPERTIES,\n                    {\n                        id: 'manage_public_channel_members_and_read_groups',\n                        combined: true,\n                        permissions: [\n                            Permissions.MANAGE_PUBLIC_CHANNEL_MEMBERS,\n                            Permissions.READ_PUBLIC_CHANNEL_GROUPS,\n                        ],\n                    },\n                    Permissions.DELETE_PUBLIC_CHANNEL,\n                    {\n                        id: 'convert_public_channel_to_private',\n                        combined: true,\n                        permissions: [\n                            Permissions.CONVERT_PUBLIC_CHANNEL_TO_PRIVATE,\n                            Permissions.CONVERT_PRIVATE_CHANNEL_TO_PUBLIC,\n                        ],\n                    },\n                ],\n            },\n            {\n                id: 'private_channel',\n                permissions: [\n                    Permissions.CREATE_PRIVATE_CHANNEL,\n                    Permissions.MANAGE_PRIVATE_CHANNEL_PROPERTIES,\n                    {\n                        id: 'manage_private_channel_members_and_read_groups',\n                        combined: true,\n                        permissions: [\n                            Permissions.MANAGE_PRIVATE_CHANNEL_MEMBERS,\n                            Permissions.READ_PRIVATE_CHANNEL_GROUPS,\n                        ],\n                    },\n                    Permissions.DELETE_PRIVATE_CHANNEL,\n                ],\n            },\n            {\n                id: 'posts',\n                permissions: [\n                    {\n                        id: 'edit_posts',\n                        permissions: [\n                            Permissions.EDIT_POST,\n                            Permissions.EDIT_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'delete_posts',\n                        permissions: [\n                            Permissions.DELETE_POST,\n                            Permissions.DELETE_OTHERS_POSTS,\n                        ],\n                    },\n                    {\n                        id: 'reactions',\n                        combined: true,\n                        permissions: [\n                            Permissions.ADD_REACTION,\n                            Permissions.REMOVE_REACTION,\n                        ],\n                    },\n                    Permissions.USE_CHANNEL_MENTIONS,\n                ],\n            },\n            {\n                id: 'integrations',\n                permissions: [\n                ],\n            },\n            {\n                id: 'manage_shared_channels',\n                permissions: [\n                ],\n            },\n        ];\n        this.updateGroups();\n    }\n\n    updateGroups = () => {\n        const {config, scope, license} = this.props;\n        const sharedChannelsGroup = this.groups[this.groups.length - 1];\n        const integrationsGroup = this.groups[this.groups.length - 2];\n        const postsGroup = this.groups[this.groups.length - 3];\n        const teamsGroup = this.groups[0];\n        if (config.EnableIncomingWebhooks === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_INCOMING_WEBHOOKS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_INCOMING_WEBHOOKS);\n        }\n        if (config.EnableOutgoingWebhooks === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_OUTGOING_WEBHOOKS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OUTGOING_WEBHOOKS);\n        }\n        if (config.EnableOAuthServiceProvider === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_OAUTH)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_OAUTH);\n        }\n        if (config.EnableCommands === 'true' && !integrationsGroup.permissions.includes(Permissions.MANAGE_SLASH_COMMANDS)) {\n            integrationsGroup.permissions.push(Permissions.MANAGE_SLASH_COMMANDS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.CREATE_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.CREATE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.DELETE_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.DELETE_EMOJIS);\n        }\n        if (config.EnableCustomEmoji === 'true' && !integrationsGroup.permissions.includes(Permissions.DELETE_OTHERS_EMOJIS)) {\n            integrationsGroup.permissions.push(Permissions.DELETE_OTHERS_EMOJIS);\n        }\n        if (config.EnableGuestAccounts === 'true' && !teamsGroup.permissions.includes(Permissions.INVITE_GUEST)) {\n            teamsGroup.permissions.push(Permissions.INVITE_GUEST);\n        }\n        if (scope === 'team_scope' && this.groups[0].id !== 'teams_team_scope') {\n            this.groups[0].id = 'teams_team_scope';\n        }\n        if (license?.IsLicensed === 'true' && license?.LDAPGroups === 'true' && !postsGroup.permissions.includes(Permissions.USE_GROUP_MENTIONS)) {\n            postsGroup.permissions.push(Permissions.USE_GROUP_MENTIONS);\n        }\n        postsGroup.permissions.push(Permissions.CREATE_POST);\n\n        if (config.ExperimentalSharedChannels === 'true') {\n            sharedChannelsGroup.permissions.push(Permissions.MANAGE_SHARED_CHANNELS);\n            sharedChannelsGroup.permissions.push(Permissions.MANAGE_REMOTE_CLUSTERS);\n        }\n    }\n\n    openPostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: true});\n    }\n\n    closePostTimeLimitModal = () => {\n        this.setState({editTimeLimitModalIsVisible: false});\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.config !== prevProps.config || this.props.license !== prevProps.license) {\n            this.updateGroups();\n        }\n    }\n\n    toggleGroup = (ids) => {\n        if (this.props.readOnly) {\n            return;\n        }\n        this.props.onToggle(this.props.role.name, ids);\n    }\n\n    render = () => {\n        return (\n            <div className='permissions-tree'>\n                <div className='permissions-tree--header'>\n                    <div className='permission-name'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.permission'\n                            defaultMessage='Permission'\n                        />\n                    </div>\n                    <div className='permission-description'>\n                        <FormattedMessage\n                            id='admin.permissions.permissionsTree.description'\n                            defaultMessage='Description'\n                        />\n                    </div>\n                </div>\n                <div className='permissions-tree--body'>\n                    <PermissionGroup\n                        key='all'\n                        id='all'\n                        uniqId={this.props.role.name}\n                        selected={this.props.selected}\n                        selectRow={this.props.selectRow}\n                        readOnly={this.props.readOnly}\n                        permissions={this.groups}\n                        additionalValues={this.ADDITIONAL_VALUES}\n                        role={this.props.role}\n                        parentRole={this.props.parentRole}\n                        scope={this.props.scope}\n                        combined={false}\n                        onChange={this.toggleGroup}\n                        root={true}\n                    />\n                </div>\n                <EditPostTimeLimitModal\n                    onClose={this.closePostTimeLimitModal}\n                    show={this.state.editTimeLimitModalIsVisible}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {\n    getPlugins,\n    getPluginStatuses,\n    removePlugin,\n    uploadPlugin,\n    installPluginFromUrl,\n    enablePlugin,\n    disablePlugin,\n} from 'mattermost-redux/actions/admin';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport PluginManagement from './plugin_management';\n\nfunction mapStateToProps(state: any) {\n    return {\n        plugins: state.entities.admin.plugins,\n        pluginStatuses: state.entities.admin.pluginStatuses,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            uploadPlugin,\n            installPluginFromUrl,\n            removePlugin,\n            getPlugins,\n            getPluginStatuses,\n            enablePlugin,\n            disablePlugin,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PluginManagement);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport PluginState from 'mattermost-redux/constants/plugins';\nimport {AdminConfig} from 'mattermost-redux/types/config';\n\nimport * as Utils from 'utils/utils.jsx';\nimport LoadingScreen from 'components/loading_screen';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nimport AdminSettings, {BaseProps, BaseState} from '../admin_settings';\nimport BooleanSetting from '../boolean_setting';\nimport SettingsGroup from '../settings_group.jsx';\nimport TextSetting from '../text_setting';\n\nconst PluginItemState = ({state}: {state: number}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.not_running'\n                defaultMessage='Not running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.starting'\n                defaultMessage='Starting'\n            />\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.running'\n                defaultMessage='Running'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_start'\n                defaultMessage='Failed to start'\n            />\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.failed_to_stay_running'\n                defaultMessage='Crashing'\n            />\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.stopping'\n                defaultMessage='Stopping'\n            />\n        );\n    default:\n        return (\n            <FormattedMessage\n                id='admin.plugin.state.unknown'\n                defaultMessage='Unknown'\n            />\n        );\n    }\n};\n\nconst PluginItemStateDescription = ({state}: {state: number}) => {\n    switch (state) {\n    case PluginState.PLUGIN_STATE_NOT_RUNNING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-ban'/>\n                <FormattedMessage\n                    id='admin.plugin.state.not_running.description'\n                    defaultMessage='This plugin is not enabled.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STARTING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.starting.description'\n                    defaultMessage='This plugin is starting.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_RUNNING:\n        return (\n            <div className='alert alert-success'>\n                <i className='fa fa-check'/>\n                <FormattedMessage\n                    id='admin.plugin.state.running.description'\n                    defaultMessage='This plugin is running.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_START:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_start.description'\n                    defaultMessage='This plugin failed to start. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_FAILED_TO_STAY_RUNNING:\n        return (\n            <div className='alert alert-warning'>\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.state.failed_to_stay_running.description'\n                    defaultMessage='This plugin crashed multiple times and is no longer running. Check your system logs for errors.'\n                />\n            </div>\n        );\n    case PluginState.PLUGIN_STATE_STOPPING:\n        return (\n            <div className='alert alert-info'>\n                <i className='fa fa-info'/>\n                <FormattedMessage\n                    id='admin.plugin.state.stopping.description'\n                    defaultMessage='This plugin is stopping.'\n                />\n            </div>\n        );\n    default:\n        return null;\n    }\n};\n\ntype PluginStatus = {\n    state: number;\n    active: boolean;\n    id: string;\n    description: string;\n    version: string;\n    name: string;\n    instances: any[];\n    settings_schema?: {\n        header: string;\n        footer: string;\n        settings?: unknown[];\n    };\n}\n\ntype PluginItemProps = {\n    pluginStatus: PluginStatus;\n    removing: boolean;\n    handleEnable: (e: any) => any;\n    handleDisable: (e: any) => any;\n    handleRemove: (e: any) => any;\n    showInstances: boolean;\n    hasSettings: boolean;\n    isDisabled?: boolean;\n};\n\nconst PluginItem = ({\n    pluginStatus,\n    removing,\n    handleEnable,\n    handleDisable,\n    handleRemove,\n    showInstances,\n    hasSettings,\n    isDisabled,\n}: PluginItemProps) => {\n    let activateButton;\n    const activating = pluginStatus.state === PluginState.PLUGIN_STATE_STARTING;\n    const deactivating = pluginStatus.state === PluginState.PLUGIN_STATE_STOPPING;\n\n    if (pluginStatus.active) {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                className={deactivating || isDisabled ? 'disabled' : ''}\n                onClick={handleDisable}\n            >\n                {deactivating ?\n                    <FormattedMessage\n                        id='admin.plugin.disabling'\n                        defaultMessage='Disabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.disable'\n                        defaultMessage='Disable'\n                    />\n                }\n            </a>\n        );\n    } else {\n        activateButton = (\n            <a\n                data-plugin-id={pluginStatus.id}\n                className={activating || isDisabled ? 'disabled' : ''}\n                onClick={handleEnable}\n            >\n                {activating ?\n                    <FormattedMessage\n                        id='admin.plugin.enabling'\n                        defaultMessage='Enabling...'\n                    /> :\n                    <FormattedMessage\n                        id='admin.plugin.enable'\n                        defaultMessage='Enable'\n                    />\n                }\n            </a>\n        );\n    }\n\n    let settingsButton = null;\n    if (hasSettings) {\n        settingsButton = (\n            <span>\n                {' - '}\n                <Link\n                    to={'/admin_console/plugins/plugin_' + pluginStatus.id}\n                >\n                    <FormattedMessage\n                        id='admin.plugin.settingsButton'\n                        defaultMessage='Settings'\n                    />\n                </Link>\n            </span>\n        );\n    }\n\n    let removeButtonText;\n    if (removing) {\n        removeButtonText = (\n            <FormattedMessage\n                id='admin.plugin.removing'\n                defaultMessage='Removing...'\n            />\n        );\n    } else {\n        removeButtonText = (\n            <FormattedMessage\n                id='admin.plugin.remove'\n                defaultMessage='Remove'\n            />\n        );\n    }\n    const removeButton = (\n        <span>\n            {' - '}\n            <a\n                data-plugin-id={pluginStatus.id}\n                className={removing || isDisabled ? 'disabled' : ''}\n                onClick={handleRemove}\n            >\n                {removeButtonText}\n            </a>\n        </span>\n    );\n\n    let description;\n    if (pluginStatus.description) {\n        description = (\n            <div className='pt-2'>\n                {pluginStatus.description}\n            </div>\n        );\n    }\n\n    const notices = [];\n    if (pluginStatus.instances.some((instance) => instance.version !== pluginStatus.version)) {\n        notices.push(\n            <div\n                key='multiple-versions'\n                className='alert alert-warning'\n            >\n                <i className='fa fa-warning'/>\n                <FormattedMessage\n                    id='admin.plugin.multiple_versions_warning'\n                    defaultMessage='There are multiple versions of this plugin installed across your cluster. Re-install this plugin to ensure it works consistently.'\n                />\n            </div>,\n        );\n    }\n\n    notices.push(\n        <PluginItemStateDescription\n            key='state-description'\n            state={pluginStatus.state}\n        />,\n    );\n\n    const instances = pluginStatus.instances.slice();\n    instances.sort((a, b) => {\n        if (a.cluster_id < b.cluster_id) {\n            return -1;\n        } else if (a.cluster_id > b.cluster_id) {\n            return 1;\n        }\n\n        return 0;\n    });\n\n    let clusterSummary;\n    if (showInstances) {\n        clusterSummary = (\n            <div className='pt-3 pb-3'>\n                <div className='row'>\n                    <div className='col-md-6'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.cluster_instance'\n                                defaultMessage='Cluster Instance'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.version_title'\n                                defaultMessage='Version'\n                            />\n                        </strong>\n                    </div>\n                    <div className='col-md-3'>\n                        <strong>\n                            <FormattedMessage\n                                id='admin.plugin.state'\n                                defaultMessage='State'\n                            />\n                        </strong>\n                    </div>\n                </div>\n                {instances.map((instance) => (\n                    <div\n                        key={instance.cluster_id}\n                        className='row'\n                    >\n                        <div className='col-md-6'>\n                            {instance.cluster_id}\n                        </div>\n                        <div className='col-md-3'>\n                            {instance.version}\n                        </div>\n                        <div className='col-md-3'>\n                            <PluginItemState state={instance.state}/>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n\n    return (\n        <div data-testid={pluginStatus.id}>\n            <div>\n                <strong>{pluginStatus.name}</strong>\n                {' ('}\n                {pluginStatus.id}\n                {' - '}\n                {pluginStatus.version}\n                {')'}\n            </div>\n            {description}\n            <div className='pt-2'>\n                {activateButton}\n                {removeButton}\n                {settingsButton}\n            </div>\n            <div>\n                {notices}\n            </div>\n            <div>\n                {clusterSummary}\n            </div>\n            <hr/>\n        </div>\n    );\n};\n\ninterface PluginSettings {\n    Enable: boolean;\n    EnableUploads: boolean;\n    AllowInsecureDownloadUrl: boolean;\n    EnableMarketplace: boolean;\n    EnableRemoteMarketplace: boolean;\n    AutomaticPrepackagedPlugins: boolean;\n    MarketplaceUrl: string;\n    RequirePluginSignature: boolean;\n    isDisabled: boolean;\n}\n\ntype Props = BaseProps & {\n    config: DeepPartial<AdminConfig>;\n    pluginStatuses: Record<string, PluginStatus>;\n    plugins: any;\n    actions: {\n        uploadPlugin: (fileData: File, force: boolean) => any;\n        removePlugin: (pluginId: string) => any;\n        getPlugins: () => unknown;\n        getPluginStatuses: () => any;\n        enablePlugin: (pluginId: string) => any;\n        disablePlugin: (pluginId: string) => any;\n        installPluginFromUrl: (url: string, force: boolean) => any;\n    };\n};\n\ntype State = BaseState & {\n    loading: boolean;\n    fileSelected: boolean;\n    file: File | null;\n    pluginDownloadUrl: string;\n    serverError: JSX.Element | string | null ;\n    lastMessage: string | null;\n    uploading: boolean;\n    installing: boolean;\n    overwritingUpload: boolean;\n    confirmOverwriteUploadModal: boolean;\n    overwritingInstall?: boolean;\n    confirmOverwriteInstallModal: boolean;\n    showRemoveModal: boolean;\n    resolveRemoveModal: string| null;\n    enable: boolean;\n    enableUploads: boolean;\n    allowInsecureDownloadUrl: boolean;\n    enableMarketplace: boolean;\n    enableRemoteMarketplace: boolean;\n    automaticPrepackagedPlugins: boolean;\n    marketplaceUrl: string;\n    requirePluginSignature: boolean;\n    removing: string | null;\n}\nexport default class PluginManagement extends AdminSettings<Props, State> {\n    private fileInput: React.RefObject<HTMLInputElement>;\n    constructor(props: Props) {\n        super(props);\n\n        this.state = Object.assign(this.state, {\n            loading: true,\n            fileSelected: false,\n            file: null,\n            pluginDownloadUrl: '',\n            serverError: null,\n            lastMessage: null,\n            uploading: false,\n            installing: false,\n            overwritingUpload: false,\n            confirmOverwriteUploadModal: false,\n            overwritingInstall: false,\n            confirmOverwriteInstallModal: false,\n            showRemoveModal: false,\n            resolveRemoveModal: null,\n        });\n        this.fileInput = React.createRef();\n    }\n    getConfigFromState = (config: Props['config']) => {\n        if (config && config.PluginSettings) {\n            config.PluginSettings.Enable = this.state.enable;\n            config.PluginSettings.EnableUploads = this.state.enableUploads;\n            config.PluginSettings.AllowInsecureDownloadUrl = this.state.allowInsecureDownloadUrl;\n            config.PluginSettings.EnableMarketplace = this.state.enableMarketplace;\n            config.PluginSettings.EnableRemoteMarketplace = this.state.enableRemoteMarketplace;\n            config.PluginSettings.AutomaticPrepackagedPlugins = this.state.automaticPrepackagedPlugins;\n            config.PluginSettings.MarketplaceUrl = this.state.marketplaceUrl;\n            config.PluginSettings.RequirePluginSignature = this.state.requirePluginSignature;\n        }\n\n        return config;\n    }\n\n    getStateFromConfig(config: Props['config']) {\n        const state = {\n            enable: config?.PluginSettings?.Enable,\n            enableUploads: config?.PluginSettings?.EnableUploads,\n            allowInsecureDownloadUrl: config?.PluginSettings?.AllowInsecureDownloadUrl,\n            enableMarketplace: config?.PluginSettings?.EnableMarketplace,\n            enableRemoteMarketplace: config?.PluginSettings?.EnableRemoteMarketplace,\n            automaticPrepackagedPlugins: config?.PluginSettings?.AutomaticPrepackagedPlugins,\n            marketplaceUrl: config?.PluginSettings?.MarketplaceUrl,\n            requirePluginSignature: config?.PluginSettings?.RequirePluginSignature,\n        };\n\n        return state;\n    }\n\n    componentDidMount() {\n        if (this.state.enable) {\n            this.props.actions.getPluginStatuses().then(\n                () => this.setState({loading: false}),\n            );\n        }\n    }\n\n    handleUpload = () => {\n        this.setState({lastMessage: null, serverError: null});\n        const element = this.fileInput.current as HTMLInputElement;\n        if (element.files && element.files.length > 0) {\n            this.setState({fileSelected: true, file: element.files[0]});\n        }\n    }\n\n    helpSubmitUpload = async (file: File, force: boolean) => {\n        this.setState({uploading: true});\n        const {error} = await this.props.actions.uploadPlugin(file, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteUploadModal: true, overwritingUpload: true});\n                return;\n            }\n            this.setState({\n                file: null,\n                fileSelected: false,\n                uploading: false,\n            });\n            if (error.server_error_id === 'app.plugin.activate.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.activate', 'Unable to upload the plugin. It may conflict with another plugin on your server.')});\n            } else if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            this.setState({file: null, fileSelected: false});\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully uploaded plugin from ${file?.name}`;\n        if (this.state.overwritingUpload) {\n            msg = `Successfully updated plugin from ${file?.name}`;\n        }\n\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            lastMessage: msg,\n            overwritingUpload: false,\n            uploading: false,\n            loading: false,\n        });\n    }\n\n    handleSubmitUpload = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n\n        const element = this.fileInput.current as HTMLInputElement;\n        if (element.files?.length === 0) {\n            return;\n        }\n        const file = element.files && element.files[0];\n        if (file) {\n            this.helpSubmitUpload(file, false);\n        }\n        Utils.clearFileInput(element);\n    }\n\n    handleOverwriteUploadPluginCancel = () => {\n        this.setState({\n            file: null,\n            fileSelected: false,\n            serverError: null,\n            confirmOverwriteUploadModal: false,\n            lastMessage: null,\n            uploading: false,\n        });\n    }\n\n    handleOverwriteUploadPlugin = () => {\n        this.setState({confirmOverwriteUploadModal: false});\n        if (this.state.file) {\n            this.helpSubmitUpload(this.state.file, true);\n        }\n    }\n\n    onPluginDownloadUrlChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({\n            pluginDownloadUrl: e.target.value,\n        });\n    }\n\n    installFromUrl = async (force: boolean) => {\n        const {pluginDownloadUrl} = this.state;\n\n        this.setState({\n            installing: true,\n            serverError: null,\n            lastMessage: null,\n        });\n        const {error} = await this.props.actions.installPluginFromUrl(pluginDownloadUrl, force);\n\n        if (error) {\n            if (error.server_error_id === 'app.plugin.install_id.app_error' && !force) {\n                this.setState({confirmOverwriteInstallModal: true, overwritingInstall: true});\n                return;\n            }\n\n            this.setState({\n                installing: false,\n            });\n\n            if (error.server_error_id === 'app.plugin.extract.app_error') {\n                this.setState({serverError: Utils.localizeMessage('admin.plugin.error.extract', 'Encountered an error when extracting the plugin. Review your plugin file content and try again.')});\n            } else {\n                this.setState({serverError: error.message});\n            }\n            return;\n        }\n\n        this.setState({loading: true});\n        await this.props.actions.getPlugins();\n\n        let msg = `Successfully installed plugin from ${pluginDownloadUrl}`;\n        if (this.state.overwritingInstall) {\n            msg = `Successfully updated plugin from ${pluginDownloadUrl}`;\n        }\n\n        this.setState({\n            serverError: null,\n            lastMessage: msg,\n            overwritingInstall: false,\n            installing: false,\n            loading: false,\n        });\n    }\n\n    getMarketplaceUrlHelpText = (url: string) => {\n        return (\n            <div>\n                {\n                    url === '' &&\n                    <div className='alert-warning'>\n                        <i className='fa fa-warning'/>\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.marketplaceUrlDesc.empty'\n                            defaultMessage=' Marketplace URL is a required field.'\n                        />\n                    </div>\n                }\n                {\n                    url !== '' &&\n                    <FormattedMarkdownMessage\n                        id='admin.plugins.settings.marketplaceUrlDesc'\n                        defaultMessage='URL of the marketplace server.'\n                    />\n                }\n            </div>\n        );\n    }\n\n    canSave = () => {\n        return this.state.marketplaceUrl !== '';\n    }\n\n    handleSubmitInstall = (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        return this.installFromUrl(false);\n    }\n\n    handleOverwriteInstallPluginCancel = () => {\n        this.setState({\n            confirmOverwriteInstallModal: false,\n            installing: false,\n            serverError: null,\n            lastMessage: null,\n        });\n    }\n\n    handleOverwriteInstallPlugin = () => {\n        this.setState({confirmOverwriteInstallModal: false});\n        return this.installFromUrl(true);\n    }\n\n    showRemovePluginModal = (e: React.SyntheticEvent) => {\n        if (this.props.isDisabled) {\n            return;\n        }\n        e.preventDefault();\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n        this.setState({showRemoveModal: true, removing: pluginId});\n    }\n\n    handleRemovePluginCancel = () => {\n        this.setState({showRemoveModal: false, removing: null});\n    }\n\n    handleRemovePlugin = () => {\n        this.setState({showRemoveModal: false});\n        this.handleRemove();\n    }\n\n    handleRemove = async () => {\n        this.setState({lastMessage: null, serverError: null});\n        if (this.state.removing !== null) {\n            const {error} = await this.props.actions.removePlugin(this.state.removing);\n            this.setState({removing: null});\n\n            if (error) {\n                this.setState({serverError: error.message});\n            }\n        }\n    }\n\n    handleEnable = async (e: React.KeyboardEvent) => {\n        e.preventDefault();\n        if (this.props.isDisabled) {\n            return;\n        }\n        this.setState({lastMessage: null, serverError: null});\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n\n        if (pluginId) {\n            const {error} = await this.props.actions.enablePlugin(pluginId);\n\n            if (error) {\n                this.setState({serverError: error.message});\n            }\n        }\n    }\n\n    handleDisable = async (e: React.KeyboardEvent) => {\n        this.setState({lastMessage: null, serverError: null});\n        e.preventDefault();\n        if (this.props.isDisabled) {\n            return;\n        }\n        this.setState({lastMessage: null, serverError: null});\n        const pluginId = e.currentTarget.getAttribute('data-plugin-id');\n        if (pluginId) {\n            const {error} = await this.props.actions.disablePlugin(pluginId);\n\n            if (error) {\n                this.setState({serverError: error.message});\n            }\n        }\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.plugin.management.title'\n                defaultMessage='Management'\n            />\n        );\n    }\n\n    renderOverwritePluginModal = (\n        {show, onConfirm, onCancel}:\n        {show: boolean; onConfirm: (checked: boolean) => void; onCancel: (checked: boolean) => void }) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.title'\n                defaultMessage='Overwrite existing plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.desc'\n                defaultMessage='A plugin with this ID already exists. Would you like to overwrite it?'\n            />\n        );\n\n        const overwriteButton = (\n            <FormattedMessage\n                id='admin.plugin.upload.overwrite_modal.overwrite'\n                defaultMessage='Overwrite'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={overwriteButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderRemovePluginModal = (\n        show: boolean, onConfirm: (checked: boolean) => void, onCancel: (checked: boolean) => void) => {\n        const title = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.title'\n                defaultMessage='Remove plugin?'\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.desc'\n                defaultMessage='Are you sure you would like to remove the plugin?'\n            />\n        );\n\n        const removeButton = (\n            <FormattedMessage\n                id='admin.plugin.remove_modal.overwrite'\n                defaultMessage='Remove'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={removeButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n\n    renderEnablePluginsSetting = () => {\n        const hideEnablePlugins = this.props.config.ExperimentalSettings && this.props.config.ExperimentalSettings.RestrictSystemAdmin;\n        if (!hideEnablePlugins) {\n            return (\n                <BooleanSetting\n                    id='enable'\n                    label={\n                        <FormattedMessage\n                            id='admin.plugins.settings.enable'\n                            defaultMessage='Enable Plugins: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.plugins.settings.enableDesc'\n                            defaultMessage='When true, enables plugins on your Mattermost server. Use plugins to integrate with third-party systems, extend functionality, or customize the user interface of your Mattermost server. See [documentation](https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                        />\n                    }\n                    value={this.state.enable}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('PluginSettings.Enable')}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n        return null;\n    }\n\n    renderSettings = () => {\n        const {enableUploads} = this.state;\n        const enable = this.props.config?.PluginSettings?.Enable;\n        let serverError = <React.Fragment/>;\n        let lastMessage = <React.Fragment/>;\n\n        // Using props values to make sure these are set on the server and not just locally\n        const enableUploadButton = enableUploads && enable && !(this.props.config.PluginSettings && this.props.config.PluginSettings.RequirePluginSignature);\n\n        if (this.state.serverError) {\n            serverError = <div className='col-sm-12'><div className='form-group has-error half'><label className='control-label'>{this.state.serverError}</label></div></div>;\n        }\n        if (this.state.lastMessage) {\n            lastMessage = <div className='col-sm-12'><div className='form-group half'>{this.state.lastMessage}</div></div>;\n        }\n\n        let btnClass = 'btn';\n        if (this.state.fileSelected) {\n            btnClass = 'btn btn-primary';\n        }\n\n        let fileName;\n        if (this.state.file) {\n            fileName = this.state.file.name;\n        }\n\n        let uploadButtonText;\n        if (this.state.uploading) {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.uploading'\n                    defaultMessage='Uploading...'\n                />\n            );\n        } else {\n            uploadButtonText = (\n                <FormattedMessage\n                    id='admin.plugin.upload'\n                    defaultMessage='Upload'\n                />\n            );\n        }\n\n        let pluginsList;\n        let pluginsContainer;\n        let pluginsListContainer;\n        const plugins = Object.values(this.props.pluginStatuses);\n        if (this.state.loading) {\n            pluginsList = <LoadingScreen/>;\n        } else if (plugins.length === 0) {\n            pluginsListContainer = (\n                <FormattedMessage\n                    id='admin.plugin.no_plugins'\n                    defaultMessage='No installed plugins.'\n                />\n            );\n        } else {\n            const showInstances = plugins.some((pluginStatus) => pluginStatus.instances.length > 1);\n            plugins.sort((a, b) => {\n                const nameCompare = a.name.localeCompare(b.name);\n                if (nameCompare !== 0) {\n                    return nameCompare;\n                }\n\n                return a.id.localeCompare(b.id);\n            });\n            pluginsList = plugins.map((pluginStatus: PluginStatus) => {\n                const p = this.props.plugins[pluginStatus.id];\n                const hasSettings = Boolean(p && p.settings_schema && (p.settings_schema.header || p.settings_schema.footer || (p.settings_schema.settings && p.settings_schema.settings.length > 0)));\n                return (\n                    <PluginItem\n                        key={pluginStatus.id}\n                        pluginStatus={pluginStatus}\n                        removing={this.state.removing === pluginStatus.id}\n                        handleEnable={this.handleEnable}\n                        handleDisable={this.handleDisable}\n                        handleRemove={this.showRemovePluginModal}\n                        showInstances={showInstances}\n                        hasSettings={hasSettings}\n                        isDisabled={this.props.isDisabled}\n                    />\n                );\n            });\n\n            pluginsListContainer = (\n                <div className='alert alert-transparent'>\n                    {pluginsList}\n                </div>\n            );\n        }\n\n        if (enable) {\n            pluginsContainer = (\n                <div className='form-group'>\n                    <label\n                        className='control-label col-sm-4'\n                    >\n                        <FormattedMessage\n                            id='admin.plugin.installedTitle'\n                            defaultMessage='Installed Plugins: '\n                        />\n                    </label>\n                    <div className='col-sm-8'>\n                        <p className='help-text'>\n                            <FormattedMessage\n                                id='admin.plugin.installedDesc'\n                                defaultMessage='Installed plugins on your Mattermost server.'\n                            />\n                        </p>\n                        <br/>\n                        {pluginsListContainer}\n                    </div>\n                </div>\n            );\n        }\n\n        let uploadHelpText;\n\n        if (enableUploads && enable) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDesc'\n                    defaultMessage='Upload a plugin for your Mattermost server. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else if (enable && !enableUploads) {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadDisabledDesc'\n                    defaultMessage='Enable plugin uploads in config.json. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        } else {\n            uploadHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.plugin.uploadAndPluginDisabledDesc'\n                    defaultMessage='To enable plugins, set **Enable Plugins** to true. See [documentation](!https://about.mattermost.com/default-plugin-uploads) to learn more.'\n                />\n            );\n        }\n\n        const overwriteUploadPluginModal = this.state.confirmOverwriteUploadModal && this.renderOverwritePluginModal({\n            show: this.state.confirmOverwriteUploadModal,\n            onConfirm: this.handleOverwriteUploadPlugin,\n            onCancel: this.handleOverwriteUploadPluginCancel,\n        });\n\n        const removePluginModal = this.state.showRemoveModal && this.renderRemovePluginModal(\n            this.state.showRemoveModal,\n            this.handleRemovePlugin,\n            this.handleRemovePluginCancel,\n        );\n\n        return (\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <SettingsGroup\n                        id={'PluginSettings'}\n                        container={false}\n                    >\n                        {this.renderEnablePluginsSetting()}\n\n                        { !this.props.config.ExperimentalSettings?.RestrictSystemAdmin && (\n                            <>\n                                <BooleanSetting\n                                    id='requirePluginSignature'\n                                    label={\n                                        <FormattedMessage\n                                            id='admin.plugins.settings.requirePluginSignature'\n                                            defaultMessage='Require Plugin Signature:'\n                                        />\n                                    }\n                                    helpText={\n                                        <FormattedMarkdownMessage\n                                            id='admin.plugins.settings.requirePluginSignatureDesc'\n                                            defaultMessage='When true, uploading plugins is disabled and may only be installed through the Marketplace. Plugins are always verified during Mattermost server startup and initialization. See [documentation](!https://mattermost.com/pl/default-plugin-signing) to learn more.'\n                                        />\n                                    }\n                                    value={this.state.requirePluginSignature}\n                                    disabled={this.props.isDisabled || !this.state.enable}\n                                    onChange={this.handleChange}\n                                    setByEnv={this.isSetByEnv('PluginSettings.RequirePluginSignature')}\n                                />\n                                <BooleanSetting\n                                    id='automaticPrepackagedPlugins'\n                                    label={\n                                        <FormattedMessage\n                                            id='admin.plugins.settings.automaticPrepackagedPlugins'\n                                            defaultMessage='Enable Automatic Prepackaged Plugins:'\n                                        />\n                                    }\n                                    helpText={\n                                        <FormattedMarkdownMessage\n                                            id='admin.plugins.settings.automaticPrepackagedPluginsDesc'\n                                            defaultMessage='When true, automatically installs any prepackaged plugin found to be enabled in the server configuration.'\n                                        />\n                                    }\n                                    value={this.state.automaticPrepackagedPlugins}\n                                    disabled={this.props.isDisabled || !this.state.enable}\n                                    onChange={this.handleChange}\n                                    setByEnv={this.isSetByEnv('PluginSettings.AutomaticPrepackagedPlugins')}\n                                />\n                                <div className='form-group'>\n                                    <label\n                                        className='control-label col-sm-4'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.plugin.uploadTitle'\n                                            defaultMessage='Upload Plugin: '\n                                        />\n                                    </label>\n                                    <div className='col-sm-8'>\n                                        <div className='file__upload'>\n                                            <button\n                                                type='button'\n                                                className={classNames(['btn', {'btn-primary': enableUploads}])}\n                                                disabled={!enableUploadButton || this.props.isDisabled}\n                                            >\n                                                <FormattedMessage\n                                                    id='admin.plugin.choose'\n                                                    defaultMessage='Choose File'\n                                                />\n                                            </button>\n                                            <input\n                                                ref={this.fileInput}\n                                                type='file'\n                                                accept='.gz'\n                                                onChange={this.handleUpload}\n                                                disabled={!enableUploadButton || this.props.isDisabled}\n                                            />\n                                        </div>\n                                        <button\n                                            className={btnClass}\n                                            id='uploadPlugin'\n                                            disabled={!this.state.fileSelected}\n                                            onClick={this.handleSubmitUpload}\n                                        >\n                                            {uploadButtonText}\n                                        </button>\n                                        <div className='help-text m-0'>\n                                            {fileName}\n                                        </div>\n                                        {serverError}\n                                        {lastMessage}\n                                        <p className='help-text'>\n                                            {uploadHelpText}\n                                        </p>\n                                    </div>\n                                </div>\n                                <BooleanSetting\n                                    id='enableMarketplace'\n                                    label={\n                                        <FormattedMessage\n                                            id='admin.plugins.settings.enableMarketplace'\n                                            defaultMessage='Enable Marketplace:'\n                                        />\n                                    }\n                                    helpText={\n                                        <FormattedMarkdownMessage\n                                            id='admin.plugins.settings.enableMarketplaceDesc'\n                                            defaultMessage='When true, enables System Administrators to install plugins from the [marketplace](!https://mattermost.com/pl/default-mattermost-marketplace.html).'\n                                        />\n                                    }\n                                    value={this.state.enableMarketplace}\n                                    disabled={this.props.isDisabled || !this.state.enable}\n                                    onChange={this.handleChange}\n                                    setByEnv={this.isSetByEnv('PluginSettings.EnableMarketplace')}\n                                />\n                                <BooleanSetting\n                                    id='enableRemoteMarketplace'\n                                    label={\n                                        <FormattedMessage\n                                            id='admin.plugins.settings.enableRemoteMarketplace'\n                                            defaultMessage='Enable Remote Marketplace:'\n                                        />\n                                    }\n                                    helpText={\n                                        <FormattedMarkdownMessage\n                                            id='admin.plugins.settings.enableRemoteMarketplaceDesc'\n                                            defaultMessage='When true, marketplace fetches latest plugins from the configured Marketplace URL.'\n                                        />\n                                    }\n                                    value={this.state.enableRemoteMarketplace}\n                                    disabled={this.props.isDisabled || !this.state.enable || !this.state.enableMarketplace}\n                                    onChange={this.handleChange}\n                                    setByEnv={this.isSetByEnv('PluginSettings.EnableRemoteMarketplace')}\n                                />\n                                <TextSetting\n                                    id={'marketplaceUrl'}\n                                    type={'input'}\n                                    label={\n                                        <FormattedMessage\n                                            id='admin.plugins.settings.marketplaceUrl'\n                                            defaultMessage='Marketplace URL:'\n                                        />\n                                    }\n                                    helpText={this.getMarketplaceUrlHelpText(this.state.marketplaceUrl)}\n                                    value={this.state.marketplaceUrl}\n                                    disabled={this.props.isDisabled || !this.state.enable || !this.state.enableMarketplace || !this.state.enableRemoteMarketplace}\n                                    onChange={this.handleChange}\n                                    setByEnv={this.isSetByEnv('PluginSettings.MarketplaceUrl')}\n                                />\n                            </>\n                        )}\n                        {pluginsContainer}\n                    </SettingsGroup>\n                    {overwriteUploadPluginModal}\n                    {removePluginModal}\n                </div>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport Constants from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport AdminSettings from './admin_settings';\nimport DropdownSetting from './dropdown_setting.jsx';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nconst PUSH_NOTIFICATIONS_OFF = 'off';\nconst PUSH_NOTIFICATIONS_MHPNS = 'mhpns';\nconst PUSH_NOTIFICATIONS_MTPNS = 'mtpns';\nconst PUSH_NOTIFICATIONS_CUSTOM = 'custom';\n\nexport default class PushSettings extends AdminSettings {\n    canSave = () => {\n        return this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_MHPNS || this.state.agree;\n    }\n\n    handleAgreeChange = (e) => {\n        this.setState({\n            agree: e.target.checked,\n        });\n    }\n\n    handleDropdownChange = (id, value) => {\n        if (id === 'pushNotificationServerType') {\n            this.setState({\n                agree: false,\n            });\n\n            if (value === PUSH_NOTIFICATIONS_MHPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MHPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_MTPNS) {\n                this.setState({\n                    pushNotificationServer: Constants.MTPNS,\n                });\n            } else if (value === PUSH_NOTIFICATIONS_CUSTOM &&\n                (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS ||\n                this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS)) {\n                this.setState({\n                    pushNotificationServer: '',\n                });\n            }\n        }\n\n        this.handleChange(id, value);\n    }\n\n    getConfigFromState = (config) => {\n        config.EmailSettings.SendPushNotifications = this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_OFF;\n        config.EmailSettings.PushNotificationServer = this.state.pushNotificationServer.trim();\n        config.TeamSettings.MaxNotificationsPerChannel = this.state.maxNotificationsPerChannel;\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        let pushNotificationServerType = PUSH_NOTIFICATIONS_CUSTOM;\n        let agree = false;\n        if (!config.EmailSettings.SendPushNotifications) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_OFF;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MHPNS &&\n            this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MHPNS;\n            agree = true;\n        } else if (config.EmailSettings.PushNotificationServer === Constants.MTPNS) {\n            pushNotificationServerType = PUSH_NOTIFICATIONS_MTPNS;\n        }\n\n        let pushNotificationServer = config.EmailSettings.PushNotificationServer;\n        if (pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushNotificationServer = Constants.MTPNS;\n        } else if (pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushNotificationServer = Constants.MHPNS;\n        }\n\n        const maxNotificationsPerChannel = config.TeamSettings.MaxNotificationsPerChannel;\n\n        return {\n            pushNotificationServerType,\n            pushNotificationServer,\n            maxNotificationsPerChannel,\n            agree,\n        };\n    }\n\n    isPushNotificationServerSetByEnv = () => {\n        // Assume that if one of these has been set using an environment variable,\n        // all of them have been set that way\n        return this.isSetByEnv('EmailSettings.SendPushNotifications') ||\n            this.isSetByEnv('EmailSettings.PushNotificationServer');\n    };\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.environment.pushNotificationServer'\n                defaultMessage='Push Notification Server'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        const pushNotificationServerTypes = [];\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_OFF, text: Utils.localizeMessage('admin.email.pushOff', 'Do not send push notifications')});\n        if (this.props.license.IsLicensed === 'true' && this.props.license.MHPNS === 'true') {\n            pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MHPNS, text: Utils.localizeMessage('admin.email.mhpns', 'Use HPNS connection with uptime SLA to send notifications to iOS and Android apps')});\n        }\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_MTPNS, text: Utils.localizeMessage('admin.email.mtpns', 'Use TPNS connection to send notifications to iOS and Android apps')});\n        pushNotificationServerTypes.push({value: PUSH_NOTIFICATIONS_CUSTOM, text: Utils.localizeMessage('admin.email.selfPush', 'Manually enter Push Notification Service location')});\n\n        let sendHelpText = null;\n        let pushServerHelpText = null;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_OFF) {\n            sendHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.pushOffHelp'\n                    defaultMessage='Please see [documentation on push notifications](!https://about.mattermost.com/default-mobile-push-notifications/) to learn more about setup options.'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mhpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Hosted Push Notification Service](!https://about.mattermost.com/default-hpns/).'\n                />\n            );\n        } else if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MTPNS) {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.mtpnsHelp'\n                    defaultMessage='Download [Mattermost iOS app](!https://about.mattermost.com/mattermost-ios-app/) from iTunes. Download [Mattermost Android app](!https://about.mattermost.com/mattermost-android-app/) from Google Play. Learn more about the [Mattermost Test Push Notification Service](!https://about.mattermost.com/default-tpns/).'\n                />\n            );\n        } else {\n            pushServerHelpText = (\n                <FormattedMarkdownMessage\n                    id='admin.email.easHelp'\n                    defaultMessage='Learn more about compiling and deploying your own mobile apps from an [Enterprise App Store](!https://about.mattermost.com/default-enterprise-app-store).'\n                />\n            );\n        }\n\n        let tosCheckbox;\n        if (this.state.pushNotificationServerType === PUSH_NOTIFICATIONS_MHPNS) {\n            tosCheckbox = (\n                <div className='form-group'>\n                    <div className='col-sm-4'/>\n                    <div className='col-sm-8'>\n                        <input\n                            type='checkbox'\n                            ref='agree'\n                            checked={this.state.agree}\n                            onChange={this.handleAgreeChange}\n                            disabled={this.props.isDisabled}\n                        />\n                        <FormattedMarkdownMessage\n                            id='admin.email.agreeHPNS'\n                            defaultMessage=' I understand and accept the Mattermost Hosted Push Notification Service [Terms of Service](!https://about.mattermost.com/hpns-terms/) and [Privacy Policy](!https://about.mattermost.com/hpns-privacy/).'\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <DropdownSetting\n                    id='pushNotificationServerType'\n                    values={pushNotificationServerTypes}\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushTitle'\n                            defaultMessage='Enable Push Notifications: '\n                        />\n                    }\n                    value={this.state.pushNotificationServerType}\n                    onChange={this.handleDropdownChange}\n                    helpText={sendHelpText}\n                    setByEnv={this.isPushNotificationServerSetByEnv()}\n                    disabled={this.props.isDisabled}\n                />\n                {tosCheckbox}\n                <TextSetting\n                    id='pushNotificationServer'\n                    label={\n                        <FormattedMessage\n                            id='admin.email.pushServerTitle'\n                            defaultMessage='Push Notification Server:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.email.pushServerEx', 'E.g.: \"https://push-test.mattermost.com\"')}\n                    helpText={pushServerHelpText}\n                    value={this.state.pushNotificationServer}\n                    onChange={this.handleChange}\n                    disabled={this.props.isDisabled || this.state.pushNotificationServerType !== PUSH_NOTIFICATIONS_CUSTOM}\n                    setByEnv={this.isSetByEnv('EmailSettings.PushNotificationServer')}\n                />\n                <TextSetting\n                    id='maxNotificationsPerChannel'\n                    type='number'\n                    label={\n                        <FormattedMessage\n                            id='admin.team.maxNotificationsPerChannelTitle'\n                            defaultMessage='Max Notifications Per Channel:'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.team.maxNotificationsPerChannelExample', 'E.g.: \"1000\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.team.maxNotificationsPerChannelDescription'\n                            defaultMessage='Maximum total number of users in a channel before users typing messages, @all, @here, and @channel no longer send notifications because of performance.'\n                        />\n                    }\n                    value={this.state.maxNotificationsPerChannel}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('TeamSettings.MaxNotificationsPerChannel')}\n                    disabled={this.props.isDisabled}\n                />\n            </SettingsGroup>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport Setting from './setting';\n\ninterface Props {\n    id: string;\n    label: React.ReactNode;\n    values: Array<{ text: string; value: string }>;\n    value: string;\n    setByEnv: boolean;\n    disabled?: boolean;\n    helpText?: React.ReactNode;\n    onChange(id: string, value: any): void;\n}\nexport default class RadioSetting extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        disabled: false,\n    };\n\n    private handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.props.onChange(this.props.id, e.target.value);\n    };\n\n    render(): JSX.Element {\n        const options = [];\n        for (const {value, text} of this.props.values) {\n            options.push(\n                <div\n                    className='radio'\n                    key={value}\n                >\n                    <label>\n                        <input\n                            type='radio'\n                            value={value}\n                            name={this.props.id}\n                            checked={value === this.props.value}\n                            onChange={this.handleChange}\n                            disabled={this.props.disabled || this.props.setByEnv}\n                        />\n                        {text}\n                    </label>\n                </div>,\n            );\n        }\n\n        return (\n            <Setting\n                label={this.props.label}\n                inputId={this.props.id}\n                helpText={this.props.helpText}\n                setByEnv={this.props.setByEnv}\n            >\n                {options}\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport $ from 'jquery';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Setting from './setting';\n\nexport default class RemoveFileSetting extends Setting {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            helpText: PropTypes.node,\n            removeButtonText: PropTypes.node.isRequired,\n            removingText: PropTypes.node,\n            fileName: PropTypes.string.isRequired,\n            onSubmit: PropTypes.func.isRequired,\n            disabled: PropTypes.bool,\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.removeButtonRef = React.createRef();\n    }\n\n    handleRemove = (e) => {\n        e.preventDefault();\n\n        $(this.removeButtonRef.current).button('loading');\n        this.props.onSubmit(this.props.id, () => {\n            $(this.removeButtonRef.current).button('reset');\n        });\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div>\n                    <div className='help-text remove-filename'>\n                        {this.props.fileName}\n                    </div>\n                    <button\n                        type='button'\n                        className='btn btn-danger'\n                        onClick={this.handleRemove}\n                        ref={this.removeButtonRef}\n                        disabled={this.props.disabled}\n                        data-loading-text={`<span class='glyphicon glyphicon-refresh glyphicon-refresh-animate'></span> ${this.props.removingText}`}\n                    >\n                        {this.props.removeButtonText}\n                    </button>\n                </div>\n            </Setting>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport LoadingWrapper from 'components/widgets/loading/loading_wrapper';\nimport SuccessIcon from 'components/widgets/icons/fa_success_icon';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\n/**\n * A button which, when clicked, performs an action and displays\n * its outcome as either success, or failure accompanied by the\n * `message` property of the `err` object.\n */\nexport default class RequestButton extends React.PureComponent {\n    static propTypes = {\n\n        /**\n         * TD to assign to the form\n         */\n        id: PropTypes.string,\n\n        /**\n         * The action to be called to carry out the request.\n         */\n        requestAction: PropTypes.func.isRequired,\n\n        /**\n         * A component that displays help text for the request button.\n         *\n         * Typically, this will be a <FormattedMessage/>.\n         */\n        helpText: PropTypes.element,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        loadingText: PropTypes.string,\n\n        /**\n         * A component to be displayed on the button.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        buttonText: PropTypes.element.isRequired,\n\n        /**\n         * The element to display as the field label.\n         *\n         * Typically, this will be a <FormattedMessage/>\n         */\n        label: PropTypes.element,\n\n        /**\n         * True if the button form control should be disabled, otherwise false.\n         */\n        disabled: PropTypes.bool,\n\n        /**\n         * True if the config needs to be saved before running the request, otherwise false.\n         *\n         * If set to true, the action provided in the `saveConfigAction` property will be\n         * called before the action provided in the `requestAction` property, with the later\n         * only being called if the former is successful.\n         */\n        saveNeeded: PropTypes.bool,\n\n        /**\n         * Action to be called to save the config, if saveNeeded is set to true.\n         */\n        saveConfigAction: PropTypes.func,\n\n        /**\n         * True if the success message should be show when the request completes successfully,\n         * otherwise false.\n         */\n        showSuccessMessage: PropTypes.bool,\n\n        /**\n         * The message to show when the request completes successfully.\n         */\n        successMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the success message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the success message.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * The message to show when the request returns an error.\n         */\n        errorMessage: PropTypes.shape({\n\n            /**\n             * The i18n string ID for the error message.\n             */\n            id: PropTypes.string.isRequired,\n\n            /**\n             * The i18n default value for the error message.\n             *\n             * The placeholder {error} may be used to include the error message returned\n             * by the server in response to the failed request.\n             */\n            defaultMessage: PropTypes.string.isRequired,\n        }),\n\n        /**\n         * True if the {error} placeholder for the `errorMessage` property should include both\n         * the `message` and `detailed_error` properties of the error returned from the server,\n         * otherwise false to include only the `message` property.\n         */\n        includeDetailedError: PropTypes.bool,\n\n        /**\n         * An element to display adjacent to the request button.\n         */\n        alternativeActionElement: PropTypes.element,\n    }\n\n    static defaultProps = {\n        id: null,\n        disabled: false,\n        saveNeeded: false,\n        showSuccessMessage: true,\n        includeDetailedError: false,\n        successMessage: {\n            id: t('admin.requestButton.requestSuccess'),\n            defaultMessage: 'Test Successful',\n        },\n        errorMessage: {\n            id: t('admin.requestButton.requestFailure'),\n            defaultMessage: 'Test Failure: {error}',\n        },\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            busy: false,\n            fail: null,\n            success: false,\n        };\n    }\n\n    handleRequest = (e) => {\n        e.preventDefault();\n\n        this.setState({\n            busy: true,\n            fail: null,\n            success: false,\n        });\n\n        const doRequest = () => { //eslint-disable-line func-style\n            this.props.requestAction(\n                () => {\n                    this.setState({\n                        busy: false,\n                        success: true,\n                    });\n                },\n                (err) => {\n                    let errMsg = err.message;\n                    if (this.props.includeDetailedError && err.detailed_error) {\n                        errMsg += ' - ' + err.detailed_error;\n                    }\n\n                    this.setState({\n                        busy: false,\n                        fail: errMsg,\n                    });\n                },\n            );\n        };\n\n        if (this.props.saveNeeded) {\n            this.props.saveConfigAction(doRequest);\n        } else {\n            doRequest();\n        }\n    }\n\n    render() {\n        let message = null;\n        if (this.state.fail) {\n            message = (\n                <div>\n                    <div className='alert alert-warning'>\n                        <WarningIcon/>\n                        <FormattedMessage\n                            id={this.props.errorMessage.id}\n                            defaultMessage={this.props.errorMessage.defaultMessage}\n                            values={{\n                                error: this.state.fail,\n                            }}\n                        />\n                    </div>\n                </div>\n            );\n        } else if (this.state.success && this.props.showSuccessMessage) {\n            message = (\n                <div>\n                    <div className='alert alert-success'>\n                        <SuccessIcon/>\n                        <FormattedMessage\n                            id={this.props.successMessage.id}\n                            defaultMessage={this.props.successMessage.defaultMessage}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        let widgetClassNames = 'col-sm-8';\n        let label = null;\n        if (this.props.label) {\n            label = (\n                <label\n                    className='control-label col-sm-4'\n                >\n                    {this.props.label}\n                </label>\n            );\n        } else {\n            widgetClassNames = 'col-sm-offset-4 ' + widgetClassNames;\n        }\n\n        return (\n            <div\n                className='form-group'\n                id={this.props.id}\n            >\n                {label}\n                <div className={widgetClassNames}>\n                    <div>\n                        <button\n                            type='button'\n                            className='btn btn-default'\n                            onClick={this.handleRequest}\n                            disabled={this.props.disabled}\n                        >\n                            <LoadingWrapper\n                                loading={this.state.busy}\n                                text={this.props.loadingText || Utils.localizeMessage('admin.requestButton.loading', ' Loading...')}\n                            >\n                                {this.props.buttonText}\n                            </LoadingWrapper>\n                        </button>\n                        {this.props.alternativeActionElement}\n                        {message}\n                    </div>\n                    <div className='help-text'>\n                        {this.props.helpText}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {adminResetEmail} from 'actions/admin_actions.jsx';\n\nexport default class ResetEmailModal extends React.PureComponent {\n    static propTypes = {\n        user: PropTypes.object,\n        show: PropTypes.bool.isRequired,\n        onModalSubmit: PropTypes.func,\n        onModalDismissed: PropTypes.func,\n        passwordConfig: PropTypes.object,\n    };\n\n    static defaultProps = {\n        show: false,\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: null,\n        };\n\n        this.emailRef = React.createRef();\n    }\n\n    doSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.emailRef.current) {\n            const email = this.emailRef.current.value;\n            if (!isEmail(email)) {\n                const errMsg = (\n                    <FormattedMessage\n                        id='user.settings.general.validEmail'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                );\n                this.setState({error: errMsg});\n                return;\n            }\n        }\n\n        const user = Object.assign({}, this.props.user);\n        const email = this.emailRef.current.value.trim().toLowerCase();\n        user.email = email;\n\n        this.setState({error: null});\n\n        adminResetEmail(\n            user,\n            () => {\n                this.props.onModalSubmit(this.props.user);\n            },\n            (err) => {\n                const serverError = err.message ? err.message : err;\n                this.setState({error: serverError});\n            },\n        );\n    }\n\n    doCancel = () => {\n        this.setState({error: null});\n        this.props.onModalDismissed();\n    }\n\n    render() {\n        if (!this.props.user) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let errorMsg = null;\n        if (this.state.error) {\n            urlClass += ' has-error';\n            errorMsg = <div className='has-error'><p className='input__help error'>{this.state.error}</p></div>;\n        }\n\n        const title = (\n            <FormattedMessage\n                id='admin.reset_email.titleReset'\n                defaultMessage='Update Email'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetEmailModalLabel'\n                data-testid='resetEmailModal'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetEmailModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            <div className='col-sm-10'>\n                                <div\n                                    className={urlClass}\n                                    data-testid='resetEmailForm'\n                                >\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Email'\n                                        className='input-group-addon email__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_email.newEmail'\n                                            defaultMessage='New Email'\n                                        />\n                                    </span>\n                                    <input\n                                        type='email'\n                                        ref={this.emailRef}\n                                        className='form-control'\n                                        maxLength='128'\n                                        autoFocus={true}\n                                    />\n                                </div>\n                                {errorMsg}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                            data-testid='resetEmailButton'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_email.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {updateUserPassword} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport {getPasswordConfig} from 'utils/utils.jsx';\n\nimport ResetPasswordModal from './reset_password_modal';\n\ntype Actions = {\n    updateUserPassword: (userId: string, currentPassword: string, password: string) => ActionResult;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    return {\n        currentUserId: getCurrentUserId(state),\n        passwordConfig: getPasswordConfig(config),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            updateUserPassword,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPasswordModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport * as Utils from 'utils/utils.jsx';\n\ninterface PasswordConfig {\n    minimumLength: number;\n    requireLowercase: boolean;\n    requireNumber: boolean;\n    requireSymbol: boolean;\n    requireUppercase: boolean;\n}\n\ntype State = {\n    serverErrorNewPass: JSX.Element|null;\n    serverErrorCurrentPass: JSX.Element|string|null;\n}\n\ntype Props = {\n    user?: UserProfile;\n    currentUserId: string;\n    show: boolean;\n    onModalSubmit: (user?: UserProfile) => void;\n    onModalDismissed: () => void;\n    passwordConfig: PasswordConfig;\n    actions: {\n        updateUserPassword: (userId: string, currentPassword: string, password: string) => ActionResult;\n    };\n}\n\nexport default class ResetPasswordModal extends React.PureComponent<Props, State> {\n    private currentPasswordRef: React.RefObject<HTMLInputElement>;\n    private passwordRef: React.RefObject<HTMLInputElement>;\n    public static defaultProps: Partial<Props> = {\n        show: false,\n    };\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        };\n\n        this.currentPasswordRef = React.createRef();\n        this.passwordRef = React.createRef();\n    }\n\n    public componentWillUnmount(): void {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n    }\n\n    private doSubmit = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n        if (!this.props.user) {\n            return;\n        }\n\n        let currentPassword = '';\n        if (this.currentPasswordRef.current) {\n            currentPassword = (this.currentPasswordRef.current as HTMLInputElement).value;\n            if (currentPassword === '') {\n                const errorMsg = (\n                    <FormattedMessage\n                        id='admin.reset_password.missing_current'\n                        defaultMessage='Please enter your current password.'\n                    />\n                );\n                this.setState({serverErrorCurrentPass: errorMsg});\n                return;\n            }\n        }\n\n        const password = (this.passwordRef.current as HTMLInputElement).value;\n\n        const {valid, error} = Utils.isValidPassword(password, this.props.passwordConfig);\n        if (!valid && error) {\n            this.setState({serverErrorNewPass: error});\n            return;\n        }\n\n        this.setState({serverErrorNewPass: null});\n\n        const result = await this.props.actions.updateUserPassword(this.props.user.id, currentPassword, password);\n        if ('error' in result) {\n            this.setState({serverErrorCurrentPass: result.error.message});\n            return;\n        }\n        this.props.onModalSubmit(this.props.user);\n    }\n\n    private doCancel = (): void => {\n        this.setState({\n            serverErrorNewPass: null,\n            serverErrorCurrentPass: null,\n        });\n        this.props.onModalDismissed();\n    }\n\n    public render(): JSX.Element {\n        const user = this.props.user;\n        if (user == null) {\n            return <div/>;\n        }\n\n        let urlClass = 'input-group input-group--limit';\n        let serverErrorNewPass = null;\n\n        if (this.state.serverErrorNewPass) {\n            urlClass += ' has-error';\n            serverErrorNewPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorNewPass}</p></div>;\n        }\n\n        let title;\n        if (user.auth_service) {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleSwitch'\n                    defaultMessage='Switch Account to Email/Password'\n                />\n            );\n        } else {\n            title = (\n                <FormattedMessage\n                    id='admin.reset_password.titleReset'\n                    defaultMessage='Reset Password'\n                />\n            );\n        }\n\n        let currentPassword = null;\n        let serverErrorCurrentPass = null;\n        let newPasswordFocus = true;\n        if (this.props.currentUserId === user.id) {\n            newPasswordFocus = false;\n            let urlClassCurrentPass = 'input-group input-group--limit';\n            if (this.state.serverErrorCurrentPass) {\n                urlClassCurrentPass += ' has-error';\n                serverErrorCurrentPass = <div className='has-error'><p className='input__help error'>{this.state.serverErrorCurrentPass}</p></div>;\n            }\n            currentPassword = (\n                <div className='col-sm-10 password__group-addon-space'>\n                    <div className={urlClassCurrentPass}>\n                        <span\n                            data-toggle='tooltip'\n                            title='Current Password'\n                            className='input-group-addon password__group-addon'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.curentPassword'\n                                defaultMessage='Current Password'\n                            />\n                        </span>\n                        <input\n                            type='password'\n                            ref={this.currentPasswordRef}\n                            className='form-control'\n                            autoFocus={true}\n                        />\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal'\n                show={this.props.show}\n                onHide={this.doCancel}\n                role='dialog'\n                aria-labelledby='resetPasswordModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='resetPasswordModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <form\n                    role='form'\n                    className='form-horizontal'\n                >\n                    <Modal.Body>\n                        <div className='form-group'>\n                            {currentPassword}\n                            <div className='col-sm-10'>\n                                <div className={urlClass}>\n                                    <span\n                                        data-toggle='tooltip'\n                                        title='New Password'\n                                        className='input-group-addon password__group-addon'\n                                    >\n                                        <FormattedMessage\n                                            id='admin.reset_password.newPassword'\n                                            defaultMessage='New Password'\n                                        />\n                                    </span>\n                                    <input\n                                        type='password'\n                                        ref={this.passwordRef}\n                                        className='form-control'\n                                        autoFocus={newPasswordFocus}\n                                    />\n                                </div>\n                                {serverErrorNewPass}\n                                {serverErrorCurrentPass}\n                            </div>\n                        </div>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <button\n                            type='button'\n                            className='btn btn-link'\n                            onClick={this.doCancel}\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </button>\n                        <button\n                            onClick={this.doSubmit}\n                            type='submit'\n                            className='btn btn-primary'\n                        >\n                            <FormattedMessage\n                                id='admin.reset_password.reset'\n                                defaultMessage='Reset'\n                            />\n                        </button>\n                    </Modal.Footer>\n                </form>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {revokeUserAccessToken} from 'mattermost-redux/actions/users';\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport RevokeTokenButton from './revoke_token_button';\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            revokeUserAccessToken,\n        }, dispatch),\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(RevokeTokenButton);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\ninterface RevokeTokenButtonProps {\n    actions: {\n        revokeUserAccessToken: (tokenId: string) => Promise<ActionFunc | ActionResult> | ActionFunc | ActionResult;\n    };\n    tokenId: string;\n    onError: (errorMessage: string) => void;\n}\n\nexport default class RevokeTokenButton extends React.PureComponent<RevokeTokenButtonProps> {\n    private handleClick = async (e: React.MouseEvent) => {\n        e.preventDefault();\n\n        const response = await this.props.actions.revokeUserAccessToken(this.props.tokenId);\n        trackEvent('system_console', 'revoke_user_access_token');\n\n        if ('error' in response) {\n            this.props.onError(response.error.message);\n        }\n    }\n\n    render() {\n        return (\n            <button\n                type='button'\n                className='btn btn-danger'\n                onClick={this.handleClick}\n            >\n                <FormattedMessage\n                    id='admin.revoke_token_button.delete'\n                    defaultMessage='Delete'\n                />\n            </button>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nimport * as I18n from 'i18n/i18n.jsx';\n\nimport Constants from 'utils/constants';\nimport {rolesFromMapping, mappingValueFromRoles} from 'utils/policy_roles_adapter';\nimport * as Utils from 'utils/utils.jsx';\nimport RequestButton from 'components/admin_console/request_button/request_button';\nimport BooleanSetting from 'components/admin_console/boolean_setting';\nimport TextSetting from 'components/admin_console/text_setting';\nimport DropdownSetting from 'components/admin_console/dropdown_setting.jsx';\nimport MultiSelectSetting from 'components/admin_console/multiselect_settings.jsx';\nimport RadioSetting from 'components/admin_console/radio_setting';\nimport ColorSetting from 'components/admin_console/color_setting';\nimport GeneratedSetting from 'components/admin_console/generated_setting';\nimport UserAutocompleteSetting from 'components/admin_console/user_autocomplete_setting';\nimport SettingsGroup from 'components/admin_console/settings_group.jsx';\nimport JobsTable from 'components/admin_console/jobs';\nimport FileUploadSetting from 'components/admin_console/file_upload_setting.jsx';\nimport RemoveFileSetting from 'components/admin_console/remove_file_setting.jsx';\nimport SchemaText from 'components/admin_console/schema_text';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport WarningIcon from 'components/widgets/icons/fa_warning_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from 'components/widgets/admin_console/admin_header';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport Setting from './setting';\n\nexport default class SchemaAdminSettings extends React.PureComponent {\n    static propTypes = {\n        config: PropTypes.object,\n        environmentConfig: PropTypes.object,\n        setNavigationBlocked: PropTypes.func,\n        schema: PropTypes.object,\n        roles: PropTypes.object,\n        license: PropTypes.object,\n        editRole: PropTypes.func,\n        updateConfig: PropTypes.func.isRequired,\n        isDisabled: PropTypes.bool,\n        consoleAccess: PropTypes.object,\n    }\n\n    constructor(props) {\n        super(props);\n        this.isPlugin = false;\n\n        this.saveActions = [];\n\n        this.buildSettingFunctions = {\n            [Constants.SettingsTypes.TYPE_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_LONG_TEXT]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_NUMBER]: this.buildTextSetting,\n            [Constants.SettingsTypes.TYPE_COLOR]: this.buildColorSetting,\n            [Constants.SettingsTypes.TYPE_BOOL]: this.buildBoolSetting,\n            [Constants.SettingsTypes.TYPE_PERMISSION]: this.buildPermissionSetting,\n            [Constants.SettingsTypes.TYPE_DROPDOWN]: this.buildDropdownSetting,\n            [Constants.SettingsTypes.TYPE_RADIO]: this.buildRadioSetting,\n            [Constants.SettingsTypes.TYPE_BANNER]: this.buildBannerSetting,\n            [Constants.SettingsTypes.TYPE_GENERATED]: this.buildGeneratedSetting,\n            [Constants.SettingsTypes.TYPE_USERNAME]: this.buildUsernameSetting,\n            [Constants.SettingsTypes.TYPE_BUTTON]: this.buildButtonSetting,\n            [Constants.SettingsTypes.TYPE_LANGUAGE]: this.buildLanguageSetting,\n            [Constants.SettingsTypes.TYPE_JOBSTABLE]: this.buildJobsTableSetting,\n            [Constants.SettingsTypes.TYPE_FILE_UPLOAD]: this.buildFileUploadSetting,\n            [Constants.SettingsTypes.TYPE_CUSTOM]: this.buildCustomSetting,\n        };\n        this.state = {\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n            confirmNeededId: '',\n            showConfirmId: '',\n            clientWarning: '',\n        };\n        this.errorMessageRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.schema && props.schema.id !== state.prevSchemaId) {\n            return {\n                prevSchemaId: props.schema.id,\n                saveNeeded: false,\n                saving: false,\n                serverError: null,\n                errorTooltip: false,\n                ...SchemaAdminSettings.getStateFromConfig(props.config, props.schema, props.roles),\n            };\n        }\n        return null;\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault();\n\n        if (this.state.confirmNeededId) {\n            this.setState({\n                showConfirmId: this.state.confirmNeededId,\n            });\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: null,\n        });\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'permissions') {\n            const settings = (this.props.schema && this.props.schema.settings) || [];\n            const rolesBinding = settings.reduce((acc, val) => {\n                if (val.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    acc[val.permissions_mapping_name] = this.state[val.key].toString();\n                }\n                return acc;\n            }, {});\n            const updatedRoles = rolesFromMapping(rolesBinding, this.props.roles);\n\n            let success = true;\n\n            await Promise.all(Object.values(updatedRoles).map(async (item) => {\n                try {\n                    await this.props.editRole(item);\n                } catch (err) {\n                    success = false;\n                    this.setState({\n                        saving: false,\n                        serverError: err.message,\n                    });\n                }\n            }));\n\n            if (!success) {\n                return;\n            }\n        }\n\n        if (this.state.saveNeeded === 'both' || this.state.saveNeeded === 'config') {\n            this.doSubmit(SchemaAdminSettings.getStateFromConfig);\n        } else {\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.setNavigationBlocked(false);\n        }\n    }\n\n    getConfigFromState(config) {\n        const schema = this.props.schema;\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    this.setConfigValue(config, setting.key, null);\n                    return;\n                }\n\n                let value = this.getSettingValue(setting);\n                const previousValue = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigSave) {\n                    value = setting.onConfigSave(value, previousValue);\n                }\n\n                this.setConfigValue(config, setting.key, value);\n            });\n\n            if (schema.onConfigSave) {\n                return schema.onConfigSave(config, this.props.config);\n            }\n        }\n\n        return config;\n    }\n\n    static getStateFromConfig(config, schema, roles) {\n        let state = {};\n\n        if (schema) {\n            const settings = schema.settings || [];\n            settings.forEach((setting) => {\n                if (!setting.key) {\n                    return;\n                }\n\n                if (setting.type === Constants.SettingsTypes.TYPE_PERMISSION) {\n                    try {\n                        state[setting.key] = mappingValueFromRoles(setting.permissions_mapping_name, roles) === 'true';\n                    } catch (e) {\n                        state[setting.key] = false;\n                    }\n                    return;\n                }\n\n                let value = SchemaAdminSettings.getConfigValue(config, setting.key);\n\n                if (setting.onConfigLoad) {\n                    value = setting.onConfigLoad(value, config);\n                }\n\n                state[setting.key] = value == null ? setting.default : value;\n            });\n\n            if (schema.onConfigLoad) {\n                state = {...state, ...schema.onConfigLoad(config)};\n            }\n        }\n\n        return state;\n    }\n\n    getSetting(key) {\n        for (const setting of this.props.schema.settings) {\n            if (setting.key === key) {\n                return setting;\n            }\n        }\n\n        return null;\n    }\n\n    getSettingValue(setting) {\n        // Force boolean values to false when disabled.\n        if (setting.type === Constants.SettingsTypes.TYPE_BOOL) {\n            if (this.isDisabled(setting)) {\n                return false;\n            }\n        }\n        if (setting.type === Constants.SettingsTypes.TYPE_TEXT && setting.dynamic_value) {\n            return setting.dynamic_value(this.state[setting.key], this.props.config, this.state, this.props.license);\n        }\n\n        return this.state[setting.key];\n    }\n\n    renderTitle = () => {\n        if (!this.props.schema) {\n            return '';\n        }\n        if (this.props.schema.translate === false) {\n            return (\n                <AdminHeader>\n                    {this.props.schema.name || this.props.schema.id}\n                </AdminHeader>\n            );\n        }\n        return (\n            <FormattedAdminHeader\n                id={this.props.schema.name || this.props.schema.id}\n                defaultMessage={this.props.schema.name_default || this.props.schema.id}\n            />\n        );\n    };\n\n    renderBanner = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (setting.label.translate === false) {\n            return <span>{setting.label}</span>;\n        }\n\n        if (typeof setting.label === 'string') {\n            if (setting.label_markdown) {\n                return (\n                    <FormattedMarkdownMessage\n                        id={setting.label}\n                        values={setting.label_values}\n                        defaultMessage={setting.label_default}\n                    />\n                );\n            }\n            return (\n                <FormattedMessage\n                    id={setting.label}\n                    defaultMessage={setting.label_default}\n                    values={setting.label_values}\n                />\n            );\n        }\n        return setting.label;\n    }\n\n    renderHelpText = (setting) => {\n        if (!this.props.schema) {\n            return <span>{''}</span>;\n        }\n\n        if (!setting.help_text) {\n            return null;\n        }\n\n        let helpText;\n        let isMarkdown;\n        let helpTextValues;\n        let helpTextDefault;\n        if (setting.disabled_help_text && this.isDisabled(setting)) {\n            helpText = setting.disabled_help_text;\n            isMarkdown = setting.disabled_help_text_markdown;\n            helpTextValues = setting.disabled_help_text_values;\n            helpTextDefault = setting.disabled_help_text_default;\n        } else {\n            helpText = setting.help_text;\n            isMarkdown = setting.help_text_markdown;\n            helpTextValues = setting.help_text_values;\n            helpTextDefault = setting.help_text_default;\n        }\n\n        return (\n            <SchemaText\n                isMarkdown={isMarkdown}\n                isTranslated={setting.translate}\n                text={helpText}\n                textDefault={helpTextDefault}\n                textValues={helpTextValues}\n            />\n        );\n    }\n\n    renderLabel = (setting) => {\n        if (!this.props.schema) {\n            return '';\n        }\n\n        if (setting.translate === false) {\n            return setting.label;\n        }\n        return Utils.localizeMessage(setting.label, setting.label_default);\n    }\n\n    isDisabled = (setting) => {\n        const enterpriseReady = this.props.config.BuildEnterpriseReady === 'true';\n        if (typeof setting.isDisabled === 'function') {\n            return setting.isDisabled(this.props.config, this.state, this.props.license, enterpriseReady, this.props.consoleAccess);\n        }\n        return Boolean(setting.isDisabled);\n    }\n\n    isHidden = (setting) => {\n        if (typeof setting.isHidden === 'function') {\n            return setting.isHidden(this.props.config, this.state, this.props.license);\n        }\n        return Boolean(setting.isHidden);\n    }\n\n    buildButtonSetting = (setting) => {\n        const handleRequestAction = (success, error) => {\n            const successCallback = (data) => {\n                const metadata = new Map(Object.entries(data));\n                const settings = (this.props.schema && this.props.schema.settings) || [];\n                settings.forEach((tsetting) => {\n                    if (tsetting.key && tsetting.setFromMetadataField) {\n                        const inputData = metadata.get(tsetting.setFromMetadataField);\n\n                        if (tsetting.type === Constants.SettingsTypes.TYPE_TEXT) {\n                            this.setState({[tsetting.key]: inputData, [`${tsetting.key}Error`]: null});\n                        } else if (tsetting.type === Constants.SettingsTypes.TYPE_FILE_UPLOAD) {\n                            if (this.buildSettingFunctions[tsetting.type] && this.buildSettingFunctions[tsetting.type](tsetting).props.onSetData) {\n                                this.buildSettingFunctions[tsetting.type](tsetting).props.onSetData(tsetting.key, inputData);\n                            }\n                        }\n                    }\n                });\n\n                if (success && typeof success === 'function') {\n                    success();\n                }\n            };\n\n            var sourceUrlKey = 'ServiceSettings.SiteURL';\n            if (setting.sourceUrlKey) {\n                sourceUrlKey = setting.sourceUrlKey;\n            }\n            setting.action(successCallback, error, this.state[sourceUrlKey]);\n        };\n\n        return (\n            <RequestButton\n                id={setting.key}\n                key={this.props.schema.id + '_text_' + setting.key}\n                requestAction={handleRequestAction}\n                helpText={this.renderHelpText(setting)}\n                loadingText={Utils.localizeMessage(setting.loading, setting.loading_default)}\n                buttonText={<span>{this.renderLabel(setting)}</span>}\n                showSuccessMessage={Boolean(setting.success_message)}\n                includeDetailedError={true}\n                disabled={this.isDisabled(setting)}\n                errorMessage={{\n                    id: setting.error_message,\n                    defaultMessage: setting.error_message_default,\n                }}\n                successMessage={setting.success_message && {\n                    id: setting.success_message,\n                    defaultMessage: setting.success_message_default,\n                }}\n            />\n        );\n    }\n\n    buildTextSetting = (setting) => {\n        let inputType = 'input';\n        if (setting.type === Constants.SettingsTypes.TYPE_NUMBER) {\n            inputType = 'number';\n        } else if (setting.type === Constants.SettingsTypes.TYPE_LONG_TEXT) {\n            inputType = 'textarea';\n        }\n\n        let value = this.state[setting.key] || '';\n        if (setting.dynamic_value) {\n            value = setting.dynamic_value(value, this.props.config, this.state, this.props.license);\n        }\n\n        return (\n            <TextSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                type={inputType}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                maxLength={setting.max_length}\n            />\n        );\n    }\n\n    buildColorSetting = (setting) => {\n        return (\n            <ColorSetting\n                key={this.props.schema.id + '_text_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBoolSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildPermissionSetting = (setting) => {\n        return (\n            <BooleanSetting\n                key={this.props.schema.id + '_bool_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || false}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handlePermissionChange}\n            />\n        );\n    }\n\n    buildDropdownSetting = (setting) => {\n        const enterpriseReady = this.props.config.BuildEnterpriseReady === 'true';\n        const options = [];\n        setting.options.forEach((option) => {\n            if (!option.isHidden || !option.isHidden(this.props.config, this.state, this.props.license, enterpriseReady)) {\n                options.push(option);\n            }\n        });\n\n        const values = options.map((o) => ({value: o.value, text: Utils.localizeMessage(o.display_name, o.display_name_default)}));\n        const selectedValue = this.state[setting.key] || values[0].value;\n\n        let selectedOptionForHelpText = null;\n        for (const option of options) {\n            if (option.help_text && option.value === selectedValue) {\n                selectedOptionForHelpText = option;\n                break;\n            }\n        }\n\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_dropdown_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(selectedOptionForHelpText || setting)}\n                value={selectedValue}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildLanguageSetting = (setting) => {\n        const locales = I18n.getAllLanguages();\n        const values = Object.keys(locales).map((l) => {\n            return {value: locales[l].value, text: locales[l].name, order: locales[l].order};\n        }).sort((a, b) => a.order - b.order);\n\n        if (setting.multiple) {\n            const noResultText = (\n                <FormattedMessage\n                    id={setting.no_result}\n                    defaultMessage={setting.no_result_default}\n                />\n            );\n\n            return (\n                <MultiSelectSetting\n                    key={this.props.schema.id + '_language_' + setting.key}\n                    id={setting.key}\n                    label={this.renderLabel(setting)}\n                    values={values}\n                    helpText={this.renderHelpText(setting)}\n                    selected={(this.state[setting.key] && this.state[setting.key].split(',')) || []}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                    onChange={(changedId, value) => this.handleChange(changedId, value.join(','))}\n                    noResultText={noResultText}\n                />\n            );\n        }\n        return (\n            <DropdownSetting\n                key={this.props.schema.id + '_language_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                values={values}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0].value}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildRadioSetting = (setting) => {\n        const options = setting.options || [];\n        const values = options.map((o) => ({value: o.value, text: o.display_name}));\n\n        return (\n            <RadioSetting\n                key={this.props.schema.id + '_radio_' + setting.key}\n                id={setting.key}\n                values={values}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key] || values[0]}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildBannerSetting = (setting) => {\n        if (this.isDisabled(setting)) {\n            return null;\n        }\n        return (\n            <div\n                className={'banner ' + setting.banner_type}\n                key={this.props.schema.id + '_bool_' + setting.key}\n            >\n                <div className='banner__content'>\n                    <span>\n                        { setting.banner_type === 'warning' ? <WarningIcon additionalClassName='banner__icon'/> : null}\n                        {this.renderBanner(setting)}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n\n    buildGeneratedSetting = (setting) => {\n        return (\n            <GeneratedSetting\n                key={this.props.schema.id + '_generated_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                regenerateHelpText={setting.regenerate_help_text}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default)}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleGeneratedChange}\n            />\n        );\n    }\n\n    handleGeneratedChange = (id, s) => {\n        this.handleChange(id, s.replace('+', '-').replace('/', '_'));\n    }\n\n    handleChange = (id, value, confirm = false, doSubmit = false, warning = false) => {\n        const saveNeeded = this.state.saveNeeded === 'permissions' ? 'both' : 'config';\n        const clientWarning = warning === false ? this.state.clientWarning : warning;\n\n        let confirmNeededId = confirm ? id : this.state.confirmNeededId;\n        if (id === this.state.confirmNeededId && !confirm) {\n            confirmNeededId = '';\n        }\n\n        this.setState({\n            saveNeeded,\n            confirmNeededId,\n            clientWarning,\n            [id]: value,\n        });\n\n        if (doSubmit) {\n            this.doSubmit(SchemaAdminSettings.getStateFromConfig);\n        }\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    handlePermissionChange = (id, value) => {\n        let saveNeeded = 'permissions';\n        if (this.state.saveNeeded === 'config') {\n            saveNeeded = 'both';\n        }\n        this.setState({\n            saveNeeded,\n            [id]: value,\n        });\n\n        this.props.setNavigationBlocked(true);\n    }\n\n    buildUsernameSetting = (setting) => {\n        return (\n            <UserAutocompleteSetting\n                key={this.props.schema.id + '_userautocomplete_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                placeholder={Utils.localizeMessage(setting.placeholder, setting.placeholder_default) || Utils.localizeMessage('search_bar.search', 'Search')}\n                value={this.state[setting.key] || ''}\n                disabled={this.isDisabled(setting)}\n                onChange={this.handleChange}\n            />\n        );\n    }\n\n    buildJobsTableSetting = (setting) => {\n        return (\n            <JobsTable\n                key={this.props.schema.id + '_jobstable_' + setting.key}\n                jobType={setting.job_type}\n                getExtraInfoText={setting.render_job}\n                disabled={this.isDisabled(setting)}\n                createJobButtonText={\n                    <FormattedMessage\n                        id={setting.label}\n                        defaultMessage={setting.label_default}\n                    />\n                }\n                createJobHelpText={\n                    <FormattedMarkdownMessage\n                        id={setting.help_text}\n                        defaultMessage={setting.help_text_default}\n                    />\n                }\n            />\n        );\n    }\n\n    buildFileUploadSetting = (setting) => {\n        const setData = (id, data) => {\n            const successCallback = (filename) => {\n                this.handleChange(id, filename);\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\n            };\n            const errorCallback = (error) => {\n                this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\n            };\n            setting.set_action(successCallback, errorCallback, data);\n        };\n\n        if (this.state[setting.key]) {\n            const removeFile = (id, callback) => {\n                const successCallback = () => {\n                    this.handleChange(setting.key, '');\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: null});\n                };\n                const errorCallback = (error) => {\n                    callback();\n                    this.setState({[setting.key]: null, [`${setting.key}Error`]: error.message});\n                };\n                setting.remove_action(successCallback, errorCallback);\n            };\n            return (\n                <RemoveFileSetting\n                    id={this.props.schema.id}\n                    key={this.props.schema.id + '_fileupload_' + setting.key}\n                    label={this.renderLabel(setting)}\n                    helpText={\n                        <FormattedMessage\n                            id={setting.remove_help_text}\n                            defaultMessage={setting.remove_help_text_default}\n                        />\n                    }\n                    removeButtonText={Utils.localizeMessage(setting.remove_button_text, setting.remove_button_text_default)}\n                    removingText={Utils.localizeMessage(setting.removing_text, setting.removing_text_default)}\n                    fileName={this.state[setting.key]}\n                    onSubmit={removeFile}\n                    onSetData={setData}\n                    disabled={this.isDisabled(setting)}\n                    setByEnv={this.isSetByEnv(setting.key)}\n                />\n            );\n        }\n        const uploadFile = (id, file, callback) => {\n            const successCallback = (filename) => {\n                this.handleChange(id, filename);\n                this.setState({[setting.key]: filename, [`${setting.key}Error`]: null});\n                if (callback && typeof callback === 'function') {\n                    callback();\n                }\n            };\n            const errorCallback = (error) => {\n                if (callback && typeof callback === 'function') {\n                    callback(error.message);\n                }\n            };\n            setting.upload_action(file, successCallback, errorCallback);\n        };\n\n        return (\n            <FileUploadSetting\n                id={setting.key}\n                key={this.props.schema.id + '_fileupload_' + setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                uploadingText={Utils.localizeMessage(setting.uploading_text, setting.uploading_text_default)}\n                disabled={this.isDisabled(setting)}\n                fileType={setting.fileType}\n                onSubmit={uploadFile}\n                onSetData={setData}\n                error={this.state.idpCertificateFileError}\n                setByEnv={this.isSetByEnv(setting.key)}\n            />\n        );\n    }\n\n    buildCustomSetting = (setting) => {\n        const CustomComponent = setting.component;\n\n        const componentInstance = (\n            <CustomComponent\n                key={this.props.schema.id + '_custom_' + setting.key}\n                id={setting.key}\n                label={this.renderLabel(setting)}\n                helpText={this.renderHelpText(setting)}\n                value={this.state[setting.key]}\n                disabled={this.isDisabled(setting)}\n                config={this.props.config}\n                license={this.props.license}\n                setByEnv={this.isSetByEnv(setting.key)}\n                onChange={this.handleChange}\n                registerSaveAction={this.registerSaveAction}\n                setSaveNeeded={this.setSaveNeeded}\n                unRegisterSaveAction={this.unRegisterSaveAction}\n                cancelSubmit={this.cancelSubmit}\n                showConfirm={this.state.showConfirmId === setting.key}\n            />);\n\n        // Show the plugin custom setting title\n        // consistently as other settings with the Setting component\n        if (setting.showTitle) {\n            return (\n                <Setting\n                    label={setting.label}\n                    inputId={setting.key}\n                    helpText={setting.helpText}\n                >\n                    {componentInstance}\n                </Setting>\n            );\n        }\n        return componentInstance;\n    }\n\n    unRegisterSaveAction = (saveAction) => {\n        const indexOfSaveAction = this.saveActions.indexOf(saveAction);\n        this.saveActions.splice(indexOfSaveAction, 1);\n    }\n\n    registerSaveAction = (saveAction) => {\n        this.saveActions.push(saveAction);\n    }\n\n    setSaveNeeded = () => {\n        this.setState({saveNeeded: 'config'});\n        this.props.setNavigationBlocked(true);\n    }\n\n    renderSettings = () => {\n        const schema = this.props.schema;\n\n        const settingsList = [];\n        if (schema.settings) {\n            schema.settings.forEach((setting) => {\n                if (this.buildSettingFunctions[setting.type] && !this.isHidden(setting)) {\n                    settingsList.push(this.buildSettingFunctions[setting.type](setting));\n                }\n            });\n        }\n\n        let header;\n        if (schema.header) {\n            header = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.header}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        let footer;\n        if (schema.footer) {\n            footer = (\n                <div className='banner'>\n                    <SchemaText\n                        text={schema.footer}\n                        isMarkdown={true}\n                        isTranslated={this.props.schema.translate}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <SettingsGroup container={false}>\n                {header}\n                {settingsList}\n                {footer}\n            </SettingsGroup>\n        );\n    }\n\n    closeTooltip = () => {\n        this.setState({errorTooltip: false});\n    }\n\n    openTooltip = (e) => {\n        const elm = e.currentTarget.querySelector('.control-label');\n        const isElipsis = elm.offsetWidth < elm.scrollWidth;\n        this.setState({errorTooltip: isElipsis});\n    }\n\n    doSubmit = async (getStateFromConfig) => {\n        // clone config so that we aren't modifying data in the stores\n        let config = JSON.parse(JSON.stringify(this.props.config));\n        config = this.getConfigFromState(config);\n\n        const {error} = await this.props.updateConfig(config);\n        if (error) {\n            this.setState({\n                serverError: error.message,\n                serverErrorId: error.id,\n            });\n        } else {\n            this.setState(getStateFromConfig(config));\n        }\n\n        if (this.handleSaved) {\n            this.handleSaved(config);\n        }\n\n        const results = [];\n        for (const saveAction of this.saveActions) {\n            results.push(saveAction());\n        }\n\n        const hasSaveActionError = await Promise.all(results).then((values) => values.some(((value) => value.error && value.error.message)));\n\n        const hasError = this.state.serverError || hasSaveActionError;\n        if (hasError) {\n            this.setState({saving: false});\n        } else {\n            this.setState({saving: false, saveNeeded: false, confirmNeededId: '', showConfirmId: '', clientWarning: ''});\n            this.props.setNavigationBlocked(false);\n        }\n    };\n\n    cancelSubmit = () => {\n        this.setState({\n            showConfirmId: '',\n        });\n    };\n\n    // Some path parts may contain periods (e.g. plugin ids), but path walking the configuration\n    // relies on splitting by periods. Use this pair of functions to allow such path parts.\n    //\n    // It is assumed that no path contains the symbol '+'.\n    static escapePathPart(pathPart) {\n        return pathPart.replace(/\\./g, '+');\n    }\n\n    static unescapePathPart(pathPart) {\n        return pathPart.replace(/\\+/g, '.');\n    }\n\n    static getConfigValue(config, path) {\n        const pathParts = path.split('.');\n\n        return pathParts.reduce((obj, pathPart) => {\n            if (!obj) {\n                return null;\n            }\n\n            return obj[SchemaAdminSettings.unescapePathPart(pathPart)];\n        }, config);\n    }\n\n    setConfigValue(config, path, value) {\n        function setValue(obj, pathParts) {\n            const part = SchemaAdminSettings.unescapePathPart(pathParts[0]);\n\n            if (pathParts.length === 1) {\n                obj[part] = value;\n            } else {\n                if (obj[part] == null) {\n                    obj[part] = {};\n                }\n\n                setValue(obj[part], pathParts.slice(1));\n            }\n        }\n\n        setValue(config, path.split('.'));\n    }\n\n    isSetByEnv = (path) => {\n        return Boolean(SchemaAdminSettings.getConfigValue(this.props.environmentConfig, path));\n    };\n\n    hybridSchemaAndComponent = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent\n                    {...this.props}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n        return null;\n    }\n\n    render = () => {\n        const schema = this.props.schema;\n        if (schema && schema.component && !schema.settings) {\n            const CustomComponent = schema.component;\n            return (\n                <CustomComponent\n                    {...this.props}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n\n        if (!schema) {\n            return (\n                <div className={'wrapper--fixed'}>\n                    <AdminHeader>\n                        <FormattedMessage\n                            id='error.plugin_not_found.title'\n                            defaultMessage='Plugin Not Found'\n                        />\n                    </AdminHeader>\n                    <div className='admin-console__wrapper'>\n                        <div className='admin-console__content'>\n                            <p>\n                                <FormattedMessage\n                                    id='error.plugin_not_found.desc'\n                                    defaultMessage='The plugin you are looking for does not exist.'\n                                />\n                            </p>\n                            <Link\n                                to={'plugin_management'}\n                            >\n                                <FormattedMessage\n                                    id='admin.plugin.backToPlugins'\n                                    defaultMessage='Go back to the Plugins'\n                                />\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className={'wrapper--fixed ' + this.state.customComponentWrapperClass}>\n                {this.renderTitle()}\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <form\n                            className='form-horizontal'\n                            role='form'\n                            onSubmit={this.handleSubmit}\n                        >\n                            {this.renderSettings()}\n                        </form>\n                        {this.hybridSchemaAndComponent()}\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded || (this.canSave && !this.canSave())}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        data-testid='errorMessage'\n                        ref={this.errorMessageRef}\n                        onMouseOver={this.openTooltip}\n                        onMouseOut={this.closeTooltip}\n                    >\n                        <FormError\n                            iconClassName='fa-exclamation-triangle'\n                            textClassName='has-warning'\n                            error={this.state.clientWarning}\n                        />\n\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                        placement='top'\n                        target={this.errorMessageRef.current}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n            </div>\n        );\n    }\n}\n/* eslint-disable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport marked from 'marked';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage, {CustomRenderer} from 'components/formatted_markdown_message';\n\nexport default class SchemaText extends React.PureComponent {\n    static propTypes = {\n        isMarkdown: PropTypes.bool,\n        isTranslated: PropTypes.bool,\n        text: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.object,\n        ]).isRequired,\n        textDefault: PropTypes.string,\n        textValues: PropTypes.object,\n    };\n\n    static defaultProps = {\n        isTranslated: true,\n    };\n\n    renderTranslated = () => {\n        const {\n            isMarkdown,\n            text,\n            textDefault,\n            textValues,\n        } = this.props;\n\n        if (typeof text === 'object') {\n            return text;\n        }\n\n        if (isMarkdown) {\n            return (\n                <FormattedMarkdownMessage\n                    id={text}\n                    defaultMessage={textDefault}\n                    values={textValues}\n                />\n            );\n        }\n\n        return (\n            <FormattedMessage\n                id={text}\n                values={textValues}\n                defaultMessage={textDefault}\n            />\n        );\n    };\n\n    renderUntranslated = () => {\n        if (this.props.isMarkdown) {\n            const html = marked(this.props.text, {\n                breaks: true,\n                sanitize: true,\n                renderer: new CustomRenderer(),\n            });\n\n            return <span dangerouslySetInnerHTML={{__html: html}}/>;\n        }\n\n        return <span>{this.props.text}</span>;\n    };\n\n    render() {\n        return this.props.isTranslated ? this.renderTranslated() : this.renderUntranslated();\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {getLogs} from 'mattermost-redux/actions/admin';\n\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport Logs from './logs';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        logs: Selectors.getLogs(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getLogs,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\n\nconst NEXT_BUTTON_TIMEOUT = 500;\n\ntype Props = {\n    logs: string[];\n    page: number;\n    perPage: number;\n    nextPage: () => void;\n    previousPage: () => void;\n};\n\ntype State = {\n    nextDisabled: boolean;\n};\n\nexport default class Logs extends React.PureComponent<Props, State> {\n    private logPanel: React.RefObject<HTMLDivElement>;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.logPanel = React.createRef();\n\n        this.state = {\n            nextDisabled: false,\n        };\n    }\n\n    componentDidMount() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        if (node) {\n            node.scrollTop = node.scrollHeight;\n            node.focus();\n        }\n    }\n\n    componentDidUpdate() {\n        // Scroll Down to get the latest logs\n        const node = this.logPanel.current;\n        if (node) {\n            node.scrollTop = node.scrollHeight;\n        }\n    }\n\n    nextPage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        this.setState({nextDisabled: true});\n        setTimeout(() => this.setState({nextDisabled: false}), NEXT_BUTTON_TIMEOUT);\n\n        this.props.nextPage();\n    }\n\n    previousPage = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n        e.preventDefault();\n\n        this.props.previousPage();\n    }\n\n    render() {\n        let content = null;\n        let nextButton;\n        let previousButton;\n\n        if (this.props.logs.length >= this.props.perPage) {\n            nextButton = (\n                <button\n                    type='button'\n                    className='btn btn-default filter-control filter-control__next pull-right'\n                    onClick={this.nextPage}\n                    disabled={this.state.nextDisabled}\n                >\n                    <FormattedMessage\n                        id='admin.logs.next'\n                        defaultMessage='Next'\n                    />\n                    <NextIcon additionalClassName='ml-2'/>\n                </button>\n            );\n        }\n\n        if (this.props.page > 0) {\n            previousButton = (\n                <button\n                    type='button'\n                    className='btn btn-default filter-control filter-control__prev'\n                    onClick={this.previousPage}\n                >\n                    <FormattedMessage\n                        id='generic_icons.previous'\n                        defaultMessage='Previous Icon'\n                    >\n                        {(title: string) => (\n                            <i\n                                className='fa fa-angle-left'\n                                title={title}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='admin.logs.prev'\n                        defaultMessage='Previous'\n                    />\n                </button>\n            );\n        }\n\n        content = [];\n\n        for (let i = 0; i < this.props.logs.length; i++) {\n            const style: React.CSSProperties = {\n                whiteSpace: 'nowrap',\n                fontFamily: 'monospace',\n                color: '',\n            };\n\n            if (this.props.logs[i].indexOf('[EROR]') > 0) {\n                style.color = 'red';\n            }\n\n            content.push(<br key={'br_' + i}/>);\n            content.push(\n                <span\n                    key={'log_' + i}\n                    style={style}\n                >\n                    {this.props.logs[i]}\n                </span>,\n            );\n        }\n\n        return (\n            <div>\n                <div\n                    tabIndex={-1}\n                    ref={this.logPanel}\n                    className='log__panel'\n                >\n                    {content}\n                </div>\n                <div className='pt-3 pb-3 filter-controls'>\n                    {previousButton}\n                    {nextButton}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport LogList from './log_list';\n\ntype Props = {\n    logs: string[];\n    actions: {\n        getLogs: (page?: number | undefined, perPage?: number | undefined) => ActionFunc;\n    };\n};\n\ntype State = {\n    loadingLogs: boolean;\n    page: number;\n    perPage: number;\n};\n\nexport default class Logs extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loadingLogs: true,\n            page: 0,\n            perPage: 1000,\n        };\n    }\n\n    componentDidMount() {\n        this.reload();\n    }\n\n    componentDidUpdate(prevProps: Props, prevState: State) {\n        if (this.state.page !== prevState.page) {\n            this.reload();\n        }\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    reload = async () => {\n        this.setState({loadingLogs: true});\n        await this.props.actions.getLogs(this.state.page, this.state.perPage);\n        this.setState({loadingLogs: false});\n    }\n\n    render() {\n        let content = null;\n\n        if (this.state.loadingLogs || !this.props.logs || this.props.logs.length === 0) {\n            content = <LoadingScreen/>;\n        } else {\n            content = (\n                <LogList\n                    {...this.props}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    page={this.state.page}\n                    perPage={this.state.perPage}\n                />\n            );\n        }\n\n        return (\n            <div className='wrapper--admin'>\n                <FormattedAdminHeader\n                    id='admin.logs.title'\n                    defaultMessage='Server Logs'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-logs-content admin-console__content'>\n                        <div className='banner'>\n                            <div className='banner__content'>\n                                <FormattedMessage\n                                    id='admin.logs.bannerDesc'\n                                    defaultMessage='To look up users by User ID or Token ID, go to Reporting > Users and paste the ID into the search filter.'\n                                />\n                            </div>\n                        </div>\n                        <button\n                            type='submit'\n                            className='btn btn-primary'\n                            onClick={this.reload}\n                        >\n                            <FormattedMessage\n                                id='admin.logs.reload'\n                                defaultMessage='Reload'\n                            />\n                        </button>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport * as Utils from 'utils/utils.jsx';\n\nimport AdminSettings from './admin_settings';\nimport BooleanSetting from './boolean_setting';\nimport SettingsGroup from './settings_group.jsx';\nimport TextSetting from './text_setting';\n\nexport default class SessionLengthSettings extends AdminSettings {\n    getConfigFromState = (config) => {\n        const MINIMUM_IDLE_TIMEOUT = 5;\n\n        config.ServiceSettings.ExtendSessionLengthWithActivity = this.state.extendSessionLengthWithActivity;\n        config.ServiceSettings.SessionLengthWebInDays = this.parseIntNonZero(this.state.sessionLengthWebInDays);\n        config.ServiceSettings.SessionLengthMobileInDays = this.parseIntNonZero(this.state.sessionLengthMobileInDays);\n        config.ServiceSettings.SessionLengthSSOInDays = this.parseIntNonZero(this.state.sessionLengthSSOInDays);\n        config.ServiceSettings.SessionCacheInMinutes = this.parseIntNonZero(this.state.sessionCacheInMinutes);\n        config.ServiceSettings.SessionIdleTimeoutInMinutes = this.parseIntZeroOrMin(this.state.sessionIdleTimeoutInMinutes, MINIMUM_IDLE_TIMEOUT);\n\n        return config;\n    }\n\n    getStateFromConfig(config) {\n        return {\n            extendSessionLengthWithActivity: config.ServiceSettings.ExtendSessionLengthWithActivity,\n            sessionLengthWebInDays: config.ServiceSettings.SessionLengthWebInDays,\n            sessionLengthMobileInDays: config.ServiceSettings.SessionLengthMobileInDays,\n            sessionLengthSSOInDays: config.ServiceSettings.SessionLengthSSOInDays,\n            sessionCacheInMinutes: config.ServiceSettings.SessionCacheInMinutes,\n            sessionIdleTimeoutInMinutes: config.ServiceSettings.SessionIdleTimeoutInMinutes,\n        };\n    }\n\n    renderTitle() {\n        return (\n            <FormattedMessage\n                id='admin.sessionLengths.title'\n                defaultMessage='Session Lengths'\n            />\n        );\n    }\n\n    renderSettings = () => {\n        let sessionLengthWebHelpText;\n        let sessionLengthMobileHelpText;\n        let sessionLengthSSOHelpText;\n        let sessionTimeoutSetting;\n        if (this.state.extendSessionLengthWithActivity) {\n            sessionLengthWebHelpText = (\n                <FormattedMessage\n                    id='admin.service.webSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session when using email and AD/LDAP authentication. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthMobileHelpText = (\n                <FormattedMessage\n                    id='admin.service.mobileSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session on mobile. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthSSOHelpText = (\n                <FormattedMessage\n                    id='admin.service.ssoSessionDaysDesc.extendLength'\n                    defaultMessage='Set the number of days from the last activity in Mattermost to the expiry of the user’s session for SSO authentication, such as SAML, GitLab and OAuth 2.0. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.'\n                />\n            );\n        } else {\n            sessionLengthWebHelpText = (\n                <FormattedMessage\n                    id='admin.service.webSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthMobileHelpText = (\n                <FormattedMessage\n                    id='admin.service.mobileSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. After changing this setting, the new session length will take effect after the next time the user enters their credentials.'\n                />\n            );\n            sessionLengthSSOHelpText = (\n                <FormattedMessage\n                    id='admin.service.ssoSessionDaysDesc'\n                    defaultMessage='The number of days from the last time a user entered their credentials to the expiry of the users session. If the authentication method is SAML or GitLab, the user may automatically be logged back in to Mattermost if they are already logged in to SAML or GitLab. After changing this setting, the setting will take effect after the next time the user enters their credentials.'\n                />\n            );\n        }\n        if (this.props.license.Compliance && !this.state.extendSessionLengthWithActivity) {\n            sessionTimeoutSetting = (\n                <TextSetting\n                    id='sessionIdleTimeoutInMinutes'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.sessionIdleTimeout'\n                            defaultMessage='Session Idle Timeout (minutes):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionIdleTimeoutEx', 'E.g.: \"60\"')}\n                    helpText={\n                        <FormattedMarkdownMessage\n                            id='admin.service.sessionIdleTimeoutDesc'\n                            defaultMessage=\"The number of minutes from the last time a user was active on the system to the expiry of the user\\'s session. Once expired, the user will need to log in to continue. Minimum is 5 minutes, and 0 is unlimited.\\n \\nApplies to the desktop app and browsers. For mobile apps, use an EMM provider to lock the app when not in use. In High Availability mode, enable IP hash load balancing for reliable timeout measurement.\"\n                        />\n                    }\n                    value={this.state.sessionIdleTimeoutInMinutes}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionIdleTimeoutInMinutes')}\n                    disabled={this.props.isDisabled}\n                />\n            );\n        }\n\n        return (\n            <SettingsGroup>\n                <BooleanSetting\n                    id='extendSessionLengthWithActivity'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.extendSessionLengthActivity.label'\n                            defaultMessage='Extend session length with activity: '\n                        />\n                    }\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.extendSessionLengthActivity.helpText'\n                            defaultMessage='When true, sessions will be automatically extended when the user is active in their Mattermost client. Users sessions will only expire if they are not active in their Mattermost client for the entire duration of the session lengths defined in the fields below. When false, sessions will not extend with activity in Mattermost. User sessions will immediately expire at the end of the session length or idle timeouts defined below. '\n                        />\n                    }\n                    value={this.state.extendSessionLengthWithActivity}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.ExtendSessionLengthWithActivity')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='sessionLengthWebInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.webSessionDays'\n                            defaultMessage='Session Length AD/LDAP and Email (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthWebHelpText}\n                    value={this.state.sessionLengthWebInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthWebInDays')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='sessionLengthMobileInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.mobileSessionDays'\n                            defaultMessage='Session Length Mobile (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthMobileHelpText}\n                    value={this.state.sessionLengthMobileInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthMobileInDays')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='sessionLengthSSOInDays'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.ssoSessionDays'\n                            defaultMessage='Session Length SSO (days):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionDaysEx', 'E.g.: \"30\"')}\n                    helpText={sessionLengthSSOHelpText}\n                    value={this.state.sessionLengthSSOInDays}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionLengthSSOInDays')}\n                    disabled={this.props.isDisabled}\n                />\n                <TextSetting\n                    id='sessionCacheInMinutes'\n                    label={\n                        <FormattedMessage\n                            id='admin.service.sessionCache'\n                            defaultMessage='Session Cache (minutes):'\n                        />\n                    }\n                    placeholder={Utils.localizeMessage('admin.service.sessionMinutesEx', 'E.g.: \"10\"')}\n                    helpText={\n                        <FormattedMessage\n                            id='admin.service.sessionCacheDesc'\n                            defaultMessage='The number of minutes to cache a session in memory:'\n                        />\n                    }\n                    value={this.state.sessionCacheInMinutes}\n                    onChange={this.handleChange}\n                    setByEnv={this.isSetByEnv('ServiceSettings.SessionCacheInMinutes')}\n                    disabled={this.props.isDisabled}\n                />\n                {sessionTimeoutSetting}\n            </SettingsGroup>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nexport default function SetByEnv() {\n    return (\n        <div className='alert alert-warning'>\n            <FormattedMessage\n                id='admin.set_by_env'\n                defaultMessage='This setting has been set through an environment variable. It cannot be changed through the System Console.'\n            />\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {PureComponent} from 'react';\n\nimport SetByEnv from './set_by_env';\n\ntype Props = {\n    inputId?: string;\n    label: React.ReactNode;\n    children: React.ReactNode;\n    helpText?: React.ReactNode;\n    setByEnv?: boolean;\n}\n\nexport default class Settings extends PureComponent<Props> {\n    public render() {\n        const {\n            children,\n            setByEnv,\n            helpText,\n            inputId,\n            label,\n        } = this.props;\n\n        return (\n            <div\n                data-testid={inputId}\n                className='form-group'\n            >\n                <label\n                    className='control-label col-sm-4'\n                    htmlFor={inputId}\n                >\n                    {label}\n                </label>\n                <div className='col-sm-8'>\n                    {children}\n                    <div\n                        data-testid={inputId + 'help-text'}\n                        className='help-text'\n                    >\n                        {helpText}\n                    </div>\n                    {setByEnv ? <SetByEnv/> : null}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nexport default class SettingsGroup extends React.PureComponent {\n    static get propTypes() {\n        return {\n            show: PropTypes.bool.isRequired,\n            header: PropTypes.node,\n            children: PropTypes.node,\n            container: PropTypes.bool,\n        };\n    }\n\n    static get defaultProps() {\n        return {\n            show: true,\n            container: true,\n        };\n    }\n\n    render() {\n        let wrapperClass = '';\n        let contentClass = '';\n\n        if (!this.props.show) {\n            return null;\n        }\n\n        if (this.props.container) {\n            wrapperClass = 'admin-console__wrapper';\n            contentClass = 'admin-console__content';\n        }\n\n        let header = null;\n        if (this.props.header) {\n            header = (\n                <h4>\n                    {this.props.header}\n                </h4>\n            );\n        }\n\n        return (\n            <div className={wrapperClass}>\n                <div className={contentClass}>\n                    {header}\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport {connect} from 'react-redux';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles_helpers';\n\nimport {GlobalState} from 'types/store';\n\nimport SystemRoles from './system_roles';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        roles: getRoles(state),\n    };\n}\n\nexport default connect(mapStateToProps)(SystemRoles);\n","\n// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Role} from 'mattermost-redux/types/roles';\n\nimport {filterProfilesStartingWithTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\nimport {filterProfiles} from 'mattermost-redux/selectors/entities/users';\n\nimport {Client4} from 'mattermost-redux/client';\n\nimport {displayEntireNameForUser, localizeMessage, isGuest} from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport GuestBadge from 'components/widgets/badges/guest_badge';\nimport BotBadge from 'components/widgets/badges/bot_badge';\nimport MultiSelect, {Value} from 'components/multiselect/multiselect';\nimport AddIcon from 'components/widgets/icons/fa_add_icon';\n\nconst USERS_PER_PAGE = 50;\nconst MAX_SELECTABLE_VALUES = 20;\n\ntype UserProfileValue = Value & UserProfile;\n\nexport type Props = {\n    role: Role;\n    users: UserProfile[];\n    excludeUsers: { [userId: string]: UserProfile };\n    includeUsers: { [userId: string]: UserProfile };\n    onAddCallback: (users: UserProfile[]) => void;\n    onHide?: () => void;\n\n    actions: {\n        getProfiles: (page: number, perPage?: number, options?: Record<string, any>) => Promise<{ data: UserProfile[] }>;\n        searchProfiles: (term: string, options?: Record<string, any>) => Promise<{ data: UserProfile[] }>;\n    };\n}\n\ntype State = {\n    searchResults: UserProfile[];\n    values: UserProfileValue[];\n    show: boolean;\n    saving: boolean;\n    addError: null;\n    loading: boolean;\n    term: string;\n}\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profilesList: UserProfile[] = Object.keys(users).map((key) => users[key]);\n    const filteredProfilesList = filterProfilesStartingWithTerm(profilesList, term);\n    return filterProfiles(profileListToMap(filteredProfilesList), {});\n}\n\nexport default class AddUsersToRoleModal extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            searchResults: [],\n            values: [],\n            show: true,\n            saving: false,\n            addError: null,\n            loading: true,\n            term: '',\n        };\n    }\n\n    componentDidMount = async () => {\n        await this.props.actions.getProfiles(0, USERS_PER_PAGE * 2);\n        this.setUsersLoadingState(false);\n    }\n\n    setUsersLoadingState = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    search = async (term: string) => {\n        this.setUsersLoadingState(true);\n        let searchResults: UserProfile[] = [];\n        const search = term !== '';\n        if (search) {\n            const {data} = await this.props.actions.searchProfiles(term, {replace: true});\n            searchResults = data;\n        } else {\n            await this.props.actions.getProfiles(0, USERS_PER_PAGE * 2);\n        }\n        this.setState({loading: false, searchResults, term});\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    renderOption = (option: UserProfileValue, isSelected: boolean, onAdd: (user: UserProfileValue) => void, onMouseMove: (user: UserProfileValue) => void) => {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? 'selected' : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(option.id, option.last_picture_update)}\n                    size='md'\n                />\n                <div className='more-modal__details'>\n                    <div className='more-modal__name'>\n                        {displayEntireNameForUser(option)}\n                        <BotBadge\n                            show={Boolean(option.is_bot)}\n                            className='badge-popoverlist'\n                        />\n                        <GuestBadge\n                            show={isGuest(option)}\n                            className='popoverlist'\n                        />\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <AddIcon/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue = (value: { data: UserProfileValue }): string => {\n        return value.data?.username || '';\n    }\n\n    renderAriaLabel = (option: UserProfileValue): string => {\n        return option?.username || '';\n    }\n\n    handleAdd = (value: UserProfileValue) => {\n        const values: UserProfileValue[] = [...this.state.values];\n        if (!values.includes(value)) {\n            values.push(value);\n        }\n        this.setState({values});\n    }\n\n    handleDelete = (values: UserProfileValue[]) => {\n        this.setState({values});\n    }\n\n    handlePageChange = (page: number, prevPage: number) => {\n        if (page > prevPage) {\n            const needMoreUsers = (this.props.users.length / USERS_PER_PAGE) <= page + 1;\n            this.setUsersLoadingState(needMoreUsers);\n            this.props.actions.getProfiles(page, USERS_PER_PAGE * 2).\n                then(() => this.setUsersLoadingState(false));\n        }\n    };\n\n    handleSubmit = () => {\n        this.props.onAddCallback(this.state.values);\n        this.handleHide();\n    }\n\n    render = (): JSX.Element => {\n        const numRemainingText = (\n            <div id='numPeopleRemaining'>\n                <FormattedMessage\n                    id='multiselect.numPeopleRemaining'\n                    defaultMessage='Use ↑↓ to browse, ↵ to select. You can add {num, number} more {num, plural, one {person} other {people}}. '\n                    values={{\n                        num: MAX_SELECTABLE_VALUES - this.state.values.length,\n                    }}\n                />\n            </div>\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n        const buttonSubmitLoadingText = localizeMessage('multiselect.adding', 'Adding...');\n\n        let addError = null;\n        if (this.state.addError) {\n            addError = (<div className='has-error col-sm-12'><label className='control-label font-weight--normal'>{this.state.addError}</label></div>);\n        }\n\n        let usersToDisplay: UserProfile[] = [];\n        usersToDisplay = this.state.term ? this.state.searchResults : this.props.users;\n        if (this.props.excludeUsers) {\n            const hasUser = (user: UserProfile) => !this.props.excludeUsers[user.id];\n            usersToDisplay = usersToDisplay.filter(hasUser);\n        }\n\n        if (this.props.includeUsers) {\n            let {includeUsers} = this.props;\n            if (this.state.term) {\n                includeUsers = searchUsersToAdd(includeUsers, this.state.term);\n            }\n            usersToDisplay = [...usersToDisplay, ...Object.values(includeUsers)];\n        }\n\n        const options = usersToDisplay.map((user) => {\n            return {label: user.username, value: user.id, ...user};\n        });\n\n        return (\n            <Modal\n                id='addUsersToRoleModal'\n                dialogClassName={'a11y__modal more-modal more-direct-channels'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title componentClass='h1'>\n                        <FormattedMessage\n                            id='add_users_to_role.title'\n                            defaultMessage='Add users to {roleName}'\n                            values={{\n                                roleName: (\n                                    <strong>\n                                        <FormattedMessage\n                                            id={`admin.permissions.roles.${this.props.role.name}.name`}\n                                            defaultMessage={this.props.role.name}\n                                        />\n                                    </strong>\n                                ),\n                            }}\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {addError}\n                    <MultiSelect\n                        key='addUsersToRoleKey'\n                        options={options}\n                        optionRenderer={this.renderOption}\n                        ariaLabelRenderer={this.renderAriaLabel}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={USERS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.handleAdd}\n                        handleSubmit={this.handleSubmit}\n                        maxValues={MAX_SELECTABLE_VALUES}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        buttonSubmitLoadingText={buttonSubmitLoadingText}\n                        saving={this.state.saving}\n                        loading={this.state.loading}\n                        placeholderText={localizeMessage('multiselect.placeholder', 'Search and add members')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {getProfiles, searchProfiles} from 'mattermost-redux/actions/users';\n\nimport {getProfiles as selectProfiles} from 'mattermost-redux/selectors/entities/users';\n\nimport AddUsersToRoleModal, {Props} from './add_users_to_role_modal';\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const filterOptions: {[key: string]: any} = {active: true, exclude_roles: [props.role.name]};\n    const users: UserProfile[] = selectProfiles(state, filterOptions);\n\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Props['actions']>({\n            getProfiles,\n            searchProfiles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddUsersToRoleModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {GenericAction, ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {Role} from 'mattermost-redux/types/roles';\nimport {updateUserRoles} from 'mattermost-redux/actions/users';\nimport {editRole} from 'mattermost-redux/actions/roles';\nimport {getRolesById} from 'mattermost-redux/selectors/entities/roles';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport SystemRole from './system_role';\n\ntype Props = {\n    match: {\n        params: {\n            role_id: string;\n        };\n    };\n}\n\ntype Actions = {\n    editRole(role: Role): Promise<ActionResult>;\n    updateUserRoles(userId: string, roles: string): Promise<ActionResult>;\n    setNavigationBlocked: (blocked: boolean) => void;\n}\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const role = getRolesById(state)[props.match.params.role_id];\n    const license = getLicense(state);\n    const isLicensedForCloud = license.Cloud === 'true';\n\n    return {\n        isLicensedForCloud,\n        role,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Actions>({\n            editRole,\n            updateUserRoles,\n            setNavigationBlocked,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemRole);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {uniq, difference} from 'lodash';\n\nimport {Role} from 'mattermost-redux/types/roles';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport Constants from 'utils/constants';\nimport {browserHistory} from 'utils/browser_history';\n\nimport FormError from 'components/form_error';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport SaveChangesPanel from 'components/admin_console/team_channel_settings/save_changes_panel';\n\nimport {isError} from 'types/actions';\n\nimport SystemRoleUsers from './system_role_users';\nimport SystemRolePermissions from './system_role_permissions';\nimport {PermissionToUpdate, PermissionsToUpdate, writeAccess} from './types';\n\ntype Props = {\n    role: Role;\n    isDisabled?: boolean;\n    isLicensedForCloud: boolean;\n\n    actions: {\n        editRole(role: Role): Promise<ActionResult>;\n        updateUserRoles(userId: string, roles: string): Promise<ActionResult>;\n        setNavigationBlocked: (blocked: boolean) => void;\n    };\n}\n\ntype State = {\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n    permissionsToUpdate: PermissionsToUpdate;\n    updatedRolePermissions: string[];\n    saving: boolean;\n    saveNeeded: boolean;\n    serverError: JSX.Element | null;\n    saveKey: number;\n}\n\nexport default class SystemRole extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            usersToAdd: {},\n            usersToRemove: {},\n            saving: false,\n            saveNeeded: false,\n            serverError: null,\n            permissionsToUpdate: {},\n            saveKey: 0,\n            updatedRolePermissions: [],\n        };\n    }\n\n    getSaveStateNeeded = (nextState: Partial<State>): boolean => {\n        const {role} = this.props;\n        const {usersToAdd, usersToRemove, updatedRolePermissions, permissionsToUpdate} = {...this.state, ...nextState};\n        let saveNeeded = false;\n        saveNeeded = Object.keys(usersToAdd).length > 0 || Object.keys(usersToRemove).length > 0;\n        if (Object.keys(permissionsToUpdate).length > 0) {\n            saveNeeded = saveNeeded || difference(updatedRolePermissions, role.permissions).length > 0 || difference(role.permissions, updatedRolePermissions).length > 0;\n        }\n        return saveNeeded;\n    }\n\n    addUsersToRole = (users: UserProfile[]) => {\n        const {actions: {setNavigationBlocked}} = this.props;\n        const usersToAdd = {\n            ...this.state.usersToAdd,\n        };\n        const usersToRemove = {\n            ...this.state.usersToRemove,\n        };\n        users.forEach((user) => {\n            if (usersToRemove[user.id]) {\n                delete usersToRemove[user.id];\n            } else {\n                usersToAdd[user.id] = user;\n            }\n        });\n\n        const saveNeeded = this.getSaveStateNeeded({usersToAdd, usersToRemove});\n        setNavigationBlocked(saveNeeded);\n        this.setState({usersToAdd, usersToRemove, saveNeeded});\n    }\n\n    removeUserFromRole = (user: UserProfile) => {\n        const {actions: {setNavigationBlocked}} = this.props;\n        const usersToAdd = {\n            ...this.state.usersToAdd,\n        };\n        const usersToRemove = {\n            ...this.state.usersToRemove,\n        };\n        if (usersToAdd[user.id]) {\n            delete usersToAdd[user.id];\n        } else {\n            usersToRemove[user.id] = user;\n        }\n\n        const saveNeeded = this.getSaveStateNeeded({usersToAdd, usersToRemove});\n        setNavigationBlocked(saveNeeded);\n        this.setState({usersToRemove, usersToAdd, saveNeeded});\n    }\n\n    handleSubmit = async () => {\n        this.setState({saving: true, saveNeeded: false});\n        const {usersToRemove, usersToAdd, updatedRolePermissions, permissionsToUpdate} = this.state;\n        const {role, actions: {editRole, updateUserRoles, setNavigationBlocked}} = this.props;\n        let serverError = null;\n\n        // Do not update permissions if sysadmin or if roles have not been updated (to prevent overrwiting roles with no permissions)\n        if (role.name !== Constants.PERMISSIONS_SYSTEM_ADMIN && Object.keys(permissionsToUpdate).length > 0) {\n            const newRole: Role = {\n                ...role,\n                permissions: updatedRolePermissions,\n            };\n            const result = await editRole(newRole);\n            if (isError(result)) {\n                serverError = <FormError error={result.error.message}/>;\n            }\n        }\n\n        const userIdsToRemove = Object.keys(usersToRemove);\n        if (userIdsToRemove.length > 0) {\n            const removeUserPromises: Array<Promise<ActionResult>> = [];\n            userIdsToRemove.forEach((userId) => {\n                const user = usersToRemove[userId];\n                const updatedRoles = uniq(user.roles.split(' ').filter((r) => r !== role.name)).join(' ');\n                removeUserPromises.push(updateUserRoles(userId, updatedRoles));\n            });\n\n            const results = await Promise.all(removeUserPromises);\n            const resultWithError = results.find(isError);\n\n            // const count = result.filter(isSuccess).length; // To be used for potential telemetry\n            if (resultWithError && 'error' in resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            }\n        }\n\n        const userIdsToAdd = Object.keys(usersToAdd);\n        if (userIdsToAdd.length > 0 && serverError == null) {\n            const addUserPromises: Array<Promise<ActionResult>> = [];\n            userIdsToAdd.forEach((userId) => {\n                const user = usersToAdd[userId];\n                const updatedRoles = uniq([...user.roles.split(' '), role.name]).join(' ');\n                addUserPromises.push(updateUserRoles(userId, updatedRoles));\n            });\n\n            const results = await Promise.all(addUserPromises);\n            const resultWithError = results.find(isError);\n\n            // const count = result.filter(isSuccess).length; // To be used for potential telemetry\n            if (resultWithError && 'error' in resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            }\n        }\n\n        let {saveKey} = this.state;\n        if (serverError === null) {\n            saveKey += 1;\n        }\n\n        if (serverError === null) {\n            browserHistory.push('/admin_console/user_management/system_roles');\n        }\n        setNavigationBlocked(serverError !== null);\n        this.setState({\n            saveNeeded: (serverError !== null),\n            saving: false,\n            serverError,\n            usersToAdd: {},\n            usersToRemove: {},\n            saveKey,\n        });\n    }\n\n    updatePermissions = (permissions: PermissionToUpdate[]) => {\n        const {role, actions: {setNavigationBlocked}} = this.props;\n        const updatedPermissions: PermissionsToUpdate = {};\n        permissions.forEach((perm) => {\n            updatedPermissions[perm.name] = perm.value;\n        });\n        const permissionsToUpdate = {\n            ...this.state.permissionsToUpdate,\n            ...updatedPermissions,\n        };\n\n        let updatedRolePermissions: string[] = [];\n\n        // Determine required ancillary permissions...\n        role.permissions.forEach((permission) => {\n            if (permission.startsWith('sysconsole_')) {\n                const permissionShortName = permission.replace(/sysconsole_(read|write)_/, '');\n                if (!(permissionShortName in permissionsToUpdate)) {\n                    const ancillary = Permissions.SYSCONSOLE_ANCILLARY_PERMISSIONS[permission] || [];\n                    updatedRolePermissions.push(...ancillary, permission);\n                }\n            }\n        });\n\n        Object.keys(permissionsToUpdate).forEach((permissionShortName) => {\n            const value = permissionsToUpdate[permissionShortName];\n            if (value) {\n                const readPermission = `sysconsole_read_${permissionShortName}`;\n                const writePermission = `sysconsole_write_${permissionShortName}`;\n                const readAncillary = Permissions.SYSCONSOLE_ANCILLARY_PERMISSIONS[readPermission] || [];\n                const writeAncillary = Permissions.SYSCONSOLE_ANCILLARY_PERMISSIONS[writePermission] || [];\n\n                if (value === writeAccess) {\n                    updatedRolePermissions.push(...readAncillary, ...writeAncillary, readPermission, writePermission);\n                } else {\n                    updatedRolePermissions.push(...readAncillary, readPermission);\n                }\n            }\n        });\n\n        // Make sure the sysadmin role always has manage system...\n        if (role.name === Constants.PERMISSIONS_SYSTEM_ADMIN) {\n            updatedRolePermissions.push(Permissions.MANAGE_SYSTEM);\n        }\n\n        updatedRolePermissions = uniq(updatedRolePermissions);\n        const nextState = {\n            permissionsToUpdate,\n            updatedRolePermissions,\n        };\n\n        setNavigationBlocked(this.getSaveStateNeeded(nextState));\n        this.setState({\n            ...nextState,\n            saveNeeded: this.getSaveStateNeeded(nextState),\n        });\n    }\n\n    render() {\n        const {usersToAdd, usersToRemove, saving, saveNeeded, serverError, permissionsToUpdate, saveKey} = this.state;\n        const {role, isDisabled, isLicensedForCloud} = this.props;\n        const defaultName = role.name.split('').map((r) => r.charAt(0).toUpperCase() + r.slice(1)).join(' ');\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/system_roles'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id={`admin.permissions.roles.${role.name}.name`}\n                            defaultMessage={defaultName}\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <SystemRolePermissions\n                            role={role}\n                            isLicensedForCloud={isLicensedForCloud}\n                            permissionsToUpdate={permissionsToUpdate}\n                            updatePermissions={this.updatePermissions}\n                            readOnly={isDisabled || role.name === Constants.PERMISSIONS_SYSTEM_ADMIN}\n                        />\n\n                        <SystemRoleUsers\n                            key={saveKey}\n                            roleName={role.name}\n                            usersToAdd={usersToAdd}\n                            usersToRemove={usersToRemove}\n                            onAddCallback={this.addUsersToRole}\n                            onRemoveCallback={this.removeUserFromRole}\n                            readOnly={isDisabled}\n                        />\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/system_roles'\n                    saveNeeded={saveNeeded}\n                    onClick={this.handleSubmit}\n                    serverError={serverError}\n                    isDisabled={isDisabled}\n                />\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport Permissions from 'mattermost-redux/constants/permissions';\n\nimport SystemRolePermissionDropdown from './system_role_permission_dropdown';\nimport {PermissionsToUpdate, PermissionToUpdate, SystemSection, noAccess, PermissionAccess, writeAccess, readAccess, mixedAccess} from './types';\n\nimport './system_role_permissions.scss';\n\ntype Props = {\n    readOnly?: boolean;\n    setSectionVisible: (name: string, visible: boolean) => void;\n    section: SystemSection;\n    permissionsMap: Record<string, boolean>;\n    visibleSections: Record<string, boolean>;\n    permissionsToUpdate: PermissionsToUpdate;\n    updatePermissions: (permissions: PermissionToUpdate[]) => void;\n}\n\nexport default class SystemRolePermission extends React.PureComponent<Props> {\n    isSectionVisible = (section: SystemSection, visibleSections: Record<string, boolean>) => {\n        const {permissionsMap, permissionsToUpdate} = this.props;\n        if (Object.keys(visibleSections).includes(section.name)) {\n            return visibleSections[section.name];\n        }\n        return this.getAccessForSection(section, permissionsMap, permissionsToUpdate) === mixedAccess;\n    }\n\n    renderSubsectionToggle = (section: SystemSection, isSectionVisible: boolean) => {\n        if (!section.subsections || section.subsections.length === 0) {\n            return null;\n        }\n        const chevron = isSectionVisible ? (<i className='Icon icon-chevron-up'/>) : (<i className='Icon icon-chevron-down'/>);\n        const message = isSectionVisible ? (\n            <FormattedMessage\n                id='admin.permissions.system_role_permissions.hide_subsections'\n                defaultMessage='Hide {subsectionsCount} subsections'\n                values={{subsectionsCount: section.subsections.length}}\n            />\n        ) : (\n            <FormattedMessage\n                id='admin.permissions.system_role_permissions.show_subsections'\n                defaultMessage='Show {subsectionsCount} subsections'\n                values={{subsectionsCount: section.subsections.length}}\n            />\n        );\n        return (\n            <div className='PermissionSubsectionsToggle'>\n                <button\n                    onClick={() => this.props.setSectionVisible(section.name, !isSectionVisible)}\n                    className='dropdown-toggle theme color--link style--none'\n                >\n                    {message}\n                    {chevron}\n                </button>\n            </div>\n        );\n    }\n\n    renderSubsections = (section: SystemSection, permissionsMap: Record<string, boolean>, permissionsToUpdate: PermissionsToUpdate, isSectionVisible: boolean) => {\n        if (!section.subsections || section.subsections.length === 0) {\n            return null;\n        }\n        return (\n            <div>\n                {isSectionVisible &&\n                    <div className='PermissionSubsections'>\n                        {section.subsections.map((subsection) => this.renderSectionRow(subsection, permissionsMap, permissionsToUpdate, isSectionVisible))}\n                    </div>\n                }\n            </div>\n        );\n    }\n\n    renderSectionRow = (section: SystemSection, permissionsMap: Record<string, boolean>, permissionsToUpdate: PermissionsToUpdate, isSectionVisible: boolean) => {\n        return (\n            <div\n                key={section.name}\n                className='PermissionSection'\n            >\n                <div className='PermissionSectionText'>\n                    <div className='PermissionSectionText_title'>\n                        <FormattedMessage\n                            id={`admin.permissions.sysconsole_section_${section.name}.name`}\n                            defaultMessage={section.name}\n                        />\n                    </div>\n\n                    {section.hasDescription &&\n                        <div className='PermissionSection_description'>\n                            <FormattedMessage\n                                id={`admin.permissions.sysconsole_section_${section.name}.description`}\n                                defaultMessage={''}\n                            />\n                        </div>\n                    }\n\n                    {this.renderSubsectionToggle(section, isSectionVisible)}\n                </div>\n                <div className='PermissionSectionDropdown'>\n                    <SystemRolePermissionDropdown\n                        section={section}\n                        updatePermissions={this.props.updatePermissions}\n                        access={this.getAccessForSection(section, permissionsMap, permissionsToUpdate)}\n                        isDisabled={this.props.readOnly || Boolean(section.disabled)}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    getAccessForSection = (section: SystemSection, permissions: Record<string, boolean>, permissionsToUpdate: Record<string, PermissionAccess>) => {\n        // If we have subsections then use them to determine access to show.\n        if (section.subsections && section.subsections.length > 0) {\n            let hasNoAccess = false;\n            let canRead = false;\n            let canWrite = false;\n            section.subsections.forEach((subsection) => {\n                switch (this.getAccessForSectionByName(subsection.name, permissions, permissionsToUpdate)) {\n                case readAccess:\n                    canRead = true;\n                    break;\n                case writeAccess:\n                    canWrite = true;\n                    break;\n                default:\n                    hasNoAccess = true;\n                    break;\n                }\n            });\n\n            // If the role has more than one type of access across the subsection then mark it as mixed access.\n            if ([canRead, canWrite, hasNoAccess].filter((val) => val).length > 1) {\n                return mixedAccess;\n            } else if (canRead) {\n                return readAccess;\n            } else if (canWrite) {\n                return writeAccess;\n            } else if (hasNoAccess) {\n                return noAccess;\n            }\n        }\n        return this.getAccessForSectionByName(section.name, permissions, permissionsToUpdate);\n    }\n\n    getAccessForSectionByName = (sectionName: string, permissions: Record<string, boolean>, permissionsToUpdate: Record<string, PermissionAccess>) => {\n        // Assume sysadmin has write access for everything, this is a bit of a hack but it should be left in until `user_management_read|write_system_roles` is actually a permission\n        if (permissions[Permissions.MANAGE_SYSTEM]) {\n            return writeAccess;\n        }\n\n        let access: PermissionAccess = false;\n        if (sectionName in permissionsToUpdate) {\n            access = permissionsToUpdate[sectionName];\n        } else {\n            if (permissions[`sysconsole_read_${sectionName}`] === true) {\n                access = readAccess;\n            }\n\n            if (permissions[`sysconsole_write_${sectionName}`] === true) {\n                access = writeAccess;\n            }\n        }\n\n        return access;\n    }\n\n    render() {\n        const {section, permissionsMap, permissionsToUpdate, visibleSections} = this.props;\n        const isSectionVisible = this.isSectionVisible(section, visibleSections);\n        return (\n            <div className='PermissionRow'>\n                {this.renderSectionRow(section, permissionsMap, permissionsToUpdate, isSectionVisible)}\n                {this.renderSubsections(section, permissionsMap, permissionsToUpdate, isSectionVisible)}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nimport DropdownIcon from 'components/widgets/icons/fa_dropdown_icon';\n\nimport {noAccess, PermissionAccess, writeAccess, readAccess, PermissionToUpdate, SystemSection, mixedAccess, WriteAccess, NoAccess, ReadAccess, MixedAccess} from './types';\n\nimport './system_role_permissions.scss';\n\ntype Props = {\n    section: SystemSection;\n    access: MixedAccess | ReadAccess | NoAccess | WriteAccess;\n    updatePermissions: (permissions: PermissionToUpdate[]) => void;\n    isDisabled?: boolean;\n}\n\nexport default class SystemRolePermissionDropdown extends React.PureComponent<Props> {\n    updatePermission = (value: PermissionAccess) => {\n        const {section} = this.props;\n        const permissions: PermissionToUpdate[] = [];\n        if (section.subsections && section.subsections.length > 0) {\n            section.subsections.forEach(({name, disabled}) => {\n                if (!disabled) {\n                    permissions.push({name, value});\n                }\n            });\n        } else {\n            permissions.push({name: section.name, value});\n        }\n        this.props.updatePermissions(permissions);\n    }\n\n    renderOption = (label: JSX.Element, description: JSX.Element) => {\n        return (\n            <div className='PermissionSectionDropdownOptions'>\n                <div className='PermissionSectionDropdownOptions_label'>\n                    {label}\n                </div>\n                <div className='PermissionSectionDropdownOptions_description'>\n                    {description}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const {isDisabled, section} = this.props;\n\n        const canWriteLabel = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.write.title'}\n                defaultMessage='Can edit'\n            />\n        );\n\n        const canWriteDescription = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.write.description'}\n                defaultMessage='Can add, edit and delete anything in this section.'\n            />\n        );\n\n        const canReadLabel = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.read.title'}\n                defaultMessage='Read only'\n            />\n        );\n        const canReadDescription = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.read.description'}\n                defaultMessage={'Can view this section but can\\'t edit anything in it'}\n            />\n        );\n\n        const noAccessLabel = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.no_access.title'}\n                defaultMessage='No access'\n            />\n        );\n\n        const mixedAccessLabel = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.mixed_access.title'}\n                defaultMessage='Mixed access'\n            />\n        );\n\n        const noAccessDescription = (\n            <FormattedMessage\n                id={'admin.permissions.system_role_permissions.no_access.description'}\n                defaultMessage={'No access to this section and it will be hidden in the navigation.'}\n            />\n        );\n\n        let currentAccess = noAccessLabel;\n        switch (this.props.access) {\n        case readAccess:\n            currentAccess = canReadLabel;\n            break;\n        case writeAccess:\n            currentAccess = canWriteLabel;\n            break;\n        case mixedAccess:\n            currentAccess = mixedAccessLabel;\n            break;\n        default:\n            currentAccess = noAccessLabel;\n            break;\n        }\n\n        const ariaLabel = Utils.localizeMessage('admin.permissions.system_role_permissions.change_access', 'Change role access on a system console section');\n        return (\n            <MenuWrapper\n                isDisabled={isDisabled}\n            >\n                <button\n                    id={`systemRolePermissionDropdown${section.name}`}\n                    className='PermissionSectionDropdownButton dropdown-toggle theme'\n                    type='button'\n                    aria-expanded='true'\n                >\n                    <div className='PermissionSectionDropdownButton_text'>\n                        {currentAccess}\n                    </div>\n                    <div className='PermissionSectionDropdownButton_icon'>\n                        <DropdownIcon/>\n                    </div>\n                </button>\n                <Menu ariaLabel={ariaLabel}>\n                    <Menu.ItemAction\n                        onClick={() => this.updatePermission(writeAccess)}\n                        text={this.renderOption(canWriteLabel, canWriteDescription)}\n                    />\n                    <Menu.ItemAction\n                        onClick={() => this.updatePermission(readAccess)}\n                        text={this.renderOption(canReadLabel, canReadDescription)}\n                    />\n                    <Menu.ItemAction\n                        onClick={() => this.updatePermission(noAccess)}\n                        text={this.renderOption(noAccessLabel, noAccessDescription)}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./system_role_permissions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\nimport {Role} from 'mattermost-redux/types/roles';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport Constants from 'utils/constants';\n\nimport SystemRolePermission from './system_role_permission';\nimport {PermissionsToUpdate, PermissionToUpdate, SystemSection} from './types';\n\nimport './system_role_permissions.scss';\n\ntype Props = {\n    role: Role;\n    permissionsToUpdate: PermissionsToUpdate;\n    updatePermissions: (permissions: PermissionToUpdate[]) => void;\n    readOnly?: boolean;\n    isLicensedForCloud: boolean;\n}\n\ntype State = {\n    visibleSections: Record<string, boolean>;\n}\n\n// the actual permissions correlating to these values are of the format `sysconsole_(read|write)_name(.subsection.name)`\nconst sectionsList: SystemSection[] = [\n    {\n        name: 'about',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'billing',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'reporting',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'user_management',\n        hasDescription: true,\n        subsections: [\n            {name: 'user_management_users', hasDescription: true},\n            {name: 'user_management_groups'},\n            {name: 'user_management_teams'},\n            {name: 'user_management_channels'},\n            {name: 'user_management_permissions'},\n            {name: 'user_management_system_roles', disabled: true},\n        ],\n    },\n    {\n        name: 'environment',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'site',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'authentication',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'plugins',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'integrations',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'compliance',\n        hasDescription: true,\n        subsections: [],\n    },\n    {\n        name: 'experimental',\n        hasDescription: true,\n        subsections: [],\n    },\n];\n\nconst SECTIONS_BY_ROLES: Record<string, Record<string, boolean>> = {\n    [Constants.PERMISSIONS_SYSTEM_USER_MANAGER]: {\n        user_management: true,\n        authentication: true,\n    },\n};\n\nconst getPermissionsMap = memoizeResult((permissions: string[]) => {\n    return permissions.reduce((permissionsMap, permission) => {\n        permissionsMap[permission] = true;\n        return permissionsMap;\n    }, {} as Record<string, boolean>);\n});\n\nconst getSectionsListForRole = memoizeResult((sections: SystemSection[], roleName: string, sectionsByRole: Record<string, Record<string, boolean>>) => {\n    return sections.filter((section) => (!sectionsByRole[roleName] || sectionsByRole[roleName][section.name]));\n});\n\nexport default class SystemRolePermissions extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            visibleSections: {},\n        };\n    }\n\n    updatePermissions = (permissions: PermissionToUpdate[]) => {\n        this.props.updatePermissions(permissions);\n    }\n\n    setSectionVisible = (name: string, visible: boolean) => {\n        const {visibleSections} = this.state;\n        this.setState({\n            visibleSections: {\n                ...visibleSections,\n                [name]: visible,\n            },\n        });\n    }\n\n    getRows = (permissionsMap: Record<string, boolean>, permissionsToUpdate: PermissionsToUpdate, visibleSections: Record<string, boolean>) => {\n        const {isLicensedForCloud} = this.props;\n        let editedSectionsByRole = {\n            ...SECTIONS_BY_ROLES,\n        };\n\n        if (this.props.role.name === Constants.PERMISSIONS_SYSTEM_USER_MANAGER) {\n            let permissionsToShow: Record<string, boolean> = {};\n            Object.keys(permissionsMap).forEach((permission) => {\n                if (permission.startsWith('sysconsole_')) {\n                    const permissionShortName = permission.replace(/sysconsole_(read|write)_/, '');\n                    permissionsToShow = {\n                        ...permissionsToShow,\n                        [permissionShortName]: true,\n                    };\n                }\n            });\n\n            editedSectionsByRole = {\n                [Constants.PERMISSIONS_SYSTEM_USER_MANAGER]: {\n                    ...editedSectionsByRole[Constants.PERMISSIONS_SYSTEM_USER_MANAGER],\n                    ...permissionsToShow,\n                },\n            };\n        }\n\n        if (!isLicensedForCloud) {\n            // Remove the billing section if it's not licensed for cloud\n            const billingSectionIndex = sectionsList.findIndex((section) => section.name === 'billing');\n            if (billingSectionIndex > -1) {\n                sectionsList.splice(billingSectionIndex, 1);\n            }\n        }\n\n        return getSectionsListForRole(sectionsList, this.props.role.name, editedSectionsByRole).map((section: SystemSection) => {\n            return (\n                <SystemRolePermission\n                    key={section.name}\n                    section={section}\n                    permissionsMap={permissionsMap}\n                    permissionsToUpdate={permissionsToUpdate}\n                    visibleSections={visibleSections}\n                    setSectionVisible={this.setSectionVisible}\n                    updatePermissions={this.props.updatePermissions}\n                    readOnly={this.props.readOnly}\n                />\n            );\n        });\n    }\n\n    render() {\n        const {role, permissionsToUpdate} = this.props;\n        const {visibleSections} = this.state;\n        const permissionsMap = getPermissionsMap(role.permissions);\n        return (\n            <AdminPanel\n                id='SystemRolePermissions'\n                titleId={t('admin.permissions.system_role_permissions.title')}\n                titleDefault='Privileges'\n                subtitleId={t('admin.permissions.system_role_permissions.description')}\n                subtitleDefault='Level of access to the system console.'\n            >\n                <div className='SystemRolePermissions'>\n                    {this.getRows(permissionsMap, permissionsToUpdate, visibleSections)}\n                </div>\n            </AdminPanel>\n        );\n    }\n}\n\nt('admin.permissions.sysconsole_section_about.name');\nt('admin.permissions.sysconsole_section_about.description');\nt('admin.permissions.sysconsole_section_billing.name');\nt('admin.permissions.sysconsole_section_billing.description');\nt('admin.permissions.sysconsole_section_reporting.name');\nt('admin.permissions.sysconsole_section_reporting.description');\nt('admin.permissions.sysconsole_section_user_management.name');\nt('admin.permissions.sysconsole_section_user_management.description');\nt('admin.permissions.sysconsole_section_user_management_users.name');\nt('admin.permissions.sysconsole_section_user_management_users.description');\nt('admin.permissions.sysconsole_section_user_management_groups.name');\nt('admin.permissions.sysconsole_section_user_management_teams.name');\nt('admin.permissions.sysconsole_section_user_management_channels.name');\nt('admin.permissions.sysconsole_section_user_management_permissions.name');\nt('admin.permissions.sysconsole_section_user_management_system_roles.name');\nt('admin.permissions.sysconsole_section_environment.name');\nt('admin.permissions.sysconsole_section_environment.description');\nt('admin.permissions.sysconsole_section_site.name');\nt('admin.permissions.sysconsole_section_site.description');\nt('admin.permissions.sysconsole_section_authentication.name');\nt('admin.permissions.sysconsole_section_authentication.description');\nt('admin.permissions.sysconsole_section_plugins.name');\nt('admin.permissions.sysconsole_section_plugins.description');\nt('admin.permissions.sysconsole_section_integrations.name');\nt('admin.permissions.sysconsole_section_integrations.description');\nt('admin.permissions.sysconsole_section_compliance.name');\nt('admin.permissions.sysconsole_section_compliance.description');\nt('admin.permissions.sysconsole_section_experimental.name');\nt('admin.permissions.sysconsole_section_experimental.description');\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {filterProfilesStartingWithTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {getFilteredUsersStats, getProfiles, searchProfiles} from 'mattermost-redux/actions/users';\n\nimport {getRoles} from 'mattermost-redux/selectors/entities/roles_helpers';\nimport {getProfiles as selectProfiles, getFilteredUsersStats as selectFilteredUserStats, makeSearchProfilesStartingWithTerm, filterProfiles, getCurrentUserId} from 'mattermost-redux/selectors/entities/users';\n\nimport {setUserGridSearch} from 'actions/views/search';\nimport {GlobalState} from 'types/store';\n\nimport SystemRoleUsers, {Props} from './system_role_users';\n\ntype OwnProps = {\n    roleName: string;\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n}\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profiles = filterProfilesStartingWithTerm(Object.keys(users).map((key) => users[key]), term);\n    const filteredProfilesMap = filterProfiles(profileListToMap(profiles), {});\n\n    return filteredProfilesMap;\n}\n\nfunction mapStateToProps(state: GlobalState, props: OwnProps) {\n    const {roleName} = props;\n    const role = getRoles(state)[roleName];\n    const totalCount = selectFilteredUserStats(state)?.total_users_count || 0;\n    const term = state.views.search.userGridSearch?.term || '';\n    const filters = {roles: [role.name]};\n    const searchProfilesStartingWithTerm = makeSearchProfilesStartingWithTerm();\n\n    let users = [];\n    let {usersToAdd} = props;\n    if (term) {\n        users = searchProfilesStartingWithTerm(state, term, false, filters);\n        usersToAdd = searchUsersToAdd(usersToAdd, term);\n    } else {\n        users = selectProfiles(state, filters);\n    }\n\n    return {\n        role,\n        users,\n        totalCount,\n        term,\n        usersToAdd,\n        currentUserId: getCurrentUserId(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Props['actions']>({\n            getProfiles,\n            getFilteredUsersStats,\n            searchProfiles,\n            setUserGridSearch,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemRoleUsers);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Role} from 'mattermost-redux/types/roles';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {UserProfile, UsersStats, GetFilteredUsersStatsOpts} from 'mattermost-redux/types/users';\n\nimport Constants from 'utils/constants';\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport Badge from 'components/widgets/badges/badge';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport DataGrid from 'components/admin_console/data_grid/data_grid';\nimport UserGridName from 'components/admin_console/user_grid/user_grid_name';\nimport UserGridRemove from 'components/admin_console/user_grid/user_grid_remove';\nimport AddUsersToRoleModal from '../add_users_to_role_modal';\n\nexport type Props = {\n    users: UserProfile[];\n    role: Role;\n    totalCount: number;\n    term: string;\n    currentUserId: string;\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    onAddCallback: (users: UserProfile[]) => void;\n    onRemoveCallback: (user: UserProfile) => void;\n    actions: {\n        getFilteredUsersStats: (filters: GetFilteredUsersStatsOpts) => Promise<{\n            data?: UsersStats;\n            error?: ServerError;\n        }>;\n        getProfiles: (page?: number | undefined, perPage?: number | undefined, options?: any) => Promise<any>;\n        searchProfiles: (term: string, options: any) => Promise<any>;\n        setUserGridSearch: (term: string) => Promise<any>;\n    };\n    readOnly?: boolean;\n}\n\ntype State = {\n    loading: boolean;\n    page: number;\n    includeUsers: Dictionary<UserProfile>;\n    excludeUsers: Dictionary<UserProfile>;\n}\n\nconst USERS_PER_PAGE = 10;\n\nexport default class SystemRoleUsers extends React.PureComponent<Props, State> {\n    searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n            page: 0,\n            includeUsers: {},\n            excludeUsers: {},\n        };\n    }\n\n    async componentDidMount() {\n        const {getProfiles, getFilteredUsersStats, setUserGridSearch} = this.props.actions;\n        await Promise.all([\n            setUserGridSearch(''),\n            getProfiles(0, USERS_PER_PAGE, {role: this.props.role.name}),\n            getFilteredUsersStats({roles: [this.props.role.name]}),\n        ]);\n        this.setStateLoading(false);\n    }\n\n    async componentDidUpdate(prevProps: Props) {\n        if (prevProps.term !== this.props.term) {\n            this.setStateLoading(true);\n            clearTimeout(this.searchTimeoutId);\n            const {term} = this.props;\n\n            if (term === '') {\n                this.searchTimeoutId = 0;\n                this.setStateLoading(false);\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    await prevProps.actions.searchProfiles(term, {role: this.props.role.name});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n                    this.setStateLoading(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    getVisibleTotalCount = (): number => {\n        const {usersToRemove, usersToAdd, totalCount} = this.props;\n        const usersToAddCount = Object.keys(usersToAdd).length;\n        const usersToRemoveCount = Object.keys(usersToRemove).length;\n        return totalCount + (usersToAddCount - usersToRemoveCount);\n    }\n\n    getPaginationProps = (): {startCount: number; endCount: number; total: number} => {\n        const {term, usersToRemove, usersToAdd} = this.props;\n        const {page} = this.state;\n\n        let total: number;\n        let endCount = 0;\n        const startCount = (page * USERS_PER_PAGE) + 1;\n\n        if (term === '') {\n            total = this.getVisibleTotalCount();\n        } else {\n            total = this.props.users.length + Object.keys(usersToAdd).length;\n            this.props.users.forEach((u) => {\n                if (usersToRemove[u.id]) {\n                    total -= 1;\n                }\n            });\n        }\n\n        endCount = (page + 1) * USERS_PER_PAGE;\n        endCount = endCount > total ? total : endCount;\n\n        return {startCount, endCount, total};\n    }\n\n    onSearch = async (term: string) => {\n        this.props.actions.setUserGridSearch(term);\n    }\n\n    nextPage = async () => {\n        if (this.state.loading) {\n            return;\n        }\n        const page = this.state.page + 1;\n        this.setState({loading: true});\n        await this.props.actions.getProfiles(page, USERS_PER_PAGE, {role: this.props.role.name});\n        this.setState({loading: false, page});\n    }\n\n    previousPage = async () => {\n        if (this.state.loading || this.state.page === 0) {\n            return;\n        }\n        this.setState({page: this.state.page - 1});\n    }\n\n    getRows = () => {\n        const {users, readOnly, usersToAdd, usersToRemove, currentUserId} = this.props;\n        const {startCount, endCount} = this.getPaginationProps();\n\n        // Remove users to remove and add users to add\n        let usersToDisplay = users;\n        usersToDisplay = usersToDisplay.filter((user) => !usersToRemove[user.id]);\n        usersToDisplay = [...Object.values(usersToAdd), ...usersToDisplay];\n        usersToDisplay = usersToDisplay.slice(startCount - 1, endCount);\n\n        return usersToDisplay.map((user) => {\n            return {\n                cells: {\n                    id: user.id,\n                    name: (\n                        <UserGridName\n                            user={user}\n                        />\n                    ),\n                    new: (\n                        <Badge\n                            className='NewUserBadge'\n                            show={Boolean(usersToAdd[user.id])}\n                        >\n                            <FormattedMessage\n                                id='admin.user_grid.new'\n                                defaultMessage='New'\n                            />\n                        </Badge>\n                    ),\n                    remove: (\n                        <UserGridRemove\n                            user={user}\n                            removeUser={this.onRemoveCallback}\n                            isDisabled={readOnly || user.id === currentUserId}\n                        />\n                    ),\n                },\n            };\n        });\n    }\n\n    getColumns = () => {\n        const name: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.name'\n                defaultMessage='Name'\n            />\n        );\n\n        return [\n            {\n                name,\n                field: 'name',\n                width: 3,\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'new',\n                width: 1,\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'remove',\n                textAlign: 'right' as const,\n                fixed: true,\n            },\n        ];\n    }\n\n    onAddCallback = (users: UserProfile[]) => {\n        this.props.onAddCallback(users);\n    }\n\n    onRemoveCallback = (user: UserProfile) => {\n        this.props.onRemoveCallback(user);\n    }\n\n    render() {\n        const {page, loading} = this.state;\n        const {term, role, usersToAdd, usersToRemove, readOnly} = this.props;\n        const {startCount, endCount, total} = this.getPaginationProps();\n        return (\n\n            <AdminPanel\n                id='SystemRoleUsers'\n                titleId={t('admin.permissions.system_role_users.title')}\n                titleDefault='Assigned People'\n                subtitleId={t('admin.permissions.system_role_users.description')}\n                subtitleDefault='List of people assigned to this system role.'\n                button={\n                    <ToggleModalButton\n                        id='addRoleMembers'\n                        className='btn btn-primary'\n                        dialogType={AddUsersToRoleModal}\n                        isDisabled={readOnly}\n                        dialogProps={{\n                            role,\n                            onAddCallback: this.onAddCallback,\n                            skipCommit: true,\n                            excludeUsers: usersToAdd,\n                            includeUsers: usersToRemove,\n                        }}\n                    >\n                        <FormattedMessage\n                            id='admin.permissions.system_role_users.add_people'\n                            defaultMessage='Add People'\n                        />\n                    </ToggleModalButton>\n                }\n            >\n                <DataGrid\n                    rows={this.getRows()}\n                    columns={this.getColumns()}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    page={page}\n                    startCount={startCount}\n                    endCount={endCount}\n                    loading={loading}\n                    onSearch={this.onSearch}\n                    term={term}\n                    total={total}\n                />\n            </AdminPanel>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nexport type ReadAccess = 'read';\nexport const readAccess: ReadAccess = 'read';\nexport type WriteAccess = 'write';\nexport const writeAccess: WriteAccess = 'write';\nexport type NoAccess = false;\nexport const noAccess: NoAccess = false;\nexport type MixedAccess = 'mixed';\nexport const mixedAccess: MixedAccess = 'mixed';\n\nexport type PermissionAccess = ReadAccess | WriteAccess | NoAccess;\nexport type PermissionsToUpdate = Record<string, ReadAccess | WriteAccess | NoAccess>;\nexport type PermissionToUpdate = {\n    name: string;\n    value: PermissionAccess;\n};\n\nexport type SystemSection = {\n    name: string;\n    hasDescription?: boolean;\n    subsections?: SystemSection[];\n    disabled?: boolean;\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./system_roles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport {Role} from 'mattermost-redux/types/roles';\n\nimport {t} from 'utils/i18n';\nimport {browserHistory} from 'utils/browser_history';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\n\ntype Props = {\n    roles: Dictionary<Role>;\n}\n\nconst columns: Column[] = [\n    {\n        name: 'Role',\n        field: 'role',\n        width: 2,\n    },\n    {\n        name: 'Description',\n        field: 'description',\n        width: 3,\n    },\n    {\n        name: 'Type',\n        field: 'type',\n        width: 2,\n    },\n    {\n        name: '',\n        field: 'edit',\n        width: 1,\n        textAlign: 'right',\n    },\n];\n\nimport './system_roles.scss';\n\nexport default class SystemRoles extends React.PureComponent<Props> {\n    render() {\n        const {roles} = this.props;\n        const roleNames = ['system_admin', 'system_manager', 'system_user_manager', 'system_read_only_admin'];\n        const rows: Row[] = [];\n        roleNames.forEach((name) => {\n            const role = roles[name];\n            if (role) {\n                rows.push({\n                    cells: {\n                        role: <FormattedMessage id={`admin.permissions.roles.${role.name}.name`}/>,\n                        description: <FormattedMessage id={`admin.permissions.roles.${role.name}.description`}/>,\n                        type: <FormattedMessage id={`admin.permissions.roles.${role.name}.type`}/>,\n                        edit: (\n                            <span\n                                className='SystemRoles_editRow'\n                                data-testid={`${role.name}_edit`}\n                            >\n                                <Link to={`/admin_console/user_management/system_roles/${role.id}`} >\n                                    <FormattedMessage\n                                        id='admin.permissions.roles.edit'\n                                        defaultMessage='Edit'\n                                    />\n                                </Link>\n                            </span>\n                        ),\n                    },\n                    onClick: () => browserHistory.push(`/admin_console/user_management/system_roles/${role.id}`),\n                });\n            }\n        });\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.permissions.systemRoles'\n                    defaultMessage='System Roles (Beta)'\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminPanel\n                            id='SystemRoles'\n                            titleId={t('admin.permissions.systemRolesBannerTitle')}\n                            titleDefault='Admin Roles'\n                            subtitleId={t('admin.permissions.systemRolesBannerText')}\n                            subtitleDefault='Manage different levels of access to the system console.'\n                        >\n                            <div className='SystemRoles'>\n                                <DataGrid\n                                    rows={rows}\n                                    columns={columns}\n                                    page={1}\n                                    startCount={0}\n                                    endCount={rows.length}\n                                    loading={false}\n                                    nextPage={() => {}}\n                                    previousPage={() => {}}\n                                />\n                            </div>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nt('admin.permissions.roles.system_admin.name');\nt('admin.permissions.roles.system_admin.description');\nt('admin.permissions.roles.system_admin.type');\nt('admin.permissions.roles.system_user_manager.name');\nt('admin.permissions.roles.system_user_manager.description');\nt('admin.permissions.roles.system_user_manager.type');\nt('admin.permissions.roles.system_manager.name');\nt('admin.permissions.roles.system_manager.description');\nt('admin.permissions.roles.system_manager.type');\nt('admin.permissions.roles.system_read_only_admin.name');\nt('admin.permissions.roles.system_read_only_admin.description');\nt('admin.permissions.roles.system_read_only_admin.type');\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getUser} from 'mattermost-redux/selectors/entities/users';\nimport {updateUserActive} from 'mattermost-redux/actions/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {addUserToTeam} from 'mattermost-redux/actions/teams';\n\nimport {ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport {ServerError} from 'mattermost-redux/types/errors';\n\nimport {TeamMembership} from 'mattermost-redux/types/teams';\n\nimport {setNavigationBlocked} from 'actions/admin_actions.jsx';\n\nimport SystemUserDetail from './system_user_detail';\n\ntype OwnProps = {\n    match: any;\n};\n\nfunction mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n    const config = getConfig(state);\n    const userId = ownProps.match.params.user_id;\n    const user = getUser(state, userId);\n    return {\n        user,\n        mfaEnabled: config.EnableMultifactorAuthentication === 'true',\n    };\n}\n\ntype Actions = {\n    updateUserActive: (userId: string, active: boolean) => Promise<{error: ServerError}>;\n    setNavigationBlocked: (blocked: boolean) => void;\n    addUserToTeam: (teamId: string, userId?: string) => Promise<{data: TeamMembership; error?: any}>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    const apiActions = bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n        updateUserActive,\n        addUserToTeam,\n    }, dispatch);\n    const uiActions = bindActionCreators({\n        setNavigationBlocked,\n    }, dispatch);\n\n    const props = {\n        actions: Object.assign(apiActions, uiActions),\n    };\n\n    return props;\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUserDetail);\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./system_user_detail.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {Redirect, RouteComponentProps} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {Overlay, Tooltip} from 'react-bootstrap';\n\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport {Team, TeamMembership} from 'mattermost-redux/types/teams';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport {$ID} from 'mattermost-redux/types/utilities';\n\nimport {ServerError} from 'mattermost-redux/types/errors';\n\nimport {adminResetMfa, adminResetEmail} from 'actions/admin_actions.jsx';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport AdminButtonOutline from 'components/admin_console/admin_button_outline/admin_button_outline';\nimport AdminUserCard from 'components/admin_console/admin_user_card/admin_user_card';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ConfirmModal from 'components/confirm_modal';\nimport SaveButton from 'components/save_button';\nimport FormError from 'components/form_error';\nimport TeamSelectorModal from 'components/team_selector_modal';\n\nimport TeamList from 'components/admin_console/system_user_detail/team_list';\nimport EmailIcon from 'components/widgets/icons/email_icon.jsx';\nimport AtIcon from 'components/widgets/icons/at_icon.jsx';\nimport SheidOutlineIcon from 'components/widgets/icons/shield_outline_icon.jsx';\n\nimport './system_user_detail.scss';\n\nexport type Props = {\n    user: UserProfile;\n    mfaEnabled: boolean;\n    isDisabled?: boolean;\n    actions: {\n        updateUserActive: (userId: string, active: boolean) => Promise<{error: ServerError}>;\n        setNavigationBlocked: (blocked: boolean) => void;\n        addUserToTeam: (teamId: string, userId?: string) => Promise<{data: TeamMembership; error?: any}>;\n    };\n}\n\nexport type State = {\n    teams: TeamMembership[];\n    teamIds: Array<$ID<Team>>;\n    loading: boolean;\n    searching: boolean;\n    showPasswordModal: boolean;\n    showDeactivateMemberModal: boolean;\n    saveNeeded: boolean;\n    saving: boolean;\n    serverError: string | null;\n    errorTooltip: boolean;\n    customComponentWrapperClass: string;\n    user: UserProfile;\n    addTeamOpen: boolean;\n    refreshTeams: boolean;\n    error: ServerError | null;\n}\n\nexport default class SystemUserDetail extends React.PureComponent<Props & RouteComponentProps, State> {\n    errorMessageRef: React.RefObject<HTMLDivElement>;\n    errorMessageRefCurrent: React.ReactInstance | undefined;\n\n    public static defaultProps = {\n        user: {\n            email: '',\n        } as UserProfile,\n        mfaEnabled: false,\n    };\n\n    constructor(props: Props & RouteComponentProps) {\n        super(props);\n        this.state = {\n            teams: [],\n            teamIds: [],\n            loading: false,\n            searching: false,\n            showPasswordModal: false,\n            showDeactivateMemberModal: false,\n            saveNeeded: false,\n            saving: false,\n            serverError: null,\n            errorTooltip: false,\n            customComponentWrapperClass: '',\n            user: {\n                email: this.props.user.email,\n            } as UserProfile,\n            addTeamOpen: false,\n            refreshTeams: true,\n            error: null,\n        };\n\n        this.errorMessageRef = React.createRef();\n    }\n\n    setTeamsData = (teams: TeamMembership[]): void => {\n        const teamIds = teams.map((team) => team.team_id);\n        this.setState({teams});\n        this.setState({teamIds});\n        this.setState({refreshTeams: false});\n    }\n\n    openAddTeam = (): void => {\n        this.setState({addTeamOpen: true});\n    }\n\n    addTeams = (teams: Team[]): void => {\n        const promises = [];\n        for (const team of teams) {\n            promises.push(this.props.actions.addUserToTeam(team.id, this.props.user.id));\n        }\n        Promise.all(promises).finally(() => this.setState({refreshTeams: true}));\n    }\n\n    closeAddTeam = (): void => {\n        this.setState({addTeamOpen: false});\n    }\n\n    doPasswordReset = (user: UserProfile): void => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = (): void => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    doPasswordResetSubmit = (): void => {\n        this.setState({\n            showPasswordModal: false,\n        });\n    }\n\n    handleMakeActive = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then((data) => this.onUpdateActiveResult(data.error));\n    }\n\n    handleShowDeactivateMemberModal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        e.preventDefault();\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = (): void => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then((data) => this.onUpdateActiveResult(data.error));\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = (error: ServerError): void => {\n        if (error) {\n            this.setState({error});\n        }\n    }\n\n    handleDeactivateCancel = (): void => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    // TODO: add error handler function\n    handleResetMfa = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, null);\n    }\n\n    handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n        const emailChanged = e.target.value !== this.props.user.email;\n        this.setState({\n            user: {\n                email: e.target.value,\n            } as UserProfile,\n            saveNeeded: emailChanged,\n        });\n        this.props.actions.setNavigationBlocked(emailChanged);\n    }\n\n    handleSubmit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        e.preventDefault();\n        if (this.state.user.email !== this.props.user.email) {\n            if (!isEmail(this.state.user.email)) {\n                this.setState({serverError: 'Invalid Email address'});\n                return;\n            }\n            const user = Object.assign({}, this.props.user);\n            const email = this.state.user.email.trim().toLowerCase();\n            user.email = email;\n\n            this.setState({serverError: null});\n\n            adminResetEmail(\n                user,\n                () => {\n                    this.props.history.push('/admin_console/user_management/users');\n                },\n                (err: Error) => {\n                    const serverError = (err.message ? err.message : err) as string;\n                    this.setState({serverError});\n                },\n            );\n\n            this.setState({\n                saving: false,\n                saveNeeded: false,\n                serverError: null,\n            });\n            this.props.actions.setNavigationBlocked(false);\n        }\n    }\n\n    renderDeactivateMemberModal = (user: UserProfile): React.ReactNode => {\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: user.username,\n                }}\n            />\n        );\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const message = (\n            <div>\n                <FormattedMessage\n                    id='deactivate_member_modal.desc'\n                    defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system. Are you sure you want to deactivate {username}?'\n                    values={{\n                        username: user.username,\n                    }}\n                />\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    renderActivateDeactivate = (): React.ReactNode => {\n        if (this.props.user.delete_at > 0) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleMakeActive}\n                    className='admin-btn-default'\n                    disabled={this.props.isDisabled}\n                >\n                    {Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                </AdminButtonOutline>\n            );\n        }\n        return (\n            <AdminButtonOutline\n                onClick={this.handleShowDeactivateMemberModal}\n                className='admin-btn-default'\n                disabled={this.props.isDisabled}\n            >\n                {Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n            </AdminButtonOutline>\n        );\n    }\n\n    renderRemoveMFA = (): React.ReactNode => {\n        if (this.props.user.mfa_active) {\n            return (\n                <AdminButtonOutline\n                    onClick={this.handleResetMfa}\n                    className='admin-btn-default'\n                    disabled={this.props.isDisabled}\n                >\n                    {Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\n                </AdminButtonOutline>\n            );\n        }\n        return null;\n    }\n\n    getAuthenticationText(): string {\n        const {user, mfaEnabled} = this.props;\n        let authLine;\n\n        if (user.auth_service) {\n            let service;\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\n                service = user.auth_service.toUpperCase();\n            } else {\n                service = Utils.toTitleCase(user.auth_service);\n            }\n            authLine = service;\n        } else {\n            authLine = Utils.localizeMessage('admin.userManagement.userDetail.email', 'Email');\n        }\n        if (mfaEnabled) {\n            if (user.mfa_active) {\n                authLine += ', ';\n                authLine += Utils.localizeMessage('admin.userManagement.userDetail.mfa', 'MFA');\n            }\n        }\n        return authLine;\n    }\n\n    componentDidMount(): void {\n        if (this.errorMessageRef.current) {\n            this.errorMessageRefCurrent = this.errorMessageRef.current;\n        }\n    }\n\n    render(): React.ReactNode {\n        const {user} = this.props;\n        let deactivateMemberModal;\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (!user.id) {\n            return (\n                <Redirect to={{pathname: '/admin_console/user_management/users'}}/>\n            );\n        }\n\n        if (user.id) {\n            deactivateMemberModal = this.renderDeactivateMemberModal(user);\n            if (user.delete_at > 0) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='admin.user_item.inactive'\n                        defaultMessage='Inactive'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.systemAdmin'\n                        defaultMessage='System Admin'\n                    />\n                );\n            }\n            if (user.roles.length > 0 && Utils.isGuest(user)) {\n                currentRoles = (\n                    <FormattedMessage\n                        id='team_members_dropdown.guest'\n                        defaultMessage='Guest'\n                    />\n                );\n            }\n        }\n\n        return (\n            <div className='SystemUserDetail wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/users'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.systemUserDetail.title'\n                            defaultMessage='User Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminUserCard\n                            user={user}\n                            body={\n                                <React.Fragment>\n                                    <span className='SystemUserDetail__position'>{user.position}</span>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.email', 'Email')}</span>\n                                    <div>\n                                        <EmailIcon className='SystemUserDetail__field-icon'/>\n                                        <input\n                                            className='SystemUserDetail__input form-control'\n                                            type='text'\n                                            value={this.state.user.email}\n                                            onChange={this.handleEmailChange}\n                                            disabled={this.props.isDisabled}\n                                        />\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.username', 'Username')}</span>\n                                    <div>\n                                        <AtIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{user.username}</span>\n                                    </div>\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.authenticationMethod', 'Authentication Method')}</span>\n                                    <div className='SystemUserDetail__field-text'>\n                                        <SheidOutlineIcon className='SystemUserDetail__field-icon'/>\n                                        <span className='SystemUserDetail__field-text'>{this.getAuthenticationText()}</span>\n                                    </div>\n\n                                    <span className='SystemUserDetail__field-label'>{Utils.localizeMessage('admin.userManagement.userDetail.role', 'Role')}</span>\n                                    <p>{currentRoles}</p>\n                                </React.Fragment>\n                            }\n                            footer={\n                                <React.Fragment>\n                                    <AdminButtonOutline\n                                        onClick={this.doPasswordReset}\n                                        className='admin-btn-default'\n                                        disabled={this.props.isDisabled}\n                                    >\n                                        {Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\n                                    </AdminButtonOutline>\n                                    {this.renderActivateDeactivate()}\n                                    {this.renderRemoveMFA()}\n                                </React.Fragment>\n                            }\n                        />\n                        <AdminPanel\n                            subtitleId={t('admin.userManagement.userDetail.teamsSubtitle')}\n                            subtitleDefault={'Teams to which this user belongs'}\n                            titleId={t('admin.userManagement.userDetail.teamsTitle')}\n                            titleDefault={'Team Membership'}\n                            button={(\n                                <div className='add-team-button'>\n                                    <button\n                                        type='button'\n                                        className='btn btn-primary'\n                                        onClick={this.openAddTeam}\n                                        disabled={this.props.isDisabled}\n                                    >\n                                        <FormattedMessage\n                                            id='admin.userManagement.userDetail.addTeam'\n                                            defaultMessage='Add Team'\n                                        />\n                                    </button>\n                                </div>\n                            )}\n                        >\n                            <TeamList\n                                userId={this.props.user.id}\n                                userDetailCallback={this.setTeamsData}\n                                refreshTeams={this.state.refreshTeams}\n                                readOnly={this.props.isDisabled}\n                            />\n                        </AdminPanel>\n                    </div>\n                </div>\n                <div className='admin-console-save'>\n                    <SaveButton\n                        saving={this.state.saving}\n                        disabled={!this.state.saveNeeded}\n                        onClick={this.handleSubmit}\n                        savingMessage={Utils.localizeMessage('admin.saving', 'Saving Config...')}\n                    />\n                    <div\n                        className='error-message'\n                        ref={this.errorMessageRef}\n                    >\n                        <FormError error={this.state.serverError}/>\n                    </div>\n                    <Overlay\n                        show={this.state.errorTooltip}\n                        placement='top'\n                        target={this.errorMessageRefCurrent}\n                    >\n                        <Tooltip id='error-tooltip' >\n                            {this.state.serverError}\n                        </Tooltip>\n                    </Overlay>\n                </div>\n                <ResetPasswordModal\n                    user={user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                {deactivateMemberModal}\n                {this.state.addTeamOpen &&\n                    <TeamSelectorModal\n                        onModalDismissed={this.closeAddTeam}\n                        onTeamsSelected={this.addTeams}\n                        alreadySelected={this.state.teamIds}\n                    />\n                }\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./abstract_list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nimport './abstract_list.scss';\n\nconst PAGE_SIZE = 10;\n\ntype Props = {\n    userId: string;\n    headerLabels: Array<Record<string, any>>;\n    data: Array<Record<string, any>>;\n    onPageChangedCallback?: (paging: Paging) => void;\n    total: number;\n    renderRow: (item: {[x: string]: string}) => JSX.Element;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getTeamsData: (userId: string) => ActionFunc & Partial<{then: (func: () => void) => void}> | Promise<Record<string, any>>;\n        removeGroup?: () => void;\n    };\n}\n\ntype State = {\n    loading: boolean;\n    page: number;\n}\n\ntype Paging = {\n    startCount: number;\n    endCount: number;\n    total: number;\n}\n\nexport default class AbstractList extends React.PureComponent<Props, State> {\n    public static defaultProps = {\n        data: [],\n    };\n\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    public componentDidMount() {\n        this.performSearch();\n    }\n\n    private previousPage = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch();\n    }\n\n    private nextPage = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch();\n    }\n\n    private performSearch = (): void => {\n        const newState = {...this.state};\n        const userId = this.props.userId;\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getTeamsData(userId).then!(() => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging());\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    private getPaging(): Paging {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    private renderHeaderLabels = () => {\n        if (this.props.data.length > 0) {\n            return (\n                <div className='AbstractList__header'>\n                    {this.props.headerLabels.map((headerLabel, id) => (\n                        <div\n                            key={id}\n                            className='AbstractList__header-label'\n                            style={headerLabel.style}\n                        >{headerLabel.default}</div>\n                    ))}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    private renderRows = (): JSX.Element | JSX.Element[] => {\n        if (this.state.loading) {\n            return (\n                <div className='AbstractList__loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='AbstractList__empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const pageStart = this.state.page < 1 ? 0 : (this.state.page * PAGE_SIZE); // ie 0, 10, 20, etc.\n        const pageEnd = this.state.page < 1 ? PAGE_SIZE : (this.state.page + 1) * PAGE_SIZE; // ie 10, 20, 30, etc.\n        const pageData = this.props.data.slice(pageStart, pageEnd).map(this.props.renderRow); // ie 0-10, 10-20, etc.\n        return pageData;\n    }\n\n    public render = (): JSX.Element => {\n        const {startCount, endCount, total} = this.getPaging();\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div className='AbstractList'>\n                {this.renderHeaderLabels()}\n                <div className='AbstractList__body'>\n                    {this.renderRows()}\n                </div>\n                {total > 0 &&\n                    <div className='AbstractList__footer'>\n                        <div className='counter'>\n                            <FormattedMessage\n                                id='admin.team_channel_settings.list.paginatorCount'\n                                defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                                values={{\n                                    startCount,\n                                    endCount,\n                                    total,\n                                }}\n                            />\n                        </div>\n                        <button\n                            type='button'\n                            className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                            onClick={firstPage ? () => null : this.previousPage}\n                            disabled={firstPage}\n                        >\n                            <PreviousIcon/>\n                        </button>\n                        <button\n                            type='button'\n                            className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                            onClick={lastPage ? () => null : this.nextPage}\n                            disabled={lastPage}\n                        >\n                            <NextIcon/>\n                        </button>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {\n    getTeamsForUser,\n    getTeamMembersForUser,\n    removeUserFromTeam,\n    updateTeamMemberSchemeRoles,\n} from 'mattermost-redux/actions/teams';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport {GlobalState} from 'types/store';\n\nimport TeamList from './team_list';\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        locale: getCurrentLocale(state),\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getTeamsData: getTeamsForUser,\n            getTeamMembersForUser,\n            removeUserFromTeam,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {TeamMembership} from 'mattermost-redux/types/teams';\n\nimport {filterAndSortTeamsByDisplayName} from 'utils/team_utils.jsx';\nimport {t} from 'utils/i18n';\n\nimport AbstractList from './abstract_list';\nimport TeamRow from './team_row';\n\nconst headerLabels = [\n    {\n        id: t('admin.systemUserDetail.teamList.header.name'),\n        default: 'Name',\n        style: {\n            flexGrow: 1,\n            minWidth: '284px',\n            marginLeft: '16px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.type'),\n        default: 'Type',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        id: t('admin.systemUserDetail.teamList.header.role'),\n        default: 'Role',\n        style: {\n            width: '150px',\n        },\n    },\n    {\n        style: {\n            width: '150px',\n        },\n    },\n];\n\ntype Props = {\n    userId: string;\n    locale: string;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getTeamsData: (userId: string) => ActionFunc;\n        getTeamMembersForUser: (userId: string) => ActionFunc;\n        removeUserFromTeam: (teamId: string, userId: string) => ActionFunc & Partial<{error: Error}>;\n        updateTeamMemberSchemeRoles: (teamId: string, userId: string, isSchemeUser: boolean, isSchemeAdmin: boolean) => ActionFunc & Partial<{error: Error}>;\n    };\n    userDetailCallback: (teamsId: TeamMembership[]) => void;\n    refreshTeams: boolean;\n    readOnly?: boolean;\n}\n\ntype State = {\n    teamsWithMemberships: Array<Record<string, any>>;\n    serverError: string | null;\n}\n\nexport default class TeamList extends React.PureComponent<Props, State> {\n    public static defaultProps = {\n        emptyListTextId: t('admin.team_settings.team_list.no_teams_found'),\n        emptyListTextDefaultMessage: 'No teams found',\n        refreshTeams: false,\n    }\n\n    public constructor(props: Props) {\n        super(props);\n        this.state = {\n            teamsWithMemberships: [],\n            serverError: null,\n        };\n    }\n\n    public componentDidMount() {\n        this.getTeamsAndMemberships();\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        if (prevProps.refreshTeams !== this.props.refreshTeams) {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private getTeamsAndMemberships = async (userId = this.props.userId): Promise<void> => {\n        const teams = await this.props.actions.getTeamsData(userId);\n        const memberships = await this.props.actions.getTeamMembersForUser(userId);\n        return Promise.all([teams, memberships]).\n            then(this.mergeTeamsWithMemberships).\n            then((teamsWithMemberships) => {\n                this.setState({teamsWithMemberships});\n                this.props.userDetailCallback(teamsWithMemberships);\n            });\n    }\n\n    // check this out\n    private mergeTeamsWithMemberships = (data: Array<Record<string, any>>): TeamMembership[] => {\n        const teams = data[0].data;\n        const memberships = data[1].data;\n        let teamsWithMemberships = teams.map((object: {[x: string]: string}) => {\n            const results = memberships.filter((team: {[x: string]: string}) => team.team_id === object.id);\n            const team = {...object, ...results[0]};\n            return team;\n        });\n        teamsWithMemberships = filterAndSortTeamsByDisplayName(teamsWithMemberships, this.props.locale);\n        return teamsWithMemberships;\n    }\n\n    private doRemoveUserFromTeam = async (teamId: string): Promise<void> => {\n        const {error} = await this.props.actions.removeUserFromTeam(teamId, this.props.userId);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private doMakeUserTeamAdmin = async (teamId: string) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, true);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    private doMakeUserTeamMember = async (teamId: string) => {\n        const {error} = await this.props.actions.updateTeamMemberSchemeRoles(teamId, this.props.userId, true, false);\n        if (error) {\n            this.setState({serverError: error.message});\n        } else {\n            this.getTeamsAndMemberships();\n        }\n    }\n\n    public render(): JSX.Element {\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className='SystemUserDetail__error has-error'>\n                    <label className='has-error control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div>{serverError}</div>\n                <AbstractList\n                    headerLabels={headerLabels}\n                    renderRow={this.renderRow}\n                    total={this.state.teamsWithMemberships.length}\n                    data={this.state.teamsWithMemberships}\n                    actions={this.props.actions}\n                    emptyListTextId={this.props.emptyListTextId}\n                    emptyListTextDefaultMessage={this.props.emptyListTextDefaultMessage}\n                    userId={this.props.userId}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private renderRow = (item: {[x: string]: string}): JSX.Element => {\n        return (\n            <TeamRow\n                key={item.id}\n                team={item}\n                doRemoveUserFromTeam={this.doRemoveUserFromTeam}\n                doMakeUserTeamAdmin={this.doMakeUserTeamAdmin}\n                doMakeUserTeamMember={this.doMakeUserTeamMember}\n                readOnly={this.props.readOnly}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport EllipsisHorizontalIcon from 'components/widgets/icons/ellipsis_h_icon';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\ntype Props = {\n    team: {[x: string]: string};\n    doRemoveUserFromTeam: (teamId: string) => void;\n    doMakeUserTeamAdmin: (teamId: string) => void;\n    doMakeUserTeamMember: (teamId: string) => void;\n    isDisabled?: boolean;\n}\n\ntype State = {\n    serverError: string | null;\n}\n\nexport default class TeamListDropdown extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            serverError: null,\n        };\n    }\n\n    public render(): JSX.Element {\n        const {team} = this.props;\n        const isAdmin = team.scheme_admin;\n        const isMember = team.scheme_user && !team.scheme_admin;\n        const isGuest = team.scheme_guest;\n        const showMakeTeamAdmin = !isAdmin && !isGuest;\n        const showMakeTeamMember = !isMember && !isGuest;\n\n        return (\n            <MenuWrapper\n                isDisabled={this.props.isDisabled}\n            >\n                <button\n                    type='button'\n                    id={`teamListDropdown_${team.id}`}\n                    className='dropdown-toggle theme color--link style--none'\n                    aria-expanded='true'\n                >\n                    <span className='SystemUserDetail__actions-menu-icon'><EllipsisHorizontalIcon/></span>\n                </button>\n                <div>\n                    <Menu\n                        openLeft={true}\n                        openUp={false}\n                        ariaLabel={localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member')}\n                    >\n                        <Menu.ItemAction\n                            id='makeTeamAdmin'\n                            show={showMakeTeamAdmin}\n                            onClick={() => this.props.doMakeUserTeamAdmin(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeAdmin', 'Make Team Admin')}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeTeamMember}\n                            onClick={() => this.props.doMakeUserTeamMember(team.id)}\n                            text={localizeMessage('team_members_dropdown.makeMember', 'Make Team Member')}\n                        />\n                        <Menu.ItemAction\n                            id='removeFromTeam'\n                            show={true}\n                            onClick={() => this.props.doRemoveUserFromTeam(team.id)}\n                            text={localizeMessage('team_members_dropdown.leave_team', 'Remove from Team')}\n                            buttonClass='SystemUserDetail__action-remove-team'\n                        />\n                    </Menu>\n                </div>\n            </MenuWrapper>\n        );\n    }\n}\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./team_row.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as Utils from 'utils/utils';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport './team_row.scss';\nimport TeamListDropdown from './team_list_dropdown';\n\ntype Props = {\n    team: {[x: string]: string};\n    onRowClick?: () => void;\n    doRemoveUserFromTeam: (teamId: string) => Promise<void>;\n    doMakeUserTeamAdmin: (teamId: string) => Promise<void>;\n    doMakeUserTeamMember: (teamId: string) => Promise<void>;\n    readOnly?: boolean;\n}\n\nexport default class TeamRow extends React.PureComponent<Props> {\n    private renderTeamType = (team: {[x: string]: string}) => {\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.groupSync'}\n                    defaultMessage={'Group sync'}\n                />\n            );\n        }\n        if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamType.anyoneCanJoin'}\n                    defaultMessage={'Anyone can join'}\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id={'admin.systemUserDetail.teamList.teamType.inviteOnly'}\n                defaultMessage={'Invite only'}\n            />\n        );\n    }\n    private renderTeamRole = (team: {[x: string]: string}) => {\n        if (team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.guest'}\n                    defaultMessage={'Guest'}\n                />\n            );\n        }\n        if (team.scheme_admin && !team.scheme_guest) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.admin'}\n                    defaultMessage={'Team Admin'}\n                />\n            );\n        }\n        if (team.scheme_user && !team.scheme_guest && !team.scheme_admin) {\n            return (\n                <FormattedMessage\n                    id={'admin.systemUserDetail.teamList.teamRole.member'}\n                    defaultMessage={'Team Member'}\n                />\n            );\n        }\n        return null;\n    }\n    public render = (): JSX.Element => {\n        const {team} = this.props;\n        const teamIconUrl = Utils.imageURLForTeam(team);\n        return (\n            <div className={'TeamRow'}>\n                <div className='TeamRow__row'>\n                    <div className='TeamRow__team-name'>\n                        <div className='col-sm-auto'>\n                            <TeamIcon\n                                size='sm'\n                                url={teamIconUrl}\n                                name={team.display_name}\n                            />\n                        </div>\n                        <div className='col-md-auto'>\n                            <b>{team.display_name}</b>\n                            {team.description && (\n                                <div className='overflow--ellipsis text-nowrap TeamRow__team-description'>\n                                    {team.description}\n                                </div>)}\n                        </div>\n\n                    </div>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamType(team)}\n                    </span>\n\n                    <span className='TeamRow__description'>\n                        {this.renderTeamRole(team)}\n                    </span>\n\n                    <span className='TeamRow__actions'>\n                        <TeamListDropdown\n                            team={team}\n                            doRemoveUserFromTeam={this.props.doRemoveUserFromTeam}\n                            doMakeUserTeamAdmin={this.props.doMakeUserTeamAdmin}\n                            doMakeUserTeamMember={this.props.doMakeUserTeamMember}\n                            isDisabled={this.props.readOnly}\n                        />\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\n\nimport {getTeams, getTeamStats} from 'mattermost-redux/actions/teams';\nimport {\n    getUser,\n    getUserAccessToken,\n    getProfiles,\n    searchProfiles,\n    revokeSessionsForAllUsers,\n} from 'mattermost-redux/actions/users';\nimport {logError} from 'mattermost-redux/actions/errors';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\nimport {getUsers} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {Stats} from 'mattermost-redux/constants';\n\nimport {GenericAction} from 'mattermost-redux/types/actions';\n\nimport {GlobalState} from 'types/store';\n\nimport {loadProfilesAndTeamMembers, loadProfilesWithoutTeam} from 'actions/user_actions';\n\nimport {setSystemUsersSearch} from 'actions/views/search';\nimport {SearchUserTeamFilter} from 'utils/constants';\n\nimport SystemUsers from './system_users';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n\n    const siteName = config.SiteName;\n    const mfaEnabled = config.EnableMultifactorAuthentication === 'true';\n    const enableUserAccessTokens = config.EnableUserAccessTokens === 'true';\n    const experimentalEnableAuthenticationTransfer = config.ExperimentalEnableAuthenticationTransfer === 'true';\n\n    const search = state.views.search.systemUsersSearch;\n    let totalUsers = 0;\n    let searchTerm = '';\n    let teamId = '';\n    let filter = '';\n    if (search) {\n        searchTerm = search.term || '';\n        teamId = search.team || '';\n        filter = search.filter || '';\n\n        if (!teamId || teamId === SearchUserTeamFilter.ALL_USERS) {\n            const stats = state.entities.admin.analytics || {[Stats.TOTAL_USERS]: 0, [Stats.TOTAL_INACTIVE_USERS]: 0};\n            totalUsers = Number(stats[Stats.TOTAL_USERS]) + Number(stats[Stats.TOTAL_INACTIVE_USERS]);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            totalUsers = 0;\n        } else {\n            const stats = state.entities.teams.stats[teamId] || {total_member_count: 0};\n            totalUsers = stats.total_member_count;\n        }\n    }\n\n    return {\n        teams: getTeamsList(state),\n        siteName,\n        mfaEnabled,\n        totalUsers,\n        searchTerm,\n        teamId,\n        filter,\n        enableUserAccessTokens,\n        users: getUsers(state),\n        experimentalEnableAuthenticationTransfer,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getTeamStats,\n            getUser,\n            getUserAccessToken,\n            loadProfilesAndTeamMembers,\n            setSystemUsersSearch,\n            loadProfilesWithoutTeam,\n            getProfiles,\n            searchProfiles,\n            revokeSessionsForAllUsers,\n            logError,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\n\nimport {getUser} from 'mattermost-redux/actions/users';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport SystemUsersList from './system_users_list';\nimport {getNonBotUsers} from './selectors';\n\ntype Actions = {\n    getUser: (id: string) => UserProfile;\n};\n\ntype Props = {\n    loading: boolean;\n    teamId: string;\n    term: string;\n    filter: string;\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: Props) {\n    const users = getNonBotUsers(state, ownProps.loading, ownProps.teamId, ownProps.term, ownProps.filter);\n    return {\n        users,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getUser,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersList);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getUser, getProfiles, getProfilesInTeam, getProfilesWithoutTeam, makeSearchProfilesStartingWithTerm, searchProfilesInTeam} from 'mattermost-redux/selectors/entities/users';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport {userSelectorOptionsFromFilter} from 'utils/filter_users';\n\nconst ALL_USERS = '';\nconst NO_TEAM = 'no_team';\nconst USER_ID_LENGTH = 26;\n\nexport function getUsers(state: GlobalState, loading: boolean, teamId: string, term: string, filter: string): UserProfile[] {\n    if (loading) {\n        // Show no users while loading.\n        return [];\n    }\n    const searchProfilesStartingWithTerm = makeSearchProfilesStartingWithTerm();\n\n    const filters = userSelectorOptionsFromFilter(filter);\n    if (term) {\n        let users = [];\n        if (teamId) {\n            users = searchProfilesInTeam(state, teamId, term, false, filters);\n        } else {\n            users = searchProfilesStartingWithTerm(state, term, false, filters);\n        }\n\n        if (users.length === 0 && term.length === USER_ID_LENGTH) {\n            const user = getUser(state, term);\n            if (user) {\n                users = [user];\n            }\n        }\n\n        return users;\n    }\n\n    if (teamId === ALL_USERS) {\n        return getProfiles(state, filters);\n    } else if (teamId === NO_TEAM) {\n        return getProfilesWithoutTeam(state, filters);\n    }\n\n    return getProfilesInTeam(state, teamId, filters);\n}\n\nexport function getNonBotUsers(state: GlobalState, loading: boolean, teamId: string, term: string, filter: string): UserProfile[] {\n    return getUsers(state, loading, teamId, term, filter).filter((user) => {\n        return !user.is_bot;\n    });\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {getUserAccessTokensForUser} from 'mattermost-redux/actions/users';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport ManageRolesModal from 'components/admin_console/manage_roles_modal';\nimport ManageTeamsModal from 'components/admin_console/manage_teams_modal';\nimport ManageTokensModal from 'components/admin_console/manage_tokens_modal';\nimport ResetPasswordModal from 'components/admin_console/reset_password_modal';\nimport ResetEmailModal from 'components/admin_console/reset_email_modal/reset_email_modal.jsx';\nimport SearchableUserList from 'components/searchable_user_list/searchable_user_list.jsx';\nimport UserListRowWithError from 'components/user_list_row_with_error';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport SystemUsersDropdown from '../system_users_dropdown';\n\ntype Props = {\n    users: UserProfile[];\n    teams?: Team[];\n    usersPerPage: number;\n    total: number;\n    nextPage: (page: number) => void;\n    search: (term: string) => void;\n    focusOnMount?: boolean;\n    renderFilterRow: (doSearch: ((event: React.FormEvent<HTMLInputElement>) => void) | undefined) => JSX.Element;\n\n    teamId: string;\n    filter: string;\n    term: string;\n    onTermChange: (term: string) => void;\n    isDisabled?: boolean;\n\n    /**\n     * Whether MFA is licensed and enabled.\n     */\n    mfaEnabled: boolean;\n\n    /**\n     * Whether or not user access tokens are enabled.\n     */\n    enableUserAccessTokens: boolean;\n\n    /**\n     * Whether or not the experimental authentication transfer is enabled.\n     */\n    experimentalEnableAuthenticationTransfer: boolean;\n\n    actions: {\n        getUser: (id: string) => UserProfile;\n    };\n};\n\ntype State = {\n    page: number;\n    filter: string;\n    teamId: string;\n    showManageTeamsModal: boolean;\n    showManageRolesModal: boolean;\n    showManageTokensModal: boolean;\n    showPasswordModal: boolean;\n    showEmailModal: boolean;\n    user?: UserProfile;\n};\n\nexport default class SystemUsersList extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n\n            filter: props.filter,\n            teamId: props.teamId,\n            showManageTeamsModal: false,\n            showManageRolesModal: false,\n            showManageTokensModal: false,\n            showPasswordModal: false,\n            showEmailModal: false,\n            user: undefined,\n        };\n    }\n\n    static getDerivedStateFromProps(nextProps: Props, prevState: State): { page: number; teamId: string; filter: string } | null {\n        if (prevState.teamId !== nextProps.teamId || prevState.filter !== nextProps.filter) {\n            return {\n                page: 0,\n                teamId: nextProps.teamId,\n                filter: nextProps.filter,\n            };\n        }\n        return null;\n    }\n\n    nextPage = () => {\n        this.setState({page: this.state.page + 1});\n\n        this.props.nextPage(this.state.page + 1);\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    search = (term: string) => {\n        this.props.search(term);\n\n        if (term !== '') {\n            this.setState({page: 0});\n        }\n    }\n\n    doManageTeams = (user: UserProfile) => {\n        this.setState({\n            showManageTeamsModal: true,\n            user,\n        });\n    }\n\n    doManageRoles = (user: UserProfile) => {\n        this.setState({\n            showManageRolesModal: true,\n            user,\n        });\n    }\n\n    doManageTokens = (user: UserProfile) => {\n        this.setState({\n            showManageTokensModal: true,\n            user,\n        });\n    }\n\n    doManageTeamsDismiss = () => {\n        this.setState({\n            showManageTeamsModal: false,\n            user: undefined,\n        });\n    }\n\n    doManageRolesDismiss = () => {\n        this.setState({\n            showManageRolesModal: false,\n            user: undefined,\n        });\n    }\n\n    doManageTokensDismiss = () => {\n        this.setState({\n            showManageTokensModal: false,\n            user: undefined,\n        });\n    }\n\n    doPasswordReset = (user: UserProfile) => {\n        this.setState({\n            showPasswordModal: true,\n            user,\n        });\n    }\n\n    doPasswordResetDismiss = () => {\n        this.setState({\n            showPasswordModal: false,\n            user: undefined,\n        });\n    }\n\n    doPasswordResetSubmit = (user?: UserProfile) => {\n        if (user) {\n            this.props.actions.getUser(user.id);\n        }\n\n        this.setState({\n            showPasswordModal: false,\n            user: undefined,\n        });\n    }\n\n    doEmailReset = (user: UserProfile) => {\n        this.setState({\n            showEmailModal: true,\n            user,\n        });\n    }\n\n    doEmailResetDismiss = () => {\n        this.setState({\n            showEmailModal: false,\n            user: undefined,\n        });\n    }\n\n    doEmailResetSubmit = (user: UserProfile) => {\n        this.props.actions.getUser(user.id);\n\n        this.setState({\n            showEmailModal: false,\n            user: undefined,\n        });\n    }\n\n    getInfoForUser(user: UserProfile) {\n        const info = [];\n\n        if (user.auth_service) {\n            let service;\n            if (user.auth_service === Constants.LDAP_SERVICE || user.auth_service === Constants.SAML_SERVICE) {\n                service = user.auth_service.toUpperCase();\n            } else {\n                service = Utils.toTitleCase(user.auth_service);\n            }\n\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceNotEmail'\n                    id='admin.user_item.authServiceNotEmail'\n                    defaultMessage='**Sign-in Method:** {service}'\n                    values={{\n                        service,\n                    }}\n                />,\n            );\n        } else {\n            info.push(\n                <FormattedMarkdownMessage\n                    key='admin.user_item.authServiceEmail'\n                    id='admin.user_item.authServiceEmail'\n                    defaultMessage='**Sign-in Method:** Email'\n                />,\n            );\n        }\n\n        info.push(', ');\n        const userID = user.id;\n        info.push(\n            <FormattedMarkdownMessage\n                key='admin.user_item.user_id'\n                id='admin.user_item.user_id'\n                defaultMessage='**User ID:** {userID}'\n                values={{\n                    userID,\n                }}\n            />,\n        );\n\n        if (this.props.mfaEnabled) {\n            info.push(', ');\n\n            if (user.mfa_active) {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaYes'\n                        id='admin.user_item.mfaYes'\n                        defaultMessage='**MFA**: Yes'\n                    />,\n                );\n            } else {\n                info.push(\n                    <FormattedMarkdownMessage\n                        key='admin.user_item.mfaNo'\n                        id='admin.user_item.mfaNo'\n                        defaultMessage='**MFA**: No'\n                    />,\n                );\n            }\n        }\n\n        return info;\n    }\n\n    renderCount(count: number, total: number, startCount: number, endCount: number, isSearch: boolean) {\n        if (total) {\n            if (isSearch) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countSearch'\n                        defaultMessage='{count, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            total,\n                        }}\n                    />\n                );\n            } else if (startCount !== 0 || endCount !== total) {\n                return (\n                    <FormattedMessage\n                        id='system_users_list.countPage'\n                        defaultMessage='{startCount, number} - {endCount, number} {count, plural, one {user} other {users}} of {total, number} total'\n                        values={{\n                            count,\n                            startCount: startCount + 1,\n                            endCount,\n                            total,\n                        }}\n                    />\n                );\n            }\n\n            return (\n                <FormattedMessage\n                    id='system_users_list.count'\n                    defaultMessage='{count, number} {count, plural, one {user} other {users}}'\n                    values={{\n                        count,\n                    }}\n                />\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n        const extraInfo: {[key: string]: Array<string | JSX.Element>} = {};\n        if (this.props.users) {\n            for (const user of this.props.users) {\n                extraInfo[user.id] = this.getInfoForUser(user);\n            }\n        }\n\n        return (\n            <div>\n                <SearchableUserList\n                    {...this.props}\n                    renderCount={this.renderCount}\n                    extraInfo={extraInfo}\n                    actions={[SystemUsersDropdown]}\n                    actionProps={{\n                        mfaEnabled: this.props.mfaEnabled,\n                        enableUserAccessTokens: this.props.enableUserAccessTokens,\n                        experimentalEnableAuthenticationTransfer: this.props.experimentalEnableAuthenticationTransfer,\n                        doPasswordReset: this.doPasswordReset,\n                        doEmailReset: this.doEmailReset,\n                        doManageTeams: this.doManageTeams,\n                        doManageRoles: this.doManageRoles,\n                        doManageTokens: this.doManageTokens,\n                        isDisabled: this.props.isDisabled,\n                    }}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    search={this.search}\n                    page={this.state.page}\n                    term={this.props.term}\n                    onTermChange={this.props.onTermChange}\n                    rowComponentType={UserListRowWithError}\n                />\n                <ManageTeamsModal\n                    user={this.state.user}\n                    show={this.state.showManageTeamsModal}\n                    onModalDismissed={this.doManageTeamsDismiss}\n                />\n                <ManageRolesModal\n                    user={this.state.user}\n                    show={this.state.showManageRolesModal}\n                    onModalDismissed={this.doManageRolesDismiss}\n                />\n                <ManageTokensModal\n                    user={this.state.user}\n                    show={this.state.showManageTokensModal}\n                    onModalDismissed={this.doManageTokensDismiss}\n                    actions={{getUserAccessTokensForUser}}\n                />\n                <ResetPasswordModal\n                    user={this.state.user}\n                    show={this.state.showPasswordModal}\n                    onModalSubmit={this.doPasswordResetSubmit}\n                    onModalDismissed={this.doPasswordResetDismiss}\n                />\n                <ResetEmailModal\n                    user={this.state.user}\n                    show={this.state.showEmailModal}\n                    onModalSubmit={this.doEmailResetSubmit}\n                    onModalDismissed={this.doEmailResetDismiss}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ChangeEvent} from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {debounce} from 'mattermost-redux/actions/helpers';\nimport {Permissions} from 'mattermost-redux/constants';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport {getStandardAnalytics} from 'actions/admin_actions';\nimport {Constants, UserSearchOptions, SearchUserTeamFilter, UserFilters} from 'utils/constants';\nimport * as Utils from 'utils/utils';\nimport {t} from 'utils/i18n';\nimport {getUserOptionsFromFilter, searchUserOptionsFromFilter} from 'utils/filter_users';\n\nimport LocalizedInput from 'components/localized_input/localized_input';\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\nimport ConfirmModal from 'components/confirm_modal';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions';\n\nimport SystemUsersList from './list';\n\nconst USER_ID_LENGTH = 26;\nconst USERS_PER_PAGE = 50;\n\ntype Props = {\n\n    /**\n     * Array of team objects\n     */\n    teams: Team[];\n\n    /**\n     * Title of the app or site.\n     */\n    siteName?: string;\n\n    /**\n     * Whether or not MFA is licensed and enabled.\n     */\n    mfaEnabled: boolean;\n\n    /**\n     * Whether or not user access tokens are enabled.\n     */\n    enableUserAccessTokens: boolean;\n\n    /**\n     * Whether or not the experimental authentication transfer is enabled.\n     */\n    experimentalEnableAuthenticationTransfer: boolean;\n    totalUsers: number;\n    searchTerm: string;\n    teamId: string;\n    filter: string;\n    users: Record<string, UserProfile>;\n    isDisabled?: boolean;\n\n    actions: {\n\n        /**\n         * Function to get teams\n         */\n        getTeams: (startInde: number, endIndex: number) => void;\n\n        /**\n         * Function to get statistics for a team\n         */\n        getTeamStats: (teamId: string) => ActionFunc;\n\n        /**\n         * Function to get a user\n         */\n        getUser: (id: string) => ActionFunc;\n\n        /**\n         * Function to get a user access token\n         */\n        getUserAccessToken: (tokenId: string) => Promise<any> | ActionFunc;\n        loadProfilesAndTeamMembers: (page: number, maxItemsPerPage: number, teamId: string, options: Record<string, string | boolean>) => void;\n        loadProfilesWithoutTeam: (page: number, maxItemsPerPage: number, options: Record<string, string | boolean>) => void;\n        getProfiles: (page: number, maxItemsPerPage: number, options: Record<string, string | boolean>) => void;\n        setSystemUsersSearch: (searchTerm: string, teamId: string, filter: string) => void;\n        searchProfiles: (term: string, options?: any) => Promise<any> | ActionFunc;\n\n        /**\n         * Function to revoke all sessions in the system\n         */\n        revokeSessionsForAllUsers: () => any;\n\n        /**\n         * Function to log errors\n         */\n        logError: (error: {type: string; message: string}) => void;\n    };\n};\n\ntype State = {\n    loading: boolean;\n    searching: boolean;\n    showRevokeAllSessionsModal: boolean;\n    term?: string;\n};\n\nexport default class SystemUsers extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            searching: false,\n            showRevokeAllSessionsModal: false,\n        };\n    }\n\n    componentDidMount() {\n        this.loadDataForTeam(this.props.teamId, this.props.filter);\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setSystemUsersSearch('', '', '');\n    }\n\n    loadDataForTeam = async (teamId: string, filter: string | undefined) => {\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n            getTeamStats,\n        } = this.props.actions;\n\n        if (this.props.searchTerm) {\n            this.doSearch(this.props.searchTerm, teamId, filter);\n            return;\n        }\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await Promise.all([\n                getProfiles(0, Constants.PROFILE_CHUNK_SIZE, options),\n                getStandardAnalytics(),\n            ]);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(0, Constants.PROFILE_CHUNK_SIZE, options);\n        } else {\n            await Promise.all([\n                loadProfilesAndTeamMembers(0, Constants.PROFILE_CHUNK_SIZE, teamId, options),\n                getTeamStats(teamId),\n            ]);\n        }\n\n        this.setState({loading: false});\n    }\n\n    handleTeamChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        const teamId = e.target.value;\n        this.loadDataForTeam(teamId, this.props.filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, teamId, this.props.filter);\n    }\n\n    handleFilterChange = (e: ChangeEvent<HTMLSelectElement>) => {\n        const filter = e.target.value;\n        this.loadDataForTeam(this.props.teamId, filter);\n        this.props.actions.setSystemUsersSearch(this.props.searchTerm, this.props.teamId, filter);\n    }\n\n    handleTermChange = (term: string) => {\n        this.props.actions.setSystemUsersSearch(term, this.props.teamId, this.props.filter);\n    }\n    handleRevokeAllSessions = async () => {\n        const {data} = await this.props.actions.revokeSessionsForAllUsers();\n        if (data) {\n            emitUserLoggedOutEvent();\n        } else {\n            this.props.actions.logError({type: 'critical', message: 'Can\\'t revoke all sessions'});\n        }\n    }\n    handleRevokeAllSessionsCancel = () => {\n        this.setState({showRevokeAllSessionsModal: false});\n    }\n    handleShowRevokeAllSessionsModal = () => {\n        this.setState({showRevokeAllSessionsModal: true});\n    }\n\n    nextPage = async (page: number) => {\n        const {teamId, filter} = this.props;\n\n        // Paging isn't supported while searching\n        const {\n            getProfiles,\n            loadProfilesWithoutTeam,\n            loadProfilesAndTeamMembers,\n        } = this.props.actions;\n\n        const options = getUserOptionsFromFilter(filter);\n\n        if (teamId === SearchUserTeamFilter.ALL_USERS) {\n            await getProfiles(page + 1, USERS_PER_PAGE, options);\n        } else if (teamId === SearchUserTeamFilter.NO_TEAM) {\n            await loadProfilesWithoutTeam(page + 1, USERS_PER_PAGE, options);\n        } else {\n            await loadProfilesAndTeamMembers(page + 1, USERS_PER_PAGE, teamId, options);\n        }\n        this.setState({loading: false});\n    }\n\n    doSearch = debounce(async (term, teamId = this.props.teamId, filter = this.props.filter) => {\n        if (!term) {\n            return;\n        }\n\n        this.setState({loading: true});\n\n        const options = {\n            ...searchUserOptionsFromFilter(filter),\n            ...teamId && {team_id: teamId},\n            ...teamId === SearchUserTeamFilter.NO_TEAM && {\n                [UserSearchOptions.WITHOUT_TEAM]: true,\n            },\n            allow_inactive: true,\n        };\n\n        const {data: profiles} = await this.props.actions.searchProfiles(term, options);\n        if (profiles.length === 0 && term.length === USER_ID_LENGTH) {\n            await this.getUserByTokenOrId(term);\n        }\n\n        this.setState({loading: false});\n    }, Constants.SEARCH_TIMEOUT_MILLISECONDS, false, () => {});\n\n    getUserById = async (id: string) => {\n        if (this.props.users[id]) {\n            this.setState({loading: false});\n            return;\n        }\n\n        await this.props.actions.getUser(id);\n        this.setState({loading: false});\n    }\n\n    getUserByTokenOrId = async (id: string) => {\n        if (this.props.enableUserAccessTokens) {\n            const {data} = await this.props.actions.getUserAccessToken(id);\n\n            if (data) {\n                this.setState({term: data.user_id});\n                this.getUserById(data.user_id);\n                return;\n            }\n        }\n\n        this.getUserById(id);\n    }\n\n    renderRevokeAllUsersModal = () => {\n        const title = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_modal_title'\n                defaultMessage='Revoke all sessions in the system'\n            />\n        );\n\n        const message = (\n            <div>\n                <FormattedMarkdownMessage\n                    id='admin.system_users.revoke_all_sessions_modal_message'\n                    defaultMessage='This action revokes all sessions in the system. All users will be logged out from all devices. Are you sure you want to revoke all sessions?'\n                />\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const revokeAllButton = (\n            <FormattedMessage\n                id='admin.system_users.revoke_all_sessions_button'\n                defaultMessage='Revoke All Sessions'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeAllSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={revokeAllButton}\n                onConfirm={this.handleRevokeAllSessions}\n                onCancel={this.handleRevokeAllSessionsCancel}\n            />\n        );\n    }\n\n    renderFilterRow = (doSearch: ((event: React.FormEvent<HTMLInputElement>) => void) | undefined) => {\n        const teams = this.props.teams.map((team) => (\n            <option\n                key={team.id}\n                value={team.id}\n            >\n                {team.display_name}\n            </option>\n        ));\n\n        return (\n            <div className='system-users__filter-row'>\n                <div className='system-users__filter'>\n                    <LocalizedInput\n                        id='searchUsers'\n                        className='form-control filter-textbox'\n                        placeholder={{id: t('filtered_user_list.search'), defaultMessage: 'Search users'}}\n                        onInput={doSearch}\n                    />\n                </div>\n                <label>\n                    <span className='system-users__team-filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.team'\n                            defaultMessage='Team:'\n                        />\n                    </span>\n                    <select\n                        className='form-control system-users__team-filter'\n                        onChange={this.handleTeamChange}\n                        value={this.props.teamId}\n                    >\n                        <option value={SearchUserTeamFilter.ALL_USERS}>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={SearchUserTeamFilter.NO_TEAM}>{Utils.localizeMessage('admin.system_users.noTeams', 'No Teams')}</option>\n                        {teams}\n                    </select>\n                </label>\n                <label>\n                    <span className='system-users__filter-label'>\n                        <FormattedMessage\n                            id='filtered_user_list.userStatus'\n                            defaultMessage='User Status:'\n                        />\n                    </span>\n                    <select\n                        id='selectUserStatus'\n                        className='form-control system-users__filter'\n                        value={this.props.filter}\n                        onChange={this.handleFilterChange}\n                    >\n                        <option value=''>{Utils.localizeMessage('admin.system_users.allUsers', 'All Users')}</option>\n                        <option value={UserFilters.SYSTEM_ADMIN}>{Utils.localizeMessage('admin.system_users.system_admin', 'System Admin')}</option>\n                        <option value={UserFilters.SYSTEM_GUEST}>{Utils.localizeMessage('admin.system_users.guest', 'Guest')}</option>\n                        <option value={UserFilters.INACTIVE}>{Utils.localizeMessage('admin.system_users.inactive', 'Inactive')}</option>\n                    </select>\n                </label>\n            </div>\n        );\n    }\n\n    render() {\n        const revokeAllUsersModal = this.renderRevokeAllUsersModal();\n\n        return (\n            <div className='wrapper--fixed'>\n                <FormattedAdminHeader\n                    id='admin.system_users.title'\n                    defaultMessage='{siteName} Users'\n                    values={{\n                        siteName: this.props.siteName,\n                    }}\n                />\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <div className='more-modal__list member-list-holder'>\n                            <SystemUsersList\n                                loading={this.state.loading}\n                                renderFilterRow={this.renderFilterRow}\n                                search={this.doSearch}\n                                nextPage={this.nextPage}\n                                usersPerPage={USERS_PER_PAGE}\n                                total={this.props.totalUsers}\n                                teams={this.props.teams}\n                                teamId={this.props.teamId}\n                                filter={this.props.filter}\n                                term={this.props.searchTerm}\n                                onTermChange={this.handleTermChange}\n                                mfaEnabled={this.props.mfaEnabled}\n                                enableUserAccessTokens={this.props.enableUserAccessTokens}\n                                experimentalEnableAuthenticationTransfer={this.props.experimentalEnableAuthenticationTransfer}\n                                isDisabled={this.props.isDisabled}\n                            />\n                        </div>\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            {revokeAllUsersModal}\n                            <div className='pt-3 pb-3'>\n                                <button\n                                    id='revoke-all-users'\n                                    type='button'\n                                    className='btn btn-default'\n                                    onClick={() => this.handleShowRevokeAllSessionsModal()}\n                                    disabled={this.props.isDisabled}\n                                >\n                                    <FormattedMessage\n                                        id='admin.system_users.revokeAllSessions'\n                                        defaultMessage='Revoke All Sessions'\n                                    />\n                                </button>\n                            </div>\n                        </SystemPermissionGate>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {updateUserActive, revokeAllSessionsForUser, promoteGuestToUser, demoteUserToGuest} from 'mattermost-redux/actions/users';\nimport {getCurrentUser} from 'mattermost-redux/selectors/entities/users';\nimport {getExternalBotAccounts} from 'mattermost-redux/selectors/entities/bots';\nimport {loadBots} from 'mattermost-redux/actions/bots';\n\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport * as Selectors from 'mattermost-redux/selectors/entities/admin';\n\nimport {GlobalState} from 'types/store';\n\nimport SystemUsersDropdown, {Props} from './system_users_dropdown';\n\nfunction mapStateToProps(state: GlobalState) {\n    const bots = getExternalBotAccounts(state);\n    const license = getLicense(state);\n    return {\n        isLicensed: license && license.IsLicensed === 'true',\n        config: Selectors.getConfig(state),\n        currentUser: getCurrentUser(state),\n        bots,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Props['actions']>({\n            updateUserActive,\n            revokeAllSessionsForUser,\n            promoteGuestToUser,\n            demoteUserToGuest,\n            loadBots,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SystemUsersDropdown);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport * as UserUtils from 'mattermost-redux/utils/user_utils';\nimport {Permissions} from 'mattermost-redux/constants';\nimport {AdminConfig} from 'mattermost-redux/types/config';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {Bot} from 'mattermost-redux/types/bots';\n\nimport {adminResetMfa} from 'actions/admin_actions.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {Constants} from 'utils/constants';\nimport * as Utils from 'utils/utils.jsx';\nimport {t} from 'utils/i18n';\nimport {getSiteURL} from 'utils/url';\nimport {emitUserLoggedOutEvent} from 'actions/global_actions';\nimport ConfirmModal from 'components/confirm_modal';\nimport SystemPermissionGate from 'components/permissions_gates/system_permission_gate';\n\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\n\nconst ROWS_FROM_BOTTOM_TO_OPEN_UP = 3;\nconst TOTAL_USERS_TO_OPEN_UP = 5;\n\nexport type Props = {\n    user: UserProfile;\n    currentUser: UserProfile;\n    mfaEnabled: boolean;\n    enableUserAccessTokens: boolean;\n    experimentalEnableAuthenticationTransfer: boolean;\n    index: number;\n    totalUsers: number;\n    config: DeepPartial<AdminConfig>;\n    bots: Dictionary<Bot>;\n    isLicensed: boolean;\n    isDisabled: boolean;\n    actions: {\n        updateUserActive: (id: string, active: boolean) => Promise<{error: ServerError}>;\n        revokeAllSessionsForUser: (id: string) => Promise<{error: ServerError; data: any}>;\n        promoteGuestToUser: (id: string) => Promise<{error: ServerError}>;\n        demoteUserToGuest: (id: string) => Promise<{error: ServerError}>;\n        loadBots: (page?: number, size?: number) => Promise<unknown>;\n    };\n    doPasswordReset: (user: UserProfile) => void;\n    doEmailReset: (user: UserProfile) => void;\n    doManageTeams: (user: UserProfile) => void;\n    doManageRoles: (user: UserProfile) => void;\n    doManageTokens: (user: UserProfile) => void;\n    onError: (error: ServerError | {id: string}) => void;\n}\n\ntype State = {\n    showDeactivateMemberModal: boolean;\n    showRevokeSessionsModal: boolean;\n    showPromoteToUserModal: boolean;\n    showDemoteToGuestModal: boolean;\n    user: UserProfile | null;\n    role: string | null;\n}\n\nexport default class SystemUsersDropdown extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            showDeactivateMemberModal: false,\n            showRevokeSessionsModal: false,\n            showPromoteToUserModal: false,\n            showDemoteToGuestModal: false,\n            user: null,\n            role: null,\n        };\n    }\n\n    handleMakeActive = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.actions.updateUserActive(this.props.user.id, true).\n            then(this.onUpdateActiveResult);\n    }\n\n    handleManageTeams = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageTeams(this.props.user);\n    }\n\n    handleManageRoles = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageRoles(this.props.user);\n    }\n\n    handleManageTokens = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n\n        this.props.doManageTokens(this.props.user);\n    }\n\n    handleResetPassword = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.doPasswordReset(this.props.user);\n    }\n\n    handleResetEmail = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.props.doEmailReset(this.props.user);\n    }\n\n    handleResetMfa = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        adminResetMfa(this.props.user.id, null, this.props.onError);\n    }\n\n    handleShowDeactivateMemberModal = async (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            await this.props.actions.loadBots(\n                Constants.Integrations.START_PAGE_NUM,\n                parseInt(Constants.Integrations.PAGE_SIZE, 10),\n            );\n        }\n        this.setState({showDeactivateMemberModal: true});\n    }\n\n    handleDeactivateMember = () => {\n        this.props.actions.updateUserActive(this.props.user.id, false).\n            then(this.onUpdateActiveResult);\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    onUpdateActiveResult = ({error}: {error: ServerError}) => {\n        if (error) {\n            this.props.onError({id: error.server_error_id, ...error});\n        }\n    }\n\n    handleDeactivateCancel = () => {\n        this.setState({showDeactivateMemberModal: false});\n    }\n\n    renderDeactivateMemberModal = () => {\n        const user = this.props.user;\n        const title = (\n            <FormattedMessage\n                id='deactivate_member_modal.title'\n                defaultMessage='Deactivate {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const defaultMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc'\n                defaultMessage='This action deactivates {username}. They will be logged out and not have access to any teams or channels on this system.\\n'\n                values={{\n                    username: user.username,\n                }}\n            />);\n\n        let warning;\n        if (user.auth_service !== '' && user.auth_service !== Constants.EMAIL_SERVICE) {\n            warning = (\n                <strong>\n                    <br/>\n                    <br/>\n                    <FormattedMessage\n                        id='deactivate_member_modal.sso_warning'\n                        defaultMessage='You must also deactivate this user in the SSO provider or they will be reactivated on next login or sync.'\n                    />\n                </strong>\n            );\n        }\n\n        const confirmationMessage = (\n            <FormattedMarkdownMessage\n                id='deactivate_member_modal.desc.confirm'\n                defaultMessage='Are you sure you want to deactivate {username}?'\n                values={{\n                    username: user.username,\n                }}\n            />);\n        let messageForUsersWithBotAccounts;\n        if (this.shouldDisableBotsWhenOwnerIsDeactivated()) {\n            for (const bot of Object.values(this.props.bots)) {\n                if ((bot.owner_id === user.id) && this.state.showDeactivateMemberModal && (bot.delete_at === 0)) {\n                    messageForUsersWithBotAccounts = (\n                        <FormattedMarkdownMessage\n                            id='deactivate_member_modal.desc.for_users_with_bot_accounts'\n                            defaultMessage='This action deactivates {username}.\\n \\n * They will be logged out and not have access to any teams or channels on this system.\\n * Bot accounts they manage will be disabled along with their integrations. To enable them again, go to [Integrations > Bot Accounts]({siteURL}/_redirect/integrations/bots). [Learn more about bot accounts](!https://mattermost.com/pl/default-bot-accounts).\\n \\n \\n'\n                            values={{\n                                username: user.username,\n                                siteURL: getSiteURL(),\n                            }}\n                        />);\n                    break;\n                }\n            }\n        }\n\n        const message = (\n            <div>\n                {messageForUsersWithBotAccounts || defaultMessage}\n                {confirmationMessage}\n                {warning}\n            </div>\n        );\n\n        const confirmButtonClass = 'btn btn-danger';\n        const deactivateMemberButton = (\n            <FormattedMessage\n                id='deactivate_member_modal.deactivate'\n                defaultMessage='Deactivate'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDeactivateMemberModal}\n                title={title}\n                message={message}\n                confirmButtonClass={confirmButtonClass}\n                confirmButtonText={deactivateMemberButton}\n                onConfirm={this.handleDeactivateMember}\n                onCancel={this.handleDeactivateCancel}\n            />\n        );\n    }\n\n    shouldDisableBotsWhenOwnerIsDeactivated() {\n        return this.props.config &&\n            this.props.config.ServiceSettings &&\n            this.props.config.ServiceSettings.DisableBotsWhenOwnerIsDeactivated;\n    }\n\n    handleShowRevokeSessionsModal = (e: {preventDefault: () => void}) => {\n        e.preventDefault();\n        this.setState({showRevokeSessionsModal: true});\n    }\n\n    handleRevokeSessions = async () => {\n        const me = this.props.currentUser;\n\n        const {data, error} = await this.props.actions.revokeAllSessionsForUser(this.props.user.id);\n        if (data && this.props.user.id === me.id) {\n            emitUserLoggedOutEvent();\n        } else if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handleRevokeSessionsCancel = () => {\n        this.setState({showRevokeSessionsModal: false});\n    }\n\n    handlePromoteToUser = () => {\n        this.setState({showPromoteToUserModal: true});\n    }\n\n    handlePromoteToUserConfirm = async () => {\n        const {error} = await this.props.actions.promoteGuestToUser(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handlePromoteToUserCancel = () => {\n        this.setState({showPromoteToUserModal: false});\n    }\n\n    handleDemoteToGuest = () => {\n        this.setState({showDemoteToGuestModal: true});\n    }\n\n    handleDemoteToGuestConfirm = async () => {\n        const {error} = await this.props.actions.demoteUserToGuest(this.props.user.id);\n        if (error) {\n            this.props.onError(error);\n        }\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    handleDemoteToGuestCancel = () => {\n        this.setState({showDemoteToGuestModal: false});\n    }\n\n    renderPromoteToUserModal = () => {\n        const title = (\n            <FormattedMessage\n                id='promote_to_user_modal.title'\n                defaultMessage='Promote guest {username} to user'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='promote_to_user_modal.desc'\n                defaultMessage='This action promotes the guest {username} to a member. It will allow the user to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to promote guest {username} to user?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const promoteUserButton = (\n            <FormattedMessage\n                id='promote_to_user_modal.promote'\n                defaultMessage='Promote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showPromoteToUserModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={promoteUserButton}\n                onConfirm={this.handlePromoteToUserConfirm}\n                onCancel={this.handlePromoteToUserCancel}\n            />\n        );\n    }\n\n    renderDemoteToGuestModal = () => {\n        const title = (\n            <FormattedMessage\n                id='demote_to_user_modal.title'\n                defaultMessage='Demote User {username} to Guest'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='demote_to_user_modal.desc'\n                defaultMessage={'This action demotes the user {username} to a guest. It will restrict the user\\'s ability to join public channels and interact with users outside of the channels they are currently members of. Are you sure you want to demote user {username} to guest?'}\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const demoteGuestButton = (\n            <FormattedMessage\n                id='demote_to_user_modal.demote'\n                defaultMessage='Demote'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showDemoteToGuestModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={demoteGuestButton}\n                onConfirm={this.handleDemoteToGuestConfirm}\n                onCancel={this.handleDemoteToGuestCancel}\n            />\n        );\n    }\n\n    renderRevokeSessionsModal = () => {\n        const title = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.title'\n                defaultMessage='Revoke Sessions for {username}'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const message = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.desc'\n                defaultMessage='This action revokes all sessions for {username}. They will be logged out from all devices. Are you sure you want to revoke all sessions for {username}?'\n                values={{\n                    username: this.props.user.username,\n                }}\n            />\n        );\n\n        const revokeUserButtonButton = (\n            <FormattedMessage\n                id='revoke_user_sessions_modal.revoke'\n                defaultMessage='Revoke'\n            />\n        );\n\n        return (\n            <ConfirmModal\n                show={this.state.showRevokeSessionsModal}\n                title={title}\n                message={message}\n                confirmButtonClass='btn btn-danger'\n                confirmButtonText={revokeUserButtonButton}\n                onConfirm={this.handleRevokeSessions}\n                onCancel={this.handleRevokeSessionsCancel}\n            />\n        );\n    }\n\n    renderAccessToken = () => {\n        const userAccessTokensEnabled = this.props.enableUserAccessTokens;\n        if (!userAccessTokensEnabled) {\n            return null;\n        }\n\n        const user = this.props.user;\n        const hasPostAllRole = UserUtils.hasPostAllRole(user.roles);\n        const hasPostAllPublicRole = UserUtils.hasPostAllPublicRole(user.roles);\n        const hasUserAccessTokenRole = UserUtils.hasUserAccessTokenRole(user.roles);\n        const isSystemAdmin = UserUtils.isSystemAdmin(user.roles);\n\n        let messageId = '';\n        if (hasUserAccessTokenRole || isSystemAdmin) {\n            if (hasPostAllRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAll');\n            } else if (hasPostAllPublicRole) {\n                messageId = t('admin.user_item.userAccessTokenPostAllPublic');\n            } else {\n                messageId = t('admin.user_item.userAccessTokenYes');\n            }\n        }\n\n        if (!messageId) {\n            return null;\n        }\n\n        return (\n            <div className='light mt-1'>\n                <FormattedMessage\n                    key='admin.user_item.userAccessToken'\n                    id={messageId}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        const {currentUser, user, isLicensed, config} = this.props;\n        const isGuest = Utils.isGuest(user);\n        if (!user) {\n            return <div/>;\n        }\n\n        let currentRoles = (\n            <FormattedMessage\n                id='admin.user_item.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (isGuest) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.guest'\n                    defaultMessage='Guest'\n                />\n            );\n        }\n\n        if (user.roles.length > 0 && Utils.isSystemAdmin(user.roles)) {\n            currentRoles = (\n                <FormattedMessage\n                    id='team_members_dropdown.systemAdmin'\n                    defaultMessage='System Admin'\n                />\n            );\n        }\n\n        let showMakeActive = false;\n        let showMakeNotActive = !Utils.isSystemAdmin(user.roles);\n        let showManageTeams = true;\n        let showRevokeSessions = true;\n        const showMfaReset = this.props.mfaEnabled && Boolean(user.mfa_active);\n\n        if (user.delete_at > 0) {\n            currentRoles = (\n                <FormattedMessage\n                    id='admin.user_item.inactive'\n                    defaultMessage='Inactive'\n                />\n            );\n            showMakeActive = true;\n            showMakeNotActive = false;\n            showManageTeams = false;\n            showRevokeSessions = false;\n        }\n\n        let disableActivationToggle = false;\n        if (user.auth_service === Constants.LDAP_SERVICE) {\n            disableActivationToggle = true;\n        }\n\n        const deactivateMemberModal = this.renderDeactivateMemberModal();\n        const revokeSessionsModal = this.renderRevokeSessionsModal();\n        const promoteToUserModal = this.renderPromoteToUserModal();\n        const demoteToGuestModal = this.renderDemoteToGuestModal();\n\n        const {index, totalUsers} = this.props;\n        return (\n            <React.Fragment>\n                {deactivateMemberModal}\n                {revokeSessionsModal}\n                {promoteToUserModal}\n                {demoteToGuestModal}\n                <MenuWrapper\n                    isDisabled={this.props.isDisabled}\n                >\n                    <div className='text-right'>\n                        <a>\n                            <span>{currentRoles} </span>\n                            <span className='caret'/>\n                        </a>\n                        {this.renderAccessToken()}\n                    </div>\n                    <Menu\n                        openLeft={true}\n                        openUp={totalUsers > TOTAL_USERS_TO_OPEN_UP && totalUsers - index <= ROWS_FROM_BOTTOM_TO_OPEN_UP}\n                        ariaLabel={Utils.localizeMessage('admin.user_item.menuAriaLabel', 'User Actions Menu')}\n                    >\n                        <Menu.ItemAction\n                            show={showMakeActive}\n                            onClick={this.handleMakeActive}\n                            text={Utils.localizeMessage('admin.user_item.makeActive', 'Activate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={showMakeNotActive}\n                            onClick={this.handleShowDeactivateMemberModal}\n                            text={Utils.localizeMessage('admin.user_item.makeInactive', 'Deactivate')}\n                            disabled={disableActivationToggle}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest}\n                            onClick={this.handleManageRoles}\n                            text={Utils.localizeMessage('admin.user_item.manageRoles', 'Manage Roles')}\n                        />\n                        <Menu.ItemAction\n                            show={showManageTeams}\n                            onClick={this.handleManageTeams}\n                            text={Utils.localizeMessage('admin.user_item.manageTeams', 'Manage Teams')}\n                        />\n                        <Menu.ItemAction\n                            show={this.props.enableUserAccessTokens}\n                            onClick={this.handleManageTokens}\n                            text={Utils.localizeMessage('admin.user_item.manageTokens', 'Manage Tokens')}\n                        />\n                        <Menu.ItemAction\n                            show={showMfaReset}\n                            onClick={this.handleResetMfa}\n                            text={Utils.localizeMessage('admin.user_item.resetMfa', 'Remove MFA')}\n                        />\n                        <Menu.ItemAction\n                            show={Boolean(user.auth_service) && this.props.experimentalEnableAuthenticationTransfer}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.switchToEmail', 'Switch to Email/Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service}\n                            onClick={this.handleResetPassword}\n                            text={Utils.localizeMessage('admin.user_item.resetPwd', 'Reset Password')}\n                        />\n                        <Menu.ItemAction\n                            show={!user.auth_service && user.id !== currentUser.id}\n                            onClick={this.handleResetEmail}\n                            text={Utils.localizeMessage('admin.user_item.resetEmail', 'Update Email')}\n                        />\n                        <Menu.ItemAction\n                            show={isGuest}\n                            onClick={this.handlePromoteToUser}\n                            text={Utils.localizeMessage('admin.user_item.promoteToUser', 'Promote to User')}\n                        />\n                        <Menu.ItemAction\n                            show={!isGuest && user.id !== currentUser.id && isLicensed && config.GuestAccountsSettings?.Enable}\n                            onClick={this.handleDemoteToGuest}\n                            text={Utils.localizeMessage('admin.user_item.demoteToGuest', 'Demote to Guest')}\n                        />\n                        <SystemPermissionGate permissions={[Permissions.REVOKE_USER_ACCESS_TOKEN]}>\n                            <Menu.ItemAction\n                                show={showRevokeSessions}\n                                onClick={this.handleShowRevokeSessionsModal}\n                                text={Utils.localizeMessage('admin.user_item.revokeSessions', 'Revoke Sessions')}\n                            />\n                        </SystemPermissionGate>\n                    </Menu>\n                </MenuWrapper>\n            </React.Fragment>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport NextIcon from 'components/widgets/icons/fa_next_icon';\nimport PreviousIcon from 'components/widgets/icons/fa_previous_icon';\n\nexport const PAGE_SIZE = 10;\n\nexport default class AbstractList extends React.PureComponent {\n    static propTypes = {\n        data: PropTypes.arrayOf(PropTypes.object),\n        onPageChangedCallback: PropTypes.func,\n        total: PropTypes.number.isRequired,\n        header: PropTypes.node.isRequired,\n        renderRow: PropTypes.func.isRequired,\n        emptyListTextId: PropTypes.string.isRequired,\n        emptyListTextDefaultMessage: PropTypes.string.isRequired,\n        actions: PropTypes.shape({\n            getData: PropTypes.func.isRequired,\n            removeGroup: PropTypes.func,\n        }).isRequired,\n        noPadding: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        data: [],\n        noPadding: false,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            page: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.performSearch(this.state.page);\n    }\n\n    previousPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    nextPage = async (e) => {\n        e.preventDefault();\n        const page = this.state.page + 1;\n        this.setState({page, loading: true});\n        this.performSearch(page);\n    }\n\n    renderHeader = () => {\n        if (this.props.data.length > 0) {\n            return this.props.header;\n        }\n        return null;\n    }\n\n    renderRows = () => {\n        if (this.state.loading) {\n            return (\n                <div className='groups-list-loading'>\n                    <i className='fa fa-spinner fa-pulse fa-2x'/>\n                </div>\n            );\n        }\n        if (this.props.data.length === 0) {\n            return (\n                <div className='groups-list-empty'>\n                    <FormattedMessage\n                        id={this.props.emptyListTextId}\n                        defaultMessage={this.props.emptyListTextDefaultMessage}\n                    />\n                </div>\n            );\n        }\n        const offset = this.state.page * PAGE_SIZE;\n        return this.props.data.slice(offset, offset + PAGE_SIZE).map(this.props.renderRow);\n    }\n\n    performSearch = (page) => {\n        const newState = {...this.state};\n        delete newState.page;\n\n        newState.loading = true;\n        this.setState(newState);\n\n        this.props.actions.getData(page, PAGE_SIZE, '', false, true).then((response) => {\n            if (this.props.onPageChangedCallback) {\n                this.props.onPageChangedCallback(this.getPaging(), response);\n            }\n            this.setState({loading: false});\n        });\n    }\n\n    getPaging() {\n        const startCount = (this.state.page * PAGE_SIZE) + 1;\n        let endCount = (this.state.page * PAGE_SIZE) + PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        return {startCount, endCount, total};\n    }\n\n    render = () => {\n        const {startCount, endCount, total} = this.getPaging();\n        const {noPadding} = this.props;\n        const lastPage = endCount === total;\n        const firstPage = this.state.page === 0;\n        return (\n            <div\n                className={classNames(\n                    'groups-list',\n                    'groups-list-no-padding',\n                    {\n                        'groups-list-less-padding': noPadding,\n                    },\n                )}\n            >\n                {this.renderHeader()}\n                <div\n                    id='groups-list--body'\n                    className='groups-list--body'\n                >\n                    {this.renderRows()}\n                </div>\n                {total > 0 && <div className='groups-list--footer'>\n                    <div className='counter'>\n                        <FormattedMessage\n                            id='admin.team_channel_settings.list.paginatorCount'\n                            defaultMessage='{startCount, number} - {endCount, number} of {total, number}'\n                            values={{\n                                startCount,\n                                endCount,\n                                total,\n                            }}\n                        />\n                    </div>\n                    <button\n                        type='button'\n                        className={'btn btn-link prev ' + (firstPage ? 'disabled' : '')}\n                        onClick={firstPage ? null : this.previousPage}\n                        disabled={firstPage}\n                    >\n                        <PreviousIcon/>\n                    </button>\n                    <button\n                        type='button'\n                        className={'btn btn-link next ' + (lastPage ? 'disabled' : '')}\n                        onClick={lastPage ? null : this.nextPage}\n                        disabled={lastPage}\n                        data-testid='page-link-next'\n                    >\n                        <NextIcon/>\n                    </button>\n                </div>}\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport ChannelsList from 'components/admin_console/team_channel_settings/channel/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\ninterface Props {\n    siteName?: string;\n}\n\nexport interface ChannelSettingsState {\n    startCount: number;\n    endCount: number;\n    total: number;\n}\n\nexport class ChannelsSettings extends React.PureComponent<Props> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            startCount: 0,\n            endCount: 1,\n            total: 0,\n        };\n    }\n\n    render = () => {\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header'>\n                    <FormattedMessage\n                        id='admin.channel_settings.groupsPageTitle'\n                        defaultMessage='{siteName} Channels'\n                        values={{siteName: this.props.siteName}}\n                    />\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <AdminPanel\n                            id='channels'\n                            titleId={t('admin.channel_settings.title')}\n                            titleDefault='Channels'\n                            subtitleId={t('admin.channel_settings.description')}\n                            subtitleDefault={'Manage channel settings.'}\n                            subtitleValues={{...this.state}}\n                        >\n                            <ChannelsList/>\n                        </AdminPanel>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport {Groups, Permissions} from 'mattermost-redux/constants';\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Scheme} from 'mattermost-redux/types/schemes';\nimport {ChannelModerationRoles} from 'mattermost-redux/types/roles';\nimport {SyncablePatch, Group, SyncableType} from 'mattermost-redux/types/groups';\nimport {Channel, ChannelModeration as ChannelPermissions, ChannelModerationPatch} from 'mattermost-redux/types/channels';\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport {ServerError} from 'mattermost-redux/types/errors';\n\nimport ConfirmModal from 'components/confirm_modal';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormError from 'components/form_error';\nimport Constants from 'utils/constants';\nimport {browserHistory} from 'utils/browser_history';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport {NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\nimport ConvertConfirmModal from '../../convert_confirm_modal';\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport ConvertAndRemoveConfirmModal from '../../convert_and_remove_confirm_modal';\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {ChannelModes} from './channel_modes';\nimport {ChannelGroups} from './channel_groups';\nimport {ChannelProfile} from './channel_profile';\nimport ChannelMembers from './channel_members';\nimport ChannelModeration from './channel_moderation';\n\nexport interface ChannelDetailsProps {\n    channelID: string;\n    channel: Channel;\n    team: Partial<Team>;\n    groups: Group[];\n    totalGroups: number;\n    allGroups: Dictionary<Group>;\n    channelPermissions?: ChannelPermissions[];\n    teamScheme?: Scheme;\n    guestAccountsEnabled: boolean;\n    isDisabled?: boolean;\n    actions: ChannelDetailsActions;\n}\n\ninterface ChannelDetailsState {\n    isSynced: boolean;\n    isPublic: boolean;\n    isDefault: boolean;\n    totalGroups: number;\n    groups: Group[];\n    usersToRemoveCount: number;\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    rolesToUpdate: {\n        [userId: string]: {\n            schemeUser: boolean;\n            schemeAdmin: boolean;\n        };\n    };\n    saveNeeded: boolean;\n    serverError: JSX.Element | null;\n    previousServerError: JSX.Element | null;\n    isPrivacyChanging: boolean;\n    saving: boolean;\n    showConvertConfirmModal: boolean;\n    showRemoveConfirmModal: boolean;\n    showConvertAndRemoveConfirmModal: boolean;\n    channelPermissions?: ChannelPermissions[];\n    teamScheme?: Scheme;\n    isLocalArchived: boolean;\n    showArchiveConfirmModal: boolean;\n}\n\nexport type ChannelDetailsActions = {\n    getGroups: (channelID: string, q?: string, page?: number, perPage?: number, filterAllowReference?: boolean) => Promise<ActionResult>;\n    linkGroupSyncable: (groupID: string, syncableID: string, syncableType: SyncableType, patch: SyncablePatch) => ActionResult;\n    unlinkGroupSyncable: (groupID: string, syncableID: string, syncableType: SyncableType) => ActionFunc;\n    membersMinusGroupMembers: (channelID: string, groupIDs: string[], page?: number, perPage?: number) => ActionResult;\n    setNavigationBlocked: (blocked: boolean) => {type: 'SET_NAVIGATION_BLOCKED'; blocked: boolean};\n    getChannel: (channelId: string) => ActionFunc;\n    getTeam: (teamId: string) => Promise<ActionResult>;\n    getChannelModerations: (channelId: string) => Promise<ActionResult>;\n    patchChannel: (channelId: string, patch: Channel) => ActionFunc;\n    updateChannelPrivacy: (channelId: string, privacy: string) => Promise<ActionResult>;\n    patchGroupSyncable: (groupID: string, syncableID: string, syncableType: SyncableType, patch: Partial<SyncablePatch>) => ActionFunc;\n    patchChannelModerations: (channelID: string, patch: ChannelModerationPatch[]) => {data: Channel; error: ServerError};\n    loadScheme: (schemeID: string) => Promise<ActionResult>;\n    addChannelMember: (channelId: string, userId: string, postRootId?: string) => Promise<ActionResult>;\n    removeChannelMember: (channelId: string, userId: string) => Promise<ActionResult>;\n    updateChannelMemberSchemeRoles: (channelId: string, userId: string, isSchemeUser: boolean, isSchemeAdmin: boolean) => Promise<ActionResult>;\n    deleteChannel: (channelId: string) => Promise<ActionResult>;\n    unarchiveChannel: (channelId: string) => Promise<ActionResult>;\n};\n\nexport default class ChannelDetails extends React.PureComponent<ChannelDetailsProps, ChannelDetailsState> {\n    constructor(props: ChannelDetailsProps) {\n        super(props);\n        this.state = {\n            isSynced: Boolean(props.channel.group_constrained),\n            isPublic: props.channel.type === Constants.OPEN_CHANNEL,\n            isDefault: props.channel.name === Constants.DEFAULT_CHANNEL,\n            isPrivacyChanging: false,\n            saving: false,\n            totalGroups: props.totalGroups,\n            showConvertConfirmModal: false,\n            showRemoveConfirmModal: false,\n            showConvertAndRemoveConfirmModal: false,\n            usersToRemoveCount: 0,\n            usersToRemove: {},\n            usersToAdd: {},\n            rolesToUpdate: {},\n            groups: props.groups,\n            saveNeeded: false,\n            serverError: null,\n            previousServerError: null,\n            channelPermissions: props.channelPermissions,\n            teamScheme: props.teamScheme,\n            isLocalArchived: props.channel.delete_at > 0,\n            showArchiveConfirmModal: false,\n        };\n    }\n\n    componentDidUpdate(prevProps: ChannelDetailsProps) {\n        const {channel, totalGroups, actions} = this.props;\n        if (channel.id !== prevProps.channel.id || totalGroups !== prevProps.totalGroups) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                isSynced: Boolean(channel.group_constrained),\n                isPublic: channel.type === Constants.OPEN_CHANNEL,\n                isDefault: channel.name === Constants.DEFAULT_CHANNEL,\n                isLocalArchived: channel.delete_at > 0,\n            });\n        }\n\n        // If we don't have the team and channel on mount, we need to request the team after we load the channel\n        if (!prevProps.team.id && !prevProps.channel.team_id && channel.team_id) {\n            actions.getTeam(channel.team_id).\n                then(async (data: any) => {\n                    if (data.data && data.data.scheme_id) {\n                        await actions.loadScheme(data.data.scheme_id);\n                    }\n                }).\n                then(() => this.setState({teamScheme: this.props.teamScheme}));\n        }\n    }\n\n    async componentDidMount() {\n        const {channelID, channel, actions} = this.props;\n        const actionsToAwait = [];\n        if (channelID) {\n            actionsToAwait.push(actions.getGroups(channelID).\n                then(() => actions.getChannel(channelID)).\n                then(() => this.setState({groups: this.props.groups})),\n            );\n            actionsToAwait.push(actions.getChannelModerations(channelID).then(() => this.restrictChannelMentions()));\n        }\n\n        if (channel.team_id) {\n            actionsToAwait.push(actions.getTeam(channel.team_id).\n                then(async (data: any) => {\n                    if (data.data && data.data.scheme_id) {\n                        await actions.loadScheme(data.data.scheme_id);\n                    }\n                }).\n                then(() => this.setState({teamScheme: this.props.teamScheme})),\n            );\n        }\n\n        await Promise.all(actionsToAwait);\n    }\n\n    private restrictChannelMentions() {\n        // Disabling use_channel_mentions on every role that create_post is either disabled or has a value of false\n        let channelPermissions = this.props.channelPermissions;\n        const currentCreatePostRoles: any = channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST)?.roles;\n        for (const channelRole of Object.keys(currentCreatePostRoles)) {\n            channelPermissions = channelPermissions!.map((permission) => {\n                if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS && (!currentCreatePostRoles[channelRole].value || !currentCreatePostRoles[channelRole].enabled)) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: false,\n                                enabled: false,\n                            },\n                        },\n                    };\n                }\n                return permission;\n            });\n        }\n        this.setState({channelPermissions});\n    }\n\n    private setToggles = (isSynced: boolean, isPublic: boolean) => {\n        const {channel} = this.props;\n        const isOriginallyPublic = channel.type === Constants.OPEN_CHANNEL;\n        this.setState(\n            {\n                saveNeeded: true,\n                isSynced,\n                isPublic,\n                isPrivacyChanging: isPublic !== isOriginallyPublic,\n            },\n            () => this.processGroupsChange(this.state.groups),\n        );\n        this.props.actions.setNavigationBlocked(true);\n    };\n\n    async processGroupsChange(groups: Group[]) {\n        const {actions, channelID} = this.props;\n        actions.setNavigationBlocked(true);\n        let serverError = null;\n        let usersToRemoveCount = 0;\n        if (this.state.isSynced) {\n            try {\n                if (groups.length === 0) {\n                    serverError = (\n                        <NeedGroupsError\n                            warning={true}\n                            isChannel={true}\n                        />\n                    );\n                } else {\n                    if (!channelID) {\n                        return;\n                    }\n\n                    const result = await actions.membersMinusGroupMembers(channelID, groups.map((g) => g.id));\n                    if ('data' in result) {\n                        usersToRemoveCount = result.data.total_count;\n                        if (usersToRemoveCount > 0) {\n                            serverError = (\n                                <UsersWillBeRemovedError\n                                    total={usersToRemoveCount}\n                                    users={result.data.users}\n                                    scope='channel'\n                                    scopeId={this.props.channelID}\n                                />\n                            );\n                        }\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemoveCount, saveNeeded: true, serverError});\n    }\n\n    private handleGroupRemoved = (gid: string) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n        this.processGroupsChange(groups);\n    };\n\n    private setNewGroupRole = (gid: string) => {\n        const groups = cloneDeep(this.state.groups).map((g) => {\n            if (g.id === gid) {\n                g.scheme_admin = !g.scheme_admin;\n            }\n            return g;\n        });\n        this.processGroupsChange(groups);\n    }\n\n    private channelPermissionsChanged = (name: string, channelRole: ChannelModerationRoles) => {\n        const currentValueIndex = this.state.channelPermissions!.findIndex((element) => element.name === name);\n        const currentValue = this.state.channelPermissions![currentValueIndex].roles[channelRole]!.value;\n        const newValue = !currentValue;\n        let channelPermissions = [...this.state.channelPermissions!];\n\n        if (name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST) {\n            const originalObj = this.props.channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS)?.roles![channelRole];\n            channelPermissions = channelPermissions.map((permission) => {\n                if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS && !newValue) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: false,\n                                enabled: false,\n                            },\n                        },\n                    };\n                } else if (permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS) {\n                    return {\n                        name: permission.name,\n                        roles: {\n                            ...permission.roles,\n                            [channelRole]: {\n                                value: originalObj?.value,\n                                enabled: originalObj?.enabled,\n                            },\n                        },\n                    };\n                }\n                return permission;\n            });\n        }\n        channelPermissions[currentValueIndex] = {\n            ...channelPermissions![currentValueIndex],\n            roles: {\n                ...channelPermissions![currentValueIndex].roles,\n                [channelRole]: {\n                    ...channelPermissions![currentValueIndex].roles[channelRole],\n                    value: newValue,\n                },\n            },\n        };\n        this.setState({channelPermissions, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    private handleGroupChange = (groupIDs: string[]) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid: string) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n        this.processGroupsChange(groups);\n    };\n\n    private hideConvertConfirmModal = () => {\n        this.setState({showConvertConfirmModal: false});\n    };\n\n    private hideRemoveConfirmModal = () => {\n        this.setState({showRemoveConfirmModal: false});\n    };\n\n    private hideConvertAndRemoveConfirmModal = () => {\n        this.setState({showConvertAndRemoveConfirmModal: false});\n    };\n\n    private hideArchiveConfirmModal = () => {\n        this.setState({showArchiveConfirmModal: false});\n    };\n\n    private onSave = () => {\n        const {channel} = this.props;\n        const {isSynced, usersToRemoveCount, serverError} = this.state;\n        let {isPublic, isPrivacyChanging} = this.state;\n        if (this.channelToBeArchived()) {\n            this.setState({showArchiveConfirmModal: true});\n            return;\n        }\n        const isOriginallyPublic = channel.type === Constants.OPEN_CHANNEL;\n        if (isSynced) {\n            isPublic = false;\n            isPrivacyChanging = isOriginallyPublic;\n            this.setState({\n                isPublic,\n                isPrivacyChanging,\n            });\n        }\n        if (isPrivacyChanging && usersToRemoveCount > 0) {\n            this.setState({showConvertAndRemoveConfirmModal: true});\n            return;\n        }\n        if (isPrivacyChanging && usersToRemoveCount === 0 && serverError === null) {\n            this.setState({showConvertConfirmModal: true});\n            return;\n        }\n        if (!isPrivacyChanging && usersToRemoveCount > 0) {\n            this.setState({showRemoveConfirmModal: true});\n            return;\n        }\n        this.handleSubmit();\n    };\n\n    private handleSubmit = async () => {\n        this.setState({showConvertConfirmModal: false, showRemoveConfirmModal: false, showConvertAndRemoveConfirmModal: false, showArchiveConfirmModal: false, saving: true});\n        const {groups, isSynced, isPublic, isPrivacyChanging, channelPermissions, usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        let serverError: JSX.Element | null = null;\n        let saveNeeded = false;\n        const {groups: origGroups, channelID, actions, channel} = this.props;\n\n        if (this.channelToBeArchived()) {\n            const result = await actions.deleteChannel(channel.id);\n            if ('error' in result) {\n                serverError = <FormError error={result.error.message}/>;\n                saveNeeded = true;\n            } else {\n                trackEvent('admin_channel_config_page', 'channel_archived', {channel_id: channelID});\n            }\n            this.setState({serverError, saving: false, saveNeeded, isPrivacyChanging: false, usersToRemoveCount: 0, rolesToUpdate: {}, usersToAdd: {}, usersToRemove: {}}, () => {\n                actions.setNavigationBlocked(saveNeeded);\n                if (!saveNeeded) {\n                    browserHistory.push('/admin_console/user_management/channels');\n                }\n            });\n            return;\n        } else if (this.channelToBeRestored() && this.state.serverError === null) {\n            const result = await actions.unarchiveChannel(channel.id);\n            if ('error' in result) {\n                serverError = <FormError error={result.error.message}/>;\n            } else {\n                trackEvent('admin_channel_config_page', 'channel_unarchived', {channel_id: channelID});\n            }\n            this.setState({serverError, previousServerError: null});\n        }\n\n        if (this.state.groups.length === 0 && isSynced) {\n            serverError = <NeedGroupsError isChannel={true}/>;\n            saveNeeded = true;\n            this.setState({serverError, saving: false, saveNeeded});\n            actions.setNavigationBlocked(saveNeeded);\n            return;\n        }\n\n        const promises = [];\n        if (isPrivacyChanging) {\n            const convert = actions.updateChannelPrivacy(channel.id, isPublic ? Constants.OPEN_CHANNEL : Constants.PRIVATE_CHANNEL);\n            promises.push(\n                convert.then((res: ActionResult) => {\n                    if ('error' in res) {\n                        return res;\n                    }\n                    return actions.patchChannel(channel.id, {\n                        ...channel,\n                        group_constrained: isSynced,\n                    });\n                }),\n            );\n        } else {\n            promises.push(\n                actions.patchChannel(channel.id, {\n                    ...channel,\n                    group_constrained: isSynced,\n                }),\n            );\n        }\n\n        const patchChannelSyncable = groups.\n            filter((g) => {\n                return origGroups.some((group) => group.id === g.id && group.scheme_admin !== g.scheme_admin);\n            }).\n            map((g) => actions.patchGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL, {scheme_admin: g.scheme_admin}));\n\n        const unlink = origGroups.\n            filter((g) => {\n                return !groups.some((group) => group.id === g.id);\n            }).\n            map((g) => actions.unlinkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL));\n\n        const link = groups.\n            filter((g) => {\n                return !origGroups.some((group) => group.id === g.id);\n            }).\n            map((g) => actions.linkGroupSyncable(g.id, channelID, Groups.SYNCABLE_TYPE_CHANNEL, {auto_add: true, scheme_admin: g.scheme_admin}));\n\n        const groupActions = [...promises, ...patchChannelSyncable, ...unlink, ...link];\n        if (groupActions.length > 0) {\n            const result = await Promise.all(groupActions);\n            const resultWithError = result.find((r) => 'error' in r);\n            if (resultWithError && 'error' in resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                if (unlink.length > 0) {\n                    trackEvent('admin_channel_config_page', 'groups_removed_from_channel', {count: unlink.length, channel_id: channelID});\n                }\n                if (link.length > 0) {\n                    trackEvent('admin_channel_config_page', 'groups_added_to_channel', {count: link.length, channel_id: channelID});\n                }\n\n                const actionsToAwait: any[] = [actions.getGroups(channelID)];\n                if (isPrivacyChanging) {\n                    // If the privacy is changing update the manage_members value for the channel moderation widget\n                    actionsToAwait.push(\n                        actions.getChannelModerations(channelID).then(() => {\n                            const manageMembersIndex = channelPermissions!.findIndex((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS);\n                            if (channelPermissions) {\n                                const updatedManageMembers = this.props.channelPermissions!.find((element) => element.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS);\n                                channelPermissions[manageMembersIndex] = updatedManageMembers || channelPermissions[manageMembersIndex];\n                            }\n                            this.setState({channelPermissions});\n                        }),\n                    );\n                }\n                await Promise.all(actionsToAwait);\n            }\n        }\n\n        const patchChannelPermissionsArray: ChannelModerationPatch[] = channelPermissions!.map((p) => {\n            return {\n                name: p.name,\n                roles: {\n                    ...(p.roles.members && p.roles.members.enabled && {members: p.roles.members!.value}),\n                    ...(p.roles.guests && p.roles.guests.enabled && {guests: p.roles.guests!.value}),\n                },\n            };\n        });\n\n        const patchChannelModerationsResult = await actions.patchChannelModerations(channelID, patchChannelPermissionsArray);\n        if (patchChannelModerationsResult.error) {\n            serverError = <FormError error={patchChannelModerationsResult.error.message}/>;\n        }\n        this.restrictChannelMentions();\n\n        let privacyChanging = isPrivacyChanging;\n        if (serverError == null) {\n            privacyChanging = false;\n        }\n\n        const usersToAddList = Object.values(usersToAdd);\n        const usersToRemoveList = Object.values(usersToRemove);\n        const userRolesToUpdate = Object.keys(rolesToUpdate);\n        const usersToUpdate = usersToAddList.length > 0 || usersToRemoveList.length > 0 || userRolesToUpdate.length > 0;\n        if (usersToUpdate && !isSynced) {\n            const addUserActions: any[] = [];\n            const removeUserActions: any[] = [];\n            const {addChannelMember, removeChannelMember, updateChannelMemberSchemeRoles} = this.props.actions;\n            usersToAddList.forEach((user) => {\n                addUserActions.push(addChannelMember(channelID, user.id));\n            });\n            usersToRemoveList.forEach((user) => {\n                removeUserActions.push(removeChannelMember(channelID, user.id));\n            });\n\n            if (addUserActions.length > 0) {\n                const result = await Promise.all(addUserActions);\n                const resultWithError = result.find((r) => 'error' in r);\n                const count = result.filter((r) => 'data' in r).length;\n                if (resultWithError && 'error' in resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_channel_config_page', 'members_added_to_channel', {count, channel_id: channelID});\n                }\n            }\n\n            if (removeUserActions.length > 0) {\n                const result = await Promise.all(removeUserActions);\n                const resultWithError = result.find((r) => 'error' in r);\n                const count = result.filter((r) => 'data' in r).length;\n                if (resultWithError && 'error' in resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_channel_config_page', 'members_removed_from_channel', {count, channel_id: channelID});\n                }\n            }\n\n            const rolesToPromote: any[] = [];\n            const rolesToDemote: any[] = [];\n            userRolesToUpdate.forEach((userId) => {\n                const {schemeUser, schemeAdmin} = rolesToUpdate[userId];\n                if (schemeAdmin) {\n                    rolesToPromote.push(updateChannelMemberSchemeRoles(channelID, userId, schemeUser, schemeAdmin));\n                } else {\n                    rolesToDemote.push(updateChannelMemberSchemeRoles(channelID, userId, schemeUser, schemeAdmin));\n                }\n            });\n\n            if (rolesToPromote.length > 0) {\n                const result = await Promise.all(rolesToPromote);\n                const resultWithError = result.find((r) => 'error' in r);\n                const count = result.filter((r) => 'data' in r).length;\n                if (resultWithError && 'error' in resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_channel_config_page', 'members_elevated_to_channel_admin', {count, channel_id: channelID});\n                }\n            }\n\n            if (rolesToDemote.length > 0) {\n                const result = await Promise.all(rolesToDemote);\n                const resultWithError = result.find((r) => 'error' in r);\n                const count = result.filter((r) => 'data' in r).length;\n                if (resultWithError && 'error' in resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_channel_config_page', 'admins_demoted_to_channel_member', {count, channel_id: channelID});\n                }\n            }\n        }\n\n        this.setState({serverError, saving: false, saveNeeded, isPrivacyChanging: privacyChanging, usersToRemoveCount: 0, rolesToUpdate: {}, usersToAdd: {}, usersToRemove: {}}, () => {\n            actions.setNavigationBlocked(saveNeeded);\n            if (!saveNeeded && serverError === null) {\n                browserHistory.push('/admin_console/user_management/channels');\n            }\n        });\n    };\n\n    private channelToBeArchived = (): boolean => {\n        const {isLocalArchived} = this.state;\n        const isServerArchived = this.props.channel.delete_at !== 0;\n        return isLocalArchived && !isServerArchived;\n    }\n\n    private channelToBeRestored = (): boolean => {\n        const {isLocalArchived} = this.state;\n        const isServerArchived = this.props.channel.delete_at !== 0;\n        return !isLocalArchived && isServerArchived;\n    }\n\n    private addRolesToUpdate = (userId: string, schemeUser: boolean, schemeAdmin: boolean) => {\n        const {rolesToUpdate} = this.state;\n        rolesToUpdate[userId] = {schemeUser, schemeAdmin};\n        this.setState({rolesToUpdate: {...rolesToUpdate}, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    private addUserToRemove = (user: UserProfile) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        if (usersToAdd[user.id]?.id === user.id) {\n            delete usersToAdd[user.id];\n        } else if (usersToRemove[user.id]?.id !== user.id) {\n            usersToRemoveCount += 1;\n            usersToRemove[user.id] = user;\n        }\n        delete rolesToUpdate[user.id];\n        this.setState({usersToRemove: {...usersToRemove}, usersToAdd: {...usersToAdd}, rolesToUpdate: {...rolesToUpdate}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    private addUsersToAdd = (users: UserProfile[]) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove} = this.state;\n        users.forEach((user) => {\n            if (usersToRemove[user.id]?.id === user.id) {\n                delete usersToRemove[user.id];\n                usersToRemoveCount -= 1;\n            } else {\n                usersToAdd[user.id] = user;\n            }\n        });\n        this.setState({usersToAdd: {...usersToAdd}, usersToRemove: {...usersToRemove}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    private onToggleArchive = () => {\n        const {isLocalArchived, serverError, previousServerError} = this.state;\n        const {isDisabled} = this.props;\n        if (isDisabled) {\n            return;\n        }\n        const newState: any = {\n            saveNeeded: true,\n            isLocalArchived: !isLocalArchived,\n        };\n\n        if (newState.isLocalArchived) {\n            // if the channel is being archived then clear the other server\n            // errors, they're no longer relevant.\n            newState.previousServerError = serverError;\n            newState.serverError = null;\n        } else {\n            // if the channel is being unarchived (maybe the user had toggled\n            // and untoggled) the button, so reinstate any server errors that\n            // were present.\n            newState.serverError = previousServerError;\n            newState.previousServerError = null;\n        }\n        this.props.actions.setNavigationBlocked(true);\n        this.setState(newState);\n    };\n\n    public render = (): JSX.Element => {\n        const {\n            totalGroups,\n            saving,\n            saveNeeded,\n            serverError,\n            isSynced,\n            isPublic,\n            isDefault,\n            groups,\n            showConvertConfirmModal,\n            showRemoveConfirmModal,\n            showConvertAndRemoveConfirmModal,\n            usersToRemoveCount,\n            channelPermissions,\n            teamScheme,\n            usersToRemove,\n            usersToAdd,\n            isLocalArchived,\n            showArchiveConfirmModal,\n        } = this.state;\n        const {channel, team} = this.props;\n        const missingGroup = (og: {id: string}) => !groups.find((g: Group) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n        const nonArchivedContent = (\n            <>\n                <ConvertConfirmModal\n                    show={showConvertConfirmModal}\n                    onCancel={this.hideConvertConfirmModal}\n                    onConfirm={this.handleSubmit}\n                    displayName={channel.display_name || ''}\n                    toPublic={isPublic}\n                />\n\n                <ChannelModeration\n                    channelPermissions={channelPermissions}\n                    onChannelPermissionsChanged={this.channelPermissionsChanged}\n                    teamSchemeID={teamScheme?.id}\n                    teamSchemeDisplayName={teamScheme?.['display_name']}\n                    guestAccountsEnabled={this.props.guestAccountsEnabled}\n                    isPublic={this.props.channel.type === Constants.OPEN_CHANNEL}\n                    readOnly={this.props.isDisabled}\n                />\n\n                <RemoveConfirmModal\n                    show={showRemoveConfirmModal}\n                    onCancel={this.hideRemoveConfirmModal}\n                    onConfirm={this.handleSubmit}\n                    inChannel={true}\n                    amount={usersToRemoveCount}\n                />\n\n                <ConvertAndRemoveConfirmModal\n                    show={showConvertAndRemoveConfirmModal}\n                    onCancel={this.hideConvertAndRemoveConfirmModal}\n                    onConfirm={this.handleSubmit}\n                    displayName={channel.display_name || ''}\n                    toPublic={isPublic}\n                    removeAmount={usersToRemoveCount}\n                />\n\n                <ChannelModes\n                    isPublic={isPublic}\n                    isSynced={isSynced}\n                    isDefault={isDefault}\n                    onToggle={this.setToggles}\n                    isDisabled={this.props.isDisabled}\n                />\n\n                <ChannelGroups\n                    synced={isSynced}\n                    channel={channel}\n                    totalGroups={totalGroups}\n                    groups={groups}\n                    removedGroups={removedGroups}\n                    onAddCallback={this.handleGroupChange}\n                    onGroupRemoved={this.handleGroupRemoved}\n                    setNewGroupRole={this.setNewGroupRole}\n                    isDisabled={this.props.isDisabled}\n                />\n\n                {!isSynced &&\n                    <ChannelMembers\n                        onRemoveCallback={this.addUserToRemove}\n                        onAddCallback={this.addUsersToAdd}\n                        usersToRemove={usersToRemove}\n                        usersToAdd={usersToAdd}\n                        updateRole={this.addRolesToUpdate}\n                        channelId={this.props.channelID}\n                        isDisabled={this.props.isDisabled}\n                    />\n                }\n            </>\n        );\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/channels'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.channel_settings.channel_detail.channel_configuration'\n                            defaultMessage='Channel Configuration'\n                        />\n                    </div>\n                </div>\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <ChannelProfile\n                            channel={channel}\n                            team={team}\n                            onToggleArchive={this.onToggleArchive}\n                            isArchived={isLocalArchived}\n                            isDisabled={this.props.isDisabled}\n                        />\n                        <ConfirmModal\n                            show={showArchiveConfirmModal}\n                            title={\n                                <FormattedMessage\n                                    id='admin.channel_settings.channel_detail.archive_confirm.title'\n                                    defaultMessage='Save and Archive Channel'\n                                />\n                            }\n                            message={\n                                <FormattedMessage\n                                    id='admin.channel_settings.channel_detail.archive_confirm.message'\n                                    defaultMessage='Saving will archive the channel from the team and make its contents inaccessible for all users. Are you sure you wish to save and archive this channel?'\n                                />\n                            }\n                            confirmButtonText={\n                                <FormattedMessage\n                                    id='admin.channel_settings.channel_detail.archive_confirm.button'\n                                    defaultMessage='Save and Archive Channel'\n                                />\n                            }\n                            onConfirm={this.handleSubmit}\n                            onCancel={this.hideArchiveConfirmModal}\n                        />\n                        {!isLocalArchived && nonArchivedContent}\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    saveNeeded={saveNeeded}\n                    onClick={this.onSave}\n                    serverError={serverError}\n                    cancelLink='/admin_console/user_management/channels'\n                    isDisabled={this.props.isDisabled}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Group} from 'mattermost-redux/types/groups';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport AddGroupsToChannelModal from 'components/add_groups_to_channel_modal';\nimport GroupList from '../../group';\n\ninterface ChannelGroupsProps {\n    synced: boolean;\n    channel: Partial<Channel>;\n    onAddCallback: (groupIDs: string[]) => void;\n    totalGroups: number;\n    groups: Array<Partial<Group>>;\n    removedGroups: Array<{[key: string]: any}>;\n    onGroupRemoved: (gid: string) => void;\n    setNewGroupRole: (gid: string) => void;\n    isDisabled?: boolean;\n}\n\nexport const ChannelGroups: React.FunctionComponent<ChannelGroupsProps> = (props: ChannelGroupsProps): JSX.Element => {\n    const {onGroupRemoved, onAddCallback, totalGroups, groups, removedGroups, channel, synced, setNewGroupRole, isDisabled} = props;\n    return (\n        <AdminPanel\n            id='channel_groups'\n            titleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsTitle') : t('admin.channel_settings.channel_detail.groupsTitle')}\n            titleDefault={synced ? 'Synced Groups' : 'Groups'}\n            subtitleId={synced ? t('admin.channel_settings.channel_detail.syncedGroupsDescription') : t('admin.channel_settings.channel_detail.groupsDescription')}\n            subtitleDefault={synced ? 'Add and remove channel members based on their group membership.' : 'Select groups to be added to this channel.'}\n            button={\n                <ToggleModalButton\n                    id='addGroupsToChannelToggle'\n                    className='btn btn-primary'\n                    dialogType={AddGroupsToChannelModal}\n                    dialogProps={{\n                        channel,\n                        onAddCallback,\n                        skipCommit: true,\n                        includeGroups: removedGroups,\n                        excludeGroups: groups,\n                    }}\n                    isDisabled={isDisabled}\n                >\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_details.add_group'\n                        defaultMessage='Add Group'\n                    />\n                </ToggleModalButton>}\n        >\n            {channel.id && (\n                <GroupList\n                    channel={channel}\n                    groups={groups}\n                    totalGroups={totalGroups}\n                    onGroupRemoved={onGroupRemoved}\n                    setNewGroupRole={setNewGroupRole}\n                    isModeSync={synced}\n                    type='channel'\n                    isDisabled={isDisabled}\n                />\n            )}\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {UserProfile, UsersStats, GetFilteredUsersStatsOpts} from 'mattermost-redux/types/users';\nimport {Channel, ChannelMembership} from 'mattermost-redux/types/channels';\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport {t} from 'utils/i18n';\nimport Constants from 'utils/constants';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport UserGrid from 'components/admin_console/user_grid/user_grid';\nimport {BaseMembership} from 'components/admin_console/user_grid/user_grid_role_dropdown';\nimport ChannelInviteModal from 'components/channel_invite_modal';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\n\ntype Props = {\n    channelId: string;\n    channel: Channel;\n    filters: GetFilteredUsersStatsOpts;\n\n    users: UserProfile[];\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    channelMembers: Dictionary<ChannelMembership>;\n\n    totalCount: number;\n    searchTerm: string;\n    loading?: boolean;\n    enableGuestAccounts: boolean;\n\n    onAddCallback: (users: UserProfile[]) => void;\n    onRemoveCallback: (user: UserProfile) => void;\n    updateRole: (userId: string, schemeUser: boolean, schemeAdmin: boolean) => void;\n\n    isDisabled?: boolean;\n\n    actions: {\n        getChannelStats: (channelId: string) => Promise<{\n            data: boolean;\n        }>;\n        loadProfilesAndReloadChannelMembers: (page: number, perPage: number, channelId?: string, sort?: string, options?: {[key: string]: any}) => Promise<{\n            data: boolean;\n        }>;\n        searchProfilesAndChannelMembers: (term: string, options?: {[key: string]: any}) => Promise<{\n            data: boolean;\n        }>;\n        getFilteredUsersStats: (filters: GetFilteredUsersStatsOpts) => Promise<{\n            data?: UsersStats;\n            error?: ServerError;\n        }>;\n        setUserGridSearch: (term: string) => ActionResult;\n        setUserGridFilters: (filters: GetFilteredUsersStatsOpts) => ActionResult;\n    };\n}\n\ntype State = {\n    loading: boolean;\n}\n\nconst PROFILE_CHUNK_SIZE = 10;\n\nexport default class ChannelMembers extends React.PureComponent<Props, State> {\n    private searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    public componentDidMount() {\n        const {channelId} = this.props;\n        const {loadProfilesAndReloadChannelMembers, getChannelStats, setUserGridSearch, setUserGridFilters} = this.props.actions;\n        Promise.all([\n            setUserGridSearch(''),\n            setUserGridFilters({}),\n            getChannelStats(channelId),\n            loadProfilesAndReloadChannelMembers(0, PROFILE_CHUNK_SIZE * 2, channelId, '', {active: true}),\n        ]).then(() => this.setStateLoading(false));\n    }\n\n    public async componentDidUpdate(prevProps: Props) {\n        const filtersModified = JSON.stringify(prevProps.filters) !== JSON.stringify(this.props.filters);\n        const searchTermModified = prevProps.searchTerm !== this.props.searchTerm;\n        if (filtersModified || searchTermModified) {\n            this.setStateLoading(true);\n            clearTimeout(this.searchTimeoutId);\n            const {searchTerm, filters} = this.props;\n\n            if (searchTerm === '') {\n                this.searchTimeoutId = 0;\n                if (filtersModified) {\n                    await prevProps.actions.loadProfilesAndReloadChannelMembers(0, PROFILE_CHUNK_SIZE * 2, prevProps.channelId, '', {active: true, ...filters});\n                }\n                this.setStateLoading(false);\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    await prevProps.actions.searchProfilesAndChannelMembers(searchTerm, {...filters, in_channel_id: this.props.channelId, allow_inactive: false});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n                    this.setStateLoading(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    private setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    private loadPage = async (page: number) => {\n        const {loadProfilesAndReloadChannelMembers} = this.props.actions;\n        const {channelId, filters} = this.props;\n        await loadProfilesAndReloadChannelMembers(page + 1, PROFILE_CHUNK_SIZE, channelId, '', {active: true, ...filters});\n    }\n\n    private removeUser = (user: UserProfile) => {\n        this.props.onRemoveCallback(user);\n    }\n\n    private onAddCallback = (users: UserProfile[]) => {\n        this.props.onAddCallback(users);\n    }\n\n    private onSearch = async (term: string) => {\n        this.props.actions.setUserGridSearch(term);\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        this.props.updateRole(membership.user_id, membership.scheme_user, membership.scheme_admin);\n    }\n\n    private onFilter = async (filterOptions: FilterOptions) => {\n        const roles = filterOptions.role.values;\n        const systemRoles: string[] = [];\n        const channelRoles: string[] = [];\n        let filters = {};\n        Object.keys(roles).forEach((filterKey: string) => {\n            if (roles[filterKey].value) {\n                if (filterKey.includes('channel')) {\n                    channelRoles.push(filterKey);\n                } else {\n                    systemRoles.push(filterKey);\n                }\n            }\n        });\n\n        if (systemRoles.length > 0 || channelRoles.length > 0) {\n            if (systemRoles.length > 0) {\n                filters = {roles: systemRoles};\n            }\n            if (channelRoles.length > 0) {\n                filters = {...filters, channel_roles: channelRoles};\n            }\n            [...systemRoles, ...channelRoles].forEach((role) => {\n                trackEvent('admin_channel_config_page', `${role}_filter_applied_to_members_block`, {channel_id: this.props.channelId});\n            });\n\n            this.props.actions.setUserGridFilters(filters);\n            this.props.actions.getFilteredUsersStats({in_channel: this.props.channelId, include_bots: true, ...filters});\n        } else {\n            this.props.actions.setUserGridFilters(filters);\n        }\n    }\n\n    render = () => {\n        const {users, channel, channelId, usersToAdd, usersToRemove, channelMembers, totalCount, searchTerm, isDisabled} = this.props;\n        const filterOptions: FilterOptions = {\n            role: {\n                name: (\n                    <FormattedMessage\n                        id='admin.user_grid.role'\n                        defaultMessage='Role'\n                    />\n                ),\n                values: {\n                    [GeneralConstants.SYSTEM_GUEST_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.guest'\n                                defaultMessage='Guest'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.CHANNEL_USER_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_item.member'\n                                defaultMessage='Member'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.CHANNEL_ADMIN_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.channel_admin'\n                                defaultMessage='Channel Admin'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.SYSTEM_ADMIN_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.system_admin'\n                                defaultMessage='System Admin'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: [GeneralConstants.SYSTEM_GUEST_ROLE, GeneralConstants.CHANNEL_USER_ROLE, GeneralConstants.CHANNEL_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE],\n            },\n        };\n\n        if (!this.props.enableGuestAccounts) {\n            delete filterOptions.role.values[GeneralConstants.SYSTEM_GUEST_ROLE];\n            filterOptions.role.keys = [GeneralConstants.CHANNEL_USER_ROLE, GeneralConstants.CHANNEL_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE];\n        }\n        const filterProps = {\n            options: filterOptions,\n            keys: ['role'],\n            onFilter: this.onFilter,\n        };\n\n        return (\n            <AdminPanel\n                id='channelMembers'\n                titleId={t('admin.channel_settings.channel_detail.membersTitle')}\n                titleDefault='Members'\n                subtitleId={t('admin.channel_settings.channel_detail.membersDescription')}\n                subtitleDefault='A list of users who are currently in the channel right now'\n                button={\n                    <ToggleModalButton\n                        id='addChannelMembers'\n                        className='btn btn-primary'\n                        dialogType={ChannelInviteModal}\n                        isDisabled={isDisabled}\n                        dialogProps={{\n                            channel,\n                            channelId,\n                            teamId: channel?.team_id, // eslint-disable-line camelcase\n                            onAddCallback: this.onAddCallback,\n                            skipCommit: true,\n                            excludeUsers: usersToAdd,\n                            includeUsers: usersToRemove,\n                        }}\n                    >\n                        <FormattedMessage\n                            id='admin.team_settings.team_details.add_members'\n                            defaultMessage='Add Members'\n                        />\n                    </ToggleModalButton>\n                }\n            >\n                <UserGrid\n                    loading={this.state.loading || Boolean(this.props.loading)}\n                    users={users}\n                    loadPage={this.loadPage}\n                    removeUser={this.removeUser}\n                    totalCount={totalCount}\n                    memberships={channelMembers}\n                    updateMembership={this.updateMembership}\n                    onSearch={this.onSearch}\n                    includeUsers={usersToAdd}\n                    excludeUsers={usersToRemove}\n                    term={searchTerm}\n                    scope={'channel'}\n                    readOnly={isDisabled}\n                    filterProps={filterProps}\n                />\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {UserProfile, UsersStats, GetFilteredUsersStatsOpts} from 'mattermost-redux/types/users';\n\nimport {filterProfilesStartingWithTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {ActionResult, ActionFunc, GenericAction} from 'mattermost-redux/types/actions';\nimport {ChannelStats} from 'mattermost-redux/types/channels';\n\nimport {getChannelStats} from 'mattermost-redux/actions/channels';\nimport {getFilteredUsersStats} from 'mattermost-redux/actions/users';\n\nimport {getChannelMembersInChannels, getAllChannelStats, getChannel} from 'mattermost-redux/selectors/entities/channels';\nimport {makeGetProfilesInChannel, makeSearchProfilesInChannel, filterProfiles, getFilteredUsersStats as selectFilteredUsersStats} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {loadProfilesAndReloadChannelMembers, searchProfilesAndChannelMembers} from 'actions/user_actions';\nimport {setUserGridSearch, setUserGridFilters} from 'actions/views/search';\nimport {GlobalState} from 'types/store';\n\nimport ChannelMembers from './channel_members';\n\ntype Props = {\n    channelId: string;\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n};\n\ntype Actions = {\n    getChannelStats: (channelId: string) => Promise<{\n        data: boolean;\n    }>;\n    loadProfilesAndReloadChannelMembers: (page: number, perPage: number, channelId?: string, sort?: string, options?: {[key: string]: any}) => Promise<{\n        data: boolean;\n    }>;\n    searchProfilesAndChannelMembers: (term: string, options?: {[key: string]: any}) => Promise<{\n        data: boolean;\n    }>;\n    getFilteredUsersStats: (filters: GetFilteredUsersStatsOpts) => Promise<{\n        data?: UsersStats;\n        error?: ServerError;\n    }>;\n    setUserGridSearch: (term: string) => ActionResult;\n    setUserGridFilters: (filters: GetFilteredUsersStatsOpts) => ActionResult;\n};\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profiles = filterProfilesStartingWithTerm(Object.values(users), term);\n    const filteredProfilesMap = filterProfiles(profileListToMap(profiles), {});\n\n    return filteredProfilesMap;\n}\n\nfunction makeMapStateToProps() {\n    const doGetProfilesInChannel = makeGetProfilesInChannel();\n    const doSearchProfilesInChannel = makeSearchProfilesInChannel();\n\n    return function mapStateToProps(state: GlobalState, props: Props) {\n        const {channelId, usersToRemove} = props;\n        let {usersToAdd} = props;\n\n        const config = getConfig(state);\n        const channelMembers = getChannelMembersInChannels(state)[channelId] || {};\n        const channel = getChannel(state, channelId) || {channel_id: channelId};\n        const searchTerm = state.views.search.userGridSearch?.term || '';\n        const filters = state.views.search.userGridSearch?.filters || {};\n\n        let totalCount: number;\n        if (Object.keys(filters).length === 0) {\n            const stats: ChannelStats = getAllChannelStats(state)[channelId] || {\n                member_count: 0,\n                channel_id: channelId,\n                pinnedpost_count: 0,\n                guest_count: 0,\n            };\n            totalCount = stats.member_count;\n        } else {\n            const filteredUserStats: UsersStats = selectFilteredUsersStats(state) || {\n                total_users_count: 0,\n            };\n            totalCount = filteredUserStats.total_users_count;\n        }\n\n        let users = [];\n        if (searchTerm) {\n            users = doSearchProfilesInChannel(state, channelId, searchTerm, false, {...filters, active: true});\n            usersToAdd = searchUsersToAdd(usersToAdd, searchTerm);\n        } else {\n            users = doGetProfilesInChannel(state, channelId, {...filters, active: true});\n        }\n\n        return {\n            filters,\n            channelId,\n            channel,\n            users,\n            channelMembers,\n            usersToAdd,\n            usersToRemove,\n            totalCount,\n            searchTerm,\n            enableGuestAccounts: config.EnableGuestAccounts === 'true',\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Actions>({\n            getChannelStats,\n            loadProfilesAndReloadChannelMembers,\n            searchProfilesAndChannelMembers,\n            getFilteredUsersStats,\n            setUserGridSearch,\n            setUserGridFilters,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ChannelMembers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage, defineMessages} from 'react-intl';\n\nimport {isNil} from 'lodash';\nimport classNames from 'classnames';\nimport {ChannelModeration as ChannelPermissions} from 'mattermost-redux/types/channels';\nimport {Permissions, Roles} from 'mattermost-redux/constants';\nimport {ChannelModerationRoles} from 'mattermost-redux/types/roles';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport CheckboxCheckedIcon from 'components/widgets/icons/checkbox_checked_icon.jsx';\n\nconst PERIOD_TO_SLASH_REGEX = /\\./g;\n\nconst formattedMessages: any = defineMessages({\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.createPosts'),\n            defaultMessage: 'Create Posts',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.createPostsDesc'),\n            defaultMessage: 'The ability for members and guests to create posts in the channel.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.createPostsDescMembers'),\n            defaultMessage: 'The ability for members to create posts in the channel.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledGuest'),\n            defaultMessage: 'Create posts for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'guest_create_post',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledMember'),\n            defaultMessage: 'Create posts for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'create_post',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.createPosts.disabledBoth'),\n            defaultMessage: 'Create posts for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'create_post',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_REACTIONS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.postReactions'),\n            defaultMessage: 'Post Reactions',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.postReactionsDesc'),\n            defaultMessage: 'The ability for members and guests to post reactions.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.postReactionsDescMembers'),\n            defaultMessage: 'The ability for members to post reactions.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledGuest'),\n            defaultMessage: 'Post reactions for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'guest_reactions',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledMember'),\n            defaultMessage: 'Post reactions for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'reactions',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.postReactions.disabledBoth'),\n            defaultMessage: 'Post reactions for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'reactions',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.MANAGE_MEMBERS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers'),\n            defaultMessage: 'Manage Members',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.manageMembersDesc'),\n            defaultMessage: 'The ability for members to add and remove people.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledGuest'),\n            defaultMessage: 'Manage members for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'guest_manage_{public_or_private}_channel_members',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledMember'),\n            defaultMessage: 'Manage members for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'manage_{public_or_private}_channel_members',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.manageMembers.disabledBoth'),\n            defaultMessage: 'Manage members for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'manage_{public_or_private}_channel_members',\n        },\n    },\n\n    [Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS]: {\n        title: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions'),\n            defaultMessage: 'Channel Mentions',\n        },\n        description: {\n            id: t('admin.channel_settings.channel_moderation.channelMentionsDesc'),\n            defaultMessage: 'The ability for members and guests to use @all, @here and @channel.',\n        },\n        descriptionMembers: {\n            id: t('admin.channel_settings.channel_moderation.channelMentionsDescMembers'),\n            defaultMessage: 'The ability for members to use @all, @here and @channel.',\n        },\n        disabledGuests: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledGuest'),\n            defaultMessage: 'Channel mentions for guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'guest_use_channel_mentions',\n        },\n        disabledMembers: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledMember'),\n            defaultMessage: 'Channel mentions for members are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'use_channel_mentions',\n        },\n        disabledBoth: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledBoth'),\n            defaultMessage: 'Channel mentions for members and guests are disabled in [{scheme_name}](../permissions/{scheme_link}).',\n            permissionName: 'use_channel_mentions',\n        },\n        disabledGuestsDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledGuestsDueToCreatePosts'),\n            defaultMessage: 'Guests can not use channel mentions without the ability to create posts.',\n        },\n        disabledMembersDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledMemberDueToCreatePosts'),\n            defaultMessage: 'Members can not use channel mentions without the ability to create posts.',\n        },\n        disabledBothDueToCreatePosts: {\n            id: t('admin.channel_settings.channel_moderation.channelMentions.disabledBothDueToCreatePosts'),\n            defaultMessage: 'Guests and members can not use channel mentions without the ability to create posts.',\n        },\n    },\n\n    title: {\n        id: t('admin.channel_settings.channel_moderation.title'),\n        defaultMessage: 'Channel Moderation',\n    },\n    subtitle: {\n        id: t('admin.channel_settings.channel_moderation.subtitle'),\n        defaultMessage: 'Manage the actions available to channel members and guests.',\n    },\n    subtitleMembers: {\n        id: t('admin.channel_settings.channel_moderation.subtitleMembers'),\n        defaultMessage: 'Manage the actions available to channel members.',\n    },\n    permissions: {\n        id: t('admin.channel_settings.channel_moderation.permissions'),\n        defaultMessage: 'Permissions',\n    },\n    guests: {\n        id: t('admin.channel_settings.channel_moderation.guests'),\n        defaultMessage: 'Guests',\n    },\n    members: {\n        id: t('admin.channel_settings.channel_moderation.members'),\n        defaultMessage: 'Members',\n    },\n});\n\ninterface Props {\n    channelPermissions?: ChannelPermissions[];\n    onChannelPermissionsChanged: (name: string, channelRole: ChannelModerationRoles) => void;\n    teamSchemeID?: string;\n    teamSchemeDisplayName?: string;\n    guestAccountsEnabled: boolean;\n    isPublic: boolean;\n    readOnly?: boolean;\n}\n\ninterface RowProps {\n    name: string;\n    guests?: boolean;\n    members: boolean;\n    guestsDisabled?: boolean;\n    membersDisabled: boolean;\n    onClick: (name: string, channelRole: ChannelModerationRoles) => void;\n    errorMessages?: any;\n    guestAccountsEnabled: boolean;\n    readOnly?: boolean;\n}\n\nexport const ChannelModerationTableRow: React.FunctionComponent<RowProps> = (props: RowProps): JSX.Element => {\n    let descriptionId = formattedMessages[props.name].description.id;\n    let descriptionDefaultMessage = formattedMessages[props.name].description.defaultMessage;\n    if (!props.guestAccountsEnabled && formattedMessages[props.name].descriptionMembers) {\n        descriptionId = formattedMessages[props.name].descriptionMembers.id;\n        descriptionDefaultMessage = formattedMessages[props.name].descriptionMembers.defaultMessage;\n    }\n    return (\n        <tr>\n            <td>\n                <label\n                    data-testid={formattedMessages[props.name].title.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                >\n                    <FormattedMessage\n                        id={formattedMessages[props.name].title.id}\n                        defaultMessage={formattedMessages[props.name].title.defaultMessage}\n                    />\n                </label>\n                <div\n                    data-testid={formattedMessages[props.name].description.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                >\n                    <FormattedMessage\n                        id={descriptionId}\n                        defaultMessage={descriptionDefaultMessage}\n                    />\n                </div>\n                {props.errorMessages}\n            </td>\n            {props.guestAccountsEnabled &&\n                <td>\n                    {!isNil(props.guests) &&\n                        <button\n                            type='button'\n                            data-testid={`${props.name}-${Roles.GUESTS}`}\n                            className={classNames(\n                                'checkbox',\n                                {\n                                    checked: props.guests && !props.guestsDisabled,\n                                    disabled: props.guestsDisabled,\n                                },\n                            )}\n                            onClick={() => props.onClick(props.name, Roles.GUESTS as ChannelModerationRoles)}\n                            disabled={props.guestsDisabled || props.readOnly}\n                        >\n                            {props.guests && !props.guestsDisabled && <CheckboxCheckedIcon/>}\n                        </button>\n                    }\n                </td>\n            }\n            <td>\n                {!isNil(props.members) &&\n                    <button\n                        type='button'\n                        data-testid={`${props.name}-${Roles.MEMBERS}`}\n                        className={classNames(\n                            'checkbox',\n                            {\n                                checked: props.members && !props.membersDisabled,\n                                disabled: props.membersDisabled,\n                            },\n                        )}\n                        onClick={() => props.onClick(props.name, Roles.MEMBERS as ChannelModerationRoles)}\n                        disabled={props.membersDisabled || props.readOnly}\n                    >\n                        {props.members && !props.membersDisabled && <CheckboxCheckedIcon/>}\n                    </button>\n                }\n            </td>\n        </tr>\n    );\n};\n\nexport default class ChannelModeration extends React.PureComponent<Props> {\n    private errorMessagesToDisplay = (entry: ChannelPermissions): JSX.Element[] => {\n        const errorMessages: JSX.Element[] = [];\n        const isGuestsDisabled = !isNil(entry.roles.guests?.enabled) && !entry.roles.guests?.enabled && this.props.guestAccountsEnabled;\n        const isMembersDisabled = !entry.roles.members.enabled;\n        let createPostsKey = '';\n        if (entry.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.USE_CHANNEL_MENTIONS) {\n            const createPostsObject = this.props.channelPermissions && this.props.channelPermissions!.find((permission) => permission.name === Permissions.CHANNEL_MODERATED_PERMISSIONS.CREATE_POST);\n            if (!createPostsObject!.roles.guests!.value && this.props.guestAccountsEnabled && !createPostsObject!.roles.members!.value) {\n                errorMessages.push(\n                    <div\n                        data-testid={formattedMessages[entry.name].disabledBothDueToCreatePosts.id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                        key={formattedMessages[entry.name].disabledBothDueToCreatePosts.id}\n                    >\n                        <FormattedMessage\n                            id={formattedMessages[entry.name].disabledBothDueToCreatePosts.id}\n                            defaultMessage={formattedMessages[entry.name].disabledBothDueToCreatePosts.defaultMessage}\n                        />\n                    </div>,\n                );\n                return errorMessages;\n            } else if (!createPostsObject!.roles.guests!.value && this.props.guestAccountsEnabled) {\n                createPostsKey = 'disabledGuestsDueToCreatePosts';\n            } else if (!createPostsObject!.roles.members!.value) {\n                createPostsKey = 'disabledMembersDueToCreatePosts';\n            }\n\n            if (createPostsKey !== '') {\n                errorMessages.push(\n                    <div\n                        data-testid={formattedMessages[entry.name][createPostsKey].id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                        key={formattedMessages[entry.name][createPostsKey].id}\n                    >\n                        <FormattedMessage\n                            id={formattedMessages[entry.name][createPostsKey].id}\n                            defaultMessage={formattedMessages[entry.name][createPostsKey].defaultMessage}\n                        />\n                    </div>,\n                );\n            }\n        }\n\n        let disabledKey;\n        if (isGuestsDisabled && isMembersDisabled && errorMessages.length <= 0) {\n            disabledKey = 'disabledBoth';\n        } else if (isGuestsDisabled && createPostsKey !== 'disabledGuestsDueToCreatePosts') {\n            disabledKey = 'disabledGuests';\n        } else if (isMembersDisabled && createPostsKey !== 'disabledMembersDueToCreatePosts') {\n            disabledKey = 'disabledMembers';\n        }\n        if (disabledKey) {\n            let schemeName = 'System Scheme';\n            let schemeLink = 'system_scheme';\n            if (this.props.teamSchemeID) {\n                schemeName = this.props.teamSchemeDisplayName + ' Team Scheme';\n                schemeLink = `team_override_scheme/${this.props.teamSchemeID}`;\n            }\n\n            if (formattedMessages[entry.name][disabledKey].permissionName) {\n                schemeLink += `?rowIdFromQuery=${formattedMessages[entry.name][disabledKey].permissionName}`;\n                if (schemeLink.includes('{public_or_private}')) {\n                    const publicOrPrivate = this.props.isPublic ? 'public' : 'private';\n                    schemeLink = schemeLink.replace('{public_or_private}', publicOrPrivate);\n                }\n            }\n\n            errorMessages.push(\n                <div\n                    data-testid={formattedMessages[entry.name][disabledKey].id.replace(PERIOD_TO_SLASH_REGEX, '-')}\n                    key={formattedMessages[entry.name][disabledKey].id}\n                >\n                    <FormattedMarkdownMessage\n                        id={formattedMessages[entry.name][disabledKey].id}\n                        defaultMessage={formattedMessages[entry.name][disabledKey].defaultMessage}\n                        values={{\n                            scheme_name: schemeName,\n                            scheme_link: schemeLink,\n                        }}\n                    />\n                </div>,\n            );\n        }\n        return errorMessages;\n    }\n\n    render = (): JSX.Element => {\n        const {channelPermissions, guestAccountsEnabled, onChannelPermissionsChanged, readOnly} = this.props;\n        return (\n            <AdminPanel\n                id='channel_moderation'\n                titleId={formattedMessages.title.id}\n                titleDefault={formattedMessages.title.defaultMessage}\n                subtitleId={guestAccountsEnabled ? formattedMessages.subtitle.id : formattedMessages.subtitleMembers.id}\n                subtitleDefault={guestAccountsEnabled ? formattedMessages.subtitle.defaultMessage : formattedMessages.subtitleMembers.defaultMessage}\n            >\n                <div className='channel-moderation'>\n                    <div className='channel-moderation--body'>\n\n                        <table\n                            id='channel_moderation_table'\n                            className='channel-moderation--table'\n                        >\n                            <thead>\n                                <tr>\n                                    <th>\n                                        <FormattedMessage\n                                            id={formattedMessages.permissions.id}\n                                            defaultMessage={formattedMessages.permissions.defaultMessage}\n                                        />\n                                    </th>\n                                    {guestAccountsEnabled &&\n                                        <th>\n                                            <FormattedMessage\n                                                id={formattedMessages.guests.id}\n                                                defaultMessage={formattedMessages.guests.defaultMessage}\n                                            />\n                                        </th>\n                                    }\n                                    <th>\n                                        <FormattedMessage\n                                            id={formattedMessages.members.id}\n                                            defaultMessage={formattedMessages.members.defaultMessage}\n                                        />\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {channelPermissions?.map((entry) => {\n                                    return (\n                                        <ChannelModerationTableRow\n                                            key={entry.name}\n                                            name={entry.name}\n                                            guests={entry.roles.guests?.value}\n                                            guestsDisabled={!entry.roles.guests?.enabled}\n                                            members={entry.roles.members.value}\n                                            membersDisabled={!entry.roles.members.enabled}\n                                            onClick={onChannelPermissionsChanged}\n                                            errorMessages={this.errorMessagesToDisplay(entry)}\n                                            guestAccountsEnabled={guestAccountsEnabled}\n                                            readOnly={readOnly}\n                                        />\n                                    );\n                                })}\n\n                            </tbody>\n                        </table>\n\n                    </div>\n                </div>\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport LineSwitch from '../../line_switch';\n\ninterface Props {\n    isPublic: boolean;\n    isSynced: boolean;\n    isDefault: boolean;\n    onToggle: (isSynced: boolean, isPublic: boolean) => void;\n    isDisabled?: boolean;\n}\n\nconst SyncGroupsToggle: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {isPublic, isSynced, isDefault, onToggle, isDisabled} = props;\n    return (\n        <LineSwitch\n            id='syncGroupSwitch'\n            disabled={isDisabled || isDefault}\n            toggled={isSynced}\n            last={isSynced}\n            onToggle={() => {\n                if (isDefault) {\n                    return;\n                }\n                onToggle(!isSynced, isPublic);\n            }}\n            title={(\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.syncGroupMembers'\n                    defaultMessage='Sync Group Members'\n                />\n            )}\n            subTitle={(\n                <FormattedMarkdownMessage\n                    id='admin.channel_settings.channel_details.syncGroupMembersDescr'\n                    defaultMessage='When enabled, adding and removing users from groups will add or remove them from this channel. The only way of inviting members to this channel is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n                />\n            )}\n        />\n    );\n};\n\nconst AllowAllToggle: React.SFC<Props> = (props: Props): JSX.Element | null => {\n    const {isPublic, isSynced, isDefault, onToggle, isDisabled} = props;\n    if (isSynced) {\n        return null;\n    }\n    return (\n        <LineSwitch\n            id='allow-all-toggle'\n            disabled={isDisabled || isDefault}\n            toggled={isPublic}\n            last={true}\n            onToggle={() => {\n                if (isDefault) {\n                    return;\n                }\n                onToggle(isSynced, !isPublic);\n            }}\n            title={(\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isPublic'\n                    defaultMessage='Public channel or private channel'\n                />\n            )}\n            subTitle={isDefault ? (\n                <FormattedMessage\n                    id='admin.channel_settings.channel_details.isDefaultDescr'\n                    defaultMessage='This default channel cannot be converted into a private channel.'\n                />\n            ) :\n                (\n                    <FormattedMessage\n                        id='admin.channel_settings.channel_details.isPublicDescr'\n                        defaultMessage='If `public` the channel is discoverable and any user can join, or if `private` invitations are required. Toggle to convert public channels to private. When Group Sync is enabled, private channels cannot be converted to public.'\n                    />\n                )\n            }\n            onText={(\n                <FormattedMessage\n                    id='channel_toggle_button.public'\n                    defaultMessage='Public'\n                />\n            )}\n            offText={(\n                <FormattedMessage\n                    id='channel_toggle_button.private'\n                    defaultMessage='Private'\n                />\n            )}\n        />\n    );\n};\n\nexport const ChannelModes: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {isPublic, isSynced, isDefault, onToggle, isDisabled} = props;\n    return (\n        <AdminPanel\n            id='channel_manage'\n            titleId={t('admin.channel_settings.channel_detail.manageTitle')}\n            titleDefault='Channel Management'\n            subtitleId={t('admin.channel_settings.channel_detail.manageDescription')}\n            subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n        >\n            <div className='group-teams-and-channels'>\n                <div className='group-teams-and-channels--body'>\n                    <SyncGroupsToggle\n                        isPublic={isPublic}\n                        isSynced={isSynced}\n                        isDefault={isDefault}\n                        onToggle={onToggle}\n                        isDisabled={isDisabled}\n                    />\n                    <AllowAllToggle\n                        isPublic={isPublic}\n                        isSynced={isSynced}\n                        isDefault={isDefault}\n                        onToggle={onToggle}\n                        isDisabled={isDisabled}\n                    />\n                </div>\n            </div>\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Channel} from 'mattermost-redux/types/channels';\nimport {Team} from 'mattermost-redux/types/teams';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ArchiveIcon from 'components/widgets/icons/archive_icon';\nimport UnarchiveIcon from 'components/widgets/icons/unarchive_icon';\n\ninterface ChannelProfileProps {\n    channel: Partial<Channel>;\n    team: Partial<Team>;\n    onToggleArchive?: () => void;\n    isArchived: boolean;\n    isDisabled?: boolean;\n}\n\nexport const ChannelProfile: React.SFC<ChannelProfileProps> = (props: ChannelProfileProps): JSX.Element => {\n    const {team, channel, isArchived, isDisabled} = props;\n\n    let archiveBtnID;\n    let archiveBtnDefault;\n    if (isArchived) {\n        t('admin.channel_settings.channel_details.unarchiveChannel');\n        archiveBtnID = 'admin.channel_settings.channel_details.unarchiveChannel';\n        archiveBtnDefault = 'Unarchive Channel';\n    } else {\n        t('admin.channel_settings.channel_details.archiveChannel');\n        archiveBtnID = 'admin.channel_settings.channel_details.archiveChannel';\n        archiveBtnDefault = 'Archive Channel';\n    }\n\n    return (\n        <AdminPanel\n            id='channel_profile'\n            titleId={t('admin.channel_settings.channel_detail.profileTitle')}\n            titleDefault='Channel Profile'\n            subtitleId={t('admin.channel_settings.channel_detail.profileDescription')}\n            subtitleDefault='Summary of the channel, including the channel name.'\n        >\n            <div className='group-teams-and-channels AdminChannelDetails'>\n                <div className='group-teams-and-channels--body channel-desc-col'>\n                    <div className='channel-name'>\n                        <FormattedMarkdownMessage\n                            id='admin.channel_settings.channel_detail.channelName'\n                            defaultMessage='**Name**'\n                        />\n                        <br/>\n                        {channel.display_name}\n                    </div>\n                    <div className='channel-team'>\n                        <FormattedMarkdownMessage\n                            id='admin.channel_settings.channel_detail.channelTeam'\n                            defaultMessage='**Team**'\n                        />\n                        <br/>\n                        {team.display_name}\n                    </div>\n                    <div className='AdminChannelDetails_archiveContainer'>\n                        <button\n                            type='button'\n                            className={\n                                classNames(\n                                    'btn',\n                                    'btn-secondary',\n                                    'ArchiveButton',\n                                    {ArchiveButton___archived: isArchived},\n                                    {ArchiveButton___unarchived: !isArchived},\n                                    {disabled: isDisabled},\n                                )\n                            }\n                            onClick={props.onToggleArchive}\n                        >\n                            {isArchived ?\n                                <UnarchiveIcon className='channel-icon channel-icon__unarchive'/> :\n                                <ArchiveIcon className='channel-icon channel-icon__archive'/>}\n                            <FormattedMessage\n                                id={archiveBtnID}\n                                defaultMessage={archiveBtnDefault}\n                            />\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </AdminPanel>\n    );\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {getChannel, getChannelModerations} from 'mattermost-redux/selectors/entities/channels';\nimport {getAllGroups, getGroupsAssociatedToChannel} from 'mattermost-redux/selectors/entities/groups';\nimport {getScheme} from 'mattermost-redux/selectors/entities/schemes';\nimport {getScheme as loadScheme} from 'mattermost-redux/actions/schemes';\nimport {\n    addChannelMember,\n    deleteChannel,\n    getChannel as fetchChannel,\n    getChannelModerations as fetchChannelModerations,\n    membersMinusGroupMembers,\n    patchChannel,\n    patchChannelModerations,\n    removeChannelMember,\n    unarchiveChannel,\n    updateChannelMemberSchemeRoles,\n    updateChannelPrivacy,\n} from 'mattermost-redux/actions/channels';\nimport {getTeam as fetchTeam} from 'mattermost-redux/actions/teams';\n\nimport {\n    getGroupsAssociatedToChannel as fetchAssociatedGroups,\n    linkGroupSyncable,\n    patchGroupSyncable,\n    unlinkGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport ChannelDetails, {ChannelDetailsActions} from './channel_details';\n\ntype OwnProps = {\n    match: {\n        params: {\n            channel_id: string;\n        };\n    };\n}\n\nfunction mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n    const config = getConfig(state);\n    const guestAccountsEnabled = config.EnableGuestAccounts === 'true';\n    const channelID = ownProps.match.params.channel_id;\n    const channel = getChannel(state, channelID) || {};\n    const team = getTeam(state, channel.team_id) || {};\n    const groups = getGroupsAssociatedToChannel(state, channelID);\n    const totalGroups = groups.length;\n    const allGroups = getAllGroups(state);\n    const channelPermissions = getChannelModerations(state, channelID);\n    const teamScheme = getScheme(state, team.scheme_id);\n    return {\n        channelID,\n        channel,\n        team,\n        groups,\n        totalGroups,\n        allGroups,\n        channelPermissions,\n        teamScheme,\n        guestAccountsEnabled,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, ChannelDetailsActions>({\n            getGroups: fetchAssociatedGroups,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            setNavigationBlocked: setNavigationBlocked as any,\n            getChannel: fetchChannel,\n            getTeam: fetchTeam,\n            getChannelModerations: fetchChannelModerations,\n            patchChannel,\n            updateChannelPrivacy,\n            patchGroupSyncable,\n            patchChannelModerations,\n            loadScheme,\n            addChannelMember,\n            removeChannelMember,\n            updateChannelMemberSchemeRoles,\n            deleteChannel,\n            unarchiveChannel,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {connect} from 'react-redux';\n\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport {ChannelsSettings} from './channel_settings';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const siteName = config.SiteName;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(ChannelsSettings);\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./channel_list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nimport {ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {ChannelWithTeamData, ChannelSearchOpts} from 'mattermost-redux/types/channels';\nimport {debounce} from 'mattermost-redux/actions/helpers';\n\nimport {browserHistory} from 'utils/browser_history';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport {Constants} from 'utils/constants';\nimport {isArchivedChannel} from 'utils/channel_utils';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\nimport TeamFilterDropdown from 'components/admin_console/filter/team_filter_dropdown';\nimport {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport GlobeIcon from 'components/widgets/icons/globe_icon';\nimport LockIcon from 'components/widgets/icons/lock_icon';\nimport ArchiveIcon from 'components/widgets/icons/archive_icon';\n\nimport './channel_list.scss';\ninterface ChannelListProps {\n    actions: {\n        searchAllChannels: (term: string, opts: ChannelSearchOpts) => Promise<{ data: any }>;\n        getData: (page: number, perPage: number, notAssociatedToGroup? : string, excludeDefaultChannels?: boolean, includeDeleted?: boolean) => ActionFunc | ActionResult | Promise<ChannelWithTeamData[]>;\n    };\n    data: ChannelWithTeamData[];\n    total: number;\n    removeGroup?: () => void;\n    emptyListTextId?: string;\n    emptyListTextDefaultMessage?: string;\n    isDisabled?: boolean;\n}\n\ninterface ChannelListState {\n    term: string;\n    channels: ChannelWithTeamData[];\n    loading: boolean;\n    page: number;\n    total: number;\n    searchErrored: boolean;\n    filters: ChannelSearchOpts;\n}\n\nconst ROW_HEIGHT = 40;\n\nexport default class ChannelList extends React.PureComponent<ChannelListProps, ChannelListState> {\n    constructor(props: ChannelListProps) {\n        super(props);\n        this.state = {\n            loading: false,\n            term: '',\n            channels: [],\n            page: 0,\n            total: 0,\n            searchErrored: false,\n            filters: {},\n        };\n    }\n\n    componentDidMount() {\n        this.loadPage();\n    }\n\n    isSearching = (term: string, filters: ChannelSearchOpts) => {\n        return term.length > 0 || Object.keys(filters).length > 0;\n    }\n\n    getPaginationProps = () => {\n        const {page, term, filters} = this.state;\n        const total = this.isSearching(term, filters) ? this.state.total : this.props.total;\n        const startCount = (page * PAGE_SIZE) + 1;\n        let endCount = (page + 1) * PAGE_SIZE;\n        endCount = endCount > total ? total : endCount;\n        return {startCount, endCount, total};\n    }\n\n    loadPage = async (page = 0, term = '', filters = {}) => {\n        this.setState({loading: true, term, filters});\n        if (this.isSearching(term, filters)) {\n            if (page > 0) {\n                this.searchChannels(page, term, filters);\n            } else {\n                this.searchChannelsDebounced(page, term, filters);\n            }\n            return;\n        }\n\n        await this.props.actions.getData(page, PAGE_SIZE, '', false, true);\n        this.setState({page, loading: false});\n    }\n\n    searchChannels = async (page = 0, term = '', filters = {}) => {\n        let channels = [];\n        let total = 0;\n        let searchErrored = true;\n        const response = await this.props.actions.searchAllChannels(term, {...filters, page, per_page: PAGE_SIZE, include_deleted: true});\n        if (response?.data) {\n            channels = page > 0 ? this.state.channels.concat(response.data.channels) : response.data.channels;\n            total = response.data.total_count;\n            searchErrored = false;\n        }\n        this.setState({page, loading: false, channels, total, searchErrored});\n    }\n\n    searchChannelsDebounced = debounce((page, term, filters = {}) => this.searchChannels(page, term, filters), 300, false, () => {});\n\n    nextPage = () => {\n        this.loadPage(this.state.page + 1, this.state.term, this.state.filters);\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    onSearch = async (term = '') => {\n        this.loadPage(0, term, this.state.filters);\n    }\n\n    getColumns = (): Column[] => {\n        const name: JSX.Element = (\n            <FormattedMessage\n                id='admin.channel_settings.channel_list.nameHeader'\n                defaultMessage='Name'\n            />\n        );\n        const team: JSX.Element = (\n            <FormattedMessage\n                id='admin.channel_settings.channel_list.teamHeader'\n                defaultMessage='Team'\n            />\n        );\n        const management: JSX.Element = (\n            <FormattedMessage\n                id='admin.channel_settings.channel_list.managementHeader'\n                defaultMessage='Management'\n            />\n        );\n\n        return [\n            {\n                name,\n                field: 'name',\n                width: 4,\n                fixed: true,\n            },\n            {\n                name: team,\n                field: 'team',\n                width: 1.5,\n                fixed: true,\n            },\n            {\n                name: management,\n                field: 'management',\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'edit',\n                textAlign: 'right',\n                fixed: true,\n            },\n        ];\n    }\n\n    getRows = (): Row[] => {\n        const {data} = this.props;\n        const {channels, term, filters} = this.state;\n        const {startCount, endCount} = this.getPaginationProps();\n        let channelsToDisplay = this.isSearching(term, filters) ? channels : data;\n        channelsToDisplay = channelsToDisplay.slice(startCount - 1, endCount);\n\n        return channelsToDisplay.map((channel) => {\n            let iconToDisplay = <GlobeIcon className='channel-icon'/>;\n\n            if (channel.type === Constants.PRIVATE_CHANNEL) {\n                iconToDisplay = <LockIcon className='channel-icon'/>;\n            }\n\n            if (isArchivedChannel(channel)) {\n                iconToDisplay = (\n                    <ArchiveIcon\n                        className='channel-icon'\n                        data-testid={`${channel.name}-archive-icon`}\n                    />\n                );\n            }\n\n            return {\n                cells: {\n                    id: channel.id,\n                    name: (\n                        <span\n                            className='group-name overflow--ellipsis row-content'\n                            data-testid='channel-display-name'\n                        >\n                            {iconToDisplay}\n                            <span className='TeamList_channelDisplayName'>\n                                {channel.display_name}\n                            </span>\n                        </span>\n                    ),\n                    team: (\n                        <span className='group-description row-content'>\n                            {channel.team_display_name}\n                        </span>\n                    ),\n                    management: (\n                        <span className='group-description adjusted row-content'>\n                            <FormattedMessage\n                                id={`admin.channel_settings.channel_row.managementMethod.${channel.group_constrained ? 'group' : 'manual'}`}\n                                defaultMessage={channel.group_constrained ? 'Group Sync' : 'Manual Invites'}\n                            />\n                        </span>\n                    ),\n                    edit: (\n                        <span\n                            className='group-actions TeamList_editRow'\n                            data-testid={`${channel.name}edit`}\n                        >\n                            <Link to={`/admin_console/user_management/channels/${channel.id}`} >\n                                <FormattedMessage\n                                    id='admin.channel_settings.channel_row.configure'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                        </span>\n                    ),\n                },\n                onClick: () => browserHistory.push(`/admin_console/user_management/channels/${channel.id}`),\n            };\n        });\n    }\n\n    onFilter = (filterOptions: FilterOptions) => {\n        const filters: ChannelSearchOpts = {};\n        const {group_constrained: groupConstrained, exclude_group_constrained: excludeGroupConstrained} = filterOptions.management.values;\n        const {public: publicChannels, private: privateChannels, deleted} = filterOptions.channels.values;\n        const {team_ids: teamIds} = filterOptions.teams.values;\n        if (publicChannels.value || privateChannels.value || deleted.value || groupConstrained.value || excludeGroupConstrained.value || (teamIds.value as string[]).length) {\n            filters.public = publicChannels.value as boolean;\n            if (filters.public) {\n                trackEvent('admin_channels_page', 'public_filter_applied_to_channel_list');\n            }\n\n            filters.private = privateChannels.value as boolean;\n            if (filters.private) {\n                trackEvent('admin_channels_page', 'private_filter_applied_to_channel_list');\n            }\n\n            filters.deleted = deleted.value as boolean;\n            if (filters.deleted) {\n                trackEvent('admin_channels_page', 'archived_filter_applied_to_channel_list');\n            }\n\n            if (!(groupConstrained.value && excludeGroupConstrained.value)) {\n                filters.group_constrained = groupConstrained.value as boolean;\n                if (filters.group_constrained) {\n                    trackEvent('admin_channels_page', 'group_sync_filter_applied_to_channel_list');\n                }\n                filters.exclude_group_constrained = excludeGroupConstrained.value as boolean;\n                if (filters.exclude_group_constrained) {\n                    trackEvent('admin_channels_page', 'manual_invites_filter_applied_to_channel_list');\n                }\n            }\n\n            filters.team_ids = teamIds.value as string[];\n            if (filters.team_ids.length > 0) {\n                trackEvent('admin_channels_page', 'team_id_filter_applied_to_channel_list');\n            }\n        }\n        this.loadPage(0, this.state.term, filters);\n    }\n\n    render = (): JSX.Element => {\n        const {term, searchErrored} = this.state;\n        const rows: Row[] = this.getRows();\n        const columns: Column[] = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n\n        let placeholderEmpty: JSX.Element = (\n            <FormattedMessage\n                id='admin.channel_settings.channel_list.no_channels_found'\n                defaultMessage='No channels found'\n            />\n        );\n\n        if (searchErrored) {\n            placeholderEmpty = (\n                <FormattedMessage\n                    id='admin.channel_settings.channel_list.search_channels_errored'\n                    defaultMessage='Something went wrong. Try again'\n                />\n            );\n        }\n\n        const rowsContainerStyles = {\n            minHeight: `${rows.length * ROW_HEIGHT}px`,\n        };\n\n        const filterOptions: FilterOptions = {\n            teams: {\n                name: 'Teams',\n                values: {\n                    team_ids: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.team_settings.title'\n                                defaultMessage='Teams'\n                            />\n                        ),\n                        value: [],\n                    },\n                },\n                keys: ['team_ids'],\n                type: TeamFilterDropdown,\n            },\n            management: {\n                name: 'Management',\n                values: {\n                    group_constrained: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.channel_list.group_sync'\n                                defaultMessage='Group Sync'\n                            />\n                        ),\n                        value: false,\n                    },\n                    exclude_group_constrained: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.channel_list.manual_invites'\n                                defaultMessage='Manual Invites'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: ['group_constrained', 'exclude_group_constrained'],\n            },\n            channels: {\n                name: 'Channels',\n                values: {\n                    public: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.channel_list.public'\n                                defaultMessage='Public'\n                            />\n                        ),\n                        value: false,\n                    },\n                    private: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.channel_list.private'\n                                defaultMessage='Private'\n                            />\n                        ),\n                        value: false,\n                    },\n                    deleted: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.channel_list.archived'\n                                defaultMessage='Archived'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: ['public', 'private', 'deleted'],\n            },\n        };\n        const filterProps = {\n            options: filterOptions,\n            keys: ['teams', 'channels', 'management'],\n            onFilter: this.onFilter,\n        };\n\n        return (\n            <div className='ChannelsList'>\n                <DataGrid\n                    columns={columns}\n                    rows={rows}\n                    loading={this.state.loading}\n                    page={this.state.page}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    startCount={startCount}\n                    endCount={endCount}\n                    total={total}\n                    onSearch={this.onSearch}\n                    term={term}\n                    placeholderEmpty={placeholderEmpty}\n                    rowsContainerStyles={rowsContainerStyles}\n                    filterProps={filterProps}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getAllChannelsWithCount as getData, searchAllChannels} from 'mattermost-redux/actions/channels';\nimport {getAllChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {GenericAction, ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\nimport {ChannelWithTeamData, ChannelSearchOpts} from 'mattermost-redux/types/channels';\n\nimport {GlobalState} from 'types/store';\nimport {Constants} from 'utils/constants';\n\nimport List from './channel_list';\n\nconst compareByDisplayName = (a: {display_name: string}, b: {display_name: string}) => a.display_name.localeCompare(b.display_name);\n\nconst getSortedListOfChannels = createSelector(\n    getAllChannels,\n    (teams) => Object.values(teams).\n        filter((c) => (c.type === Constants.OPEN_CHANNEL || c.type === Constants.PRIVATE_CHANNEL)).\n        sort(compareByDisplayName),\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        data: getSortedListOfChannels(state) as ChannelWithTeamData[],\n        total: state.entities.channels.totalCount,\n    };\n}\n\ntype Actions = {\n    searchAllChannels: (term: string, opts: ChannelSearchOpts) => Promise<{ data: any }>;\n    getData: (page: number, perPage: number, notAssociatedToGroup? : string, excludeDefaultChannels?: boolean, includeDeleted?: boolean) => ActionFunc | ActionResult | Promise<ChannelWithTeamData[]>;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getData,\n            searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class ConvertAndRemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        removeAmount: PropTypes.number.isRequired,\n    }\n\n    render() {\n        const {show, onConfirm, onCancel, displayName, toPublic, removeAmount} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const convertMessageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const toPrivateTitle = 'Convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert channel to public and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const toPrivateConfirmMsg = 'Yes, convert channel to private and remove {amount, number} {amount, plural, one {user} other {users}}';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertAndRemoveConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName, amount: removeAmount}}\n            />\n        );\n\n        const message = (\n            <div>\n                <p>\n                    <FormattedMarkdownMessage\n                        id={convertMessageId}\n                        defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                        values={{displayName}}\n                    />\n                </p>\n                <p>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.removeConfirmModal.messageChannel'\n                        defaultMessage='{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this channel. Are you sure you wish to remove these users?'\n                        values={{amount: removeAmount}}\n                    />\n                </p>\n            </div>\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n                values={{amount: removeAmount}}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertAndRemoveConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class ConvertConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Channel display name\n         */\n        displayName: PropTypes.string.isRequired,\n\n        /*\n         * Channel privacy setting\n         */\n        toPublic: PropTypes.bool.isRequired,\n    }\n\n    render() {\n        const {displayName, toPublic} = this.props;\n\n        const toPublicMsg = 'When you convert **{displayName}** to a public channel, history and membership are preserved. Public channels are discoverable and can by joined by users on the system without invitation.  \\n \\nAre you sure you want to convert **{displayName}** to a public channel?';\n        const toPrivateMsg = 'When you convert **{displayName}** to a private channel, history and membership are preserved. Publicly shared files remain accessible to anyone with the link. Membership in a private channel is by invitation only.  \\n \\nAre you sure you want to convert **{displayName}** to a private channel?';\n        const messageId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicMessage') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateMessage');\n\n        const toPublicTitle = 'Convert {displayName} to a public channel?';\n        const toPrivateTitle = 'Convert {displayName} to a private channel?';\n        const titleId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicTitle') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateTitle');\n\n        const toPublicConfirmMsg = 'Yes, convert to public channel';\n        const toPrivateConfirmMsg = 'Yes, convert to private channel';\n        const confirmMsgId = toPublic ? t('admin.team_channel_settings.convertConfirmModal.toPublicConfirm') :\n            t('admin.team_channel_settings.convertConfirmModal.toPrivateConfirm');\n\n        const title = (\n            <FormattedMessage\n                id={titleId}\n                defaultMessage={toPublic ? toPublicTitle : toPrivateTitle}\n                values={{displayName}}\n            />\n        );\n\n        const message = (\n            <FormattedMarkdownMessage\n                id={messageId}\n                defaultMessage={toPublic ? toPublicMsg : toPrivateMsg}\n                values={{displayName}}\n            />\n        );\n\n        const confirmButton = (\n            <FormattedMessage\n                id={confirmMsgId}\n                defaultMessage={toPublic ? toPublicConfirmMsg : toPrivateConfirmMsg}\n            />\n        );\n\n        const cancelButton = (\n            <FormattedMessage\n                id='admin.team_channel_settings.convertConfirmModal.cancel'\n                defaultMessage='No, cancel'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={'btn btn-primary'}\n                confirmButtonText={confirmButton}\n                cancelButtonClass={'bnt bnt-link'}\n                cancelButtonText={cancelButton}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport * as PropTypes from 'prop-types';\n\nimport FormError from 'components/form_error';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport UsersToBeRemovedModal from './users_to_be_removed_modal';\n\nexport const NeedGroupsError = ({warning, isChannel = false}) => {\n    let error = (\n        <FormattedMessage\n            id='admin.team_channel_settings.need_groups'\n            defaultMessage='You must add at least one group to manage this team by sync group members.'\n        />\n    );\n\n    if (isChannel) {\n        error = (\n            <FormattedMessage\n                id='admin.team_channel_settings.need_groups_channel'\n                defaultMessage='You must add at least one group to manage this channel by sync group members.'\n            />\n        );\n    }\n\n    return (\n        <FormError\n            iconClassName={`fa-exclamation-${warning ? 'circle' : 'triangle'}`}\n            textClassName={`has-${warning ? 'warning' : 'error'}`}\n            error={error}\n        />\n    );\n};\n\nexport const NeedDomainsError = () => (\n    <FormError\n        error={(\n            <FormattedMessage\n                id='admin.team_channel_settings.need_domains'\n                defaultMessage='Please specify allowed email domains.'\n            />)}\n    />\n);\n\nNeedGroupsError.propTypes = {\n    warning: PropTypes.bool,\n    isChannel: PropTypes.bool,\n};\n\nexport class UsersWillBeRemovedError extends React.PureComponent {\n    static propTypes = {\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n        total: PropTypes.number.isRequired,\n        scope: PropTypes.string.isRequired,\n        scopeId: PropTypes.string.isRequired,\n    }\n\n    render() {\n        const {total, users, scope, scopeId} = this.props;\n        let error = (\n            <FormattedMessage\n                id='admin.team_channel_settings.users_will_be_removed'\n                defaultMessage='{amount, number} {amount, plural, one {User} other {Users}} will be removed from this team. They are not in groups linked to this team.'\n                values={{amount: total}}\n            />\n        );\n\n        if (scope === 'channel') {\n            error = (\n                <FormattedMessage\n                    id='admin.team_channel_settings.channel_users_will_be_removed'\n                    defaultMessage='{amount, number} {amount, plural, one {User} other {Users}} will be removed from this channel. They are not in groups linked to this channel.'\n                    values={{amount: total}}\n                />\n            );\n        }\n\n        return (\n            <FormError\n                iconClassName='fa-exclamation-triangle'\n                textClassName='has-warning'\n                error={(\n                    <span>\n                        {error}\n                        <ToggleModalButton\n                            className='btn btn-link'\n                            dialogType={UsersToBeRemovedModal}\n                            dialogProps={{total, users, scope, scopeId}}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.view_removed_users'\n                                defaultMessage='View These Users'\n                            />\n                        </ToggleModalButton>\n                    </span>\n                )}\n            />\n\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Group} from 'mattermost-redux/types/groups';\nimport {Channel} from 'mattermost-redux/types/channels';\n\nimport AbstractList from 'components/admin_console/team_channel_settings/abstract_list.jsx';\n\nimport GroupRow from './group_row';\n\nconst Header = () => {\n    return (\n        <div className='groups-list--header'>\n            <div className='group-name group-name-adjusted'>\n                <FormattedMessage\n                    id='admin.team_channel_settings.group_list.nameHeader'\n                    defaultMessage='Group Name'\n                />\n            </div>\n            <div className='group-content'>\n                <div className='group-description group-description-adjusted'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.group_list.membersHeader'\n                        defaultMessage='Member Count'\n                    />\n                </div>\n                <div className='group-description group-description-adjusted'>\n                    <FormattedMessage\n                        id='admin.team_channel_settings.group_list.rolesHeader'\n                        defaultMessage='Roles'\n                    />\n                </div>\n                <div className='group-actions'/>\n            </div>\n        </div>\n    );\n};\n\ninterface Props {\n    data?: Array<Partial<Group>>;\n    onPageChangedCallback?: () => void;\n    total: number;\n    emptyListTextId: string;\n    emptyListTextDefaultMessage: string;\n    actions: {\n        getData: () => void;\n    };\n    removeGroup: (gid: string) => void;\n    setNewGroupRole: (gid: string) => void;\n    type: string;\n    channel?: Partial<Channel>;\n    isDisabled?: boolean;\n}\n\nexport default class GroupList extends React.PureComponent<Props> {\n    renderRow = (item: Group) => {\n        return (\n            <GroupRow\n                key={item.id}\n                group={item}\n                removeGroup={this.props.removeGroup}\n                setNewGroupRole={this.props.setNewGroupRole}\n                type={this.props.type}\n                isDisabled={this.props.isDisabled}\n            />\n        );\n    }\n\n    render(): JSX.Element {\n        return (\n            <AbstractList\n                header={<Header/>}\n                renderRow={this.renderRow}\n                {...this.props}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Group} from 'mattermost-redux/types/groups';\n\nimport MemberListGroup from 'components/admin_console/member_list_group';\n\ntype Props = {\n    group: Group;\n    onHide: () => void;\n    onLoad?: () => void;\n}\n\ntype State = {\n    show: boolean;\n}\n\nexport default class GroupMembersModal extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            show: true,\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.onLoad) {\n            this.props.onLoad();\n        }\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        this.props.onHide();\n    }\n\n    render() {\n        const {group} = this.props;\n\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.groupMembers.close'\n                defaultMessage='Close'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal settings-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='groupMemberModalLabel'\n                id='groupMembersModal'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='groupMemberModalLabel'\n                    >\n                        {group.display_name}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MemberListGroup\n                        groupID={group.id}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        autoFocus={true}\n                        type='button'\n                        className='btn btn-primary'\n                        onClick={this.handleHide}\n                        id='closeModalButton'\n                    >\n                        {button}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Group} from 'mattermost-redux/types/groups';\nimport {FormattedMessage} from 'react-intl';\n\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\nimport Menu from 'components/widgets/menu/menu';\nimport GroupMembersModal from 'components/admin_console/team_channel_settings/group/group_members_modal';\n\nimport {localizeMessage} from 'utils/utils.jsx';\n\ninterface GroupRowProps {\n    group: Partial<Group>;\n    removeGroup: (gid: string) => void;\n    key?: string;\n    setNewGroupRole: (gid: string) => void;\n    type: string;\n    isDisabled?: boolean;\n}\n\nexport default class GroupRow extends React.PureComponent<GroupRowProps> {\n    removeGroup = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.preventDefault();\n        if (this.props.isDisabled) {\n            return;\n        }\n        this.props.removeGroup(this.props.group.id!);\n    };\n\n    setNewGroupRole = () => {\n        this.props.setNewGroupRole(this.props.group.id!);\n    };\n\n    displayCurrentRole = () => {\n        const {group, type} = this.props;\n        const channelAdmin = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.channelAdmin'\n                defaultMessage='Channel Admin'\n            />\n        );\n        const teamAdmin = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.teamAdmin'\n                defaultMessage='Team Admin'\n            />\n        );\n        const member = (\n            <FormattedMessage\n                id='admin.team_channel_settings.group_row.member'\n                defaultMessage='Member'\n            />\n        );\n\n        if (group.scheme_admin && type === 'channel') {\n            return channelAdmin;\n        } else if (group.scheme_admin && type === 'team') {\n            return teamAdmin;\n        }\n        return member;\n    }\n\n    displayRoleToBe = () => {\n        const {group, type} = this.props;\n        if (!group.scheme_admin && type === 'channel') {\n            return localizeMessage('admin.team_channel_settings.group_row.channelAdmin', 'Channel Admin');\n        } else if (!group.scheme_admin && type === 'team') {\n            return localizeMessage('admin.team_channel_settings.group_row.teamAdmin', 'Team Admin');\n        }\n        return localizeMessage('admin.team_channel_settings.group_row.member', 'Member');\n    }\n\n    render = () => {\n        const {group} = this.props;\n        return (\n            <div\n                id='group'\n                className='group'\n            >\n                <div\n                    id='group-row'\n                    className='group-row'\n                >\n                    <span className='group-name row-content'>\n                        {group.display_name || group.name}\n                    </span>\n                    <span className='group-description row-content'>\n                        <ToggleModalButton\n                            id={`${group.display_name}MembersToggle`}\n                            className='color--link'\n                            dialogType={GroupMembersModal}\n                            dialogProps={{\n                                group,\n                            }}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.group_row.members'\n                                defaultMessage='{memberCount, number} {memberCount, plural, one {member} other {members}}'\n                                values={{memberCount: group.member_count}}\n                            />\n                        </ToggleModalButton>\n                    </span>\n                    <div className='group-description row-content roles'>\n                        <MenuWrapper\n                            isDisabled={this.props.isDisabled}\n                        >\n                            <div>\n                                <a data-testid='current-role'>\n                                    <span>{this.displayCurrentRole()}</span>\n                                    <span className='caret'/>\n                                </a>\n                            </div>\n                            <Menu\n                                id='role-to-be-menu'\n                                openLeft={true}\n                                openUp={false}\n                                ariaLabel={localizeMessage('admin.team_channel_settings.group_row.memberRole', 'Member Role')}\n                            >\n                                <Menu.ItemAction\n                                    id='role-to-be'\n                                    onClick={this.setNewGroupRole}\n                                    text={this.displayRoleToBe()}\n                                />\n                            </Menu>\n                        </MenuWrapper>\n                    </div>\n                    <span\n                        id='group-actions'\n                        className='group-actions'\n                    >\n                        <a\n                            href='#'\n                            onClick={this.removeGroup}\n                            className={this.props.isDisabled ? 'disabled' : ''}\n                        >\n                            <FormattedMessage\n                                id='admin.team_channel_settings.group_row.remove'\n                                defaultMessage='Remove'\n                            />\n                        </a>\n                    </span>\n                </div>\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {memoizeResult} from 'mattermost-redux/utils/helpers';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {ActionResult, GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {filterProfilesStartingWithTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {filterProfiles} from 'mattermost-redux/selectors/entities/users';\nimport {getMembersInTeams} from 'mattermost-redux/selectors/entities/teams';\nimport {getChannelMembersInChannels} from 'mattermost-redux/selectors/entities/channels';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\nimport {loadChannelMembersForProfilesList, loadTeamMembersForProfilesList} from 'actions/user_actions.jsx';\nimport {setModalSearchTerm, setModalFilters} from 'actions/views/search';\n\nimport UsersToRemove, {Filters, Memberships} from './users_to_remove';\n\ntype Props = {\n    members: UserProfile[];\n    scope: 'team' | 'channel';\n    scopeId: string;\n    total: number;\n};\n\ntype Actions = {\n    loadTeamMembersForProfilesList: (profiles: UserProfile[], id: string, reloadAllMembers?: boolean) => Promise<{\n        data: boolean;\n    }>;\n    loadChannelMembersForProfilesList: (profiles: UserProfile[], id: string, reloadAllMembers?: boolean) => Promise<{\n        data: boolean;\n    }>;\n    setModalSearchTerm: (term: string) => ActionResult;\n    setModalFilters: (filters: Filters) => ActionResult;\n};\n\nfunction makeMapStateToProps() {\n    const searchUsers = memoizeResult((users: UserProfile[], term: string, filters: Filters, memberships: Memberships) => {\n        let profiles = users;\n        if (term !== '') {\n            profiles = filterProfilesStartingWithTerm(users, term);\n        }\n\n        if (Object.keys(filters).length > 0) {\n            const filteredProfilesMap = filterProfiles(profileListToMap(profiles), filters, memberships);\n            profiles = Object.keys(filteredProfilesMap).map((key) => filteredProfilesMap[key]);\n        }\n\n        return profiles;\n    });\n\n    return (state: GlobalState, props: Props) => {\n        const {scope, scopeId} = props;\n        let {members, total} = props;\n\n        const searchTerm = state.views.search.modalSearch || '';\n        const filters = state.views.search.modalFilters || {};\n\n        let memberships = {};\n        if (scope === 'channel') {\n            memberships = getChannelMembersInChannels(state)[scopeId] || {};\n        } else if (scope === 'team') {\n            memberships = getMembersInTeams(state)[scopeId] || {};\n        }\n\n        if (searchTerm || Object.keys(filters).length > 0) {\n            members = searchUsers(members, searchTerm, filters, memberships);\n            total = members.length;\n        }\n\n        const enableGuestAccounts = getConfig(state)?.EnableGuestAccounts === 'true';\n\n        return {\n            ...props,\n            members,\n            total,\n            searchTerm,\n            scope,\n            memberships,\n            enableGuestAccounts,\n            filters,\n        };\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Actions>({\n            loadChannelMembersForProfilesList,\n            loadTeamMembersForProfilesList,\n            setModalSearchTerm,\n            setModalFilters,\n        }, dispatch),\n    };\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(UsersToRemove);\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./users_to_remove.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\nimport {RelationOneToOne} from 'mattermost-redux/types/utilities';\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport UserGridName from 'components/admin_console/user_grid/user_grid_name';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\n\nimport GroupUsersRole from './users_to_remove_role';\nimport UsersToRemoveGroups from './users_to_remove_groups';\n\nimport './users_to_remove.scss';\n\nconst GROUP_MEMBERS_PAGE_SIZE = 10;\n\nexport type Filters = {\n    roles?: string[];\n    channel_roles?: string[];\n    team_roles?: string[];\n}\n\nexport type Memberships = RelationOneToOne<UserProfile, TeamMembership> | RelationOneToOne<UserProfile, ChannelMembership>;\n\ninterface Props {\n    members: UserProfile[];\n    memberships: Memberships;\n    total: number;\n    searchTerm: string;\n    scope: 'team' | 'channel';\n    scopeId: string;\n    enableGuestAccounts: boolean;\n    filters: Filters;\n    actions: {\n        loadTeamMembersForProfilesList: (profiles: UserProfile[], teamId: string) => Promise<{\n            data: boolean;\n        }>;\n        loadChannelMembersForProfilesList: (profiles: UserProfile[], channelId: string) => Promise<{\n            data: boolean;\n        }>;\n        setModalSearchTerm: (term: string) => ActionResult;\n        setModalFilters: (filters: Filters) => ActionResult;\n    };\n}\n\ninterface State {\n    page: number;\n    loading: boolean;\n}\n\nexport default class UsersToRemove extends React.PureComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            loading: true,\n        };\n    }\n\n    async componentDidMount() {\n        const {members, total} = this.props;\n        const MEMBERSHIPS_TO_LOAD_COUNT = 100;\n        const promises = [];\n        let membershipsLoaded = 0;\n\n        // Pre-load all memberships since users are also already loaded into the state\n        while (membershipsLoaded < total) {\n            promises.push(this.loadMembersForProfilesList(members.slice(membershipsLoaded, membershipsLoaded + MEMBERSHIPS_TO_LOAD_COUNT)));\n            membershipsLoaded += MEMBERSHIPS_TO_LOAD_COUNT;\n        }\n        await Promise.all(promises);\n        this.setStateLoading(false);\n    }\n\n    setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    componentWillUnmount() {\n        this.props.actions.setModalSearchTerm('');\n        this.props.actions.setModalFilters({});\n    }\n\n    loadMembersForProfilesList = async (profiles: UserProfile[]) => {\n        const {loadChannelMembersForProfilesList, loadTeamMembersForProfilesList} = this.props.actions;\n        const {scope, scopeId} = this.props;\n        if (scope === 'channel') {\n            await loadChannelMembersForProfilesList(profiles, scopeId);\n        } else if (scope === 'team') {\n            await loadTeamMembersForProfilesList(profiles, scopeId);\n        }\n    }\n\n    previousPage = async () => {\n        const page = this.state.page < 1 ? 0 : this.state.page - 1;\n        this.setState({page});\n    }\n\n    nextPage = async () => {\n        const {total} = this.props;\n        const page = (this.state.page + 1) * GROUP_MEMBERS_PAGE_SIZE >= total ? this.state.page : this.state.page + 1;\n        this.setState({page});\n    }\n\n    onSearch = (term: string) => {\n        this.props.actions.setModalSearchTerm(term);\n        this.setState({page: 0});\n    }\n\n    private onFilter = async (filterOptions: FilterOptions) => {\n        const roles = filterOptions.role.values;\n        const systemRoles: string[] = [];\n        const teamRoles: string[] = [];\n        const channelRoles: string[] = [];\n        let filters = {};\n        Object.keys(roles).forEach((filterKey: string) => {\n            if (roles[filterKey].value) {\n                if (filterKey.includes('team')) {\n                    teamRoles.push(filterKey);\n                } else if (filterKey.includes('channel')) {\n                    channelRoles.push(filterKey);\n                } else {\n                    systemRoles.push(filterKey);\n                }\n            }\n        });\n\n        if (systemRoles.length > 0 || teamRoles.length > 0 || channelRoles.length > 0) {\n            if (systemRoles.length > 0) {\n                filters = {roles: systemRoles};\n            }\n            if (teamRoles.length > 0) {\n                filters = {...filters, team_roles: teamRoles};\n            }\n            if (channelRoles.length > 0) {\n                filters = {...filters, channel_roles: channelRoles};\n            }\n        }\n        this.props.actions.setModalFilters(filters);\n        this.setState({page: 0});\n    }\n\n    private getPaginationProps = () => {\n        const {page} = this.state;\n        const startCount = (page * GROUP_MEMBERS_PAGE_SIZE) + 1;\n        let endCount = (page * GROUP_MEMBERS_PAGE_SIZE) + GROUP_MEMBERS_PAGE_SIZE;\n        const total = this.props.total;\n        if (endCount > total) {\n            endCount = total;\n        }\n        const lastPage = endCount === total;\n        const firstPage = page === 0;\n\n        return {startCount, endCount, page, lastPage, firstPage, total};\n    }\n\n    private getRows = (): Row[] => {\n        const {members, memberships, scope} = this.props;\n        const {startCount, endCount} = this.getPaginationProps();\n\n        let usersToDisplay = members;\n        usersToDisplay = usersToDisplay.slice(startCount - 1, endCount);\n\n        if (this.state.loading) {\n            return [];\n        }\n\n        return usersToDisplay.map((user) => {\n            return {\n                cells: {\n                    id: user.id,\n                    name: (\n                        <UserGridName\n                            key={user.id}\n                            user={user}\n                        />\n                    ),\n                    role: (\n                        <GroupUsersRole\n                            key={user.id}\n                            user={user}\n                            membership={memberships[user.id]}\n                            scope={scope}\n                        />\n                    ),\n                    groups: (\n                        <UsersToRemoveGroups\n                            key={user.id}\n                            user={user}\n                        />\n                    ),\n                },\n            };\n        });\n    }\n\n    private getColumns = (): Column[] => {\n        return [\n            {\n                name: (\n                    <FormattedMessage\n                        id='admin.team_channel_settings.user_list.nameHeader'\n                        defaultMessage='Name'\n                    />\n                ),\n                field: 'name',\n                width: 5,\n            },\n            {\n                name: (\n                    <FormattedMessage\n                        id='admin.team_channel_settings.user_list.roleHeader'\n                        defaultMessage='Role'\n                    />\n                ),\n                field: 'role',\n                width: 2,\n            },\n            {\n                name: (\n                    <FormattedMessage\n                        id='admin.team_channel_settings.user_list.groupsHeader'\n                        defaultMessage='Groups'\n                    />\n                ),\n                field: 'groups',\n                width: 3,\n            },\n        ];\n    }\n\n    private getFilterOptions = (): FilterOptions => {\n        const filterOptions: FilterOptions = {\n            role: {\n                name: (\n                    <FormattedMessage\n                        id='admin.user_grid.role'\n                        defaultMessage='Role'\n                    />\n                ),\n                values: {\n                    [GeneralConstants.SYSTEM_GUEST_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.guest'\n                                defaultMessage='Guest'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.SYSTEM_ADMIN_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.system_admin'\n                                defaultMessage='System Admin'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: [GeneralConstants.SYSTEM_GUEST_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE],\n            },\n        };\n\n        if (this.props.scope === 'channel') {\n            filterOptions.role.values = {\n                ...filterOptions.role.values,\n                [GeneralConstants.CHANNEL_USER_ROLE]: {\n                    name: (\n                        <FormattedMessage\n                            id='admin.user_item.member'\n                            defaultMessage='Member'\n                        />\n                    ),\n                    value: false,\n                },\n                [GeneralConstants.CHANNEL_ADMIN_ROLE]: {\n                    name: (\n                        <FormattedMessage\n                            id='admin.user_grid.channel_admin'\n                            defaultMessage='Channel Admin'\n                        />\n                    ),\n                    value: false,\n                },\n            };\n            filterOptions.role.keys = [GeneralConstants.SYSTEM_GUEST_ROLE, GeneralConstants.CHANNEL_USER_ROLE, GeneralConstants.CHANNEL_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE];\n        } else if (this.props.scope === 'team') {\n            filterOptions.role.values = {\n                ...filterOptions.role.values,\n                [GeneralConstants.TEAM_USER_ROLE]: {\n                    name: (\n                        <FormattedMessage\n                            id='admin.user_item.member'\n                            defaultMessage='Member'\n                        />\n                    ),\n                    value: false,\n                },\n                [GeneralConstants.TEAM_ADMIN_ROLE]: {\n                    name: (\n                        <FormattedMessage\n                            id='admin.user_grid.team_admin'\n                            defaultMessage='Team Admin'\n                        />\n                    ),\n                    value: false,\n                },\n            };\n            filterOptions.role.keys = [GeneralConstants.SYSTEM_GUEST_ROLE, GeneralConstants.TEAM_USER_ROLE, GeneralConstants.TEAM_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE];\n        }\n\n        if (!this.props.enableGuestAccounts) {\n            delete filterOptions.role.values[GeneralConstants.SYSTEM_GUEST_ROLE];\n            filterOptions.role.keys.splice(0, 1);\n        }\n\n        return filterOptions;\n    }\n\n    public render = (): JSX.Element => {\n        const rows: Row[] = this.getRows();\n        const columns: Column[] = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n        const options = this.getFilterOptions();\n        const keys = ['role'];\n\n        const placeholderEmpty: JSX.Element = (\n            <FormattedMessage\n                id='admin.member_list_group.notFound'\n                defaultMessage='No users found'\n            />\n        );\n\n        return (\n            <div className='UsersToRemove'>\n                <DataGrid\n                    columns={columns}\n                    rows={rows}\n                    loading={this.state.loading}\n                    page={this.state.page}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    startCount={startCount}\n                    endCount={endCount}\n                    total={total}\n                    onSearch={this.onSearch}\n                    filterProps={{options, keys, onFilter: this.onFilter}}\n                    term={this.props.searchTerm || ''}\n                    placeholderEmpty={placeholderEmpty}\n                />\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Tooltip} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Group} from 'mattermost-redux/types/groups';\n\nimport OverlayTrigger from 'components/overlay_trigger';\n\ntype ProfileWithGroups = Partial<UserProfile & {\n    groups: Array<Partial<Group>>;\n}>;\n\ninterface UsersToRemoveGroupsProps {\n    user: ProfileWithGroups;\n}\n\nexport default function UsersToRemoveGroups(props: UsersToRemoveGroupsProps): JSX.Element {\n    const {user} = props;\n    const groups = user.groups || [];\n    let column: JSX.Element | string;\n\n    const message = (\n        <FormattedMessage\n            id={'team_channel_settings.group.group_user_row.numberOfGroups'}\n            defaultMessage={'{amount, number} {amount, plural, one {Group} other {Groups}}'}\n            values={{amount: groups.length}}\n        />\n    );\n\n    if ((groups).length === 1) {\n        column = String(groups[0].display_name);\n    } else if (groups.length === 0) {\n        column = message;\n    } else {\n        const tooltip = <Tooltip id='groupsTooltip'>{groups.map((g) => g.display_name).join(', ')}</Tooltip>;\n\n        column = (\n            <OverlayTrigger\n                placement='bottom'\n                overlay={tooltip}\n            >\n                <a href='#'>\n                    {message}\n                </a>\n            </OverlayTrigger>\n        );\n    }\n\n    return (\n        <div className='UsersToRemoveGroups'>\n            {column}\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\nimport {Group} from 'mattermost-redux/types/groups';\n\ntype ProfileWithGroups = Partial<UserProfile & {\n    groups: Array<Partial<Group>>;\n}>;\n\ninterface GroupUsersRoleProps {\n    user: ProfileWithGroups;\n    membership: TeamMembership | ChannelMembership;\n    scope: 'team' | 'channel';\n}\n\nexport default function UsersToRemoveRole(props: GroupUsersRoleProps) {\n    const intl = useIntl();\n    const {user, membership, scope} = props;\n\n    let role = 'guest';\n    if (user.roles?.includes('system_admin')) {\n        role = 'system_admin';\n    } else if (membership) {\n        if (scope === 'team') {\n            if (membership.scheme_admin) {\n                role = 'team_admin';\n            } else if (membership.scheme_user) {\n                role = 'team_user';\n            }\n        }\n\n        if (scope === 'channel') {\n            if (membership.scheme_admin) {\n                role = 'channel_admin';\n            } else if (membership.scheme_user) {\n                role = 'channel_user';\n            }\n        }\n    }\n\n    let localizedRole;\n    switch (role) {\n    case 'system_admin':\n        localizedRole = intl.formatMessage({id: 'admin.user_grid.system_admin', defaultMessage: 'System Admin'});\n        break;\n\n    case 'team_admin':\n        localizedRole = intl.formatMessage({id: 'admin.user_grid.team_admin', defaultMessage: 'Team Admin'});\n        break;\n\n    case 'channel_admin':\n        localizedRole = intl.formatMessage({id: 'admin.user_grid.channel_admin', defaultMessage: 'Channel Admin'});\n        break;\n\n    case 'team_user':\n    case 'channel_user':\n        localizedRole = intl.formatMessage({id: 'admin.group_teams_and_channels_row.member', defaultMessage: 'Member'});\n        break;\n\n    default:\n        localizedRole = intl.formatMessage({id: 'admin.user_grid.guest', defaultMessage: 'Guest'});\n    }\n\n    return (\n        <div className='UsersToRemoveRole'>\n            {localizedRole}\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {t} from 'utils/i18n';\n\nimport List from './group_list';\n\nfunction mapStateToProps(state, {groups, totalGroups, isModeSync, onGroupRemoved, setNewGroupRole}) {\n    return {\n        data: groups,\n        removeGroup: onGroupRemoved,\n        setNewGroupRole,\n        emptyListTextId: isModeSync ? t('admin.team_channel_settings.group_list.no-synced-groups') : t('admin.team_channel_settings.group_list.no-groups'),\n        emptyListTextDefaultMessage: isModeSync ? 'At least one group must be specified' : 'No groups specified yet',\n        total: totalGroups,\n    };\n}\n\nfunction mapDispatchToProps() {\n    return {\n        actions: {\n            getData: () => Promise.resolve(),\n        },\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Toggle from 'components/toggle';\n\nexport default class LineSwitch extends React.PureComponent {\n    static propTypes = {\n        title: PropTypes.node.isRequired,\n        last: PropTypes.bool,\n        toggled: PropTypes.bool.isRequired,\n        disabled: PropTypes.bool,\n        singleLine: PropTypes.bool,\n        subTitle: PropTypes.node.isRequired,\n        onToggle: PropTypes.func.isRequired,\n        children: PropTypes.node,\n        offText: PropTypes.node,\n        onText: PropTypes.node,\n        id: PropTypes.string,\n    };\n\n    render() {\n        const {title, subTitle, singleLine, toggled, onToggle, children, offText, onText, disabled, last, id} = this.props;\n        return (<div>\n            <div className='line-switch d-flex flex-sm-column flex-md-row align-items-sm-start align-items-center justify-content-md-between'>\n                <label className='line-switch__label'>{title}</label>\n                <div\n                    data-testid={id}\n                    className='line-switch__toggle'\n                >\n                    <Toggle\n                        id={id}\n                        disabled={disabled}\n                        onToggle={onToggle}\n                        toggled={toggled}\n                        onText={onText}\n                        offText={offText}\n                    />\n                </div>\n            </div>\n            <div className='row'>\n                <div className='col-sm-10'>\n                    <div className={`help-text-small help-text-no-padding ${singleLine ? 'help-text-single-line' : ''}`}>{subTitle}</div>\n                </div>\n            </div>\n            {children}\n            {!last && <div className='section-separator'><hr className='separator__hr'/></div>}\n        </div>);\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n.jsx';\nimport ConfirmModal from 'components/confirm_modal';\n\nexport default class RemoveConfirmModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Bool whether the modal is shown\n         */\n        show: PropTypes.bool.isRequired,\n\n        /*\n         * Action to call on confirm\n         */\n        onConfirm: PropTypes.func.isRequired,\n\n        /*\n         * Action to call on cancel\n         */\n        onCancel: PropTypes.func.isRequired,\n\n        /*\n         * Indicates if the message is for removal from channel or team\n         */\n        inChannel: PropTypes.bool.isRequired,\n\n        /*\n         * Number of users to be removed\n         */\n        amount: PropTypes.number.isRequired,\n\n    }\n\n    render() {\n        const {amount, inChannel} = this.props;\n        const title = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.title'\n                defaultMessage='Save and remove {amount, number} {amount, plural, one {user} other {users}}?'\n                values={{amount}}\n            />\n        );\n\n        const messageId = inChannel ? t('admin.team_channel_settings.removeConfirmModal.messageChannel') : t('admin.team_channel_settings.removeConfirmModal.messageTeam');\n        const messageChannel = '{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this channel. Are you sure you wish to remove {amount, plural, one {this user} other {these users}}?';\n        const messageTeam = '{amount, number} {amount, plural, one {user} other {users}} will be removed. They are not in groups linked to this team. Are you sure you wish to remove {amount, plural, one {this user} other {these users}}?';\n\n        const message = (\n            <FormattedMessage\n                id={messageId}\n                defaultMessage={inChannel ? messageChannel : messageTeam}\n                values={{amount}}\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.removeConfirmModal.remove'\n                defaultMessage='Save and remove {amount, plural, one {user} other {users}}'\n                values={{amount}}\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport React from 'react';\n\nimport {FormattedMessage} from 'react-intl';\n\nimport PropTypes from 'prop-types';\n\nimport SaveButton from 'components/save_button';\nimport {localizeMessage} from 'utils/utils';\nimport BlockableLink from 'components/admin_console/blockable_link';\n\nexport default function SaveChangesPanel({saveNeeded, onClick, saving, serverError, cancelLink, isDisabled}) {\n    return (\n        <div className='admin-console-save'>\n            <SaveButton\n                saving={saving}\n                disabled={isDisabled || !saveNeeded}\n                onClick={onClick}\n                savingMessage={localizeMessage('admin.team_channel_settings.saving', 'Saving Config...')}\n            />\n            <BlockableLink\n                id='cancelButtonSettings'\n                className='cancel-button'\n                to={cancelLink}\n            >\n                <FormattedMessage\n                    id='admin.team_channel_settings.cancel'\n                    defaultMessage='Cancel'\n                />\n            </BlockableLink>\n\n            <div className='error-message'>\n                {serverError}\n            </div>\n        </div>\n    );\n}\n\nSaveChangesPanel.propTypes = {\n    saving: PropTypes.bool.isRequired,\n    saveNeeded: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    cancelLink: PropTypes.string.isRequired,\n    serverError: PropTypes.node,\n    isDisabled: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators} from 'redux';\n\nimport {getTeam} from 'mattermost-redux/selectors/entities/teams';\n\nimport {getTeam as fetchTeam, membersMinusGroupMembers, patchTeam, removeUserFromTeam, updateTeamMemberSchemeRoles, addUserToTeam} from 'mattermost-redux/actions/teams';\nimport {getAllGroups, getGroupsAssociatedToTeam} from 'mattermost-redux/selectors/entities/groups';\n\nimport {\n    getGroupsAssociatedToTeam as fetchAssociatedGroups,\n    linkGroupSyncable,\n    unlinkGroupSyncable,\n    patchGroupSyncable,\n} from 'mattermost-redux/actions/groups';\n\nimport {connect} from 'react-redux';\n\nimport {setNavigationBlocked} from 'actions/admin_actions';\n\nimport TeamDetails from './team_details';\n\nfunction mapStateToProps(state, props) {\n    const teamID = props.match.params.team_id;\n    const team = getTeam(state, teamID);\n    const groups = getGroupsAssociatedToTeam(state, teamID);\n    const allGroups = getAllGroups(state, teamID);\n    const totalGroups = groups.length;\n    return {\n        team,\n        groups,\n        totalGroups,\n        allGroups,\n        teamID,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeam: fetchTeam,\n            getGroups: fetchAssociatedGroups,\n            patchTeam,\n            linkGroupSyncable,\n            unlinkGroupSyncable,\n            membersMinusGroupMembers,\n            setNavigationBlocked,\n            patchGroupSyncable,\n            removeUserFromTeam,\n            addUserToTeam,\n            updateTeamMemberSchemeRoles,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamDetails);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {cloneDeep} from 'lodash';\n\nimport {Groups} from 'mattermost-redux/constants';\n\nimport {browserHistory} from 'utils/browser_history';\n\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\nimport BlockableLink from 'components/admin_console/blockable_link';\nimport FormError from 'components/form_error';\n\nimport RemoveConfirmModal from '../../remove_confirm_modal';\nimport {NeedDomainsError, NeedGroupsError, UsersWillBeRemovedError} from '../../errors';\n\nimport SaveChangesPanel from '../../save_changes_panel';\n\nimport {TeamProfile} from './team_profile';\nimport {TeamModes} from './team_modes';\nimport {TeamGroups} from './team_groups';\nimport TeamMembers from './team_members/index';\n\nexport default class TeamDetails extends React.PureComponent {\n    static propTypes = {\n        teamID: PropTypes.string.isRequired,\n        team: PropTypes.object.isRequired,\n        totalGroups: PropTypes.number.isRequired,\n        groups: PropTypes.arrayOf(PropTypes.object),\n        allGroups: PropTypes.object.isRequired,\n        isDisabled: PropTypes.bool,\n        actions: PropTypes.shape({\n            setNavigationBlocked: PropTypes.func.isRequired,\n            getTeam: PropTypes.func.isRequired,\n            linkGroupSyncable: PropTypes.func.isRequired,\n            unlinkGroupSyncable: PropTypes.func.isRequired,\n            membersMinusGroupMembers: PropTypes.func.isRequired,\n            getGroups: PropTypes.func.isRequired,\n            patchTeam: PropTypes.func.isRequired,\n            patchGroupSyncable: PropTypes.func.isRequired,\n            addUserToTeam: PropTypes.func.isRequired,\n            removeUserFromTeam: PropTypes.func.isRequired,\n            updateTeamMemberSchemeRoles: PropTypes.func.isRequired,\n        }).isRequired,\n    };\n\n    static defaultProps = {\n        team: {display_name: '', id: ''},\n    };\n\n    constructor(props) {\n        super(props);\n        const team = props.team;\n        this.state = {\n            groups: props.groups,\n            syncChecked: Boolean(team.group_constrained),\n            allAllowedChecked: team.allow_open_invite,\n            allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n            allowedDomains: team.allowed_domains || '',\n            saving: false,\n            showRemoveConfirmation: false,\n            usersToRemoveCount: 0,\n            usersToRemove: {},\n            usersToAdd: {},\n            rolesToUpdate: {},\n            totalGroups: props.totalGroups,\n            saveNeeded: false,\n            serverError: null,\n        };\n    }\n\n    componentDidUpdate(prevProps) {\n        const {totalGroups, team} = this.props;\n        if (prevProps.team.id !== team.id || totalGroups !== prevProps.totalGroups) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({\n                totalGroups,\n                syncChecked: Boolean(team.group_constrained),\n                allAllowedChecked: team.allow_open_invite,\n                allowedDomainsChecked: Boolean(team.allowed_domains && team.allowed_domains !== ''),\n                allowedDomains: team.allowed_domains || '',\n            });\n        }\n    }\n\n    componentDidMount() {\n        const {teamID, actions} = this.props;\n        actions.getTeam(teamID).\n            then(() => actions.getGroups(teamID)).\n            then(() => this.setState({groups: this.props.groups}));\n    }\n\n    setNewGroupRole = (gid) => {\n        const groups = cloneDeep(this.state.groups).map((g) => {\n            if (g.id === gid) {\n                g.scheme_admin = !g.scheme_admin;\n            }\n            return g;\n        });\n        this.processGroupsChange(groups);\n    }\n\n    handleSubmit = async () => {\n        this.setState({showRemoveConfirmation: false, saving: true});\n        const {groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n\n        let serverError = null;\n        let saveNeeded = false;\n\n        const {team, groups: origGroups, teamID, actions} = this.props;\n        if (allowedDomainsChecked && allowedDomains.trim().length === 0) {\n            saveNeeded = true;\n            serverError = <NeedDomainsError/>;\n        } else if (this.state.groups.length === 0 && syncChecked) {\n            serverError = <NeedGroupsError/>;\n            saveNeeded = true;\n        } else {\n            const patchTeamPromise = actions.patchTeam({\n                ...team,\n                group_constrained: syncChecked,\n                allowed_domains: allowedDomainsChecked ? allowedDomains : '',\n                allow_open_invite: allAllowedChecked,\n            });\n            const patchTeamSyncable = groups.\n                filter((g) => {\n                    return origGroups.some((group) => group.id === g.id && group.scheme_admin !== g.scheme_admin);\n                }).\n                map((g) => actions.patchGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM, {scheme_admin: g.scheme_admin}));\n            const unlink = origGroups.\n                filter((g) => {\n                    return !groups.some((group) => group.id === g.id);\n                }).\n                map((g) => actions.unlinkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM));\n            const link = groups.\n                filter((g) => {\n                    return !origGroups.some((group) => group.id === g.id);\n                }).\n                map((g) => actions.linkGroupSyncable(g.id, teamID, Groups.SYNCABLE_TYPE_TEAM, {auto_add: true, scheme_admin: g.scheme_admin}));\n            const result = await Promise.all([patchTeamPromise, ...patchTeamSyncable, ...unlink, ...link]);\n            const resultWithError = result.find((r) => r.error);\n            if (resultWithError) {\n                serverError = <FormError error={resultWithError.error.message}/>;\n            } else {\n                if (unlink.length > 0) {\n                    trackEvent('admin_team_config_page', 'groups_removed_from_team', {count: unlink.length, team_id: teamID});\n                }\n                if (link.length > 0) {\n                    trackEvent('admin_team_config_page', 'groups_added_to_team', {count: link.length, team_id: teamID});\n                }\n                await actions.getGroups(teamID);\n            }\n        }\n\n        const usersToAddList = Object.values(usersToAdd);\n        const usersToRemoveList = Object.values(usersToRemove);\n        const userRolesToUpdate = Object.keys(rolesToUpdate);\n        const usersToUpdate = usersToAddList.length > 0 || usersToRemoveList.length > 0 || userRolesToUpdate.length > 0;\n        if (usersToUpdate && !syncChecked) {\n            const addUserActions = [];\n            const removeUserActions = [];\n            const {addUserToTeam, removeUserFromTeam, updateTeamMemberSchemeRoles} = this.props.actions;\n            usersToAddList.forEach((user) => {\n                addUserActions.push(addUserToTeam(teamID, user.id));\n            });\n            usersToRemoveList.forEach((user) => {\n                removeUserActions.push(removeUserFromTeam(teamID, user.id));\n            });\n\n            if (addUserActions.length > 0) {\n                const result = await Promise.all(addUserActions);\n                const resultWithError = result.find((r) => r.error);\n                const count = result.filter((r) => r.data).length;\n                if (resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_team_config_page', 'members_added_to_team', {count, team_id: teamID});\n                }\n            }\n\n            if (removeUserActions.length > 0) {\n                const result = await Promise.all(removeUserActions);\n                const resultWithError = result.find((r) => r.error);\n                const count = result.filter((r) => r.data).length;\n                if (resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_team_config_page', 'members_removed_from_team', {count, team_id: teamID});\n                }\n            }\n\n            const rolesToPromote = [];\n            const rolesToDemote = [];\n            userRolesToUpdate.forEach((userId) => {\n                const {schemeUser, schemeAdmin} = rolesToUpdate[userId];\n                if (schemeAdmin) {\n                    rolesToPromote.push(updateTeamMemberSchemeRoles(teamID, userId, schemeUser, schemeAdmin));\n                } else {\n                    rolesToDemote.push(updateTeamMemberSchemeRoles(teamID, userId, schemeUser, schemeAdmin));\n                }\n            });\n\n            if (rolesToPromote.length > 0) {\n                const result = await Promise.all(rolesToPromote);\n                const resultWithError = result.find((r) => r.error);\n                const count = result.filter((r) => r.data).length;\n                if (resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_team_config_page', 'members_elevated_to_team_admin', {count, team_id: teamID});\n                }\n            }\n\n            if (rolesToDemote.length > 0) {\n                const result = await Promise.all(rolesToDemote);\n                const resultWithError = result.find((r) => r.error);\n                const count = result.filter((r) => r.data).length;\n                if (resultWithError) {\n                    serverError = <FormError error={resultWithError.error.message}/>;\n                }\n                if (count > 0) {\n                    trackEvent('admin_team_config_page', 'admins_demoted_to_team_member', {count, team_id: teamID});\n                }\n            }\n        }\n\n        this.setState({usersToRemoveCount: 0, rolesToUpdate: {}, usersToAdd: {}, usersToRemove: {}, serverError, saving: false, saveNeeded}, () => {\n            actions.setNavigationBlocked(saveNeeded);\n            if (!saveNeeded && !serverError) {\n                browserHistory.push('/admin_console/user_management/teams');\n            }\n        });\n    }\n\n    setToggles = (syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains) => {\n        this.setState({\n            saveNeeded: true,\n            syncChecked,\n            allAllowedChecked: !syncChecked && allAllowedChecked,\n            allowedDomainsChecked: !syncChecked && allowedDomainsChecked,\n            allowedDomains,\n        }, () => this.processGroupsChange(this.state.groups));\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    async processGroupsChange(groups) {\n        const {teamID, actions} = this.props;\n        actions.setNavigationBlocked(true);\n\n        let serverError = null;\n        let usersToRemoveCount = 0;\n        if (this.state.syncChecked) {\n            try {\n                if (groups.length === 0) {\n                    serverError = <NeedGroupsError warning={true}/>;\n                } else {\n                    const result = await actions.membersMinusGroupMembers(teamID, groups.map((g) => g.id));\n                    usersToRemoveCount = result.data.total_count;\n                    if (usersToRemoveCount > 0) {\n                        serverError = (\n                            <UsersWillBeRemovedError\n                                total={usersToRemoveCount}\n                                users={result.data.users}\n                                scope={'team'}\n                                scopeId={this.props.teamID}\n                            />\n                        );\n                    }\n                }\n            } catch (ex) {\n                serverError = ex;\n            }\n        }\n        this.setState({groups, usersToRemoveCount, saveNeeded: true, serverError});\n    }\n\n    addUsersToAdd = (users) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove} = this.state;\n        users.forEach((user) => {\n            if (usersToRemove[user.id]?.id === user.id) {\n                delete usersToRemove[user.id];\n                usersToRemoveCount -= 1;\n            } else {\n                usersToAdd[user.id] = user;\n            }\n        });\n        this.setState({usersToAdd: {...usersToAdd}, usersToRemove: {...usersToRemove}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addUserToRemove = (user) => {\n        let {usersToRemoveCount} = this.state;\n        const {usersToAdd, usersToRemove, rolesToUpdate} = this.state;\n        if (usersToAdd[user.id]?.id === user.id) {\n            delete usersToAdd[user.id];\n        } else if (usersToRemove[user.id]?.id !== user.id) {\n            usersToRemoveCount += 1;\n            usersToRemove[user.id] = user;\n        }\n        delete rolesToUpdate[user.id];\n        this.setState({usersToRemove: {...usersToRemove}, usersToAdd: {...usersToAdd}, rolesToUpdate: {...rolesToUpdate}, usersToRemoveCount, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    addRolesToUpdate = (userId, schemeUser, schemeAdmin) => {\n        const {rolesToUpdate} = this.state;\n        rolesToUpdate[userId] = {schemeUser, schemeAdmin};\n        this.setState({rolesToUpdate: {...rolesToUpdate}, saveNeeded: true});\n        this.props.actions.setNavigationBlocked(true);\n    }\n\n    handleGroupRemoved = (gid) => {\n        const groups = this.state.groups.filter((g) => g.id !== gid);\n        this.setState({totalGroups: this.state.totalGroups - 1});\n        this.processGroupsChange(groups);\n    }\n\n    handleGroupChange = (groupIDs) => {\n        const groups = [...this.state.groups, ...groupIDs.map((gid) => this.props.allGroups[gid])];\n        this.setState({totalGroups: this.state.totalGroups + groupIDs.length});\n        this.processGroupsChange(groups);\n    }\n\n    hideRemoveUsersModal = () => {\n        this.setState({showRemoveConfirmation: false});\n    }\n    showRemoveUsersModal = () => {\n        if (this.state.usersToRemoveCount > 0) {\n            this.setState({showRemoveConfirmation: true});\n        } else {\n            this.handleSubmit();\n        }\n    }\n\n    render = () => {\n        const {team} = this.props;\n        const {totalGroups, saving, saveNeeded, serverError, groups, allAllowedChecked, allowedDomainsChecked, allowedDomains, syncChecked, showRemoveConfirmation, usersToRemoveCount} = this.state;\n        const missingGroup = (og) => !groups.find((g) => g.id === og.id);\n        const removedGroups = this.props.groups.filter(missingGroup);\n\n        return (\n            <div className='wrapper--fixed'>\n                <div className='admin-console__header with-back'>\n                    <div>\n                        <BlockableLink\n                            to='/admin_console/user_management/teams'\n                            className='fa fa-angle-left back'\n                        />\n                        <FormattedMessage\n                            id='admin.team_settings.team_detail.group_configuration'\n                            defaultMessage='Team Configuration'\n                        />\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        <RemoveConfirmModal\n                            amount={usersToRemoveCount}\n                            inChannel={false}\n                            show={showRemoveConfirmation}\n                            onCancel={this.hideRemoveUsersModal}\n                            onConfirm={this.handleSubmit}\n                        />\n                        <TeamProfile\n                            team={team}\n                        />\n\n                        <TeamModes\n                            allAllowedChecked={allAllowedChecked}\n                            allowedDomainsChecked={allowedDomainsChecked}\n                            allowedDomains={allowedDomains}\n                            syncChecked={syncChecked}\n                            onToggle={this.setToggles}\n                            isDisabled={this.props.isDisabled}\n                        />\n\n                        <TeamGroups\n                            syncChecked={syncChecked}\n                            team={team}\n                            groups={groups}\n                            removedGroups={removedGroups}\n                            totalGroups={totalGroups}\n                            onAddCallback={this.handleGroupChange}\n                            onGroupRemoved={this.handleGroupRemoved}\n                            setNewGroupRole={this.setNewGroupRole}\n                            isDisabled={this.props.isDisabled}\n                        />\n\n                        {!syncChecked &&\n                            <TeamMembers\n                                onRemoveCallback={this.addUserToRemove}\n                                onAddCallback={this.addUsersToAdd}\n                                usersToRemove={this.state.usersToRemove}\n                                usersToAdd={this.state.usersToAdd}\n                                updateRole={this.addRolesToUpdate}\n                                teamId={this.props.teamID}\n                                isDisabled={this.props.isDisabled}\n                            />\n                        }\n                    </div>\n                </div>\n\n                <SaveChangesPanel\n                    saving={saving}\n                    cancelLink='/admin_console/user_management/teams'\n                    saveNeeded={saveNeeded}\n                    onClick={this.showRemoveUsersModal}\n                    serverError={serverError}\n                    isDisabled={this.props.isDisabled}\n                />\n            </div>\n        );\n    };\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\nimport ToggleModalButton from 'components/toggle_modal_button.jsx';\n\nimport AddGroupsToTeamModal from 'components/add_groups_to_team_modal';\n\nimport GroupList from '../../group';\n\nexport const TeamGroups = ({onGroupRemoved, syncChecked, team, onAddCallback, totalGroups, groups, removedGroups, setNewGroupRole, isDisabled}) => (\n    <AdminPanel\n        id='team_groups'\n        titleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsTitle') : t('admin.team_settings.team_detail.groupsTitle')}\n        titleDefault={syncChecked ? 'Synced Groups' : 'Groups'}\n        subtitleId={syncChecked ? t('admin.team_settings.team_detail.syncedGroupsDescription') : t('admin.team_settings.team_detail.groupsDescription')}\n        subtitleDefault={syncChecked ? 'Add and remove team members based on their group membership.' : 'Group members will be added to the team.'}\n        button={\n            <ToggleModalButton\n                id='addGroupsToTeamToggle'\n                className='btn btn-primary'\n                dialogType={AddGroupsToTeamModal}\n                dialogProps={{\n                    team,\n                    onAddCallback,\n                    skipCommit: true,\n                    excludeGroups: groups,\n                    includeGroups: removedGroups,\n                }}\n                isDisabled={isDisabled}\n            >\n                <FormattedMessage\n                    id='admin.team_settings.team_details.add_group'\n                    defaultMessage='Add Group'\n                />\n            </ToggleModalButton>}\n    >\n        <GroupList\n            team={team}\n            isModeSync={syncChecked}\n            groups={groups}\n            totalGroups={totalGroups}\n            onGroupRemoved={onGroupRemoved}\n            setNewGroupRole={setNewGroupRole}\n            type='team'\n            isDisabled={isDisabled}\n        />\n    </AdminPanel>);\n\nTeamGroups.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    team: PropTypes.object.isRequired,\n    totalGroups: PropTypes.number.isRequired,\n    groups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    removedGroups: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onAddCallback: PropTypes.func.isRequired,\n    onGroupRemoved: PropTypes.func.isRequired,\n    setNewGroupRole: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {UserProfile, UsersStats, GetFilteredUsersStatsOpts} from 'mattermost-redux/types/users';\nimport {GenericAction, ActionFunc, ActionResult} from 'mattermost-redux/types/actions';\n\nimport {filterProfilesStartingWithTerm, profileListToMap} from 'mattermost-redux/utils/user_utils';\n\nimport {getTeamStats as loadTeamStats} from 'mattermost-redux/actions/teams';\nimport {getFilteredUsersStats} from 'mattermost-redux/actions/users';\n\nimport {getMembersInTeams, getTeamStats, getTeam} from 'mattermost-redux/selectors/entities/teams';\nimport {getProfilesInTeam, searchProfilesInTeam, filterProfiles, getFilteredUsersStats as selectFilteredUsersStats} from 'mattermost-redux/selectors/entities/users';\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'types/store';\nimport {loadProfilesAndReloadTeamMembers, searchProfilesAndTeamMembers} from 'actions/user_actions.jsx';\nimport {setUserGridSearch, setUserGridFilters} from 'actions/views/search';\n\nimport TeamMembers from './team_members';\n\ntype Props = {\n    teamId: string;\n    usersToAdd: Dictionary<UserProfile>;\n    usersToRemove: Dictionary<UserProfile>;\n};\n\ntype Actions = {\n    getTeamStats: (teamId: string) => Promise<{\n        data: boolean;\n    }>;\n    loadProfilesAndReloadTeamMembers: (page: number, perPage: number, teamId?: string, options?: {[key: string]: any}) => Promise<{\n        data: boolean;\n    }>;\n    searchProfilesAndTeamMembers: (term: string, options?: {[key: string]: any}) => Promise<{\n        data: boolean;\n    }>;\n    getFilteredUsersStats: (filters: GetFilteredUsersStatsOpts) => Promise<{\n        data?: UsersStats;\n        error?: ServerError;\n    }>;\n    setUserGridSearch: (term: string) => ActionResult;\n    setUserGridFilters: (filters: GetFilteredUsersStatsOpts) => ActionResult;\n};\n\nfunction searchUsersToAdd(users: Dictionary<UserProfile>, term: string): Dictionary<UserProfile> {\n    const profiles = filterProfilesStartingWithTerm(Object.keys(users).map((key) => users[key]), term);\n    const filteredProfilesMap = filterProfiles(profileListToMap(profiles), {});\n\n    return filteredProfilesMap;\n}\n\nfunction mapStateToProps(state: GlobalState, props: Props) {\n    const {teamId, usersToRemove} = props;\n    let {usersToAdd} = props;\n\n    const teamMembers = getMembersInTeams(state)[teamId] || {};\n    const team = getTeam(state, teamId) || {};\n    const config = getConfig(state);\n    const searchTerm = state.views.search.userGridSearch?.term || '';\n    const filters = state.views.search.userGridSearch?.filters || {};\n\n    let totalCount: number;\n    if (Object.keys(filters).length === 0) {\n        const stats = getTeamStats(state)[teamId] || {active_member_count: 0};\n        totalCount = stats.active_member_count;\n    } else {\n        const filteredUserStats: UsersStats = selectFilteredUsersStats(state) || {\n            total_users_count: 0,\n        };\n        totalCount = filteredUserStats.total_users_count;\n    }\n\n    let users = [];\n    if (searchTerm) {\n        users = searchProfilesInTeam(state, teamId, searchTerm, false, {active: true, ...filters});\n        usersToAdd = searchUsersToAdd(usersToAdd, searchTerm);\n    } else {\n        users = getProfilesInTeam(state, teamId, {active: true, ...filters});\n    }\n\n    return {\n        filters,\n        teamId,\n        team,\n        users,\n        teamMembers,\n        usersToAdd,\n        usersToRemove,\n        totalCount,\n        searchTerm,\n        enableGuestAccounts: config.EnableGuestAccounts === 'true',\n    };\n}\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Actions>({\n            getTeamStats: loadTeamStats,\n            loadProfilesAndReloadTeamMembers,\n            searchProfilesAndTeamMembers,\n            getFilteredUsersStats,\n            setUserGridSearch,\n            setUserGridFilters,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamMembers);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {ActionResult} from 'mattermost-redux/types/actions';\nimport {UserProfile, UsersStats, GetFilteredUsersStatsOpts} from 'mattermost-redux/types/users';\nimport {TeamMembership, Team} from 'mattermost-redux/types/teams';\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport GeneralConstants from 'mattermost-redux/constants/general';\n\nimport {t} from 'utils/i18n';\nimport Constants from 'utils/constants';\nimport {trackEvent} from 'actions/telemetry_actions.jsx';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport UserGrid from 'components/admin_console/user_grid/user_grid';\nimport {BaseMembership} from 'components/admin_console/user_grid/user_grid_role_dropdown';\nimport AddUsersToTeamModal from 'components/add_users_to_team_modal';\nimport ToggleModalButton from 'components/toggle_modal_button';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\n\ntype Props = {\n    teamId: string;\n    team: Team;\n    filters: GetFilteredUsersStatsOpts;\n\n    users: UserProfile[];\n    usersToRemove: Dictionary<UserProfile>;\n    usersToAdd: Dictionary<UserProfile>;\n    teamMembers: Dictionary<TeamMembership>;\n\n    totalCount: number;\n    searchTerm: string;\n    loading?: boolean;\n    isDisabled?: boolean;\n    enableGuestAccounts: boolean;\n\n    onAddCallback: (users: UserProfile[]) => void;\n    onRemoveCallback: (user: UserProfile) => void;\n    updateRole: (userId: string, schemeUser: boolean, schemeAdmin: boolean) => void;\n\n    actions: {\n        getTeamStats: (teamId: string) => Promise<{\n            data: boolean;\n        }>;\n        loadProfilesAndReloadTeamMembers: (page: number, perPage: number, teamId?: string, options?: {[key: string]: any}) => Promise<{\n            data: boolean;\n        }>;\n        searchProfilesAndTeamMembers: (term: string, options?: {[key: string]: any}) => Promise<{\n            data: boolean;\n        }>;\n        getFilteredUsersStats: (filters: GetFilteredUsersStatsOpts) => Promise<{\n            data?: UsersStats;\n            error?: ServerError;\n        }>;\n        setUserGridSearch: (term: string) => ActionResult;\n        setUserGridFilters: (filters: GetFilteredUsersStatsOpts) => ActionResult;\n    };\n}\n\ntype State = {\n    loading: boolean;\n}\n\nconst PROFILE_CHUNK_SIZE = 10;\n\nexport default class TeamMembers extends React.PureComponent<Props, State> {\n    private searchTimeoutId: number;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            loading: true,\n        };\n    }\n\n    public componentDidMount() {\n        const {teamId} = this.props;\n        const {loadProfilesAndReloadTeamMembers, getTeamStats, setUserGridSearch, setUserGridFilters} = this.props.actions;\n        Promise.all([\n            setUserGridSearch(''),\n            setUserGridFilters({}),\n            getTeamStats(teamId),\n            loadProfilesAndReloadTeamMembers(0, PROFILE_CHUNK_SIZE * 2, teamId, {active: true}),\n        ]).then(() => this.setStateLoading(false));\n    }\n\n    public async componentDidUpdate(prevProps: Props) {\n        const filtersModified = JSON.stringify(prevProps.filters) !== JSON.stringify(this.props.filters);\n        const searchTermModified = prevProps.searchTerm !== this.props.searchTerm;\n        if (filtersModified || searchTermModified) {\n            this.setStateLoading(true);\n            clearTimeout(this.searchTimeoutId);\n            const searchTerm = this.props.searchTerm;\n            const filters = this.props.filters;\n\n            if (searchTerm === '') {\n                this.searchTimeoutId = 0;\n                if (filtersModified) {\n                    await prevProps.actions.loadProfilesAndReloadTeamMembers(0, PROFILE_CHUNK_SIZE * 2, prevProps.teamId, {active: true, ...filters});\n                }\n                this.setStateLoading(false);\n                return;\n            }\n\n            const searchTimeoutId = window.setTimeout(\n                async () => {\n                    await prevProps.actions.searchProfilesAndTeamMembers(searchTerm, {...filters, team_id: this.props.teamId, allow_inactive: false});\n\n                    if (searchTimeoutId !== this.searchTimeoutId) {\n                        return;\n                    }\n                    this.setStateLoading(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n\n            this.searchTimeoutId = searchTimeoutId;\n        }\n    }\n\n    private setStateLoading = (loading: boolean) => {\n        this.setState({loading});\n    }\n\n    private loadPage = async (page: number) => {\n        const {loadProfilesAndReloadTeamMembers} = this.props.actions;\n        const {teamId, filters} = this.props;\n        await loadProfilesAndReloadTeamMembers(page + 1, PROFILE_CHUNK_SIZE, teamId, {active: true, ...filters});\n    }\n\n    private removeUser = (user: UserProfile) => {\n        this.props.onRemoveCallback(user);\n    }\n\n    private onAddCallback = (users: UserProfile[]) => {\n        this.props.onAddCallback(users);\n    }\n\n    private onSearch = async (term: string) => {\n        this.props.actions.setUserGridSearch(term);\n    }\n\n    private onFilter = async (filterOptions: FilterOptions) => {\n        const roles = filterOptions.role.values;\n        const systemRoles: string[] = [];\n        const teamRoles: string[] = [];\n        let filters = {};\n        Object.keys(roles).forEach((filterKey: string) => {\n            if (roles[filterKey].value) {\n                if (filterKey.includes('team')) {\n                    teamRoles.push(filterKey);\n                } else {\n                    systemRoles.push(filterKey);\n                }\n            }\n        });\n\n        if (systemRoles.length > 0 || teamRoles.length > 0) {\n            if (systemRoles.length > 0) {\n                filters = {roles: systemRoles};\n            }\n            if (teamRoles.length > 0) {\n                filters = {...filters, team_roles: teamRoles};\n            }\n\n            [...systemRoles, ...teamRoles].forEach((role) => {\n                trackEvent('admin_team_config_page', `${role}_filter_applied_to_members_block`, {team_id: this.props.teamId});\n            });\n            this.props.actions.setUserGridFilters(filters);\n            this.props.actions.getFilteredUsersStats({in_team: this.props.teamId, include_bots: true, ...filters});\n        } else {\n            this.props.actions.setUserGridFilters(filters);\n        }\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        this.props.updateRole(membership.user_id, membership.scheme_user, membership.scheme_admin);\n    }\n\n    public render = () => {\n        const {users, team, usersToAdd, usersToRemove, teamMembers, totalCount, searchTerm, isDisabled} = this.props;\n\n        const filterOptions: FilterOptions = {\n            role: {\n                name: (\n                    <FormattedMessage\n                        id='admin.user_grid.role'\n                        defaultMessage='Role'\n                    />\n                ),\n                values: {\n                    [GeneralConstants.SYSTEM_GUEST_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.guest'\n                                defaultMessage='Guest'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.TEAM_USER_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_item.member'\n                                defaultMessage='Member'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.TEAM_ADMIN_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.team_admin'\n                                defaultMessage='Team Admin'\n                            />\n                        ),\n                        value: false,\n                    },\n                    [GeneralConstants.SYSTEM_ADMIN_ROLE]: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.user_grid.system_admin'\n                                defaultMessage='System Admin'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: [GeneralConstants.SYSTEM_GUEST_ROLE, GeneralConstants.TEAM_USER_ROLE, GeneralConstants.TEAM_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE],\n            },\n        };\n        if (!this.props.enableGuestAccounts) {\n            delete filterOptions.role.values[GeneralConstants.SYSTEM_GUEST_ROLE];\n            filterOptions.role.keys = [GeneralConstants.TEAM_USER_ROLE, GeneralConstants.TEAM_ADMIN_ROLE, GeneralConstants.SYSTEM_ADMIN_ROLE];\n        }\n        const filterKeys = ['role'];\n        const filterProps = {\n            options: filterOptions,\n            keys: filterKeys,\n            onFilter: this.onFilter,\n        };\n\n        return (\n            <AdminPanel\n                id='teamMembers'\n                titleId={t('admin.team_settings.team_detail.membersTitle')}\n                titleDefault='Members'\n                subtitleId={t('admin.team_settings.team_detail.membersDescription')}\n                subtitleDefault='A list of users who are currently in the team right now'\n                button={\n                    <ToggleModalButton\n                        id='addTeamMembers'\n                        className='btn btn-primary'\n                        dialogType={AddUsersToTeamModal}\n                        isDisabled={isDisabled}\n                        dialogProps={{\n                            team,\n                            onAddCallback: this.onAddCallback,\n                            skipCommit: true,\n                            excludeUsers: usersToAdd,\n                            includeUsers: usersToRemove,\n                            filterExcludeGuests: true,\n                        }}\n                    >\n                        <FormattedMessage\n                            id='admin.team_settings.team_details.add_members'\n                            defaultMessage='Add Members'\n                        />\n                    </ToggleModalButton>\n                }\n            >\n                <UserGrid\n                    loading={this.state.loading || Boolean(this.props.loading)}\n                    users={users}\n                    loadPage={this.loadPage}\n                    removeUser={this.removeUser}\n                    totalCount={totalCount}\n                    memberships={teamMembers}\n                    updateMembership={this.updateMembership}\n                    onSearch={this.onSearch}\n                    term={searchTerm}\n                    includeUsers={usersToAdd}\n                    excludeUsers={usersToRemove}\n                    scope={'team'}\n                    readOnly={isDisabled}\n                    filterProps={filterProps}\n                />\n            </AdminPanel>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport LineSwitch from '../../line_switch.jsx';\n\nconst SyncGroupsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle, isDisabled}) => (\n    <LineSwitch\n        id='syncGroupSwitch'\n        disabled={isDisabled}\n        toggled={syncChecked}\n        last={syncChecked}\n        onToggle={() => onToggle(!syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n        title={(\n            <FormattedMessage\n                id='admin.team_settings.team_details.syncGroupMembers'\n                defaultMessage='Sync Group Members'\n            />\n        )}\n        subTitle={(\n            <FormattedMarkdownMessage\n                id='admin.team_settings.team_details.syncGroupMembersDescr'\n                defaultMessage='When enabled, adding and removing users from groups will add or remove them from this team. The only way of inviting members to this team is by adding the groups they belong to. [Learn More](!https://www.mattermost.com/pl/default-ldap-group-constrained-team-channel.html)'\n            />\n        )}\n    />);\n\nSyncGroupsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool,\n};\n\nconst AllowAllToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle, isDisabled}) =>\n    !syncChecked && (\n        <LineSwitch\n            id='allowAllToggleSwitch'\n            disabled={isDisabled}\n            toggled={allAllowedChecked}\n            singleLine={true}\n            onToggle={() => onToggle(syncChecked, !allAllowedChecked, allowedDomainsChecked, allowedDomains)}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoin'\n                    defaultMessage='Anyone can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.anyoneCanJoinDescr'\n                    defaultMessage='This team can be discovered allowing anyone with an account to join this team.'\n                />\n            )}\n        />);\n\nAllowAllToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool,\n};\n\nconst AllowedDomainsToggle = ({syncChecked, allAllowedChecked, allowedDomainsChecked, allowedDomains, onToggle, isDisabled}) =>\n    !syncChecked && (\n        <LineSwitch\n            disabled={isDisabled}\n            toggled={allowedDomainsChecked}\n            last={true}\n            onToggle={() => onToggle(syncChecked, allAllowedChecked, !allowedDomainsChecked, allowedDomains)}\n            singleLine={true}\n            title={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomains'\n                    defaultMessage='Only specific email domains can join this team'\n                />\n            )}\n            subTitle={(\n                <FormattedMessage\n                    id='admin.team_settings.team_details.specificDomainsDescr'\n                    defaultMessage='Users can only join the team if their email matches one of the specified domains'\n                />\n            )}\n        >\n            <div className='help-text csvDomains'>\n                <FormattedMessage\n                    id='admin.team_settings.team_details.csvDomains'\n                    defaultMessage='Comma Separated Email Domain List'\n                />\n            </div>\n            <input\n                type='text'\n                value={allowedDomains}\n                placeholder='mattermost.org'\n                className='form-control'\n                onChange={(e) => onToggle(syncChecked, allAllowedChecked, allowedDomainsChecked, e.currentTarget.value)}\n                disabled={isDisabled}\n            />\n        </LineSwitch>);\n\nAllowedDomainsToggle.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    isDisabled: PropTypes.bool,\n};\n\nexport const TeamModes = ({allAllowedChecked, syncChecked, allowedDomains, allowedDomainsChecked, onToggle, isDisabled}) => (\n    <AdminPanel\n        id='team_manage'\n        titleId={t('admin.team_settings.team_detail.manageTitle')}\n        titleDefault='Team Management'\n        subtitleId={t('admin.team_settings.team_detail.manageDescription')}\n        subtitleDefault='Choose between inviting members manually or syncing members automatically from groups.'\n    >\n        <div className='group-teams-and-channels'>\n            <div className='group-teams-and-channels--body'>\n                <SyncGroupsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                    isDisabled={isDisabled}\n                />\n                <AllowAllToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                    isDisabled={isDisabled}\n                />\n                <AllowedDomainsToggle\n                    allAllowedChecked={allAllowedChecked}\n                    allowedDomainsChecked={allowedDomainsChecked}\n                    allowedDomains={allowedDomains}\n                    syncChecked={syncChecked}\n                    onToggle={onToggle}\n                    isDisabled={isDisabled}\n                />\n            </div>\n        </div>\n    </AdminPanel>);\n\nTeamModes.propTypes = {\n    syncChecked: PropTypes.bool.isRequired,\n    allAllowedChecked: PropTypes.bool.isRequired,\n    allowedDomainsChecked: PropTypes.bool.isRequired,\n    onToggle: PropTypes.func.isRequired,\n    allowedDomains: PropTypes.string.isRequired,\n    isDisabled: PropTypes.bool,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'utils/i18n';\n\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport * as Utils from 'utils/utils';\n\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nexport function TeamProfile({team}) {\n    const teamIconUrl = Utils.imageURLForTeam(team);\n\n    return (\n        <AdminPanel\n            id='team_profile'\n            titleId={t('admin.team_settings.team_detail.profileTitle')}\n            titleDefault='Team Profile'\n            subtitleId={t('admin.team_settings.team_detail.profileDescription')}\n            subtitleDefault='Summary of the team, including team name and description.'\n        >\n\n            <div className='group-teams-and-channels'>\n\n                <div className='group-teams-and-channels--body'>\n                    <div className='d-flex'>\n                        <div className='large-team-image-col'>\n                            <TeamIcon\n                                name={team.display_name}\n                                size='lg'\n                                url={teamIconUrl}\n                            />\n                        </div>\n                        <div className='team-desc-col'>\n                            <div className='row row-bottom-padding'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamName'\n                                    defaultMessage='**Team Name**:'\n                                />\n                                <br/>\n                                {team.display_name}\n                            </div>\n                            <div className='row'>\n                                <FormattedMarkdownMessage\n                                    id='admin.team_settings.team_detail.teamDescription'\n                                    defaultMessage='**Team Description**:'\n                                />\n                                <br/>\n                                {team.description || <span className='greyed-out'>{Utils.localizeMessage('admin.team_settings.team_detail.profileNoDescription', 'No team description added.')}</span>}\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </AdminPanel>\n    );\n}\n\nTeamProfile.propTypes = {\n    team: PropTypes.object.isRequired,\n};\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {getConfig} from 'mattermost-redux/selectors/entities/general';\nimport {GlobalState} from 'mattermost-redux/types/store';\nimport {connect} from 'react-redux';\n\nimport {TeamsSettings} from './team_settings';\n\nfunction mapStateToProps(state: GlobalState) {\n    const config = getConfig(state);\n    const siteName = config.SiteName as string;\n\n    return {\n        siteName,\n    };\n}\n\nexport default connect(mapStateToProps)(TeamsSettings);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {createSelector} from 'reselect';\n\nimport {getTeams as fetchTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {ActionFunc} from 'mattermost-redux/types/actions';\n\nimport {TeamSearchOpts, TeamsWithCount} from 'mattermost-redux/types/teams';\n\nimport {GlobalState} from 'types/store';\n\nimport TeamList from './team_list';\n\ntype Actions = {\n    searchTeams(term: string, opts: TeamSearchOpts): Promise<{data: TeamsWithCount}>;\n    getData(page: number, size: number): void;\n}\nconst getSortedListOfTeams = createSelector(\n    getTeams,\n    (teams) => Object.values(teams).sort((a, b) => a.display_name.localeCompare(b.display_name)),\n);\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        data: getSortedListOfTeams(state),\n        total: state.entities.teams.totalCount || 0,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n            getData: (page: number, pageSize: number) => fetchTeams(page, pageSize, true),\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamList);\n","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./team_list.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {debounce} from 'mattermost-redux/actions/helpers';\n\nimport {Team, TeamSearchOpts, TeamsWithCount} from 'mattermost-redux/types/teams';\n\nimport {browserHistory} from 'utils/browser_history';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport DataGrid, {Column} from 'components/admin_console/data_grid/data_grid';\nimport {PAGE_SIZE} from 'components/admin_console/team_channel_settings/abstract_list.jsx';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport './team_list.scss';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\n\nconst ROW_HEIGHT = 80;\n\ntype Props = {\n    data: Team[];\n    total: number;\n    actions: {\n        searchTeams(term: string, opts: TeamSearchOpts): Promise<{data: TeamsWithCount}>;\n        getData(page: number, size: number): void;\n    };\n}\n\ntype State = {\n    loading: boolean;\n    term: string;\n    teams: Team[];\n    page: number;\n    total: number;\n    searchErrored: boolean;\n    filters: TeamSearchOpts;\n}\nexport default class TeamList extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            loading: false,\n            term: '',\n            teams: [],\n            page: 0,\n            total: 0,\n            searchErrored: false,\n            filters: {},\n        };\n    }\n\n    componentDidMount() {\n        this.loadPage();\n    }\n\n    isSearching = (term: string, filters: TeamSearchOpts) => {\n        return (term.length + Object.keys(filters).length) > 0;\n    }\n\n    getPaginationProps = () => {\n        const {page, term, filters} = this.state;\n        const total = this.isSearching(term, filters) ? this.state.total : this.props.total;\n        const startCount = (page * PAGE_SIZE) + 1;\n        let endCount = (page + 1) * PAGE_SIZE;\n        endCount = endCount > total ? total : endCount;\n        return {startCount, endCount, total};\n    }\n\n    loadPage = async (page = 0, term = '', filters = {}) => {\n        this.setState({loading: true, term, filters});\n\n        if (this.isSearching(term, filters)) {\n            if (page > 0) {\n                this.searchTeams(page, term, filters);\n            } else {\n                this.searchTeamsDebounced(page, term, filters);\n            }\n            return;\n        }\n\n        await this.props.actions.getData(page, PAGE_SIZE);\n        this.setState({page, loading: false});\n    }\n\n    searchTeams = async (page = 0, term = '', filters = {}) => {\n        let teams: Team[] = [];\n        let total = 0;\n        let searchErrored = true;\n        const response = await this.props.actions.searchTeams(term, {page, per_page: PAGE_SIZE, ...filters});\n        if (response?.data) {\n            teams = page > 0 ? this.state.teams.concat(response.data.teams) : response.data.teams;\n            total = response.data.total_count;\n            searchErrored = false;\n        }\n        this.setState({page, loading: false, teams, total, searchErrored});\n    }\n\n    searchTeamsDebounced = debounce((page, term, filters = {}) => this.searchTeams(page, term, filters), 300, false, () => {});\n\n    nextPage = () => {\n        this.loadPage(this.state.page + 1, this.state.term, this.state.filters);\n    }\n\n    previousPage = () => {\n        this.setState({page: this.state.page - 1});\n    }\n\n    onSearch = (term = '') => {\n        this.loadPage(0, term, this.state.filters);\n    };\n\n    onFilter = ({management}: FilterOptions) => {\n        const filters: TeamSearchOpts = {};\n\n        const {\n            group_constrained: {value: groupConstrained},\n            allow_open_invite: {value: allowOpenInvite},\n            invite_only: {value: inviteOnly},\n        } = management.values;\n\n        const filtersList = [allowOpenInvite, inviteOnly, groupConstrained];\n\n        // If all filters or no filters do nothing\n        if (filtersList.includes(false) && filtersList.includes(true)) {\n            // If requesting private and public teams then just exclude all group constrained teams in the results\n            if (allowOpenInvite && inviteOnly) {\n                filters.group_constrained = false;\n            } else {\n                // Since the API returns different results if a filter is set to false vs not set at all\n                // we only set filters when needed and if not leave the filter option blank\n                if (groupConstrained) {\n                    filters.group_constrained = true;\n                }\n\n                if (allowOpenInvite || inviteOnly) {\n                    filters.allow_open_invite = Boolean(allowOpenInvite);\n                }\n            }\n        }\n\n        this.loadPage(0, this.state.term, filters);\n    }\n\n    getColumns = (): Column[] => {\n        const name = (\n            <FormattedMessage\n                id='admin.team_settings.team_list.nameHeader'\n                defaultMessage='Name'\n            />\n        );\n        const management = (\n            <FormattedMessage\n                id='admin.team_settings.team_list.mappingHeader'\n                defaultMessage='Management'\n            />\n        );\n\n        return [\n            {\n                name,\n                field: 'name',\n                width: 4,\n                fixed: true,\n            },\n            {\n                name: management,\n                field: 'management',\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'edit',\n                textAlign: 'right',\n                fixed: true,\n            },\n        ];\n    }\n\n    renderManagementMethodText = (team: Team) => {\n        if (team.group_constrained) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.groupSync'\n                    defaultMessage='Group Sync'\n                />\n            );\n        } else if (team.allow_open_invite) {\n            return (\n                <FormattedMessage\n                    id='admin.team_settings.team_row.managementMethod.anyoneCanJoin'\n                    defaultMessage='Anyone Can Join'\n                />\n            );\n        }\n        return (\n            <FormattedMessage\n                id='admin.team_settings.team_row.managementMethod.inviteOnly'\n                defaultMessage='Invite Only'\n            />\n        );\n    }\n\n    getRows = () => {\n        const {data} = this.props;\n        const {term, teams, filters} = this.state;\n        const {startCount, endCount} = this.getPaginationProps();\n        let teamsToDisplay = this.isSearching(term, filters) ? teams : data;\n        teamsToDisplay = teamsToDisplay.slice(startCount - 1, endCount);\n\n        return teamsToDisplay.map((team) => {\n            return {\n                cells: {\n                    id: team.id,\n                    name: (\n                        <div className='TeamList_nameColumn'>\n                            <div className='TeamList__lowerOpacity'>\n                                <TeamIcon\n                                    size='sm'\n                                    url={Utils.imageURLForTeam(team)}\n                                    name={team.display_name}\n                                />\n                            </div>\n                            <div className='TeamList_nameText'>\n                                <b data-testid='team-display-name'>\n                                    {team.display_name}\n                                </b>\n                                {team.description && (\n                                    <div className='TeamList_descriptionText'>\n                                        {team.description}\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    ),\n                    management: (\n                        <span\n                            data-testid={`${team.name}Management`}\n                            className='TeamList_managementText'\n                        >\n                            {this.renderManagementMethodText(team)}\n                        </span>\n                    ),\n                    edit: (\n                        <span\n                            data-testid={`${team.display_name}edit`}\n                            className='group-actions TeamList_editText'\n                        >\n                            <Link to={`/admin_console/user_management/teams/${team.id}`}>\n                                <FormattedMessage\n                                    id='admin.team_settings.team_row.configure'\n                                    defaultMessage='Edit'\n                                />\n                            </Link>\n                        </span>\n                    ),\n                },\n                onClick: () => browserHistory.push(`/admin_console/user_management/teams/${team.id}`),\n            };\n        });\n    }\n\n    render() {\n        const {term, searchErrored} = this.state;\n        const rows = this.getRows();\n        const columns = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n\n        let placeholderEmpty = (\n            <FormattedMessage\n                id='admin.team_settings.team_list.no_teams_found'\n                defaultMessage='No teams found'\n            />\n        );\n\n        if (searchErrored) {\n            placeholderEmpty = (\n                <FormattedMessage\n                    id='admin.team_settings.team_list.search_teams_errored'\n                    defaultMessage='Something went wrong. Try again'\n                />\n            );\n        }\n\n        const filterOptions = {\n            management: {\n                name: (\n                    <FormattedMessage\n                        id='admin.team_settings.team_list.mappingHeader'\n                        defaultMessage='Management'\n                    />\n                ),\n                values: {\n                    allow_open_invite: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.team_settings.team_row.managementMethod.anyoneCanJoin'\n                                defaultMessage='Anyone Can Join'\n                            />\n                        ),\n                        value: false,\n                    },\n                    invite_only: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.team_settings.team_row.managementMethod.inviteOnly'\n                                defaultMessage='Invite Only'\n                            />\n                        ),\n                        value: false,\n                    },\n                    group_constrained: {\n                        name: (\n                            <FormattedMessage\n                                id='admin.team_settings.team_row.managementMethod.groupSync'\n                                defaultMessage='Group Sync'\n                            />\n                        ),\n                        value: false,\n                    },\n                },\n                keys: ['allow_open_invite', 'invite_only', 'group_constrained'],\n            },\n        };\n\n        const filterProps = {\n            options: filterOptions,\n            keys: ['management'],\n            onFilter: this.onFilter,\n        };\n\n        const rowsContainerStyles = {\n            minHeight: `${rows.length * ROW_HEIGHT}px`,\n        };\n\n        return (\n            <div className='TeamsList'>\n                <DataGrid\n                    columns={columns}\n                    rows={rows}\n                    loading={this.state.loading}\n                    page={this.state.page}\n                    nextPage={this.nextPage}\n                    previousPage={this.previousPage}\n                    startCount={startCount}\n                    endCount={endCount}\n                    total={total}\n                    onSearch={this.onSearch}\n                    term={term}\n                    placeholderEmpty={placeholderEmpty}\n                    rowsContainerStyles={rowsContainerStyles}\n                    filterProps={filterProps}\n                />\n            </div>\n        );\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {t} from 'utils/i18n';\nimport TeamList from 'components/admin_console/team_channel_settings/team/list';\nimport AdminPanel from 'components/widgets/admin_console/admin_panel';\n\ntype Props = {\n    siteName: string;\n};\n\nexport function TeamsSettings(props: Props) {\n    return (\n        <div className='wrapper--fixed'>\n            <div className='admin-console__header'>\n                <FormattedMessage\n                    id='admin.team_settings.groupsPageTitle'\n                    defaultMessage='{siteName} Teams'\n                    values={{siteName: props.siteName}}\n                />\n            </div>\n\n            <div className='admin-console__wrapper'>\n                <div className='admin-console__content'>\n                    <AdminPanel\n                        id='teams'\n                        titleId={t('admin.team_settings.title')}\n                        titleDefault='Teams'\n                        subtitleId={t('admin.team_settings.description')}\n                        subtitleDefault='Manage team settings.'\n                    >\n                        <TeamList/>\n                    </AdminPanel>\n                </div>\n            </div>\n        </div>\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {FormattedMessage} from 'react-intl';\nimport {Modal} from 'react-bootstrap';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport GroupsUsers from './group/group_users';\n\nexport default class UsersToBeRemovedModal extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Number of users to be removed\n         */\n        total: PropTypes.number.isRequired,\n\n        /*\n         * Scope that the users are to be removed from\n         * can be either 'team' or 'channel'\n         *\n         */\n        scope: PropTypes.string.isRequired,\n\n        /*\n         * Id of the scope that the users are to be removed from\n         * can be either a Team ID or a Channel ID\n         *\n         */\n        scopeId: PropTypes.string.isRequired,\n\n        /*\n         * users to be removed\n         */\n        users: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        onHide: PropTypes.func,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            values: [],\n            show: true,\n        };\n    }\n\n    handleHide = () => {\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onHide) {\n            this.props.onHide();\n        }\n    }\n\n    render() {\n        const {users, total, scope, scopeId} = this.props;\n        const title = (\n            <FormattedMarkdownMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.title'\n                defaultMessage='**{total, number} {total, plural, one {User} other {Users}}** To Be Removed'\n                values={{total}}\n            />\n        );\n\n        let message = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.message'\n                defaultMessage='The members listed below are not in any of the groups currently linked to this team. Because this team is set to be managed by group sync they will all be removed once saved.'\n            />\n        );\n\n        if (scope === 'channel') {\n            message = (\n                <FormattedMessage\n                    id='admin.team_channel_settings.usersToBeRemovedModal.channel_message'\n                    defaultMessage='The members listed below are not in any of the groups currently linked to this channel. Because this channel is set to be managed by group sync they will all be removed once saved.'\n                />\n            );\n        }\n\n        const button = (\n            <FormattedMessage\n                id='admin.team_channel_settings.usersToBeRemovedModal.close'\n                defaultMessage='Close'\n            />\n        );\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal settings-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                id='confirmModal'\n                role='dialog'\n                aria-labelledby='confirmModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='confirmModalLabel'\n                    >\n                        {title}\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className='group-users-to-remove-modal-description'>{message}</div>\n                    <GroupsUsers\n                        members={users}\n                        total={total}\n                        scope={scope}\n                        scopeId={scopeId}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <button\n                        type='button'\n                        autoFocus={true}\n                        className='btn btn-primary'\n                        onClick={this.handleHide}\n                        id='closeModalButton'\n                    >\n                        {button}\n                    </button>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport TextSetting, {WidgetTextSettingProps} from 'components/widgets/settings/text_setting';\n\nimport SetByEnv from './set_by_env';\n\ninterface Props extends WidgetTextSettingProps {\n    setByEnv: boolean;\n    disabled?: boolean;\n}\n\nconst AdminTextSetting: React.SFC<Props> = (props: Props): JSX.Element => {\n    const {setByEnv, disabled, ...sharedProps} = props;\n    const isTextDisabled = disabled || setByEnv;\n\n    return (\n        <TextSetting\n            {...sharedProps}\n            labelClassName='col-sm-4'\n            inputClassName='col-sm-8'\n            disabled={isTextDisabled}\n            footer={setByEnv ? <SetByEnv/> : null}\n        />\n    );\n};\n\nexport default AdminTextSetting;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\n\nimport {bindActionCreators} from 'redux';\n\nimport {autocompleteUsers} from 'actions/user_actions';\n\nimport UserAutocompleteSetting from './user_autocomplete_setting';\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            autocompleteUsers,\n        }, dispatch),\n    };\n}\nexport default connect(null, mapDispatchToProps)(UserAutocompleteSetting);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport GenericUserProvider from 'components/suggestion/generic_user_provider.jsx';\nimport Setting from 'components/admin_console/setting';\nimport SuggestionBox from 'components/suggestion/suggestion_box.jsx';\nimport SuggestionList from 'components/suggestion/suggestion_list.jsx';\n\nexport default class UserAutocompleteSetting extends React.PureComponent {\n    static get propTypes() {\n        return {\n            id: PropTypes.string.isRequired,\n            label: PropTypes.node.isRequired,\n            placeholder: PropTypes.string,\n            helpText: PropTypes.node,\n            value: PropTypes.string,\n            onChange: PropTypes.func,\n            disabled: PropTypes.bool,\n            actions: PropTypes.shape({\n                autocompleteUsers: PropTypes.func.isRequired,\n            }),\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.userSuggestionProviders = [new GenericUserProvider(props.actions.autocompleteUsers)];\n    }\n\n    handleChange = (e) => {\n        this.props.onChange(this.props.id, e.target.value);\n    }\n\n    handleUserSelected = (user) => {\n        this.props.onChange(this.props.id, user.username);\n    }\n\n    render() {\n        return (\n            <Setting\n                label={this.props.label}\n                helpText={this.props.helpText}\n                inputId={this.props.id}\n            >\n                <div\n                    className='admin-setting-user__dropdown'\n                >\n                    <SuggestionBox\n                        id={'admin_user_setting_' + this.props.id}\n                        className='form-control'\n                        placeholder={this.props.placeholder}\n                        value={this.props.value}\n                        onChange={this.handleChange}\n                        onItemSelected={this.handleUserSelected}\n                        listComponent={SuggestionList}\n                        listStyle='bottom'\n                        providers={this.userSuggestionProviders}\n                        disabled={this.props.disabled}\n                        requiredCharacters={0}\n                        openOnFocus={true}\n                    />\n                </div>\n            </Setting>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./user_grid.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\n\nimport Badge from 'components/widgets/badges/badge';\nimport {FilterOptions} from 'components/admin_console/filter/filter';\nimport DataGrid, {Row, Column} from 'components/admin_console/data_grid/data_grid';\n\nimport UserGridName from './user_grid_name';\nimport UserGridRemove from './user_grid_remove';\nimport UserGridRoleDropdown, {BaseMembership} from './user_grid_role_dropdown';\n\nimport './user_grid.scss';\n\ntype Props = {\n    users: UserProfile[];\n    scope: 'team' | 'channel';\n    memberships: { [userId: string]: BaseMembership | TeamMembership | ChannelMembership };\n\n    excludeUsers: { [userId: string]: UserProfile };\n    includeUsers: { [userId: string]: UserProfile };\n\n    loadPage: (page: number) => void;\n    onSearch: (term: string) => void;\n    removeUser: (user: UserProfile) => void;\n    updateMembership: (membership: BaseMembership) => void;\n\n    totalCount: number;\n    loading: boolean;\n    term: string;\n    readOnly?: boolean;\n\n    filterProps: {\n        options: FilterOptions;\n        keys: string[];\n        onFilter: (options: FilterOptions) => void;\n    };\n};\n\ntype State = {\n    loading: boolean;\n    page: number;\n    membershipsToUpdate: { [userId: string]: BaseMembership | TeamMembership | ChannelMembership };\n};\n\nconst USERS_PER_PAGE = 10;\nconst ROW_HEIGHT = 80;\n\nexport default class UserGrid extends React.PureComponent<Props, State> {\n    private pageLoaded = 0;\n\n    public constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            page: 0,\n            membershipsToUpdate: {},\n        };\n    }\n\n    private loadPage = (page: number) => {\n        this.setState({loading: true});\n        this.props.loadPage(page);\n        this.setState({page, loading: false});\n    }\n\n    private nextPage = () => {\n        this.loadPage(this.state.page + 1);\n    }\n\n    private previousPage = () => {\n        this.loadPage(this.state.page - 1);\n    }\n\n    private onSearch = async (term: string) => {\n        this.props.onSearch(term);\n        this.setState({page: 0});\n    }\n\n    private onFilter = async (filters: FilterOptions) => {\n        this.props.filterProps?.onFilter(filters);\n        this.setState({page: 0});\n    }\n\n    private getVisibleTotalCount = (): number => {\n        const {includeUsers, excludeUsers, totalCount} = this.props;\n        const includeUsersCount = Object.keys(includeUsers).length;\n        const excludeUsersCount = Object.keys(excludeUsers).length;\n        return totalCount + (includeUsersCount - excludeUsersCount);\n    }\n\n    public getPaginationProps = (): {startCount: number; endCount: number; total: number} => {\n        const {includeUsers, excludeUsers, term} = this.props;\n        const {page} = this.state;\n\n        let total: number;\n        let endCount = 0;\n        const startCount = (page * USERS_PER_PAGE) + 1;\n\n        if (term === '') {\n            total = this.getVisibleTotalCount();\n        } else {\n            total = this.props.users.length + Object.keys(includeUsers).length;\n            this.props.users.forEach((u) => {\n                if (excludeUsers[u.id]) {\n                    total -= 1;\n                }\n            });\n        }\n\n        endCount = (page + 1) * USERS_PER_PAGE;\n        endCount = endCount > total ? total : endCount;\n\n        return {startCount, endCount, total};\n    }\n\n    private removeUser = (user: UserProfile) => {\n        const {excludeUsers} = this.props;\n        if (excludeUsers[user.id] === user) {\n            return;\n        }\n\n        let {page} = this.state;\n        const {endCount} = this.getPaginationProps();\n\n        this.props.removeUser(user);\n        if (endCount > this.getVisibleTotalCount() && (endCount % USERS_PER_PAGE) === 1 && page > 0) {\n            page--;\n        }\n\n        this.setState({page});\n    }\n\n    private updateMembership = (membership: BaseMembership) => {\n        const {membershipsToUpdate} = this.state;\n        const {memberships} = this.props;\n        const userId = membership.user_id;\n        membershipsToUpdate[userId] = {\n            ...memberships[userId],\n            ...membership,\n        };\n\n        this.props.updateMembership(membership);\n        this.setState({membershipsToUpdate}, this.forceUpdate);\n    }\n\n    private newMembership = (user: UserProfile): BaseMembership => {\n        return {\n            user_id: user.id,\n            scheme_admin: false,\n            scheme_user: !user.roles.includes('guest'),\n        };\n    }\n\n    private getRows = (): Row[] => {\n        const {page, membershipsToUpdate} = this.state;\n        const {memberships, users, excludeUsers, includeUsers, totalCount, term, scope, readOnly} = this.props;\n        const {startCount, endCount} = this.getPaginationProps();\n\n        let usersToDisplay = users;\n        const includeUsersList = Object.values(includeUsers);\n\n        // Remove users to remove and add users to add\n        usersToDisplay = usersToDisplay.filter((user) => !excludeUsers[user.id]);\n        usersToDisplay = [...includeUsersList, ...usersToDisplay];\n        usersToDisplay = usersToDisplay.slice(startCount - 1, endCount);\n\n        // Dont load more elements if searching\n        if (term === '' && usersToDisplay.length < USERS_PER_PAGE && users.length < totalCount) {\n            const numberOfUsersRemoved = Object.keys(excludeUsers).length;\n            const pagesOfUsersRemoved = Math.floor(numberOfUsersRemoved / USERS_PER_PAGE);\n            const pageToLoad = page + pagesOfUsersRemoved + 1;\n\n            // Directly call action to load more users from parent component to load more users into the state\n            if (pageToLoad > this.pageLoaded) {\n                this.props.loadPage(pageToLoad);\n                this.pageLoaded = pageToLoad;\n            }\n        }\n\n        return usersToDisplay.map((user) => {\n            const membership = membershipsToUpdate[user.id] || memberships[user.id] || this.newMembership(user);\n            return {\n                cells: {\n                    id: user.id,\n                    name: (\n                        <UserGridName\n                            user={user}\n                        />\n                    ),\n                    new: (\n                        <Badge\n                            className='NewUserBadge'\n                            show={Boolean(includeUsers[user.id])}\n                        >\n                            <FormattedMessage\n                                id='admin.user_grid.new'\n                                defaultMessage='New'\n                            />\n                        </Badge>\n                    ),\n                    role: (\n                        <UserGridRoleDropdown\n                            user={user}\n                            membership={membership}\n                            handleUpdateMembership={this.updateMembership}\n                            scope={scope}\n                            isDisabled={readOnly}\n                        />\n                    ),\n                    remove: (\n                        <UserGridRemove\n                            user={user}\n                            removeUser={this.removeUser}\n                            isDisabled={readOnly}\n                        />\n                    ),\n                },\n            };\n        });\n    }\n\n    private getColumns = (): Column[] => {\n        const name: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.name'\n                defaultMessage='Name'\n            />\n        );\n        const role: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.role'\n                defaultMessage='Role'\n            />\n        );\n\n        return [\n            {\n                name,\n                field: 'name',\n                width: 3,\n                fixed: true,\n            },\n            {\n                name: '',\n                field: 'new',\n                fixed: true,\n            },\n            {\n                name: role,\n                field: 'role',\n\n                // Requires overflow visible in order to render dropdown\n                overflow: 'visible',\n            },\n            {\n                name: '',\n                field: 'remove',\n                textAlign: 'right',\n                fixed: true,\n            },\n        ];\n    }\n\n    public render = (): JSX.Element => {\n        const rows: Row[] = this.getRows();\n        const columns: Column[] = this.getColumns();\n        const {startCount, endCount, total} = this.getPaginationProps();\n\n        const placeholderEmpty: JSX.Element = (\n            <FormattedMessage\n                id='admin.user_grid.notFound'\n                defaultMessage='No users found'\n            />\n        );\n\n        const rowsContainerStyles = {\n            minHeight: `${rows.length * ROW_HEIGHT}px`,\n        };\n\n        return (\n            <DataGrid\n                columns={columns}\n                rows={rows}\n                loading={this.state.loading || this.props.loading}\n                page={this.state.page}\n                nextPage={this.nextPage}\n                previousPage={this.previousPage}\n                startCount={startCount}\n                endCount={endCount}\n                total={total}\n                onSearch={this.onSearch}\n                term={this.props.term || ''}\n                placeholderEmpty={placeholderEmpty}\n                rowsContainerStyles={rowsContainerStyles}\n                filterProps={{...this.props.filterProps, onFilter: this.onFilter}}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {Client4} from 'mattermost-redux/client';\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport ProfilePicture from 'components/profile_picture';\n\ntype Props = {\n    user: UserProfile;\n}\n\nexport default class UserGridName extends React.Component<Props> {\n    public render = (): JSX.Element => {\n        const {user} = this.props;\n\n        return (\n            <div className='UserGrid_nameRow'>\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(user.id, user.last_picture_update)}\n                    status={status}\n                    size='md'\n                />\n\n                <div className='UserGrid_name'>\n                    <span>\n                        {`${user.username} - ${user.first_name} ${user.last_name}`}\n                    </span>\n                    <span className='ug-email'>\n                        {user.email}\n                    </span>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    user: UserProfile;\n    removeUser: (user: UserProfile) => void;\n    isDisabled?: boolean;\n}\n\nexport default class UserGridRemove extends React.PureComponent<Props> {\n    private handleClick = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        e.preventDefault();\n        if (this.props.isDisabled) {\n            return;\n        }\n        this.props.removeUser(this.props.user);\n    }\n\n    public render = (): JSX.Element => {\n        const {isDisabled} = this.props;\n        return (\n            <div className='UserGrid_removeRow'>\n                <a\n                    onClick={this.handleClick}\n                    href='#'\n                    role='button'\n                    className={isDisabled ? 'disabled' : ''}\n                >\n                    <FormattedMessage\n                        id='admin.user_grid.remove'\n                        defaultMessage='Remove'\n                    />\n                </a>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {TeamMembership} from 'mattermost-redux/types/teams';\nimport {ChannelMembership} from 'mattermost-redux/types/channels';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Menu from 'components/widgets/menu/menu';\nimport MenuWrapper from 'components/widgets/menu/menu_wrapper';\n\nimport DropdownIcon from 'components/widgets/icons/fa_dropdown_icon';\n\nexport type BaseMembership = {\n    user_id: string;\n    scheme_user: boolean;\n    scheme_admin: boolean;\n}\n\ntype Props = {\n    user: UserProfile;\n    membership?: BaseMembership | TeamMembership | ChannelMembership;\n    scope: 'team' | 'channel';\n    handleUpdateMembership: (membership: BaseMembership) => void;\n    isDisabled?: boolean;\n}\n\nexport type Role = 'system_admin' | 'team_admin' | 'team_user' | 'channel_admin' | 'channel_user' | 'guest';\n\nexport default class UserGridRoleDropdown extends React.PureComponent<Props> {\n    private getDropDownOptions = () => {\n        if (this.props.scope === 'team') {\n            return {\n                makeAdmin: Utils.localizeMessage('team_members_dropdown.makeAdmin', 'Make Team Admin'),\n                makeMember: Utils.localizeMessage('team_members_dropdown.makeMember', 'Make Team Member'),\n            };\n        }\n\n        return {\n            makeAdmin: Utils.localizeMessage('channel_members_dropdown.make_channel_admin', 'Make Channel Admin'),\n            makeMember: Utils.localizeMessage('channel_members_dropdown.make_channel_member', 'Make Channel Member'),\n        };\n    }\n\n    private getCurrentRole = (): Role => {\n        const {user, membership, scope} = this.props;\n\n        if (user.roles.includes('system_admin')) {\n            return 'system_admin';\n        } else if (membership) {\n            if (scope === 'team') {\n                if (membership.scheme_admin) {\n                    return 'team_admin';\n                } else if (membership.scheme_user) {\n                    return 'team_user';\n                }\n            }\n\n            if (scope === 'channel') {\n                if (membership.scheme_admin) {\n                    return 'channel_admin';\n                } else if (membership.scheme_user) {\n                    return 'channel_user';\n                }\n            }\n        }\n\n        return 'guest';\n    }\n\n    private getLocalizedRole = (role: Role) => {\n        switch (role) {\n        case 'system_admin':\n            return Utils.localizeMessage('admin.user_grid.system_admin', 'System Admin');\n        case 'team_admin':\n            return Utils.localizeMessage('admin.user_grid.team_admin', 'Team Admin');\n        case 'channel_admin':\n            return Utils.localizeMessage('admin.user_grid.channel_admin', 'Channel Admin');\n        case 'team_user':\n        case 'channel_user':\n            return Utils.localizeMessage('admin.group_teams_and_channels_row.member', 'Member');\n        default:\n            return Utils.localizeMessage('admin.user_grid.guest', 'Guest');\n        }\n    }\n\n    private handleMakeAdmin = () => {\n        this.props.handleUpdateMembership({\n            user_id: this.props.user.id,\n            scheme_admin: true,\n            scheme_user: true,\n        });\n    }\n\n    private handleMakeUser = () => {\n        this.props.handleUpdateMembership({\n            user_id: this.props.user.id,\n            scheme_admin: false,\n            scheme_user: true,\n        });\n    }\n\n    private getAriaLabel = () => {\n        const {scope} = this.props;\n        if (scope === 'team') {\n            return Utils.localizeMessage('team_members_dropdown.menuAriaLabel', 'Change the role of a team member');\n        }\n        return Utils.localizeMessage('channel_members_dropdown.menuAriaLabel', 'Change the role of channel member');\n    }\n\n    public render = (): JSX.Element | null => {\n        if (!this.props.membership) {\n            return null;\n        }\n\n        const {user, isDisabled} = this.props;\n\n        const {makeAdmin, makeMember} = this.getDropDownOptions();\n        const currentRole = this.getCurrentRole();\n        const localizedRole = this.getLocalizedRole(currentRole);\n        const ariaLabel = this.getAriaLabel();\n\n        const dropdownEnabled = !['system_admin', 'guest'].includes(currentRole);\n        const showMakeAdmin = ['channel_user', 'team_user'].includes(currentRole);\n        const showMakeMember = ['channel_admin', 'team_admin'].includes(currentRole);\n\n        if (!dropdownEnabled) {\n            return localizedRole;\n        }\n\n        return (\n            <MenuWrapper\n                isDisabled={isDisabled}\n            >\n                <button\n                    id={`userGridRoleDropdown_${user.username}`}\n                    className='dropdown-toggle theme color--link style--none'\n                    type='button'\n                    aria-expanded='true'\n                >\n                    <span>{localizedRole} </span>\n                    <DropdownIcon/>\n                </button>\n                <Menu ariaLabel={ariaLabel}>\n                    <Menu.ItemAction\n                        show={showMakeAdmin}\n                        onClick={this.handleMakeAdmin}\n                        text={makeAdmin}\n                    />\n                    <Menu.ItemAction\n                        show={showMakeMember}\n                        onClick={this.handleMakeUser}\n                        text={makeMember}\n                    />\n                </Menu>\n            </MenuWrapper>\n        );\n    }\n}\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ref--6-2!./alert_banner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport classNames from 'classnames';\n\nimport './alert_banner.scss';\n\ntype Props = {\n    mode: 'danger' | 'warning' | 'info';\n    title: React.ReactNode;\n    message: React.ReactNode;\n    className?: string;\n    onDismiss?: () => void;\n}\n\nconst AlertBanner: React.FC<Props> = (props: Props) => {\n    const {mode, title, message, className, onDismiss} = props;\n\n    return (\n        <div className={classNames('AlertBanner', mode, className)}>\n            <div className='AlertBanner__icon'>\n                {mode === 'info' &&\n                    <i className='icon-alert-circle-outline'/>\n                }\n                {mode !== 'info' &&\n                    <i className='icon-alert-outline'/>\n                }\n            </div>\n            <div className='AlertBanner__body'>\n                <div className='AlertBanner__title'>\n                    {title}\n                </div>\n                <div className='AlertBanner__message'>\n                    {message}\n                </div>\n            </div>\n            {onDismiss &&\n                <button\n                    className='AlertBanner__closeButton'\n                    onClick={onDismiss}\n                >\n                    <i className='icon-close'/>\n                </button>\n            }\n        </div>\n    );\n};\n\nexport default AlertBanner;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport Chart, {ChartData} from 'chart.js';\n\nimport * as Utils from 'utils/utils.jsx';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: ChartData;\n}\n\nexport default class DoughnutChart extends React.PureComponent<Props> {\n    private canvasRef = React.createRef<HTMLCanvasElement>();\n\n    public chart: Chart | null = null;\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        if (!Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            this.initChart(true);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart && this.canvasRef.current) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.canvasRef.current) {\n            return;\n        }\n        const ctx = this.canvasRef.current.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'doughnut', data: dataCopy, options: {}});\n        if (update && this.chart) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else {\n            content = (\n                <canvas\n                    ref={this.canvasRef}\n                    width={this.props.width}\n                    height={this.props.height}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport * as Utils from 'utils/utils.jsx';\n\nexport function formatChannelDoughtnutData(totalPublic: any, totalPrivate: any) {\n    const channelTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.publicChannels', 'Public Channels'),\n            Utils.localizeMessage('analytics.system.privateGroups', 'Private Channels'),\n        ],\n        datasets: [{\n            data: [totalPublic, totalPrivate],\n            backgroundColor: ['#46BFBD', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FFC870'],\n        }],\n    };\n\n    return channelTypeData;\n}\n\nexport function formatPostDoughtnutData(filePosts: any, hashtagPosts: any, totalPosts: any) {\n    const postTypeData = {\n        labels: [\n            Utils.localizeMessage('analytics.system.totalFilePosts', 'Posts with Files'),\n            Utils.localizeMessage('analytics.system.totalHashtagPosts', 'Posts with Hashtags'),\n            Utils.localizeMessage('analytics.system.textPosts', 'Posts with Text-only'),\n        ],\n        datasets: [{\n            data: [filePosts, hashtagPosts, (totalPosts - filePosts - hashtagPosts)],\n            backgroundColor: ['#46BFBD', '#F7464A', '#FDB45C'],\n            hoverBackgroundColor: ['#5AD3D1', '#FF5A5E', '#FFC870'],\n        }],\n    };\n\n    return postTypeData;\n}\n\nexport function formatPostsPerDayData(labels: string[], data: any) {\n    const chartData = {\n        labels: [] as string[],\n        datasets: [{\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n    return fillChartData(chartData, labels, data);\n}\n\n// synchronizeChartLabels converges on a uniform set of labels for all entries in the given chart data.\n// If a given label wasn't already present in the chart data, a 0-valued data point at that label is added.\nexport function synchronizeChartLabels(...datas: any) {\n    const labels: Set<string> = new Set();\n    datas.forEach((data: any) => {\n        if (data?.length) {\n            data.forEach((e: any) => labels.add(e.name));\n        }\n    });\n    return Array.from(labels).sort();\n}\n\nexport function formatUsersWithPostsPerDayData(labels: string[], data: any) {\n    const chartData = {\n        labels: [] as string[],\n        datasets: [{\n            label: '',\n            fillColor: 'rgba(151,187,205,0.2)',\n            borderColor: 'rgba(151,187,205,1)',\n            pointBackgroundColor: 'rgba(151,187,205,1)',\n            pointBorderColor: '#fff',\n            pointHoverBackgroundColor: '#fff',\n            pointHoverBorderColor: 'rgba(151,187,205,1)',\n            data: [] as any,\n        }],\n    };\n    return fillChartData(chartData, labels, data);\n}\n\nfunction fillChartData(chartData: any, labels: any, data: any) {\n    if (data?.length) {\n        chartData.labels = labels;\n\n        //labels are in order, add in label order...\n        chartData.labels.forEach((label: string) => {\n            const element = data.find((e: any) => e.name === label);\n            const val = element ? element.value : 0;\n            chartData.datasets[0].data.push(val);\n        });\n    }\n    return chartData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n/* eslint-disable react/no-string-refs */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport Chart, {ChartOptions} from 'chart.js';\n\nimport * as Utils from 'utils/utils';\n\ntype Props = {\n    title: React.ReactNode;\n    width: number;\n    height: number;\n    data?: any;\n    id: string;\n}\n\nexport default class LineChart extends React.PureComponent<Props> {\n    private canvasRef = React.createRef<HTMLCanvasElement>()\n    public static propTypes = {\n\n        /*\n         * Chart title\n         */\n        title: PropTypes.node.isRequired,\n\n        /*\n         * Chart width\n         */\n        width: PropTypes.number.isRequired,\n\n        /*\n         * Chart height\n         */\n        height: PropTypes.number.isRequired,\n\n        /*\n         * Chart data\n         */\n        data: PropTypes.object,\n    };\n\n    public chart: Chart | null = null;\n    public chartOptions: ChartOptions = {\n        legend: {\n            display: false,\n        },\n    };\n\n    public componentDidMount(): void {\n        this.initChart();\n    }\n\n    public componentDidUpdate(prevProps: Props): void {\n        const currentData = this.props.data && this.props.data.labels.length > 0;\n\n        if (!currentData && this.chart) {\n            // Clean up the rendered chart before we render and destroy its context\n            this.chart.destroy();\n            this.chart = null;\n        }\n\n        if (Utils.areObjectsEqual(prevProps.data, this.props.data)) {\n            return;\n        }\n\n        const hasData = this.props.data && this.props.data.labels.length > 0;\n        const hasChart = Boolean(this.chart);\n\n        if (hasData) {\n            // Update the rendered chart or initialize it as necessary\n            this.initChart(hasChart);\n        }\n    }\n\n    public componentWillUnmount(): void {\n        if (this.chart) {\n            this.chart.destroy();\n        }\n    }\n\n    public initChart = (update?: boolean): void => {\n        if (!this.canvasRef.current) {\n            return;\n        }\n\n        const ctx = this.canvasRef.current.getContext('2d') as CanvasRenderingContext2D;\n        const dataCopy: any = JSON.parse(JSON.stringify(this.props.data));\n        this.chart = new Chart(ctx, {type: 'line', data: dataCopy, options: this.chartOptions || {}});\n\n        if (update) {\n            this.chart.update();\n        }\n    }\n\n    public render(): JSX.Element {\n        let content;\n        if (this.props.data == null) {\n            content = (\n                <FormattedMessage\n                    id='analytics.chart.loading'\n                    defaultMessage='Loading...'\n                />\n            );\n        } else if (this.props.data.labels.length === 0) {\n            content = (\n                <h5>\n                    <FormattedMessage\n                        id='analytics.chart.meaningful'\n                        defaultMessage='Not enough data for a meaningful representation.'\n                    />\n                </h5>\n            );\n        } else {\n            content = (\n                <canvas\n                    data-testid={this.props.id}\n                    ref={this.canvasRef}\n                    width={this.props.width}\n                    height={this.props.height}\n                    data-labels={this.props.data.labels}\n                />\n            );\n        }\n\n        return (\n            <div className='col-sm-12'>\n                <div className='total-count by-day'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n/* eslint-enable react/no-string-refs */\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React, {ReactNode} from 'react';\nimport {FormattedMessage} from 'react-intl';\n\ntype Props = {\n    title: ReactNode;\n    icon: string;\n    count?: number;\n    id?: string;\n}\n\nexport default class StatisticCount extends React.PureComponent<Props> {\n    public render(): JSX.Element {\n        const loading = (\n            <FormattedMessage\n                id='analytics.chart.loading'\n                defaultMessage='Loading...'\n            />\n        );\n\n        return (\n            <div className='col-lg-3 col-md-4 col-sm-6'>\n                <div className='total-count'>\n                    <div\n                        data-testid={`${this.props.id}Title`}\n                        className='title'\n                    >\n                        {this.props.title}\n                        <i className={'fa ' + this.props.icon}/>\n                    </div>\n                    <div\n                        data-testid={this.props.id}\n                        className='content'\n                    >\n                        {typeof this.props.count === 'undefined' || isNaN(this.props.count) ? loading : this.props.count}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getLicense} from 'mattermost-redux/selectors/entities/general';\n\nimport {GlobalState} from 'mattermost-redux/types/store';\n\nimport SystemAnalytics from './system_analytics';\n\nfunction mapStateToProps(state: GlobalState) {\n    const license = getLicense(state);\n    const isLicensed = license.IsLicensed === 'true';\n\n    return {\n        isLicensed,\n        stats: state.entities.admin.analytics,\n    };\n}\n\nexport default connect(mapStateToProps)(SystemAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {Dictionary} from 'mattermost-redux/types/utilities';\nimport {AnalyticsRow} from 'mattermost-redux/types/admin';\n\nimport * as AdminActions from 'actions/admin_actions.jsx';\nimport Constants from 'utils/constants';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\nimport FormattedAdminHeader from 'components/widgets/admin_console/formatted_admin_header';\n\nimport DoughnutChart from '../doughnut_chart';\nimport LineChart from '../line_chart';\nimport StatisticCount from '../statistic_count';\n\nimport {\n    formatPostsPerDayData,\n    formatUsersWithPostsPerDayData,\n    formatChannelDoughtnutData,\n    formatPostDoughtnutData,\n    synchronizeChartLabels,\n} from '../format';\n\nconst StatTypes = Constants.StatTypes;\n\ntype Props = {\n    isLicensed: boolean;\n    stats?: Dictionary<number | AnalyticsRow[]>;\n}\n\nexport default class SystemAnalytics extends React.PureComponent<Props> {\n    public componentDidMount() {\n        AdminActions.getStandardAnalytics();\n        AdminActions.getPostsPerDayAnalytics();\n        AdminActions.getBotPostsPerDayAnalytics();\n        AdminActions.getUsersPerDayAnalytics();\n\n        if (this.props.isLicensed) {\n            AdminActions.getAdvancedAnalytics();\n        }\n    }\n\n    private getStatValue(stat: number | AnalyticsRow[]): number | undefined {\n        if (typeof stat === 'number') {\n            return stat;\n        }\n        if (!stat || stat.length === 0) {\n            return undefined;\n        }\n        return stat[0].value;\n    }\n\n    public render() {\n        const stats = this.props.stats!;\n        const isLicensed = this.props.isLicensed;\n        const skippedIntensiveQueries = stats[StatTypes.TOTAL_POSTS] === -1;\n\n        const labels = synchronizeChartLabels(stats[StatTypes.POST_PER_DAY], stats[StatTypes.BOT_POST_PER_DAY], stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n        const postCountsDay = formatPostsPerDayData(labels, stats[StatTypes.POST_PER_DAY]);\n        const botPostCountsDay = formatPostsPerDayData(labels, stats[StatTypes.BOT_POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(labels, stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n\n        let banner;\n        let postCount;\n        let postTotalGraph;\n        let botPostTotalGraph;\n        let activeUserGraph;\n        if (skippedIntensiveQueries) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.skippedIntensiveQueries'\n                            defaultMessage='To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            postCount = (\n                <StatisticCount\n                    id='totalPosts'\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={this.getStatValue(stats[StatTypes.TOTAL_POSTS])}\n                />\n            );\n\n            botPostTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalBotPosts'\n                                defaultMessage='Total Posts from Bots'\n                            />\n                        }\n                        data={botPostCountsDay}\n                        id='totalPostsFromBotsLineChart'\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        id='totalPostsLineChart'\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            activeUserGraph = (\n                <div className='row'>\n                    <LineChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        id='activeUsersWithPostsLineChart'\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        let advancedStats;\n        let advancedGraphs;\n        let sessionCount;\n        let commandCount;\n        let incomingCount;\n        let outgoingCount;\n        if (this.props.isLicensed) {\n            sessionCount = (\n                <StatisticCount\n                    id='totalSessions'\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalSessions'\n                            defaultMessage='Total Sessions'\n                        />\n                    }\n                    icon='fa-signal'\n                    count={this.getStatValue(stats[StatTypes.TOTAL_SESSIONS])}\n                />\n            );\n\n            commandCount = (\n                <StatisticCount\n                    id='totalCommands'\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalCommands'\n                            defaultMessage='Total Commands'\n                        />\n                    }\n                    icon='fa-terminal'\n                    count={this.getStatValue(stats[StatTypes.TOTAL_COMMANDS])}\n                />\n            );\n\n            incomingCount = (\n                <StatisticCount\n                    id='incomingWebhooks'\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalIncomingWebhooks'\n                            defaultMessage='Incoming Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-down'\n                    count={this.getStatValue(stats[StatTypes.TOTAL_IHOOKS])}\n                />\n            );\n\n            outgoingCount = (\n                <StatisticCount\n                    id='outgoingWebhooks'\n                    title={\n                        <FormattedMessage\n                            id='analytics.system.totalOutgoingWebhooks'\n                            defaultMessage='Outgoing Webhooks'\n                        />\n                    }\n                    icon='fa-arrow-up'\n                    count={this.getStatValue(stats[StatTypes.TOTAL_OHOOKS])}\n                />\n            );\n\n            advancedStats = (\n                <div>\n                    <StatisticCount\n                        id='websocketConns'\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalWebsockets'\n                                defaultMessage='WebSocket Conns'\n                            />\n                        }\n                        icon='fa-user'\n                        count={this.getStatValue(stats[StatTypes.TOTAL_WEBSOCKET_CONNECTIONS])}\n                    />\n                    <StatisticCount\n                        id='masterDbConns'\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalMasterDbConnections'\n                                defaultMessage='Master DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={this.getStatValue(stats[StatTypes.TOTAL_MASTER_DB_CONNECTIONS])}\n                    />\n                    <StatisticCount\n                        id='replicaDbConns'\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.totalReadDbConnections'\n                                defaultMessage='Replica DB Conns'\n                            />\n                        }\n                        icon='fa-terminal'\n                        count={this.getStatValue(stats[StatTypes.TOTAL_READ_DB_CONNECTIONS])}\n                    />\n                </div>\n            );\n\n            const channelTypeData = formatChannelDoughtnutData(stats[StatTypes.TOTAL_PUBLIC_CHANNELS], stats[StatTypes.TOTAL_PRIVATE_GROUPS]);\n            const postTypeData = formatPostDoughtnutData(stats[StatTypes.TOTAL_FILE_POSTS], stats[StatTypes.TOTAL_HASHTAG_POSTS], stats[StatTypes.TOTAL_POSTS]);\n\n            let postTypeGraph;\n            if (stats[StatTypes.TOTAL_POSTS] !== -1) {\n                postTypeGraph = (\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.postTypes'\n                                defaultMessage='Posts, Files and Hashtags'\n                            />\n                        }\n                        data={postTypeData}\n                        width={300}\n                        height={225}\n                    />\n                );\n            }\n\n            advancedGraphs = (\n                <div className='row'>\n                    <DoughnutChart\n                        title={\n                            <FormattedMessage\n                                id='analytics.system.channelTypes'\n                                defaultMessage='Channel Types'\n                            />\n                        }\n                        data={channelTypeData}\n                        width={300}\n                        height={225}\n                    />\n                    {postTypeGraph}\n                </div>\n            );\n        }\n\n        const userCount = (\n            <StatisticCount\n                id='totalActiveUsers'\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalUsers'\n                        defaultMessage='Total Active Users'\n                    />\n                }\n                icon='fa-user'\n                count={this.getStatValue(stats[StatTypes.TOTAL_USERS])}\n            />\n        );\n\n        const teamCount = (\n            <StatisticCount\n                id='totalTeams'\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalTeams'\n                        defaultMessage='Total Teams'\n                    />\n                }\n                icon='fa-users'\n                count={this.getStatValue(stats[StatTypes.TOTAL_TEAMS])}\n            />\n        );\n        const totalPublicChannelsCount = this.getStatValue(stats[StatTypes.TOTAL_PUBLIC_CHANNELS]);\n        const totalPrivateGroupsCount = this.getStatValue(stats[StatTypes.TOTAL_PRIVATE_GROUPS]);\n        const totalChannelCount = () => {\n            if (totalPublicChannelsCount && totalPrivateGroupsCount) {\n                return totalPublicChannelsCount + totalPrivateGroupsCount;\n            } else if (!totalPublicChannelsCount && totalPrivateGroupsCount) {\n                return totalPrivateGroupsCount;\n            } else if (totalPublicChannelsCount && !totalPrivateGroupsCount) {\n                return totalPublicChannelsCount;\n            }\n            return undefined;\n        };\n        const channelCount = (\n            <StatisticCount\n                id='totalChannels'\n                title={\n                    <FormattedMessage\n                        id='analytics.system.totalChannels'\n                        defaultMessage='Total Channels'\n                    />\n                }\n                icon='fa-globe'\n                count={totalChannelCount()}\n            />\n        );\n\n        const dailyActiveUsers = (\n            <StatisticCount\n                id='dailyActiveUsers'\n                title={\n                    <FormattedMessage\n                        id='analytics.system.dailyActiveUsers'\n                        defaultMessage='Daily Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={this.getStatValue(stats[StatTypes.DAILY_ACTIVE_USERS])}\n            />\n        );\n\n        const monthlyActiveUsers = (\n            <StatisticCount\n                id='monthlyActiveUsers'\n                title={\n                    <FormattedMessage\n                        id='analytics.system.monthlyActiveUsers'\n                        defaultMessage='Monthly Active Users'\n                    />\n                }\n                icon='fa-users'\n                count={this.getStatValue(stats[StatTypes.MONTHLY_ACTIVE_USERS])}\n            />\n        );\n\n        let firstRow;\n        let secondRow;\n        if (isLicensed && skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {sessionCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (isLicensed && !skippedIntensiveQueries) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n\n            secondRow = (\n                <div>\n                    {sessionCount}\n                    {commandCount}\n                    {incomingCount}\n                    {outgoingCount}\n                </div>\n            );\n        } else if (!isLicensed) {\n            firstRow = (\n                <div>\n                    {userCount}\n                    {teamCount}\n                    {channelCount}\n                    {postCount}\n                </div>\n            );\n        }\n\n        const thirdRow = (\n            <div>\n                {dailyActiveUsers}\n                {monthlyActiveUsers}\n            </div>\n        );\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <FormattedAdminHeader\n                    id='analytics.system.title'\n                    defaultMessage='System Statistics'\n                />\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            {firstRow}\n                            {secondRow}\n                            {thirdRow}\n                            {advancedStats}\n                        </div>\n                        {advancedGraphs}\n                        {postTotalGraph}\n                        {botPostTotalGraph}\n                        {activeUserGraph}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Tooltip} from 'react-bootstrap';\n\nimport OverlayTrigger from 'components/overlay_trigger';\n\nimport Constants from 'utils/constants';\n\ntype TableItem = {\n    name: string;\n    tip: string;\n    value: React.ReactNode;\n}\ntype Props = {\n    title: React.ReactNode;\n    data: TableItem[];\n}\n\nexport default class TableChart extends React.PureComponent<Props> {\n    public render() {\n        return (\n            <div className='col-sm-6'>\n                <div className='total-count recent-active-users'>\n                    <div className='title'>\n                        {this.props.title}\n                    </div>\n                    <div className='content'>\n                        <table>\n                            <tbody>\n                                {\n                                    this.props.data.map((item) => {\n                                        const tooltip = (\n                                            <Tooltip id={'tip-table-entry-' + item.name}>\n                                                {item.tip}\n                                            </Tooltip>\n                                        );\n\n                                        return (\n                                            <tr key={'table-entry-' + item.name}>\n                                                <td>\n                                                    <OverlayTrigger\n                                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                                        placement='top'\n                                                        overlay={tooltip}\n                                                    >\n                                                        <time>\n                                                            {item.name}\n                                                        </time>\n                                                    </OverlayTrigger>\n                                                </td>\n                                                <td>\n                                                    {item.value}\n                                                </td>\n                                            </tr>\n                                        );\n                                    })\n                                }\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getTeams} from 'mattermost-redux/actions/teams';\nimport {getProfilesInTeam} from 'mattermost-redux/actions/users';\nimport {getTeamsList} from 'mattermost-redux/selectors/entities/teams';\n\nimport BrowserStore from 'stores/browser_store';\nimport {getCurrentLocale} from 'selectors/i18n';\n\nimport TeamAnalytics from './team_analytics.jsx';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nfunction mapStateToProps(state) {\n    const teams = getTeamsList(state);\n    const teamId = BrowserStore.getGlobalItem(LAST_ANALYTICS_TEAM, null);\n    const initialTeam = state.entities.teams.teams[teamId] || (teams.length > 0 ? teams[0] : null);\n\n    return {\n        initialTeam,\n        locale: getCurrentLocale(state),\n        teams,\n        stats: state.entities.admin.teamAnalytics,\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        actions: bindActionCreators({\n            getTeams,\n            getProfilesInTeam,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamAnalytics);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedDate, FormattedMessage} from 'react-intl';\nimport {General} from 'mattermost-redux/constants';\n\nimport LoadingScreen from 'components/loading_screen';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport * as AdminActions from 'actions/admin_actions';\nimport BrowserStore from 'stores/browser_store';\nimport {StatTypes} from 'utils/constants';\nimport Banner from 'components/admin_console/banner';\nimport LineChart from 'components/analytics/line_chart';\nimport StatisticCount from 'components/analytics/statistic_count';\nimport TableChart from 'components/analytics/table_chart';\n\nimport {getMonthLong} from 'utils/i18n';\n\nimport {formatPostsPerDayData, formatUsersWithPostsPerDayData} from '../format';\n\nconst LAST_ANALYTICS_TEAM = 'last_analytics_team';\n\nexport default class TeamAnalytics extends React.PureComponent {\n    static propTypes = {\n\n        /*\n         * Array of team objects\n         */\n        teams: PropTypes.arrayOf(PropTypes.object).isRequired,\n\n        /*\n         * Initial team to load analytics for\n         */\n        initialTeam: PropTypes.object,\n\n        /**\n         * The locale of the current user\n          */\n        locale: PropTypes.string.isRequired,\n        stats: PropTypes.object.isRequired,\n\n        actions: PropTypes.shape({\n\n            /*\n             * Function to get teams\n             */\n            getTeams: PropTypes.func.isRequired,\n\n            /*\n             * Function to get users in a team\n             */\n            getProfilesInTeam: PropTypes.func.isRequired,\n        }).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            team: props.initialTeam,\n            recentlyActiveUsers: [],\n            newUsers: [],\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.team) {\n            this.getData(this.state.team.id);\n        }\n\n        this.props.actions.getTeams(0, 1000);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.team && prevState.team !== this.state.team) {\n            this.getData(this.state.team.id);\n        }\n    }\n\n    getData = async (id) => {\n        AdminActions.getStandardAnalytics(id);\n        AdminActions.getPostsPerDayAnalytics(id);\n        AdminActions.getBotPostsPerDayAnalytics(id);\n        AdminActions.getUsersPerDayAnalytics(id);\n        const {data: recentlyActiveUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'last_activity_at');\n        const {data: newUsers} = await this.props.actions.getProfilesInTeam(id, 0, General.PROFILE_CHUNK_SIZE, 'create_at');\n\n        this.setState({\n            recentlyActiveUsers,\n            newUsers,\n        });\n    }\n\n    handleTeamChange = (e) => {\n        const teamId = e.target.value;\n\n        let team;\n        this.props.teams.forEach((t) => {\n            if (t.id === teamId) {\n                team = t;\n            }\n        });\n\n        this.setState({\n            team,\n        });\n\n        BrowserStore.setGlobalItem(LAST_ANALYTICS_TEAM, teamId);\n    }\n\n    render() {\n        if (this.props.teams.length === 0 || !this.state.team || !this.props.stats[this.state.team.id]) {\n            return <LoadingScreen/>;\n        }\n\n        if (this.state.team == null) {\n            return (\n                <Banner\n                    description={\n                        <FormattedMessage\n                            id='analytics.team.noTeams'\n                            defaultMessage='This server has no teams for which to view statistics.'\n                        />\n                    }\n                />\n            );\n        }\n\n        const stats = this.props.stats[this.state.team.id];\n        const postCountsDay = formatPostsPerDayData(stats[StatTypes.POST_PER_DAY]);\n        const userCountsWithPostsDay = formatUsersWithPostsPerDayData(stats[StatTypes.USERS_WITH_POSTS_PER_DAY]);\n\n        let banner = (\n            <div className='banner'>\n                <div className='banner__content'>\n                    <FormattedMessage\n                        id='analytics.system.info'\n                        defaultMessage='Use data for only the chosen team. Exclude posts in direct message channels that are not tied to a team.'\n                    />\n                </div>\n            </div>\n        );\n\n        let totalPostsCount;\n        let postTotalGraph;\n        let userActiveGraph;\n        if (stats[StatTypes.TOTAL_POSTS] === -1) {\n            banner = (\n                <div className='banner'>\n                    <div className='banner__content'>\n                        <FormattedMarkdownMessage\n                            id='analytics.system.infoAndSkippedIntensiveQueries'\n                            defaultMessage='Use data for only the chosen team. Exclude posts in direct message channels that are not tied to a team. \\n \\n To maximize performance, some statistics are disabled. You can [re-enable them in config.json](!https://docs.mattermost.com/administration/statistics.html).'\n                        />\n                    </div>\n                </div>\n            );\n        } else {\n            totalPostsCount = (\n                <StatisticCount\n                    title={\n                        <FormattedMessage\n                            id='analytics.team.totalPosts'\n                            defaultMessage='Total Posts'\n                        />\n                    }\n                    icon='fa-comment'\n                    count={stats[StatTypes.TOTAL_POSTS]}\n                />\n            );\n\n            postTotalGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.totalPosts'\n                                defaultMessage='Total Posts'\n                            />\n                        }\n                        id='totalPosts'\n                        data={postCountsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n\n            userActiveGraph = (\n                <div className='row'>\n                    <LineChart\n                        key={this.state.team.id}\n                        title={\n                            <FormattedMessage\n                                id='analytics.team.activeUsers'\n                                defaultMessage='Active Users With Posts'\n                            />\n                        }\n                        id='activeUsersWithPosts'\n                        data={userCountsWithPostsDay}\n                        width={740}\n                        height={225}\n                    />\n                </div>\n            );\n        }\n\n        const recentActiveUsers = formatRecentUsersData(this.state.recentlyActiveUsers, this.props.locale);\n        const newlyCreatedUsers = formatNewUsersData(this.state.newUsers, this.props.locale);\n\n        const teams = this.props.teams.sort((a, b) => {\n            const aName = a.display_name.toUpperCase();\n            const bName = b.display_name.toUpperCase();\n            if (aName === bName) {\n                return 0;\n            }\n            if (aName > bName) {\n                return 1;\n            }\n            return -1;\n        }).map((team) => {\n            return (\n                <option\n                    key={team.id}\n                    value={team.id}\n                >\n                    {team.display_name}\n                </option>\n            );\n        });\n\n        return (\n            <div className='wrapper--fixed team_statistics'>\n                <div className='admin-console__header team-statistics__header-row'>\n                    <div className='team-statistics__header'>\n                        <FormattedMarkdownMessage\n                            id='analytics.team.title'\n                            defaultMessage='Team Statistics for {team}'\n                            values={{\n                                team: this.state.team.display_name,\n                            }}\n                        />\n                    </div>\n                    <div className='team-statistics__team-filter'>\n                        <select\n                            data-testid='teamFilter'\n                            className='form-control team-statistics__team-filter__dropdown'\n                            onChange={this.handleTeamChange}\n                            value={this.state.team.id}\n                        >\n                            {teams}\n                        </select>\n                    </div>\n                </div>\n\n                <div className='admin-console__wrapper'>\n                    <div className='admin-console__content'>\n                        {banner}\n                        <div className='row'>\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.totalUsers'\n                                        defaultMessage='Total Active Users'\n                                    />\n                                }\n                                icon='fa-users'\n                                count={stats[StatTypes.TOTAL_USERS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.publicChannels'\n                                        defaultMessage='Public Channels'\n                                    />\n                                }\n                                icon='fa-globe'\n                                count={stats[StatTypes.TOTAL_PUBLIC_CHANNELS]}\n                            />\n                            <StatisticCount\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.privateGroups'\n                                        defaultMessage='Private Channels'\n                                    />\n                                }\n                                icon='fa-lock'\n                                count={stats[StatTypes.TOTAL_PRIVATE_GROUPS]}\n                            />\n                            {totalPostsCount}\n                        </div>\n                        {postTotalGraph}\n                        {userActiveGraph}\n                        <div className='row'>\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.recentUsers'\n                                        defaultMessage='Recent Active Users'\n                                    />\n                                }\n                                data={recentActiveUsers}\n                            />\n                            <TableChart\n                                title={\n                                    <FormattedMessage\n                                        id='analytics.team.newlyCreated'\n                                        defaultMessage='Newly Created Users'\n                                    />\n                                }\n                                data={newlyCreatedUsers}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport function formatRecentUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.last_activity_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n\nexport function formatNewUsersData(data, locale) {\n    if (data == null) {\n        return [];\n    }\n\n    const formattedData = data.map((user) => {\n        const item = {};\n        item.name = user.username;\n        item.value = (\n            <FormattedDate\n                value={user.create_at}\n                day='numeric'\n                month={getMonthLong(locale)}\n                year='numeric'\n                hour12={true}\n                hour='2-digit'\n                minute='2-digit'\n            />\n        );\n        item.tip = user.email;\n\n        return item;\n    });\n\n    return formattedData;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ChannelSearchOpts, ChannelWithTeamData} from 'mattermost-redux/types/channels';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport Constants from 'utils/constants';\nimport {localizeMessage, compareChannels} from 'utils/utils.jsx';\n\nimport MultiSelect, {Value} from 'components/multiselect/multiselect';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\ntype ChannelWithTeamDataValue = ChannelWithTeamData & Value;\n\ntype Props = {\n    searchTerm: string;\n    onModalDismissed?: () => void;\n    onChannelsSelected?: (channels: ChannelWithTeamData[]) => void;\n    groupID: string;\n    actions: {\n        loadChannels: (page?: number, perPage?: number, notAssociatedToGroup?: string, excludeDefaultChannels?: boolean) => Promise<{data: ChannelWithTeamData[]}>;\n        setModalSearchTerm: (term: string) => ActionResult;\n        searchAllChannels: (term: string, opts?: ChannelSearchOpts) => Promise<{data: ChannelWithTeamData[]}>;\n    };\n}\n\ntype State = {\n    values: ChannelWithTeamDataValue[];\n    show: boolean;\n    search: boolean;\n    loadingChannels: boolean;\n    channels: ChannelWithTeamData[];\n}\n\nconst CHANNELS_PER_PAGE = 50;\n\nexport default class ChannelSelectorModal extends React.PureComponent<Props, State> {\n    searchTimeoutId = 0\n    selectedItemRef = React.createRef<HTMLDivElement>()\n\n    state: State = {\n        values: [],\n        show: true,\n        search: false,\n        loadingChannels: true,\n        channels: [],\n    };\n\n    componentDidMount() {\n        this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, false).then((response) => {\n            this.setState({channels: response.data.sort(compareChannels)});\n            this.setChannelsLoadingState(false);\n        });\n    }\n\n    componentDidUpdate(prevProps: Props) { // eslint-disable-line camelcase\n        if (prevProps.searchTerm !== this.props.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                this.props.actions.loadChannels(0, CHANNELS_PER_PAGE + 1, this.props.groupID, false).then((response) => {\n                    this.setState({channels: response.data.sort(compareChannels)});\n                    this.setChannelsLoadingState(false);\n                });\n            } else {\n                this.searchTimeoutId = window.setTimeout(\n                    async () => {\n                        this.setChannelsLoadingState(true);\n                        const response = await this.props.actions.searchAllChannels(searchTerm, {not_associated_to_group: this.props.groupID});\n                        this.setState({channels: response.data});\n                        this.setChannelsLoadingState(false);\n                    },\n                    Constants.SEARCH_TIMEOUT_MILLISECONDS,\n                );\n            }\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e: any) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        if (this.props.onChannelsSelected) {\n            this.props.onChannelsSelected(this.state.values);\n        }\n        this.handleHide();\n    }\n\n    addValue = (value: ChannelWithTeamDataValue) => {\n        const values = [...this.state.values];\n        if (value?.id && !values.some((v) => v.id === value.id)) {\n            values.push(value);\n        }\n\n        this.setState({values});\n    }\n\n    setChannelsLoadingState = (loadingState: boolean) => {\n        this.setState({\n            loadingChannels: loadingState,\n        });\n    }\n\n    handlePageChange = (page: number, prevPage: number) => {\n        if (page > prevPage) {\n            this.setChannelsLoadingState(true);\n            this.props.actions.loadChannels(page, CHANNELS_PER_PAGE + 1, this.props.groupID, false).then((response) => {\n                const newState = [...this.state.channels];\n                const stateChannelIDs = this.state.channels.map((stateChannel) => stateChannel.id);\n                response.data.forEach((serverChannel) => {\n                    if (!stateChannelIDs.includes(serverChannel.id)) {\n                        newState.push(serverChannel);\n                    }\n                });\n                this.setState({channels: newState.sort(compareChannels)});\n                this.setChannelsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values: ChannelWithTeamDataValue[]) => {\n        this.setState({values});\n    }\n\n    search = (term: string, multiselectComponent: MultiSelect<ChannelWithTeamDataValue>) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption = (\n        option: ChannelWithTeamDataValue,\n        isSelected: boolean,\n        onAdd: (value: ChannelWithTeamDataValue) => void,\n        onMouseMove: (value: ChannelWithTeamDataValue) => void) => {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? this.selectedItemRef : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    {option.type === Constants.PRIVATE_CHANNEL &&\n                        <i className='icon icon-lock-outline'/>}\n                    {option.type === Constants.OPEN_CHANNEL &&\n                        <i className='icon icon-globe'/>}\n                    <span className='channel-name'>{option.display_name}</span>\n                    <span className='team-name'>{'(' + option.team_display_name + ')'}</span>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props: {data: ChannelWithTeamDataValue}) {\n        return props.data.display_name + ' (' + props.data.team_display_name + ')';\n    }\n\n    render() {\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectChannels'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        const options = this.state.channels.map((i): ChannelWithTeamDataValue => ({...i, label: i.display_name, value: i.id}));\n        const values = this.state.values.map((i): ChannelWithTeamDataValue => ({...i, label: i.display_name, value: i.id}));\n\n        return (\n            <Modal\n                dialogClassName={'a11y__modal more-modal more-direct-channels channel-selector-modal'}\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='channelSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='channelSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_channels_to_scheme.title'\n                            defaultMessage='Add Channels to **Channel Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <MultiSelect<ChannelWithTeamDataValue>\n                        key='addChannelsToSchemeKey'\n                        options={options}\n                        optionRenderer={this.renderOption}\n                        selectedItemRef={this.selectedItemRef}\n                        values={values}\n                        valueRenderer={this.renderValue}\n                        perPage={CHANNELS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingChannels}\n                        placeholderText={localizeMessage('multiselect.addChannelsPlaceholder', 'Search and add channels')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, bindActionCreators, Dispatch} from 'redux';\nimport {getAllChannels as loadChannels, searchAllChannels} from 'mattermost-redux/actions/channels';\n\nimport {ChannelWithTeamData, ChannelSearchOpts} from 'mattermost-redux/types/channels';\n\nimport {ActionFunc, ActionResult, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport {GlobalState} from '../../types/store';\n\nimport ChannelSelectorModal from './channel_selector_modal';\n\ntype Actions = {\n    loadChannels: (page?: number, perPage?: number, notAssociatedToGroup?: string, excludeDefaultChannels?: boolean) => Promise<{data: ChannelWithTeamData[]}>;\n    setModalSearchTerm: (term: string) => ActionResult;\n    searchAllChannels: (term: string, opts?: ChannelSearchOpts) => Promise<{data: ChannelWithTeamData[]}>;\n}\n\nfunction mapStateToProps(state: GlobalState) {\n    return {\n        searchTerm: state.views.search.modalSearch,\n    };\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<GenericAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc|GenericAction>, Actions>({\n            loadChannels,\n            setModalSearchTerm,\n            searchAllChannels,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChannelSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport ConfirmModal from 'components/confirm_modal';\n\ntype Props = {\n    show: boolean;\n    onConfirm: (checked: boolean) => void;\n    onCancel: (checked: boolean) => void;\n}\n\nexport default class DiscardChangesModal extends React.PureComponent<Props> {\n    public render(): JSX.Element {\n        const title: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.title'\n                defaultMessage='Discard Changes?'\n            />\n        );\n\n        const message: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.message'\n                defaultMessage='You have unsaved changes, are you sure you want to discard them?'\n            />\n        );\n\n        const buttonClass = 'btn btn-primary';\n        const button: JSX.Element = (\n            <FormattedMessage\n                id='discard_changes_modal.leave'\n                defaultMessage='Yes, Discard'\n            />\n        );\n\n        const modalClass = 'discard-changes-modal';\n\n        const {show, onConfirm, onCancel} = this.props;\n\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                modalClass={modalClass}\n                confirmButtonClass={buttonClass}\n                confirmButtonText={button}\n                onConfirm={onConfirm}\n                onCancel={onCancel}\n            />\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {ActionCreatorsMapObject, AnyAction, bindActionCreators, Dispatch} from 'redux';\nimport {getTeams as loadTeams, searchTeams} from 'mattermost-redux/actions/teams';\nimport {getTeams} from 'mattermost-redux/selectors/entities/teams';\n\nimport {ActionFunc, ActionResult, GenericAction} from 'mattermost-redux/types/actions';\n\nimport {setModalSearchTerm} from 'actions/views/search';\n\nimport {GlobalState} from 'types/store';\n\nimport TeamSelectorModal from './team_selector_modal';\n\nfunction mapStateToProps(state: GlobalState) {\n    const searchTerm = state.views.search.modalSearch;\n\n    const teams = Object.values(getTeams(state) || {}).filter((team) => {\n        return team.display_name.toLowerCase().startsWith(searchTerm.toLowerCase()) ||\n               team.description.toLowerCase().startsWith(searchTerm.toLowerCase());\n    });\n\n    return {\n        searchTerm,\n        teams,\n    };\n}\n\ntype Actions = {\n    loadTeams: (page?: number, perPage?: number, includeTotalCount?: boolean) => Promise<ActionResult>;\n    searchTeams: (searchTerm: string) => void;\n    setModalSearchTerm: (searchTerm: string) => GenericAction;\n}\n\nfunction mapDispatchToProps(dispatch: Dispatch<AnyAction>) {\n    return {\n        actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc | GenericAction>, Actions>({\n            loadTeams,\n            setModalSearchTerm,\n            searchTeams,\n        }, dispatch),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSelectorModal);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Modal} from 'react-bootstrap';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nimport {Team} from 'mattermost-redux/types/teams';\n\nimport Constants, {ModalIdentifiers} from 'utils/constants';\nimport {localizeMessage} from 'utils/utils.jsx';\n\nimport MultiSelect, {Value} from 'components/multiselect/multiselect';\nimport ConfirmModal from 'components/confirm_modal';\nimport TeamIcon from 'components/widgets/team_icon/team_icon';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\nimport {imageURLForTeam} from 'utils/utils';\n\nconst TEAMS_PER_PAGE = 50;\n\ntype TeamValue = (Team & Value);\n\nexport type Props = {\n    currentSchemeId?: string;\n    alreadySelected?: string[];\n    searchTerm: string;\n    teams: Team[];\n    onModalDismissed?: () => void;\n    onTeamsSelected?: (a: Team[]) => void;\n    modalID?: string;\n    actions: {\n        loadTeams: (page?: number, perPage?: number, includeTotalCount?: boolean) => Promise<ActionResult>;\n        setModalSearchTerm: (searchTerm: string) => void;\n        searchTeams: (searchTerm: string) => void;\n    };\n    data?: any;\n};\n\ntype State = {\n    values: TeamValue[];\n    show: boolean;\n    search: boolean;\n    loadingTeams: boolean;\n    confirmAddModal: boolean;\n    confirmAddTeam: any;\n};\n\nexport default class TeamSelectorModal extends React.PureComponent<Props, State> {\n    private searchTimeoutId?: number;\n    private selectedItemRef?: React.RefObject<HTMLDivElement> | undefined;\n    private currentSchemeId?: string;\n\n    constructor(props: Props) {\n        super(props);\n\n        this.searchTimeoutId = 0;\n\n        this.state = {\n            values: [],\n            show: true,\n            search: false,\n            loadingTeams: true,\n            confirmAddModal: false,\n            confirmAddTeam: null,\n        };\n\n        this.selectedItemRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.props.actions.loadTeams(0, TEAMS_PER_PAGE + 1).then(() => {\n            this.setTeamsLoadingState(false);\n        });\n    }\n\n    componentDidUpdate(prevProps: Props) {\n        if (this.props.searchTerm !== prevProps.searchTerm) {\n            clearTimeout(this.searchTimeoutId);\n\n            const searchTerm = this.props.searchTerm;\n            if (searchTerm === '') {\n                return;\n            }\n\n            this.searchTimeoutId = window.setTimeout(\n                async () => {\n                    this.setTeamsLoadingState(true);\n                    await this.props.actions.searchTeams(searchTerm);\n                    this.setTeamsLoadingState(false);\n                },\n                Constants.SEARCH_TIMEOUT_MILLISECONDS,\n            );\n        }\n    }\n\n    handleHide = () => {\n        this.props.actions.setModalSearchTerm('');\n        this.setState({show: false});\n    }\n\n    handleExit = () => {\n        if (this.props.onModalDismissed) {\n            this.props.onModalDismissed();\n        }\n    }\n\n    handleSubmit = (e: Event | TeamValue[] | undefined) => {\n        if (e) {\n            (e as Event).preventDefault();\n        }\n\n        if (this.state.values.length === 0) {\n            return;\n        }\n\n        this.props.onTeamsSelected?.(this.state.values);\n        this.handleHide();\n    }\n\n    addValue = (value: TeamValue, confirmed = false) => {\n        if (this.props.modalID === ModalIdentifiers.ADD_TEAMS_TO_SCHEME && value.scheme_id !== null && value.scheme_id !== '' && !confirmed) {\n            this.setState({confirmAddModal: true, confirmAddTeam: value});\n            return;\n        }\n        const values = Object.assign([], this.state.values);\n        const teamIds = values.map((v: Team) => v.id);\n        if (value && value.id && teamIds.indexOf(value.id) === -1) {\n            values.push(value);\n        }\n\n        this.setState({values, confirmAddModal: false, confirmAddTeam: null});\n    }\n\n    setTeamsLoadingState = (loadingState: boolean) => {\n        this.setState({\n            loadingTeams: loadingState,\n        });\n    }\n\n    handlePageChange = (page: number, prevPage: number) => {\n        if (page > prevPage) {\n            this.setTeamsLoadingState(true);\n            this.props.actions.loadTeams(page, TEAMS_PER_PAGE + 1).then(() => {\n                this.setTeamsLoadingState(false);\n            });\n        }\n    }\n\n    handleDelete = (values: TeamValue[]) => {\n        this.setState({values});\n    }\n\n    search = (term: string, multiselectComponent: { state: { page: number }; setState: (arg0: { page: number }) => void }) => {\n        if (multiselectComponent.state.page !== 0) {\n            multiselectComponent.setState({page: 0});\n        }\n        this.props.actions.setModalSearchTerm(term);\n    }\n\n    renderOption = (option: TeamValue, isSelected: boolean, onAdd: (value: TeamValue) => void, onMouseMove: (value: TeamValue) => void) => {\n        let rowSelected = '';\n        if (isSelected) {\n            rowSelected = 'more-modal__row--selected';\n        }\n\n        return (\n            <div\n                key={option.id}\n                ref={isSelected ? this.selectedItemRef : option.id}\n                className={'more-modal__row clickable ' + rowSelected}\n                onClick={() => onAdd(option)}\n                onMouseMove={() => onMouseMove(option)}\n            >\n                <div\n                    className='more-modal__details'\n                >\n                    <div className='team-info-block'>\n                        <TeamIcon\n                            name={option.display_name}\n                            url={imageURLForTeam(option)}\n                        />\n                        <div className='team-data'>\n                            <div className='title'>{option.display_name}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className='more-modal__actions'>\n                    <div className='more-modal__actions--round'>\n                        <i className='fa fa-plus'/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderValue(props: { data: TeamValue }) {\n        return props.data.display_name;\n    }\n\n    renderConfirmModal(show: boolean, team: TeamValue) {\n        const title = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.title'\n                defaultMessage='Team Override Scheme Change?'\n            />\n        );\n        const message = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.message'\n                defaultMessage='This team is already selected in another team scheme, are you sure you want to move it to this team scheme?'\n            />\n        );\n        const confirmButtonText = (\n            <FormattedMessage\n                id='add_teams_to_scheme.confirmation.accept'\n                defaultMessage='Yes, Move Team'\n            />\n        );\n        return (\n            <ConfirmModal\n                show={show}\n                title={title}\n                message={message}\n                confirmButtonText={confirmButtonText}\n                onCancel={() => this.setState({confirmAddModal: false, confirmAddTeam: null})}\n                onConfirm={() => this.addValue(team, true)}\n            />\n        );\n    }\n\n    render() {\n        const confirmModal = this.renderConfirmModal(this.state.confirmAddModal, this.state.confirmAddTeam);\n        const numRemainingText = (\n            <FormattedMessage\n                id='multiselect.selectTeams'\n                defaultMessage='Use ↑↓ to browse, ↵ to select.'\n            />\n        );\n\n        const buttonSubmitText = localizeMessage('multiselect.add', 'Add');\n\n        let teams = [] as Team[];\n        if (this.props.teams) {\n            teams = this.props.teams.filter((team) => team.delete_at === 0);\n            teams = teams.filter((team) => team.scheme_id !== this.currentSchemeId);\n            teams = teams.filter((team) => this.props.alreadySelected?.indexOf(team.id) === -1);\n            teams.sort((a, b) => {\n                const aName = a.display_name.toUpperCase();\n                const bName = b.display_name.toUpperCase();\n                if (aName === bName) {\n                    return 0;\n                }\n                if (aName > bName) {\n                    return 1;\n                }\n                return -1;\n            });\n        }\n\n        const teamsValues = teams.map((team) => {\n            return {label: team.name, value: team.id, ...team};\n        });\n\n        return (\n            <Modal\n                dialogClassName='a11y__modal more-modal more-direct-channels team-selector-modal'\n                show={this.state.show}\n                onHide={this.handleHide}\n                onExited={this.handleExit}\n                role='dialog'\n                aria-labelledby='teamSelectorModalLabel'\n            >\n                <Modal.Header closeButton={true}>\n                    <Modal.Title\n                        componentClass='h1'\n                        id='teamSelectorModalLabel'\n                    >\n                        <FormattedMarkdownMessage\n                            id='add_teams_to_scheme.title'\n                            defaultMessage='Add Teams to **Team Selection** List'\n                        />\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {confirmModal}\n                    <MultiSelect<TeamValue>\n                        key='addTeamsToSchemeKey'\n                        options={teamsValues}\n                        optionRenderer={this.renderOption}\n                        selectedItemRef={this.selectedItemRef}\n                        values={this.state.values}\n                        valueRenderer={this.renderValue}\n                        perPage={TEAMS_PER_PAGE}\n                        handlePageChange={this.handlePageChange}\n                        handleInput={this.search}\n                        handleDelete={this.handleDelete}\n                        handleAdd={this.addValue}\n                        handleSubmit={this.handleSubmit}\n                        numRemainingText={numRemainingText}\n                        buttonSubmitText={buttonSubmitText}\n                        saving={false}\n                        loading={this.state.loadingTeams}\n                        placeholderText={localizeMessage('multiselect.addTeamsPlaceholder', 'Search and add teams')}\n                    />\n                </Modal.Body>\n            </Modal>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    onToggle: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    toggled?: boolean;\n    disabled?: boolean;\n    onText?: React.ReactNode;\n    offText?: React.ReactNode;\n    id?: string;\n}\n\nconst Toggle: React.FC<Props> = (props: Props) => {\n    const {onToggle, toggled, disabled, onText, offText, id} = props;\n    return (\n        <button\n            data-testid={`${id}-button`}\n            type='button'\n            onClick={onToggle}\n            className={`btn btn-lg btn-toggle ${toggled && 'active'} ${disabled && 'disabled'}`}\n            aria-pressed={toggled ? 'true' : 'false'}\n            disabled={disabled}\n        >\n            <div className='handle'/>\n            {text(toggled, onText, offText)}\n        </button>\n    );\n};\n\nfunction text(toggled?: boolean, onText?: React.ReactNode, offText?: React.ReactNode): React.ReactNode | null {\n    if ((toggled && !onText) || (!toggled && !offText)) {\n        return null;\n    }\n    return (<div className={`bg-text ${toggled ? 'on' : 'off'}`}>{toggled ? onText : offText}</div>);\n}\n\nexport default Toggle;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {connect} from 'react-redux';\nimport {getStatusForUserId} from 'mattermost-redux/selectors/entities/users';\nimport {UserProfile} from 'mattermost-redux/types/users';\n\nimport {GlobalState} from 'types/store';\n\nimport UserListRow from './user_list_row_with_error';\n\ntype OwnProps = {\n    user: UserProfile;\n};\n\nfunction mapStateToProps(state: GlobalState, ownProps: OwnProps) {\n    const user = ownProps.user;\n    return {\n        status: getStatusForUserId(state, user.id),\n    };\n}\n\nexport default connect(mapStateToProps)(UserListRow);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {Link} from 'react-router-dom';\nimport {Client4} from 'mattermost-redux/client';\n\nimport {UserProfile} from 'mattermost-redux/types/users';\nimport {Channel, ChannelMembership} from 'mattermost-redux/types/channels';\nimport {ConnectedComponent} from 'react-redux';\nimport {ServerError} from 'mattermost-redux/types/errors';\n\nimport * as Utils from 'utils/utils.jsx';\nimport ProfilePicture from 'components/profile_picture';\nimport BotBadge from 'components/widgets/badges/bot_badge';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message.jsx';\n\ntype Props = {\n    user: UserProfile;\n    status?: string;\n    extraInfo?: Array<string | JSX.Element>;\n    actions?: Array<ConnectedComponent<any, any>>;\n    actionProps?: {\n        mfaEnabled: boolean;\n        enableUserAccessTokens: boolean;\n        experimentalEnableAuthenticationTransfer: boolean;\n        doPasswordReset: (user: UserProfile) => void;\n        doEmailReset: (user: UserProfile) => void;\n        doManageTeams: (user: UserProfile) => void;\n        doManageRoles: (user: UserProfile) => void;\n        doManageTokens: (user: UserProfile) => void;\n        isDisabled?: boolean;\n    };\n    actionUserProps?: {\n        [userId: string]: {\n            channel: Channel;\n            teamMember: any;\n            channelMember: ChannelMembership;\n        };\n    };\n    index?: number;\n    userCount?: number;\n    totalUsers?: number;\n    isDisabled?: boolean;\n}\ntype State = {\n    error?: ServerError;\n}\n\nexport default class UserListRowWithError extends React.PureComponent<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {};\n    }\n\n    onError = (errorObj: ServerError) => {\n        this.setState({\n            error: errorObj,\n        });\n    }\n\n    render(): JSX.Element {\n        let buttons = null;\n        if (this.props.actions) {\n            buttons = this.props.actions.map((Action, index) => {\n                return (\n                    <Action\n                        key={index.toString()}\n                        user={this.props.user}\n                        index={this.props.index}\n                        totalUsers={this.props.totalUsers}\n                        {...this.props.actionProps}\n                        {...this.props.actionUserProps}\n                        onError={this.onError}\n                    />\n                );\n            });\n        }\n\n        // QUICK HACK, NEEDS A PROP FOR TOGGLING STATUS\n        let email: React.ReactNode = this.props.user.email;\n        let emailStyle = 'more-modal__description';\n        let status;\n        if (this.props.user.is_bot) {\n            email = null;\n        } else if (this.props.extraInfo && this.props.extraInfo.length > 0) {\n            email = (\n                <FormattedMarkdownMessage\n                    id='admin.user_item.emailTitle'\n                    defaultMessage='**Email:** {email}'\n                    values={{\n                        email: this.props.user.email,\n                    }}\n                />\n            );\n            emailStyle = '';\n        } else {\n            status = this.props.status;\n        }\n\n        if (this.props.user.is_bot) {\n            status = null;\n        }\n\n        let userCountID = null;\n        let userCountEmail = null;\n        if (this.props.userCount && this.props.userCount >= 0) {\n            userCountID = Utils.createSafeId('userListRowName' + this.props.userCount);\n            userCountEmail = Utils.createSafeId('userListRowEmail' + this.props.userCount);\n        }\n\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='has-error'>\n                    <label className='has-error control-label'>{this.state.error.message}</label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                data-testid='userListRow'\n                key={this.props.user.id}\n                className='more-modal__row'\n            >\n                <ProfilePicture\n                    src={Client4.getProfilePictureUrl(this.props.user.id, this.props.user.last_picture_update)}\n                    status={status || undefined}\n                    size='md'\n                />\n                <div className='more-modal__right'>\n                    <div className='more-modal__top'>\n                        <div className='more-modal__details'>\n                            <div\n                                id={userCountID || undefined}\n                                className='more-modal__name'\n                            >\n                                <Link to={'/admin_console/user_management/user/' + this.props.user.id}>\n                                    {Utils.displayEntireNameForUser(this.props.user)}\n                                </Link>\n                                <BotBadge\n                                    className='badge-admin'\n                                    show={Boolean(this.props.user.is_bot)}\n                                />\n                            </div>\n                            <div\n                                id={userCountEmail || undefined}\n                                className={emailStyle}\n                            >\n                                {email}\n                            </div>\n                            {this.props.extraInfo}\n                        </div>\n                        <div\n                            className='more-modal__actions'\n                        >\n                            {buttons}\n                        </div>\n                    </div>\n                    <div\n                        className='more-modal__bottom'\n                    >\n                        {error}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\ntype Props = {\n    children: JSX.Element[] | JSX.Element | string;\n};\n\nexport default class AdminHeader extends React.PureComponent<Props> {\n    public render() {\n        return (\n            <div className={'admin-console__header'}>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--6-2!./admin_panel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport './admin_panel.scss';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\ntype Props = {\n    id?: string;\n    className?: string;\n    onHeaderClick?: React.EventHandler<React.MouseEvent>;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    subtitleValues?: any;\n    button?: React.ReactNode;\n    children?: React.ReactNode;\n};\n\nconst AdminPanel: React.FC<Props> = (props: Props) => (\n    <div\n        className={'AdminPanel clearfix ' + props.className}\n        id={props.id}\n    >\n        <div\n            className='header'\n            onClick={props.onHeaderClick}\n        >\n            <div>\n                <h3>\n                    <FormattedMessage\n                        id={props.titleId}\n                        defaultMessage={props.titleDefault}\n                    />\n                </h3>\n                <div className='mt-2'>\n                    <FormattedMarkdownMessage\n                        id={props.subtitleId}\n                        defaultMessage={props.subtitleDefault}\n                        values={props.subtitleValues}\n                    />\n                </div>\n            </div>\n            {props.button &&\n                <div className='button'>\n                    {props.button}\n                </div>\n            }\n        </div>\n        {props.children}\n    </div>\n);\n\nAdminPanel.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanel;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport AccordionToggleIcon from 'components/widgets/icons/accordion_toggle_icon.jsx';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    open: boolean;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onToggle?: React.EventHandler<React.MouseEvent>;\n    isDisabled?: boolean;\n};\n\nconst AdminPanelTogglable: React.FC<Props> = (props: Props) => {\n    return (\n        <AdminPanel\n            className={'AdminPanelTogglable ' + props.className + (props.open ? '' : ' closed')}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            onHeaderClick={props.onToggle}\n            button={<AccordionToggleIcon/>}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelTogglable.defaultProps = {\n    className: '',\n    open: true,\n};\n\nexport default AdminPanelTogglable;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport classNames from 'classnames';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    onButtonClick?: React.EventHandler<React.MouseEvent>;\n    disabled?: boolean;\n    buttonTextId?: string;\n    buttonTextDefault?: string;\n}\n\nconst AdminPanelWithButton: React.FC<Props> = (props: Props) => {\n    let button;\n    if (props.onButtonClick && props.buttonTextId) {\n        const buttonId = (props.buttonTextDefault || '').split(' ').join('-').toLowerCase();\n        button = (\n            <a\n                className={classNames('btn', 'btn-primary', {disabled: props.disabled})}\n                onClick={props.disabled ? (e) => e.preventDefault() : props.onButtonClick}\n                data-testid={buttonId}\n            >\n                <FormattedMessage\n                    id={props.buttonTextId}\n                    defaultMessage={props.buttonTextDefault}\n                />\n            </a>\n        );\n    }\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithButton ' + props.className}\n            id={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithButton.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithButton;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport AdminPanel from './admin_panel';\n\ntype Props = {\n    children?: React.ReactNode;\n    className: string;\n    id?: string;\n    titleId: string;\n    titleDefault: string;\n    subtitleId: string;\n    subtitleDefault: string;\n    url: string;\n    disabled?: boolean;\n    linkTextId: string;\n    linkTextDefault: string;\n}\n\nconst AdminPanelWithLink = (props: Props) => {\n    const button = (\n        <Link\n            data-testid={`${props.id}-link`}\n            className={classNames(['btn', 'btn-primary', {disabled: props.disabled}])}\n            to={props.url}\n            onClick={props.disabled ? (e) => e.preventDefault() : () => null}\n        >\n            <FormattedMessage\n                id={props.linkTextId}\n                defaultMessage={props.linkTextDefault}\n            />\n        </Link>\n    );\n\n    return (\n        <AdminPanel\n            className={'AdminPanelWithLink ' + props.className}\n            id={props.id}\n            data-testid={props.id}\n            titleId={props.titleId}\n            titleDefault={props.titleDefault}\n            subtitleId={props.subtitleId}\n            subtitleDefault={props.subtitleDefault}\n            button={button}\n        >\n            {props.children}\n        </AdminPanel>\n    );\n};\n\nAdminPanelWithLink.defaultProps = {\n    className: '',\n};\n\nexport default AdminPanelWithLink;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport FormattedMarkdownMessage from 'components/formatted_markdown_message';\n\nimport AdminHeader from './admin_header';\n\ntype Props = {\n    id: string;\n    defaultMessage: string;\n    values?: any;\n};\n\nconst FormattedAdminHeader: React.FC<Props> = (props: Props) => (\n    <AdminHeader>\n        <FormattedMarkdownMessage\n            id={props.id}\n            defaultMessage={props.defaultMessage}\n            values={props.values}\n        />\n    </AdminHeader>\n);\n\nFormattedAdminHeader.defaultProps = {\n    values: {},\n};\n\nexport default FormattedAdminHeader;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class AccordionToggleIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='30px'\n                    height='30px'\n                    viewBox='0 0 30 30'\n                >\n                    <g\n                        id='Developer-Export'\n                        stroke='none'\n                        strokeWidth='1'\n                        fill='none'\n                        fillRule='evenodd'\n                    >\n                        <g\n                            transform='translate(-995.000000, -1372.000000)'\n                            id='All-Team-Members'\n                        >\n                            <g transform='translate(245.000000, 698.000000)'>\n                                <g\n                                    id='Team-Administrators'\n                                    transform='translate(0.000000, 651.000000)'\n                                >\n                                    <g id='accordion-header'>\n                                        <g\n                                            id='accordion---expanded'\n                                            transform='translate(750.000000, 23.000000)'\n                                        >\n                                            <path\n                                                d='M23.1484532,13.3124932 C23.3437659,13.1171805 23.3437659,12.7968676 23.1484532,12.6015549 L21.8515766,11.3124908 C21.6562639,11.1171781 21.3437635,11.1171781 21.1484508,11.3124908 L15.0000083,17.4609333 L8.8515659,11.3124908 C8.65625317,11.1171781 8.34375279,11.1171781 8.14844006,11.3124908 L6.85156352,12.6015549 C6.65625078,12.7968676 6.65625078,13.1171805 6.85156352,13.3124932 L14.6484454,21.1015626 C14.8437582,21.2968754 15.1562585,21.2968754 15.3515713,21.1015626 L23.1484532,13.3124932 Z'\n                                                id=''\n                                                fill='#979797'\n                                            />\n                                            <circle\n                                                id='Oval-2'\n                                                stroke='#989898'\n                                                strokeWidth='2'\n                                                cx='15'\n                                                cy='15'\n                                                r='14'\n                                            />\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default function AtIcon(props) {\n    return (\n        <span {...props}>\n            <svg\n                width='100%'\n                height='100%'\n                viewBox='0 0 24 24'\n            >\n                <path\n                    fill='inherit'\n                    d='M12,15C12.81,15 13.5,14.7 14.11,14.11C14.7,13.5 15,12.81 15,12C15,11.19 14.7,10.5 14.11,9.89C13.5,9.3 12.81,9 12,9C11.19,9 10.5,9.3 9.89,9.89C9.3,10.5 9,11.19 9,12C9,12.81 9.3,13.5 9.89,14.11C10.5,14.7 11.19,15 12,15M12,2C14.75,2 17.1,3 19.05,4.95C21,6.9 22,9.25 22,12V13.45C22,14.45 21.65,15.3 21,16C20.3,16.67 19.5,17 18.5,17C17.3,17 16.31,16.5 15.56,15.5C14.56,16.5 13.38,17 12,17C10.63,17 9.45,16.5 8.46,15.54C7.5,14.55 7,13.38 7,12C7,10.63 7.5,9.45 8.46,8.46C9.45,7.5 10.63,7 12,7C13.38,7 14.55,7.5 15.54,8.46C16.5,9.45 17,10.63 17,12V13.45C17,13.86 17.16,14.22 17.46,14.53C17.76,14.84 18.11,15 18.5,15C18.92,15 19.27,14.84 19.57,14.53C19.87,14.22 20,13.86 20,13.45V12C20,9.81 19.23,7.93 17.65,6.35C16.07,4.77 14.19,4 12,4C9.81,4 7.93,4.77 6.35,6.35C4.77,7.93 4,9.81 4,12C4,14.19 4.77,16.07 6.35,17.65C7.93,19.23 9.81,20 12,20H17V22H12C9.25,22 6.9,21 4.95,19.05C3,17.1 2,14.75 2,12C2,9.25 3,6.9 4.95,4.95C6.9,3 9.25,2 12,2Z'\n                />\n            </svg>\n        </span>\n    );\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxCheckedIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-285.000000, -933.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---Public-Channels'\n                                        transform='translate(12.000000, 35.000000)'\n                                    >\n                                        <g\n                                            id='Stacked-Group'\n                                            transform='translate(0.000000, 5.000000)'\n                                        >\n                                            <g id='data-table/1st/row-checkbox-label-base'>\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 L5,3 C3.9,3 3,3.9 3,5 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,5 C21,3.9 20.1,3 19,3 L19,3 Z M10,17 L5,12.1923077 L6.4,10.8461538 L10,14.3076923 L17.6,7 L19,8.34615385 L10,17 L10,17 Z'\n                                                        id='checkbox---checked'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class CheckboxPartialIcon extends React.PureComponent {\n    render() {\n        return (\n            <svg\n                width='18px'\n                height='18px'\n                viewBox='0 0 18 18'\n            >\n                <g\n                    id='Developer-Export'\n                    stroke='none'\n                    strokeWidth='1'\n                    fillRule='evenodd'\n                >\n                    <g\n                        transform='translate(-298.000000, -1273.000000)'\n                        id='All-Team-Members'\n                    >\n                        <g transform='translate(245.000000, 698.000000)'>\n                            <g\n                                id='Channel-Administrators'\n                                transform='translate(0.000000, 106.000000)'\n                            >\n                                <g\n                                    id='data-table/column-1'\n                                    transform='translate(11.000000, 86.000000)'\n                                >\n                                    <g\n                                        id='row-checkbox---@all-@channel-Mentions'\n                                        transform='translate(0.000000, 375.000000)'\n                                    >\n                                        <g id='Stacked-Group'>\n                                            <g\n                                                id='data-table/1st/row-checkbox-label-base'\n                                                transform='translate(25.000000, 5.000000)'\n                                            >\n                                                <g\n                                                    id='check-on-copy-11'\n                                                    transform='translate(14.000000, 0.000000)'\n                                                >\n                                                    <path\n                                                        d='M19,3 C20.1,3 21,3.9 21,5 L21,19 C21,20.1 20.1,21 19,21 L5,21 C3.9,21 3,20.1 3,19 L3,5 C3,3.9 3.9,3 5,3 L19,3 Z M7,11 L7,13 L17,13 L17,11 L7,11 Z'\n                                                        id='checkbox---partial'\n                                                    />\n                                                </g>\n                                            </g>\n                                        </g>\n                                    </g>\n                                </g>\n                            </g>\n                        </g>\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function EllipsisHorizontalIcon(props) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='24px'\n                height='24px'\n                viewBox='0 0 24 24'\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.elipsisHorizontalIcon', defaultMessage: 'Ellipsis Horizontal Icon'})}\n            >\n                <path d='M16,12A2,2 0 0,1 18,10A2,2 0 0,1 20,12A2,2 0 0,1 18,14A2,2 0 0,1 16,12M10,12A2,2 0 0,1 12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12M4,12A2,2 0 0,1 6,10A2,2 0 0,1 8,12A2,2 0 0,1 6,14A2,2 0 0,1 4,12Z'/>\n            </svg>\n        </span>\n    );\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class EmailIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function ReloadIcon() {\n    const {formatMessage} = useIntl();\n    return (\n        <i\n            className='fa fa-refresh'\n            title={formatMessage({id: 'generic_icons.reload', defaultMessage: 'Reload Icon'})}\n        />\n    );\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nimport LocalizedIcon from 'components/localized_icon';\nimport {t} from 'utils/i18n';\n\nexport default function SearchIcon() {\n    return (\n        <LocalizedIcon\n            className='fa fa-search'\n            title={{id: t('generic_icons.search'), defaultMessage: 'Search Icon'}}\n        />\n    );\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\n\nexport default class ShieldOutlineIcon extends React.PureComponent {\n    render() {\n        return (\n            <span {...this.props}>\n                <svg\n                    width='100%'\n                    height='100%'\n                    viewBox='0 0 24 24'\n                >\n                    <path\n                        fill='inherit'\n                        d='M21,11C21,16.55 17.16,21.74 12,23C6.84,21.74 3,16.55 3,11V5L12,1L21,5V11M12,21C15.75,20 19,15.54 19,11.22V6.3L12,3.18L5,6.3V11.22C5,15.54 8.25,20 12,21Z'\n                    />\n                </svg>\n            </span>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {useIntl} from 'react-intl';\n\nexport default function UnarchiveIcon(props) {\n    const {formatMessage} = useIntl();\n    return (\n        <span {...props}>\n            <svg\n                width='16px'\n                height='16px'\n                viewBox='0 0 16 16'\n                role='img'\n                aria-label={formatMessage({id: 'generic_icons.archive', defaultMessage: 'Archive Icon'})}\n            >\n                <path d='M13.994 14.75H2.006V6.50605H3.5V13.256H12.5V6.50605H13.994V14.75ZM1.25 1.25005H14.75V5.75005H1.25V1.25005ZM2.744 2.74405V4.25605H13.256V2.74405H2.744ZM6.884 11.744V9.49405H4.994L8 6.50605L11.006 9.49405H9.134V11.744H6.884Z'/>\n            </svg>\n        </span>\n    );\n}\n","export default __webpack_public_path__ + \"files/015fd510f952c3793da7a96f937721f1.png\";","export default __webpack_public_path__ + \"files/477703af6850a9efce321e9dcd2c2b74.png\";","export default __webpack_public_path__ + \"files/b91f74470e4a2fd79b298fcd1950edb9.svg\";","export default __webpack_public_path__ + \"files/b7af82608dd270dcf670e1fdf7890d0a.svg\";","export default __webpack_public_path__ + \"files/e373035e8d2ea1217d621e8ed0e47c35.svg\";","export default __webpack_public_path__ + \"files/e68c2e08344e8bfd792fba89b4dfcc0f.svg\";","export default __webpack_public_path__ + \"files/b080268f08da4093c10332e3f3ab959e.svg\";","export default __webpack_public_path__ + \"files/249d03d271a38c75d7ce88e42d901fea.png\";","export default __webpack_public_path__ + \"files/71850e51ea04421286aaeb160a492fc1.png\";","export default __webpack_public_path__ + \"files/cd908122393e371d1c40cb2d68d5ddb2.svg\";","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".about-modal.cloud {\\n  position: absolute;\\n  margin: auto;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%) !important; }\\n  .about-modal.cloud .about-modal__hash {\\n    padding-bottom: 20px; }\\n  .about-modal.cloud .modal-content {\\n    overflow: hidden;\\n    border: 1px solid rgba(var(--center-channel-color-rgb), 0.16);\\n    box-shadow: 0px 20px 32px rgba(0, 0, 0, 0.12);\\n    border-radius: 8px; }\\n    .about-modal.cloud .modal-content .modal-header {\\n      width: 600px;\\n      height: 66px; }\\n    .about-modal.cloud .modal-content .modal-body {\\n      overflow: hidden;\\n      padding: 0px 50px;\\n      width: 600px; }\\n      .about-modal.cloud .modal-content .modal-body .about-modal__logo {\\n        padding-left: 0;\\n        padding-right: 32px; }\\n        .about-modal.cloud .modal-content .modal-body .about-modal__logo svg {\\n          height: 104px;\\n          width: 104px; }\\n      .about-modal.cloud .modal-content .modal-body .about-modal__title {\\n        margin: 0;\\n        font-weight: 600;\\n        font-size: 24px;\\n        line-height: 32px; }\\n      .about-modal.cloud .modal-content .modal-body .about-modal__content {\\n        padding-top: 46px; }\\n      .about-modal.cloud .modal-content .modal-body .subtitle {\\n        width: 294px;\\n        height: 24px;\\n        left: 0px;\\n        top: 32px;\\n        font-size: 16px;\\n        line-height: 24px;\\n        color: var(--center-channel-color);\\n        margin-bottom: 16px; }\\n      .about-modal.cloud .modal-content .modal-body .description, .about-modal.cloud .modal-content .modal-body .form-group {\\n        width: 342px;\\n        height: 20px;\\n        left: 0px;\\n        top: 0px;\\n        font-size: 14px;\\n        line-height: 20px;\\n        color: rgba(var(--center-channel-color-rgb), 0.64);\\n        align-self: center;\\n        margin: 0px 0px; }\\n      .about-modal.cloud .modal-content .modal-body .about-footer {\\n        margin-top: 16px;\\n        font-size: 12px;\\n        line-height: 16px;\\n        color: rgba(var(--center-channel-color-rgb), 0.64); }\\n        .about-modal.cloud .modal-content .modal-body .about-footer .copy-right {\\n          margin-top: 12px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".AdminButtonOutline.btn.btn-primary {\\n  background-color: transparent !important;\\n  border: solid 1px #165DBA !important;\\n  color: #165DBA;\\n  margin-right: 8px; }\\n  .AdminButtonOutline.btn.btn-primary:hover, .AdminButtonOutline.btn.btn-primary:active, .AdminButtonOutline.btn.btn-primary:focus, .AdminButtonOutline.btn.btn-primary:active:focus {\\n    color: #165DBA; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".AdminUserCard {\\n  border-radius: 2px;\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  margin: 2em 0 1em;\\n  padding: 0; }\\n\\n.AdminUserCard__header {\\n  align-items: flex-start;\\n  background-color: #295EB9;\\n  display: flex;\\n  flex-direction: row;\\n  padding: 30px 20px 12px 30px;\\n  height: 92px; }\\n\\n.AdminUserCard__header .Avatar.Avatar-xxl {\\n  border: solid 2px #fff; }\\n\\n.AdminUserCard__body {\\n  padding: 12px 20px 20px 178px;\\n  background-color: #fff; }\\n\\n.AdminUserCard__footer {\\n  padding: 20px;\\n  background-color: #fff;\\n  border-top: solid 1px rgba(0, 0, 0, 0.2); }\\n\\n.AdminUserCard__user-info {\\n  color: #fff;\\n  font-size: 20px;\\n  font-weight: normal;\\n  margin-left: 20px;\\n  padding: 0;\\n  align-self: flex-end; }\\n\\n.AdminUserCard__user-nickname {\\n  opacity: .5; }\\n\\n.AdminUserCard__user-id {\\n  color: #fff;\\n  font-size: 12px;\\n  margin-left: auto;\\n  align-self: flex-end;\\n  opacity: .5; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".BillingHistory__card {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  color: var(--sys-center-channel-color);\\n  width: 100%;\\n  height: '463px'; }\\n\\n.BillingHistory__cardHeader {\\n  padding: 28px 32px 24px 32px;\\n  border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  display: flex;\\n  align-items: center; }\\n\\n.BillingHistory__cardHeaderText-top {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.BillingHistory__cardHeaderText-bottom {\\n  font-size: 14px;\\n  line-height: 20px; }\\n\\n.BillingHistory__cardBody {\\n  padding: 20px; }\\n\\n.BillingHistory__noHistory {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center; }\\n\\n.BillingHistory__noHistory-message {\\n  margin-top: 24px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.BillingHistory__noHistory-link {\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 14px;\\n  color: var(--sys-button-bg);\\n  margin-top: 20px;\\n  margin-bottom: 40px; }\\n\\n.BillingHistory__noHistory-graphic {\\n  margin-top: 28px; }\\n\\n.BillingHistory__table {\\n  width: 100%; }\\n  .BillingHistory__table th, .BillingHistory__table td {\\n    padding: 8px 12px; }\\n\\n.BillingHistory__table-header {\\n  background: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  line-height: 16px;\\n  font-weight: 600;\\n  border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16); }\\n  .BillingHistory__table-header:last-child {\\n    border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n\\n.BillingHistory__table-row {\\n  border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n  .BillingHistory__table-row:nth-child(odd) {\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.04); }\\n\\n.BillingHistory__table-bottomDesc {\\n  margin-top: 4px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56);\\n  font-size: 12px;\\n  line-height: 16px; }\\n\\n.BillingHistory__table-headerTotal {\\n  text-align: right; }\\n\\n.BillingHistory__table-total {\\n  font-weight: 600;\\n  text-align: right; }\\n\\n.BillingHistory__spinner {\\n  margin: auto;\\n  text-align: center; }\\n\\n.BillingHistory__paymentStatus {\\n  color: var(--sys-online-indicator); }\\n  .BillingHistory__paymentStatus i {\\n    font-size: 14.4px;\\n    line-height: 17px; }\\n    .BillingHistory__paymentStatus i::before {\\n      margin: 0; }\\n  .BillingHistory__paymentStatus span {\\n    font-weight: 600;\\n    margin-left: 4px; }\\n  .BillingHistory__paymentStatus.failed {\\n    color: var(--sys-error-text); }\\n  .BillingHistory__paymentStatus.pending span {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.48); }\\n\\n.BillingHistory__table-invoice a, .BillingHistory__table-invoice a:link, .BillingHistory__table-invoice a:visited, .BillingHistory__table-invoice a:hover, .BillingHistory__table-invoice a:focus, .BillingHistory__table-invoice a:active {\\n  text-decoration: none; }\\n\\n.BillingHistory__paging {\\n  display: flex;\\n  justify-content: flex-end;\\n  align-items: center;\\n  margin-top: 4px; }\\n  .BillingHistory__paging > span {\\n    margin-right: 8px; }\\n  .BillingHistory__paging button {\\n    background: none;\\n    border: none;\\n    border-radius: 4px;\\n    padding: 7px;\\n    height: 32px;\\n    margin-left: 4px; }\\n    .BillingHistory__paging button > i {\\n      font-size: 18px; }\\n      .BillingHistory__paging button > i::before {\\n        margin: 0; }\\n    .BillingHistory__paging button:disabled {\\n      opacity: 0.6; }\\n    .BillingHistory__paging button:hover:not(:disabled) {\\n      background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".BillingSubscriptions .BillingSubscriptions__topWrapper {\\n  display: flex; }\\n\\n.BillingSubscriptions .AlertBanner {\\n  margin-bottom: 20px; }\\n\\n.BillingSubscriptions__tooltip.tooltip {\\n  font-family: 'Open Sans', sans-serif; }\\n  .BillingSubscriptions__tooltip.tooltip.bottom {\\n    padding: 10px 0; }\\n  .BillingSubscriptions__tooltip.tooltip.in {\\n    opacity: 1; }\\n  .BillingSubscriptions__tooltip.tooltip.BillingSubscriptions__tooltip-left .tooltip-inner {\\n    left: 40%; }\\n  .BillingSubscriptions__tooltip.tooltip.BillingSubscriptions__tooltip-right .tooltip-inner {\\n    right: 90%; }\\n  .BillingSubscriptions__tooltip.tooltip .tooltip-inner {\\n    background-color: var(--sys-center-channel-bg);\\n    color: var(--sys-center-channel-color);\\n    border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n    border-radius: 4px;\\n    position: relative;\\n    text-align: left;\\n    opacity: 1;\\n    padding: 24px;\\n    max-width: none;\\n    min-width: 337px;\\n    box-shadow: 0px 12px 32px rgba(0, 0, 0, 0.12); }\\n  .BillingSubscriptions__tooltip.tooltip .tooltip-arrow {\\n    border-bottom-color: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n    z-index: 2;\\n    border-width: 0 11px 11px; }\\n    .BillingSubscriptions__tooltip.tooltip .tooltip-arrow::before {\\n      content: '';\\n      display: block;\\n      position: relative;\\n      width: 0;\\n      height: 0;\\n      border: 11px solid transparent;\\n      top: -10px;\\n      left: -11px;\\n      border-bottom-color: var(--sys-center-channel-bg); }\\n\\n.BillingSubscriptions__tooltipTitle {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.BillingSubscriptions__tooltipMessage {\\n  font-size: 14px;\\n  line-height: 20px;\\n  margin-top: 8px; }\\n\\n.UpgradeMattermostCloud {\\n  padding: 32px;\\n  display: flex;\\n  flex-direction: column;\\n  width: 332px;\\n  margin-left: 20px;\\n  align-items: center;\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px; }\\n\\n.UpgradeMattermostCloud__image {\\n  flex: 0 0 auto; }\\n\\n.UpgradeMattermostCloud__title {\\n  align-self: flex-start;\\n  margin-top: 32px;\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px;\\n  color: var(--sys-center-channel-color); }\\n\\n.UpgradeMattermostCloud__description {\\n  margin-top: 12px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.UpgradeMattermostCloud__upgradeButton {\\n  margin-top: 16px;\\n  box-shadow: inset 0 0 0 1px var(--sys-button-bg);\\n  border: none;\\n  border-radius: 4px;\\n  padding: 13px 0;\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 14px;\\n  background: var(--button-bg);\\n  color: var(--button-color);\\n  width: 100%; }\\n  .UpgradeMattermostCloud__upgradeButton:hover:not(.disabled) {\\n    background: linear-gradient(0deg, rgba(var(--center-channel-color-rgb), 0.16), rgba(var(--center-channel-color-rgb), 0.16)), var(--button-bg); }\\n  .UpgradeMattermostCloud__upgradeButton:active {\\n    background: linear-gradient(0deg, rgba(var(--center-channel-color-rgb), 0.32), rgba(var(--center-channel-color-rgb), 0.32)), var(--button-bg); }\\n  .UpgradeMattermostCloud__upgradeButton:focus {\\n    box-shadow: inset 0 0 0 2px var(--sidebar-text-active-border); }\\n  .UpgradeMattermostCloud__upgradeButton.disabled {\\n    color: rgba(var(--center-channel-color-rgb), 0.32);\\n    background: rgba(var(--center-channel-color-rgb), 0.08); }\\n\\n.PrivateCloudCard {\\n  margin-top: 20px;\\n  padding: 32px 54px 18px 32px;\\n  display: flex;\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px; }\\n\\n.PrivateCloudCard__text {\\n  flex-grow: 1;\\n  color: var(--sys-center-channel-color); }\\n\\n.PrivateCloudCard__text-title {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.PrivateCloudCard__text-description {\\n  margin-top: 12px;\\n  font-size: 14px;\\n  line-height: 20px; }\\n\\n.PrivateCloudCard__image {\\n  margin-left: 96px;\\n  flex: 0 0 234px; }\\n\\n.PrivateCloudCard__contactSales {\\n  margin-top: 16px;\\n  background: var(--sys-center-channel-bg);\\n  color: var(--sys-button-bg);\\n  box-shadow: inset 0 0 0 1px var(--sys-button-bg);\\n  border-radius: 4px;\\n  padding: 13px 20px;\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 14px;\\n  display: block;\\n  width: fit-content; }\\n  .PrivateCloudCard__contactSales:hover:not(.disabled) {\\n    background: rgba(var(--sys-button-bg-rgb), 0.04);\\n    text-decoration: none; }\\n  .PrivateCloudCard__contactSales:active {\\n    background: rgba(var(--sys-button-bg-rgb), 0.08);\\n    text-decoration: none; }\\n  .PrivateCloudCard__contactSales:focus {\\n    box-shadow: inset 0 0 0 2px var(--sys-button-bg);\\n    text-decoration: none; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".BillingSummary {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  width: 332px;\\n  margin-left: 20px;\\n  padding: 28px 32px; }\\n\\n.BillingSummary__noBillingHistory {\\n  display: flex;\\n  align-items: flex-start;\\n  flex-direction: column;\\n  justify-content: flex-start; }\\n\\n.BillingSummary__noBillingHistory-graphic {\\n  align-self: center; }\\n\\n.BillingSummary__noBillingHistory-title {\\n  font-size: 16px;\\n  line-height: 24px;\\n  margin-top: 32px;\\n  font-weight: 600; }\\n\\n.BillingSummary__noBillingHistory-message {\\n  margin-top: 8px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.BillingSummary__noBillingHistory-link {\\n  font-weight: 600;\\n  font-size: 12px;\\n  color: var(--sys-button-bg);\\n  margin-top: 16px;\\n  margin-bottom: 24px; }\\n\\n.BillingSummary__lastInvoice {\\n  color: var(--sys-center-channel-color); }\\n  .BillingSummary__lastInvoice hr {\\n    margin: 12px 0;\\n    border-color: rgba(var(--sys-center-channel-color-rgb), 0.32); }\\n\\n.BillingSummary__lastInvoice-header {\\n  display: flex;\\n  align-items: center; }\\n\\n.BillingSummary__lastInvoice-headerTitle {\\n  font-size: 20px;\\n  font-weight: 600;\\n  line-height: 28px; }\\n\\n.BillingSummary__lastInvoice-headerStatus {\\n  margin-left: auto;\\n  font-size: 12px;\\n  font-weight: 600;\\n  line-height: 16px; }\\n  .BillingSummary__lastInvoice-headerStatus.paid {\\n    color: var(--sys-online-indicator); }\\n  .BillingSummary__lastInvoice-headerStatus.failed {\\n    color: var(--sys-error-text); }\\n  .BillingSummary__lastInvoice-headerStatus.pending {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.48); }\\n  .BillingSummary__lastInvoice-headerStatus i {\\n    margin-left: 4px;\\n    font-size: 14.4px; }\\n    .BillingSummary__lastInvoice-headerStatus i::before {\\n      margin: 0; }\\n\\n.BillingSummary__lastInvoice-date {\\n  margin-top: 8px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.72); }\\n\\n.BillingSummary__lastInvoice-productName {\\n  margin-top: 32px;\\n  font-size: 16px;\\n  font-weight: 600;\\n  line-height: 24px; }\\n\\n.BillingSummary__lastInvoice-charge {\\n  display: flex;\\n  margin: 12px 0; }\\n  .BillingSummary__lastInvoice-charge.total {\\n    font-weight: 600; }\\n\\n.BillingSummary__lastInvoice-chargeAmount {\\n  margin-left: auto; }\\n\\n.BillingSummary__lastInvoice-partialCharges {\\n  font-size: 12px;\\n  line-height: 16px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56); }\\n  .BillingSummary__lastInvoice-partialCharges + .BillingSummary__lastInvoice-charge {\\n    margin-top: 4px; }\\n\\n.BillingSummary__lastInvoice-download {\\n  margin-top: 32px;\\n  margin-bottom: 16px; }\\n\\n.BillingSummary__lastInvoice-downloadButton {\\n  background: var(--sys-button-bg);\\n  padding: 11px 20px;\\n  border-radius: 4px;\\n  width: fit-content;\\n  display: flex;\\n  color: var(--sys-button-color);\\n  align-items: center; }\\n  .BillingSummary__lastInvoice-downloadButton:hover:not(.disabled) {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.16), rgba(var(--sys-center-channel-color-rgb), 0.16)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .BillingSummary__lastInvoice-downloadButton:active {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.32), rgba(var(--sys-center-channel-color-rgb), 0.32)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .BillingSummary__lastInvoice-downloadButton:focus {\\n    box-shadow: inset 0 0 0 2px var(--sys-sidebar-text-active-border);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .BillingSummary__lastInvoice-downloadButton.disabled {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.32);\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n  .BillingSummary__lastInvoice-downloadButton > i {\\n    font-size: 18px;\\n    line-height: 21px; }\\n    .BillingSummary__lastInvoice-downloadButton > i::before {\\n      margin: 0; }\\n  .BillingSummary__lastInvoice-downloadButton > span {\\n    font-weight: 600;\\n    font-size: 14px;\\n    line-height: 14px;\\n    margin-left: 8px; }\\n\\n.BillingSummary__lastInvoice-billingHistory {\\n  font-weight: 600;\\n  font-size: 12px;\\n  line-height: 9.5px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".CompanyInfoDisplay {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  color: var(--sys-center-channel-color); }\\n\\n.CompanyInfoDisplay__header {\\n  padding: 28px 32px 24px 32px;\\n  border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  display: flex;\\n  align-items: center; }\\n\\n.CompanyInfoDisplay__headerText-top {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.CompanyInfoDisplay__headerText-bottom {\\n  font-size: 14px;\\n  line-height: 20px; }\\n\\n.CompanyInfoDisplay__addInfo {\\n  margin-left: auto; }\\n\\n.CompanyInfoDisplay__addInfoButton {\\n  background: var(--sys-button-bg);\\n  padding: 8px 16px;\\n  border-radius: 4px;\\n  display: flex;\\n  color: var(--sys-button-color);\\n  align-items: center; }\\n  .CompanyInfoDisplay__addInfoButton:hover:not(.disabled) {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.16), rgba(var(--sys-center-channel-color-rgb), 0.16)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .CompanyInfoDisplay__addInfoButton:active {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.32), rgba(var(--sys-center-channel-color-rgb), 0.32)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .CompanyInfoDisplay__addInfoButton:focus {\\n    box-shadow: inset 0 0 0 2px var(--sys-sidebar-text-active-border);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .CompanyInfoDisplay__addInfoButton.disabled {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.32);\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n  .CompanyInfoDisplay__addInfoButton > i {\\n    font-size: 14.4px;\\n    line-height: 17px; }\\n    .CompanyInfoDisplay__addInfoButton > i::before {\\n      margin: 0; }\\n  .CompanyInfoDisplay__addInfoButton > span {\\n    font-weight: 600;\\n    font-size: 12px;\\n    line-height: 9px;\\n    margin-left: 4px; }\\n\\n.CompanyInfoDisplay__noCompanyInfo {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 48px; }\\n\\n.CompanyInfoDisplay__noCompanyInfo-message {\\n  margin-top: 24px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.CompanyInfoDisplay__noCompanyInfo-link {\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 14px;\\n  color: var(--sys-button-bg);\\n  margin-top: 20px;\\n  margin-bottom: 12px; }\\n\\n.CompanyInfoDisplay__companyInfo {\\n  padding: 28px 45px 30px 32px;\\n  color: var(--sys-center-channel-color);\\n  font-size: 14px;\\n  line-height: 20px;\\n  display: flex; }\\n\\n.CompanyInfoDisplay__companyInfo-name {\\n  font-weight: 600; }\\n\\n.CompanyInfoDisplay__companyInfo-addressTitle {\\n  font-weight: 600;\\n  margin-top: 16px; }\\n\\n.CompanyInfoDisplay__companyInfo-address > div {\\n  margin-top: 4px; }\\n\\n.CompanyInfoDisplay__companyInfo-edit {\\n  margin-left: auto; }\\n\\n.CompanyInfoDisplay__companyInfo-editButton {\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56);\\n  font-size: 18px;\\n  border-radius: 4px;\\n  padding: 2px; }\\n  .CompanyInfoDisplay__companyInfo-editButton:hover, .CompanyInfoDisplay__companyInfo-editButton:focus {\\n    text-decoration: none;\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.72);\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".CompanyInfoEdit__card {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  padding: 28px 32px;\\n  margin-top: 20px; }\\n  .CompanyInfoEdit__card .checkbox {\\n    margin-top: 0;\\n    margin-bottom: 24px; }\\n    .CompanyInfoEdit__card .checkbox input {\\n      height: 16px;\\n      width: 16px;\\n      margin-top: 2px; }\\n    .CompanyInfoEdit__card .checkbox span {\\n      padding-left: 4px; }\\n  .CompanyInfoEdit__card .form-row {\\n    width: 100%;\\n    margin-bottom: 24px;\\n    display: flex; }\\n  .CompanyInfoEdit__card .form-row-third-1 {\\n    width: 66%;\\n    margin-right: 16px; }\\n    .CompanyInfoEdit__card .form-row-third-1 .DropdownInput {\\n      margin-top: 0px;\\n      z-index: 99999; }\\n  .CompanyInfoEdit__card .form-row-third-2 {\\n    width: 34%; }\\n  .CompanyInfoEdit__card .section-title {\\n    font-weight: 600;\\n    font-size: 16px;\\n    color: var(--sys-center-channel-text);\\n    text-align: left;\\n    margin-bottom: 24px; }\\n  .CompanyInfoEdit__card .section-title:not(:first-child) {\\n    font-size: 14px;\\n    line-height: 20px; }\\n  .CompanyInfoEdit__card .DropdownInput {\\n    margin-bottom: 24px;\\n    height: 36px;\\n    position: relative;\\n    z-index: 999999; }\\n    .CompanyInfoEdit__card .DropdownInput .DropDown__control {\\n      min-height: 0px; }\\n  .CompanyInfoEdit__card .full-width {\\n    width: 100%; }\\n  .CompanyInfoEdit__card Input {\\n    font-size: 14px; }\\n  .CompanyInfoEdit__card .Input_fieldset {\\n    background: var(--sys-center-channel-bg);\\n    height: 40px;\\n    padding: 2px 1px; }\\n    .CompanyInfoEdit__card .Input_fieldset .Input_wrapper {\\n      margin: 0; }\\n    .CompanyInfoEdit__card .Input_fieldset.Input_fieldset___legend > legend {\\n      margin-left: 11px; }\\n    .CompanyInfoEdit__card .Input_fieldset.Input_fieldset:focus-within {\\n      box-shadow: inset 0 0 0 2px var(--sys-button-bg);\\n      color: var(--button-bg);\\n      padding-top: 2px; }\\n    .CompanyInfoEdit__card .Input_fieldset.Input_fieldset___error {\\n      color: var(--error-text);\\n      box-shadow: inset 0 0 0 1px var(--sys-error-text);\\n      padding-top: 1px;\\n      padding-bottom: 1px; }\\n    .CompanyInfoEdit__card .Input_fieldset.Input_fieldset___error:focus-within {\\n      color: var(--error-text);\\n      box-shadow: inset 0 0 0 2px var(--sys-error-text); }\\n    .CompanyInfoEdit__card .Input_fieldset .Input {\\n      height: 32px; }\\n      .CompanyInfoEdit__card .Input_fieldset .Input::placeholder {\\n        color: var(--sys-center-channel-color);\\n        opacity: 0.64; }\\n\\n.CompanyInfoEdit__form {\\n  max-width: 480px; }\\n\\n.CompanyInfoEdit__companyInfo-addressTitle {\\n  font-weight: 600;\\n  margin-top: 16px; }\\n\\n.CompanyInfoEdit__companyInfo-address > div {\\n  margin-top: 4px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".PaymentInfo .AlertBanner {\\n  margin-bottom: 20px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".PaymentInfoDisplay {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  color: var(--sys-center-channel-color); }\\n\\n.PaymentInfoDisplay__header {\\n  padding: 28px 32px 24px 32px;\\n  border-bottom: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  display: flex;\\n  align-items: center; }\\n\\n.PaymentInfoDisplay__headerText-top {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px; }\\n\\n.PaymentInfoDisplay__headerText-bottom {\\n  font-size: 14px;\\n  line-height: 20px; }\\n\\n.PaymentInfoDisplay__addInfo {\\n  margin-left: auto; }\\n\\n.PaymentInfoDisplay__addInfoButton {\\n  background: var(--sys-button-bg);\\n  padding: 8px 16px;\\n  border-radius: 4px;\\n  display: flex;\\n  color: var(--sys-button-color);\\n  align-items: center; }\\n  .PaymentInfoDisplay__addInfoButton:hover:not(.disabled) {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.16), rgba(var(--sys-center-channel-color-rgb), 0.16)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .PaymentInfoDisplay__addInfoButton:active {\\n    background: linear-gradient(0deg, rgba(var(--sys-center-channel-color-rgb), 0.32), rgba(var(--sys-center-channel-color-rgb), 0.32)), var(--sys-button-bg);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .PaymentInfoDisplay__addInfoButton:focus {\\n    box-shadow: inset 0 0 0 2px var(--sys-sidebar-text-active-border);\\n    text-decoration: none;\\n    color: var(--sys-button-color); }\\n  .PaymentInfoDisplay__addInfoButton.disabled {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.32);\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n  .PaymentInfoDisplay__addInfoButton > i {\\n    font-size: 14.4px;\\n    line-height: 17px; }\\n    .PaymentInfoDisplay__addInfoButton > i::before {\\n      margin: 0; }\\n  .PaymentInfoDisplay__addInfoButton > span {\\n    font-weight: 600;\\n    font-size: 12px;\\n    line-height: 9px;\\n    margin-left: 4px; }\\n\\n.PaymentInfoDisplay__noPaymentInfo {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  padding: 48px; }\\n\\n.PaymentInfoDisplay__noPaymentInfo-message {\\n  margin-top: 24px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.PaymentInfoDisplay__noPaymentInfo-link {\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 14px;\\n  color: var(--sys-button-bg);\\n  margin-top: 20px;\\n  margin-bottom: 12px; }\\n\\n.PaymentInfoDisplay__paymentInfo {\\n  padding: 28px 45px 30px 32px;\\n  color: var(--sys-center-channel-color);\\n  font-size: 14px;\\n  line-height: 20px;\\n  display: flex; }\\n  .PaymentInfoDisplay__paymentInfo .CardImage {\\n    max-height: 37px;\\n    max-width: 55px; }\\n\\n.PaymentInfoDisplay__paymentInfo-name {\\n  font-weight: 600; }\\n\\n.PaymentInfoDisplay__paymentInfo-addressTitle {\\n  font-weight: 600;\\n  margin-top: 16px; }\\n\\n.PaymentInfoDisplay__paymentInfo-address > div {\\n  margin-top: 4px; }\\n\\n.PaymentInfoDisplay__paymentInfo-edit {\\n  margin-left: auto; }\\n\\n.PaymentInfoDisplay__paymentInfo-editButton {\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56);\\n  font-size: 18px;\\n  margin-left: 12px;\\n  border-radius: 4px;\\n  padding: 2px; }\\n  .PaymentInfoDisplay__paymentInfo-editButton:hover, .PaymentInfoDisplay__paymentInfo-editButton:focus {\\n    text-decoration: none;\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.72);\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08); }\\n\\n.PaymentInfoDisplay__paymentInfo-cardInfo::first-letter {\\n  text-transform: capitalize; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".PaymentInfoEdit__card {\\n  background-color: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 4px;\\n  padding: 28px 32px;\\n  margin-top: 20px; }\\n\\n.PaymentInfoEdit__paymentForm {\\n  padding: 0;\\n  margin: 0;\\n  max-width: 480px; }\\n  .PaymentInfoEdit__paymentForm .section-title:not(:first-child) {\\n    font-size: 14px;\\n    line-height: 20px; }\\n  .PaymentInfoEdit__paymentForm .section-title {\\n    color: var(--sys-center-channel-text); }\\n  .PaymentInfoEdit__paymentForm .Input_fieldset {\\n    background: var(--sys-center-channel-bg); }\\n  .PaymentInfoEdit__paymentForm.Input_fieldset:focus-within {\\n    box-shadow: inset 0 0 0 2px var(--sys-button-bg); }\\n  .PaymentInfoEdit__paymentForm.Input_fieldset___error {\\n    color: var(--sys-error-text);\\n    box-shadow: inset 0 0 0 1px var(--sys-error-text); }\\n  .PaymentInfoEdit__paymentForm.Input_fieldset___error:focus-within {\\n    color: var(--sys-error-text);\\n    box-shadow: inset 0 0 0 2px var(--sys-error-text); }\\n  .PaymentInfoEdit__paymentForm .Input::placeholder {\\n    color: var(--sys-center-channel-color); }\\n\\n.PaymentInfoEdit__error {\\n  display: flex;\\n  color: var(--sys-error-text);\\n  font-size: 12px;\\n  align-items: center; }\\n  .PaymentInfoEdit__error i {\\n    font-size: 14.4px;\\n    margin-right: 4px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".PlanDetails {\\n  padding: 28px 32px;\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  background: var(--sys-center-channel-bg);\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  width: 568px;\\n  border-radius: 4px; }\\n\\n.PlanDetails__top {\\n  display: flex;\\n  align-items: center; }\\n\\n.PlanDetails__productName {\\n  font-weight: 600;\\n  font-size: 16px;\\n  line-height: 24px;\\n  color: var(--sys-center-channel-color); }\\n\\n.PlanDetails__userCount {\\n  font-weight: 600;\\n  font-size: 14px;\\n  line-height: 20px;\\n  margin-left: auto;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56); }\\n  .PlanDetails__userCount.withinLimit {\\n    color: var(--sys-sidebar-text-active-border); }\\n  .PlanDetails__userCount.overLimit {\\n    color: var(--sys-error-text); }\\n\\n.PlanDetails__plan {\\n  margin-top: 16px;\\n  display: flex;\\n  color: var(--sys-center-channel-color);\\n  align-items: flex-end; }\\n\\n.PlanDetails__planName {\\n  font-weight: 600;\\n  font-size: 32px;\\n  line-height: 32px; }\\n\\n.PlanDetails__planCaveat {\\n  font-size: 14px;\\n  line-height: 20px;\\n  margin-left: 4px; }\\n\\n.PlanDetails__teamAndChannelCount {\\n  margin-top: 24px;\\n  font-weight: 600;\\n  font-size: 12px;\\n  line-height: 16px;\\n  color: var(--sys-center-channel-color); }\\n\\n.PlanDetails__description {\\n  margin-top: 8px;\\n  color: #579EFF;\\n  font-weight: 600;\\n  font-size: 12px; }\\n\\n.PlanDetails__feature {\\n  margin-top: 12px;\\n  color: var(--sys-center-channel-color);\\n  line-height: 16px; }\\n  .PlanDetails__feature i {\\n    font-size: 14.4px; }\\n    .PlanDetails__feature i::before {\\n      margin: 0; }\\n  .PlanDetails__feature span {\\n    margin-left: 8px;\\n    font-size: 12px; }\\n\\n.PlanDetails__currentPlan {\\n  margin-top: 24px;\\n  color: var(--sys-sidebar-text-active-border);\\n  display: flex;\\n  align-items: center; }\\n  .PlanDetails__currentPlan i {\\n    font-size: 18px;\\n    line-height: 21px; }\\n    .PlanDetails__currentPlan i::before {\\n      margin: 0; }\\n  .PlanDetails__currentPlan span {\\n    margin-left: 8px;\\n    font-weight: 600;\\n    font-size: 14px;\\n    line-height: 14px; }\\n\\n.PlanDetails__seatsAndSubscriptionDates {\\n  margin-top: 24px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.PlanDetails__seats {\\n  font-weight: 600;\\n  display: flex; }\\n\\n.PlanDetails__seats-registered {\\n  margin-left: 4px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.56); }\\n  .PlanDetails__seats-registered.overLimit {\\n    color: var(--sys-error-text); }\\n  .PlanDetails__seats-registered i {\\n    font-size: 14.4px;\\n    line-height: 17px;\\n    margin-left: 4px; }\\n    .PlanDetails__seats-registered i::before {\\n      margin: 0; }\\n\\n.PlanDetails__subscriptionDate {\\n  margin-top: 8px; }\\n\\n#BillingSubscriptions__seatOverageTooltip {\\n  margin-left: -5px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".DataGrid {\\n  width: 100%;\\n  padding: 2rem 2rem 2rem 2rem;\\n  background: whitesmoke;\\n  color: var(--sys-center-channel-color); }\\n  .DataGrid .DataGrid_search {\\n    height: 48px;\\n    background: white;\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n    .DataGrid .DataGrid_search .DataGrid_searchBar {\\n      display: flex;\\n      position: relative;\\n      height: 32px;\\n      width: 300px;\\n      border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.2);\\n      box-sizing: border-box;\\n      border-radius: 4px;\\n      margin-left: 8px; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar input {\\n        border: 0px;\\n        margin-left: 32px;\\n        margin-right: 16px;\\n        font-size: .95em;\\n        width: 100%; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar input:focus {\\n        outline: none; }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar .DataGrid_searchIcon {\\n        top: 5px;\\n        left: 10px;\\n        position: absolute;\\n        pointer-events: none;\\n        color: rgba(0, 0, 0, 0.5); }\\n      .DataGrid .DataGrid_search .DataGrid_searchBar .DataGrid_clearButton {\\n        display: flex;\\n        align-items: center;\\n        margin-right: 5px; }\\n  .DataGrid .DataGrid_header {\\n    color: rgba(0, 0, 0, 0.87);\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n  .DataGrid .DataGrid_rows {\\n    display: flex;\\n    flex-direction: column;\\n    background: rgba(var(--sys-button-color-rgb), 0.5); }\\n    .DataGrid .DataGrid_rows .DataGrid_loading {\\n      margin: auto;\\n      font-size: 1.6rem;\\n      color: rgba(0, 0, 0, 0.3);\\n      padding-top: 20px;\\n      padding-bottom: 20px; }\\n    .DataGrid .DataGrid_rows .DataGrid_empty {\\n      font-size: 1.6rem;\\n      width: 100%;\\n      padding-top: 20px;\\n      padding-bottom: 20px;\\n      color: rgba(0, 0, 0, 0.3);\\n      text-align: center; }\\n    .DataGrid .DataGrid_rows .DataGrid_row {\\n      border-left: 2px solid transparent; }\\n      .DataGrid .DataGrid_rows .DataGrid_row:nth-child(odd) {\\n        background-color: whitesmoke; }\\n      .DataGrid .DataGrid_rows .DataGrid_row:hover {\\n        background-color: #e0ecfc;\\n        border-left: 2px solid #166de0; }\\n      .DataGrid .DataGrid_rows .DataGrid_row .DataGrid_cell {\\n        margin: auto;\\n        text-overflow: ellipsis;\\n        overflow: hidden;\\n        white-space: nowrap; }\\n  .DataGrid .DataGrid_row, .DataGrid .DataGrid_header {\\n    display: flex;\\n    flex-direction: row;\\n    padding-left: 18px;\\n    height: auto; }\\n    .DataGrid .DataGrid_row .DataGrid_cell, .DataGrid .DataGrid_header .DataGrid_cell {\\n      flex-basis: 100%;\\n      flex: 1 0; }\\n  .DataGrid .DataGrid_footer {\\n    display: flex;\\n    flex-direction: row;\\n    height: auto;\\n    text-align: right;\\n    background: white;\\n    border-top: solid 1px rgba(0, 0, 0, 0.1);\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    padding: 5px 0;\\n    color: rgba(0, 0, 0, 0.5);\\n    font-size: 1.1em; }\\n    .DataGrid .DataGrid_footer .DataGrid_cell {\\n      width: 100%;\\n      text-align: right; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".FeatureDiscovery {\\n  background: white;\\n  box-shadow: 0px 2px 3px rgba(0, 0, 0, 0.08);\\n  border-radius: 8px;\\n  padding: 20px;\\n  font-family: Open Sans;\\n  font-style: normal;\\n  font-weight: normal;\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(440px, 1fr)); }\\n\\n.FeatureDiscovery_imageWrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\\n.FeatureDiscovery_copyWrapper,\\n.FeatureDiscovery_imageWrapper {\\n  grid-template-columns: repeat(2, 1fr);\\n  padding: 20px; }\\n\\n.FeatureDiscovery_image {\\n  height: 220px; }\\n\\n.FeatureDiscovery_title {\\n  font-size: 24px;\\n  line-height: 32px;\\n  padding-bottom: 24px; }\\n\\n.FeatureDiscovery_copy {\\n  font-size: 14px;\\n  line-height: 20px;\\n  padding-bottom: 24px; }\\n\\n.FeatureDiscovery .btn {\\n  margin-right: 24px;\\n  width: 160px;\\n  line-height: 16px;\\n  height: 48px;\\n  padding: 14px 0;\\n  font-size: 16px;\\n  font-weight: 400;\\n  border-radius: 4px;\\n  background: #166de0;\\n  color: white; }\\n  .FeatureDiscovery .btn:focus, .FeatureDiscovery .btn:active, .FeatureDiscovery .btn:focus:active {\\n    outline: none;\\n    border-color: transparent; }\\n  .FeatureDiscovery .btn:disabled {\\n    background: rgba(0, 0, 0, 0.15);\\n    color: rgba(0, 0, 0, 0.5);\\n    border-color: transparent; }\\n  .FeatureDiscovery .btn.btn-inactive {\\n    background: var(--center-channel-color-08);\\n    color: var(--center-channel-color-56); }\\n  .FeatureDiscovery .btn.btn-secondary {\\n    background: white;\\n    border: 1px solid #166de0;\\n    color: #166de0; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".Filter {\\n  padding-left: 8px;\\n  position: relative;\\n  display: inline-block; }\\n  .Filter .Filter_button {\\n    width: auto;\\n    height: 32px;\\n    background: var(--sys-center-channel-bg);\\n    border-radius: 4px;\\n    border: 0px;\\n    color: var(--sys-button-bg);\\n    font-size: 12px;\\n    padding: 0 10px; }\\n    .Filter .Filter_button.Filter__active, .Filter .Filter_button:focus {\\n      background: rgba(var(--sys-button-bg-rgb), 0.12); }\\n    .Filter .Filter_button:hover {\\n      background: rgba(var(--sys-button-bg-rgb), 0.06); }\\n  .Filter .Icon {\\n    margin-right: 2px;\\n    font-size: 14px; }\\n  .Filter .Filter_content {\\n    display: none;\\n    position: absolute;\\n    padding: 16px;\\n    min-width: 256px;\\n    margin-top: 4px;\\n    margin-bottom: 24px;\\n    background: var(--sys-center-channel-bg);\\n    border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n    box-sizing: border-box;\\n    box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.12);\\n    border-radius: 4px;\\n    z-index: 1; }\\n    .Filter .Filter_content.Filter__show {\\n      display: block; }\\n    .Filter .Filter_content hr {\\n      color: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n      margin: 8px -16px 8px -16px;\\n      padding: 0; }\\n  .Filter .Filter_header {\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between; }\\n    .Filter .Filter_header .Filter_title {\\n      font-weight: bold;\\n      font-size: 14px;\\n      line-height: 14px;\\n      padding: 8px;\\n      color: var(--sys-center-channel-color); }\\n    .Filter .Filter_header .Filter_reset {\\n      font-size: 12px;\\n      line-height: 16px;\\n      padding: 8px; }\\n  .Filter .Filter_lists {\\n    white-space: nowrap; }\\n  .Filter .Filter_apply {\\n    float: right;\\n    margin: 8px 8px 8px 0px;\\n    border-radius: 4px;\\n    font-size: 12px; }\\n    .Filter .Filter_apply:disabled {\\n      background: rgba(var(--sys-center-channel-color-rgb), 0.1);\\n      color: var(--sys-center-channel-color); }\\n  .Filter .FilterList {\\n    display: inline-block;\\n    vertical-align: top;\\n    width: 160px;\\n    padding: 8px;\\n    font-size: 14px; }\\n    .Filter .FilterList.FilterList__full {\\n      width: 320px;\\n      display: block; }\\n    .Filter .FilterList .FilterList_name {\\n      font-size: 12px;\\n      font-weight: 600;\\n      padding-bottom: 12px;\\n      color: rgba(var(--sys-center-channel-color-rgb), 0.5); }\\n    .Filter .FilterList .FilterList_checkbox {\\n      color: rgba(var(--sys-center-channel-color-rgb), 0.8); }\\n      .Filter .FilterList .FilterList_checkbox input {\\n        vertical-align: bottom;\\n        position: relative;\\n        top: -4px;\\n        margin: 0 8px 0 2px;\\n        opacity: 0.64; }\\n        .Filter .FilterList .FilterList_checkbox input:checked {\\n          opacity: 1; }\\n      .Filter .FilterList .FilterList_checkbox label {\\n        font-weight: normal; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".TeamFilterDropdown .TeamFilterDropdownButton {\\n  background: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16);\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  width: 100%;\\n  height: 32px;\\n  display: flex;\\n  justify-content: space-between;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-size: 12px;\\n  line-height: 28px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.64);\\n  padding: 1px 0px 1px 4px; }\\n  .TeamFilterDropdown .TeamFilterDropdownButton:hover {\\n    border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.48); }\\n  .TeamFilterDropdown .TeamFilterDropdownButton .TeamFilterDropdownButton_text {\\n    text-align: left;\\n    padding-left: 8px;\\n    flex-grow: 3;\\n    max-width: 230px;\\n    overflow-x: hidden;\\n    text-overflow: ellipsis; }\\n  .TeamFilterDropdown .TeamFilterDropdownButton .TeamFilterDropdownButton_more {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.6);\\n    margin-right: 8px; }\\n  .TeamFilterDropdown .TeamFilterDropdownButton .TeamFilterDropdownButton_icon {\\n    min-width: 32px;\\n    height: 31px;\\n    border-left: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16);\\n    margin-top: -1px; }\\n    .TeamFilterDropdown .TeamFilterDropdownButton .TeamFilterDropdownButton_icon .Icon {\\n      display: flex;\\n      width: 14px;\\n      height: 14px;\\n      padding-top: 8px;\\n      margin-left: 6px;\\n      margin-right: 0; }\\n  .TeamFilterDropdown .TeamFilterDropdownButton .TeamFilterDropdownButton_clear {\\n    display: none;\\n    margin-top: -2px;\\n    padding: 9.5px 0 0 0;\\n    min-width: 36px;\\n    height: 32px;\\n    font-size: 14px;\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.56); }\\n  .TeamFilterDropdown .TeamFilterDropdownButton:hover .TeamFilterDropdownButton_more {\\n    margin-right: 0; }\\n  .TeamFilterDropdown .TeamFilterDropdownButton:hover .TeamFilterDropdownButton_clear {\\n    display: block; }\\n\\n.TeamFilterDropdown .TeamFilterDropdownOptions {\\n  position: absolute;\\n  padding: 16px 16px 0 16px;\\n  margin-top: 2px;\\n  background: var(--sys-center-channel-bg);\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.08);\\n  box-sizing: border-box;\\n  box-shadow: 0px 8px 24px rgba(0, 0, 0, 0.12);\\n  border-radius: 4px;\\n  z-index: 1;\\n  min-width: 304px;\\n  max-height: 260px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: none;\\n  max-width: 304px; }\\n  .TeamFilterDropdown .TeamFilterDropdownOptions .TeamFilterDropdownOptions_list {\\n    overflow-y: scroll;\\n    overflow-x: hidden;\\n    margin: 0 -12px 8px -16px;\\n    padding-bottom: 8px;\\n    max-height: 184px; }\\n    .TeamFilterDropdown .TeamFilterDropdownOptions .TeamFilterDropdownOptions_list::-webkit-scrollbar-track {\\n      background: rgba(var(--sys-center-channel-bg-rgb), 0); }\\n\\n.TeamFilterDropdown .TeamFilterDropdownOptions__active {\\n  display: block; }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_checkbox {\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.8);\\n  height: 32px;\\n  margin-right: 4px; }\\n  .TeamFilterDropdown .TeamFilterDropdown_checkbox input {\\n    vertical-align: bottom;\\n    position: relative;\\n    top: -4px;\\n    margin-right: 8px;\\n    margin-left: 20px;\\n    padding-top: 6px;\\n    opacity: 0.64; }\\n    .TeamFilterDropdown .TeamFilterDropdown_checkbox input:hover {\\n      cursor: pointer; }\\n    .TeamFilterDropdown .TeamFilterDropdown_checkbox input:checked {\\n      opacity: 1; }\\n  .TeamFilterDropdown .TeamFilterDropdown_checkbox label {\\n    font-weight: normal;\\n    width: 100%;\\n    padding-top: 6px;\\n    height: 32px;\\n    text-overflow: ellipsis;\\n    display: inline-block;\\n    overflow: hidden; }\\n    .TeamFilterDropdown .TeamFilterDropdown_checkbox label:hover {\\n      cursor: pointer; }\\n  .TeamFilterDropdown .TeamFilterDropdown_checkbox:hover {\\n    background: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n    cursor: pointer; }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_search {\\n  height: 32px;\\n  width: 100%;\\n  color: var(--sys-center-channel-color);\\n  font-weight: 400;\\n  border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.2);\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  padding: 8px 12px;\\n  font-size: 12px;\\n  line-height: 16px; }\\n  .TeamFilterDropdown .TeamFilterDropdown_search:focus {\\n    margin-left: -1px;\\n    border: 2px solid var(--sys-button-bg); }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_reset {\\n  display: block;\\n  font-size: 12px;\\n  font-weight: 600;\\n  color: var(--sys-link-color);\\n  padding: 4px 0px 8px 1px; }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_allTeams {\\n  font-weight: normal;\\n  font-size: 12px;\\n  padding: 4px 0px 8px 1px;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.64); }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_divider {\\n  border-top: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.12);\\n  margin: 4px -16px; }\\n\\n.TeamFilterDropdown .TeamFilterDropdown_empty, .TeamFilterDropdown .TeamFilterDropdown_loading {\\n  font-weight: normal;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.64);\\n  padding-top: 8px;\\n  margin-left: 16px;\\n  margin-bottom: 0; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".MemberListGroup .DataGrid {\\n  display: flex;\\n  flex-direction: column;\\n  height: calc(90vh - 120px);\\n  width: 100%;\\n  padding: 0; }\\n  .MemberListGroup .DataGrid .DataGrid_rows {\\n    flex-grow: 500;\\n    height: 1px;\\n    overflow-y: scroll; }\\n  .MemberListGroup .DataGrid .DataGrid_empty {\\n    margin: auto; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".OpenIdConvert {\\n  background-color: rgba(87, 158, 255, 0.08);\\n  display: grid;\\n  grid-template-columns: auto 1fr;\\n  border-radius: 4px;\\n  border: 1px solid;\\n  border-color: rgba(87, 158, 255, 0.24);\\n  padding: 0px;\\n  margin-bottom: 25px;\\n  font-family: Open Sans;\\n  font-style: normal;\\n  font-weight: normal; }\\n  .OpenIdConvert p {\\n    margin: 0 0 8px; }\\n  .OpenIdConvert .btn {\\n    margin-right: 10px;\\n    width: 191px;\\n    line-height: 9px;\\n    height: 32px;\\n    font-size: 12px;\\n    font-weight: 600;\\n    border-radius: 4px;\\n    background: #166de0;\\n    color: white; }\\n    .OpenIdConvert .btn:focus, .OpenIdConvert .btn:active, .OpenIdConvert .btn:focus:active {\\n      outline: none;\\n      border-color: transparent; }\\n  .OpenIdConvert .btn-secondary {\\n    border-radius: 4px;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    min-width: 100px;\\n    height: 32px;\\n    margin: 0 10px 0 0;\\n    text-decoration: none; }\\n    .OpenIdConvert .btn-secondary:hover {\\n      background-color: #166de0;\\n      color: white; }\\n\\n.OpenIdConvert_actionWrapper {\\n  display: flex;\\n  align-items: center;\\n  border-top: 1px solid alpha-color(black, 0.1);\\n  height: 40px;\\n  padding: 4 0 4px;\\n  z-index: 100;\\n  -webkit-flex: 0 0 60px;\\n  flex: 0 0 60px;\\n  width: 100%; }\\n\\n.OpenIdConvert_copyWrapper {\\n  padding: 16px 16px 16px 12px; }\\n\\n.OpenIdConvert_imageWrapper {\\n  padding: 16px 0px 0px 16px; }\\n\\n.OpenIdConvert_image {\\n  height: 18px; }\\n\\n.OpenIdConvert__heading {\\n  font-size: 14px;\\n  line-height: 20px;\\n  font-weight: 600;\\n  padding-bottom: 8px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#SystemRolePermissions {\\n  margin-top: 0; }\\n\\n.SystemRolePermissions {\\n  padding: 2rem 2rem 2rem 2rem;\\n  background: #F5F5F5;\\n  color: rgba(var(--sys-center-channel-color-rgb), 0.87); }\\n  .SystemRolePermissions .PermissionRow:nth-child(even) {\\n    background: rgba(255, 255, 255, 0.5); }\\n  .SystemRolePermissions .PermissionRow .PermissionSection {\\n    height: auto;\\n    display: flex;\\n    flex-direction: row; }\\n    .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionText {\\n      margin-top: 10px;\\n      padding: 14px 16px;\\n      align-content: flex-start;\\n      display: flex;\\n      flex-direction: column;\\n      flex-grow: 3; }\\n      .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionText .PermissionSectionText_title {\\n        font-size: 14px;\\n        color: rgba(var(--sys-center-channel-color-rgb), 0.87);\\n        font-weight: 600; }\\n      .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionText .PermissionSectionText_description {\\n        font-size: 12px; }\\n    .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown {\\n      padding: 0 16px;\\n      margin: auto; }\\n      .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .Menu__content {\\n        min-width: 256px; }\\n      .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper {\\n        background: rgba(var(--sys-center-channel-color-rgb), 0.04);\\n        box-sizing: border-box;\\n        border-radius: 4px; }\\n        .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton {\\n          background: var(--sys-center-channel-bg);\\n          border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16);\\n          box-sizing: border-box;\\n          border-radius: 4px;\\n          width: 132px;\\n          height: 32px;\\n          display: flex;\\n          justify-content: space-between;\\n          font-style: normal;\\n          font-weight: normal;\\n          font-size: 12px;\\n          line-height: 28px;\\n          color: var(--sys-center-channel-color);\\n          padding: 1px 0px 1px 4px; }\\n          .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton:hover {\\n            border: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.48); }\\n          .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton .PermissionSectionDropdownButton_text {\\n            text-align: left;\\n            padding-left: 8px;\\n            flex-grow: 3;\\n            max-width: 230px;\\n            overflow-x: hidden;\\n            text-overflow: ellipsis; }\\n          .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton .PermissionSectionDropdownButton_more {\\n            color: rgba(var(--sys-center-channel-color-rgb), 0.6);\\n            margin-right: 8px; }\\n          .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton .PermissionSectionDropdownButton_icon {\\n            min-width: 32px;\\n            height: 31px;\\n            border-left: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16);\\n            margin-top: -1px; }\\n            .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper .PermissionSectionDropdownButton .PermissionSectionDropdownButton_icon .Icon {\\n              display: flex;\\n              width: 14px;\\n              height: 14px;\\n              padding-top: 8px;\\n              margin-left: 6px;\\n              margin-right: 0; }\\n        .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper[disabled] {\\n          opacity: 1; }\\n          .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .MenuWrapper[disabled] .PermissionSectionDropdownButton {\\n            color: var(--sys-center-channel-color);\\n            background: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n            border-color: rgba(var(--sys-center-channel-color-rgb), 0.16); }\\n      .SystemRolePermissions .PermissionRow .PermissionSection .PermissionSectionDropdown .PermissionSectionDropdownOptions_description {\\n        line-height: 16px;\\n        padding-bottom: 4px; }\\n  .SystemRolePermissions .PermissionRow .PermissionSubsectionsToggle {\\n    margin: 0;\\n    line-height: 16px; }\\n    .SystemRolePermissions .PermissionRow .PermissionSubsectionsToggle button {\\n      font-size: 12px; }\\n  .SystemRolePermissions .PermissionRow .PermissionSubsections {\\n    margin: 0 0 14px 16px;\\n    border-left: 1px solid rgba(var(--sys-center-channel-color-rgb), 0.16);\\n    padding-left: 16px; }\\n    .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection {\\n      height: auto;\\n      padding: 4px 0; }\\n      .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection .PermissionSectionText {\\n        padding: 0;\\n        margin: auto; }\\n        .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection .PermissionSectionText .PermissionSectionText_title {\\n          font-size: 12px;\\n          font-weight: 400; }\\n      .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection .PermissionSection_description {\\n        font-weight: 600;\\n        font-size: 10px;\\n        line-height: 15px;\\n        margin: 0; }\\n        .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection .PermissionSection_description span {\\n          border-radius: 2px;\\n          background: rgba(var(--sys-center-channel-color-rgb), 0.08);\\n          padding: 0 4px; }\\n      .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection .PermissionSectionDropdown {\\n        padding: 0 16px;\\n        margin: 0; }\\n    .SystemRolePermissions .PermissionRow .PermissionSubsections .PermissionSection:last-of-type {\\n      padding-bottom: 0; }\\n  .SystemRolePermissions .PermissionSectionDropdownOptions .PermissionSectionDropdownOptions_label {\\n    font-size: 14px;\\n    color: var(--sys-center-channel-color); }\\n  .SystemRolePermissions .PermissionSectionDropdownOptions .PermissionSectionDropdownOptions_description {\\n    font-size: 12px;\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.56); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"#SystemRoles {\\n  margin-top: 0; }\\n  #SystemRoles .SystemRoles .DataGrid .DataGrid_row {\\n    min-height: 40px;\\n    cursor: pointer;\\n    padding-left: 16px; }\\n  #SystemRoles .SystemRoles .DataGrid .DataGrid_cell .SystemRoles_editRow {\\n    padding-right: 20px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".SystemUserDetail__field-label {\\n  font-size: 12px;\\n  display: block;\\n  font-weight: bold;\\n  margin-top: 12px;\\n  margin-bottom: 4px; }\\n\\n.SystemUserDetail__input {\\n  display: inline-block;\\n  height: 40px;\\n  max-width: 320px; }\\n\\n.SystemUserDetail .add-team-button {\\n  position: relative;\\n  margin-left: 10px; }\\n\\n.SystemUserDetail .team-btn__content {\\n  opacity: 1; }\\n\\n.SystemUserDetail__field-text {\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__field-icon {\\n  width: 16px;\\n  height: 16px;\\n  fill: rgba(61, 60, 64, 0.6);\\n  margin: 0 8px 0 0;\\n  display: inline-block;\\n  vertical-align: middle; }\\n\\n.SystemUserDetail__error {\\n  padding-top: 8px;\\n  padding-left: 15px; }\\n\\n.SystemUserDetail__actions-menu-icon svg {\\n  color: #333;\\n  width: 18px; }\\n\\n.SystemUserDetail .MenuItem .SystemUserDetail__action-remove-team {\\n  color: #8B0008; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".AbstractList {\\n  -webkit-transition: all 0.4s ease-in-out;\\n  -webkit-transition-delay: 0s;\\n  -moz-transition: all 0.4s ease-in-out 0s;\\n  -o-transition: all 0.4s ease-in-out 0s;\\n  transition: all 0.4s ease-in-out 0s;\\n  padding: 1rem 2rem 2rem 2rem; }\\n  .AbstractList .AbstractList__header {\\n    border-bottom: solid 1px rgba(0, 0, 0, 0.1);\\n    display: flex;\\n    flex-direction: row;\\n    font-size: 1.1em;\\n    font-weight: bold;\\n    padding: .5em 0; }\\n    .AbstractList .AbstractList__header .AbstractList__header-label {\\n      display: inline-block; }\\n  .AbstractList .AbstractList__body {\\n    background: whitesmoke; }\\n    .AbstractList .AbstractList__body .AbstractList__loading {\\n      text-align: center;\\n      padding: 40px; }\\n    .AbstractList .AbstractList__body .AbstractList__empty {\\n      text-align: center;\\n      margin-top: 1rem;\\n      font-size: 1.6rem;\\n      background: rgba(255, 255, 255, 0.5);\\n      color: rgba(0, 0, 0, 0.3); }\\n      .AbstractList .AbstractList__body .AbstractList__empty span {\\n        display: inline-block;\\n        width: 100%;\\n        height: 100%;\\n        padding-top: 20px;\\n        padding-bottom: 20px; }\\n  .AbstractList .AbstractList__footer {\\n    display: flex;\\n    justify-content: flex-end;\\n    align-items: center;\\n    background: white;\\n    padding: 5px;\\n    height: auto;\\n    border-top: solid 1px rgba(0, 0, 0, 0.1); }\\n    .AbstractList .AbstractList__footer .btn-link {\\n      color: rgba(0, 0, 0, 0.5); }\\n      .AbstractList .AbstractList__footer .btn-link.disabled {\\n        opacity: .5; }\\n    .AbstractList .AbstractList__footer .counter {\\n      color: rgba(0, 0, 0, 0.5);\\n      font-size: 1.1em;\\n      margin-bottom: 2px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.pt-0 {\\n  padding-top: 0px !important; }\\n\\n.pb-0 {\\n  padding-bottom: 0px !important; }\\n\\n.pl-0 {\\n  padding-left: 0px !important; }\\n\\n.pr-0 {\\n  padding-right: 0px !important; }\\n\\n.mt-0 {\\n  margin-top: 0px !important; }\\n\\n.mb-0 {\\n  margin-bottom: 0px !important; }\\n\\n.ml-0 {\\n  margin-left: 0px !important; }\\n\\n.mr-0 {\\n  margin-right: 0px !important; }\\n\\n.m-0 {\\n  margin: 0px !important; }\\n\\n.p-0 {\\n  padding: 0px !important; }\\n\\n.pt-1 {\\n  padding-top: 4px !important; }\\n\\n.pb-1 {\\n  padding-bottom: 4px !important; }\\n\\n.pl-1 {\\n  padding-left: 4px !important; }\\n\\n.pr-1 {\\n  padding-right: 4px !important; }\\n\\n.mt-1 {\\n  margin-top: 4px !important; }\\n\\n.mb-1 {\\n  margin-bottom: 4px !important; }\\n\\n.ml-1 {\\n  margin-left: 4px !important; }\\n\\n.mr-1 {\\n  margin-right: 4px !important; }\\n\\n.m-1 {\\n  margin: 4px !important; }\\n\\n.p-1 {\\n  padding: 4px !important; }\\n\\n.pt-2 {\\n  padding-top: 8px !important; }\\n\\n.pb-2 {\\n  padding-bottom: 8px !important; }\\n\\n.pl-2 {\\n  padding-left: 8px !important; }\\n\\n.pr-2 {\\n  padding-right: 8px !important; }\\n\\n.mt-2 {\\n  margin-top: 8px !important; }\\n\\n.mb-2 {\\n  margin-bottom: 8px !important; }\\n\\n.ml-2 {\\n  margin-left: 8px !important; }\\n\\n.mr-2 {\\n  margin-right: 8px !important; }\\n\\n.m-2 {\\n  margin: 8px !important; }\\n\\n.p-2 {\\n  padding: 8px !important; }\\n\\n.pt-3 {\\n  padding-top: 12px !important; }\\n\\n.pb-3 {\\n  padding-bottom: 12px !important; }\\n\\n.pl-3 {\\n  padding-left: 12px !important; }\\n\\n.pr-3 {\\n  padding-right: 12px !important; }\\n\\n.mt-3 {\\n  margin-top: 12px !important; }\\n\\n.mb-3 {\\n  margin-bottom: 12px !important; }\\n\\n.ml-3 {\\n  margin-left: 12px !important; }\\n\\n.mr-3 {\\n  margin-right: 12px !important; }\\n\\n.m-3 {\\n  margin: 12px !important; }\\n\\n.p-3 {\\n  padding: 12px !important; }\\n\\n.pt-4 {\\n  padding-top: 16px !important; }\\n\\n.pb-4 {\\n  padding-bottom: 16px !important; }\\n\\n.pl-4 {\\n  padding-left: 16px !important; }\\n\\n.pr-4 {\\n  padding-right: 16px !important; }\\n\\n.mt-4 {\\n  margin-top: 16px !important; }\\n\\n.mb-4 {\\n  margin-bottom: 16px !important; }\\n\\n.ml-4 {\\n  margin-left: 16px !important; }\\n\\n.mr-4 {\\n  margin-right: 16px !important; }\\n\\n.m-4 {\\n  margin: 16px !important; }\\n\\n.p-4 {\\n  padding: 16px !important; }\\n\\n.pt-5 {\\n  padding-top: 20px !important; }\\n\\n.pb-5 {\\n  padding-bottom: 20px !important; }\\n\\n.pl-5 {\\n  padding-left: 20px !important; }\\n\\n.pr-5 {\\n  padding-right: 20px !important; }\\n\\n.mt-5 {\\n  margin-top: 20px !important; }\\n\\n.mb-5 {\\n  margin-bottom: 20px !important; }\\n\\n.ml-5 {\\n  margin-left: 20px !important; }\\n\\n.mr-5 {\\n  margin-right: 20px !important; }\\n\\n.m-5 {\\n  margin: 20px !important; }\\n\\n.p-5 {\\n  padding: 20px !important; }\\n\\n.pt-6 {\\n  padding-top: 24px !important; }\\n\\n.pb-6 {\\n  padding-bottom: 24px !important; }\\n\\n.pl-6 {\\n  padding-left: 24px !important; }\\n\\n.pr-6 {\\n  padding-right: 24px !important; }\\n\\n.mt-6 {\\n  margin-top: 24px !important; }\\n\\n.mb-6 {\\n  margin-bottom: 24px !important; }\\n\\n.ml-6 {\\n  margin-left: 24px !important; }\\n\\n.mr-6 {\\n  margin-right: 24px !important; }\\n\\n.m-6 {\\n  margin: 24px !important; }\\n\\n.p-6 {\\n  padding: 24px !important; }\\n\\n.pt-7 {\\n  padding-top: 28px !important; }\\n\\n.pb-7 {\\n  padding-bottom: 28px !important; }\\n\\n.pl-7 {\\n  padding-left: 28px !important; }\\n\\n.pr-7 {\\n  padding-right: 28px !important; }\\n\\n.mt-7 {\\n  margin-top: 28px !important; }\\n\\n.mb-7 {\\n  margin-bottom: 28px !important; }\\n\\n.ml-7 {\\n  margin-left: 28px !important; }\\n\\n.mr-7 {\\n  margin-right: 28px !important; }\\n\\n.m-7 {\\n  margin: 28px !important; }\\n\\n.p-7 {\\n  padding: 28px !important; }\\n\\n.pt-8 {\\n  padding-top: 32px !important; }\\n\\n.pb-8 {\\n  padding-bottom: 32px !important; }\\n\\n.pl-8 {\\n  padding-left: 32px !important; }\\n\\n.pr-8 {\\n  padding-right: 32px !important; }\\n\\n.mt-8 {\\n  margin-top: 32px !important; }\\n\\n.mb-8 {\\n  margin-bottom: 32px !important; }\\n\\n.ml-8 {\\n  margin-left: 32px !important; }\\n\\n.mr-8 {\\n  margin-right: 32px !important; }\\n\\n.m-8 {\\n  margin: 32px !important; }\\n\\n.p-8 {\\n  padding: 32px !important; }\\n\\n.pt-9 {\\n  padding-top: 36px !important; }\\n\\n.pb-9 {\\n  padding-bottom: 36px !important; }\\n\\n.pl-9 {\\n  padding-left: 36px !important; }\\n\\n.pr-9 {\\n  padding-right: 36px !important; }\\n\\n.mt-9 {\\n  margin-top: 36px !important; }\\n\\n.mb-9 {\\n  margin-bottom: 36px !important; }\\n\\n.ml-9 {\\n  margin-left: 36px !important; }\\n\\n.mr-9 {\\n  margin-right: 36px !important; }\\n\\n.m-9 {\\n  margin: 36px !important; }\\n\\n.p-9 {\\n  padding: 36px !important; }\\n\\n.pt-10 {\\n  padding-top: 40px !important; }\\n\\n.pb-10 {\\n  padding-bottom: 40px !important; }\\n\\n.pl-10 {\\n  padding-left: 40px !important; }\\n\\n.pr-10 {\\n  padding-right: 40px !important; }\\n\\n.mt-10 {\\n  margin-top: 40px !important; }\\n\\n.mb-10 {\\n  margin-bottom: 40px !important; }\\n\\n.ml-10 {\\n  margin-left: 40px !important; }\\n\\n.mr-10 {\\n  margin-right: 40px !important; }\\n\\n.m-10 {\\n  margin: 40px !important; }\\n\\n.p-10 {\\n  padding: 40px !important; }\\n\\n.pt-11 {\\n  padding-top: 44px !important; }\\n\\n.pb-11 {\\n  padding-bottom: 44px !important; }\\n\\n.pl-11 {\\n  padding-left: 44px !important; }\\n\\n.pr-11 {\\n  padding-right: 44px !important; }\\n\\n.mt-11 {\\n  margin-top: 44px !important; }\\n\\n.mb-11 {\\n  margin-bottom: 44px !important; }\\n\\n.ml-11 {\\n  margin-left: 44px !important; }\\n\\n.mr-11 {\\n  margin-right: 44px !important; }\\n\\n.m-11 {\\n  margin: 44px !important; }\\n\\n.p-11 {\\n  padding: 44px !important; }\\n\\n.pt-12 {\\n  padding-top: 48px !important; }\\n\\n.pb-12 {\\n  padding-bottom: 48px !important; }\\n\\n.pl-12 {\\n  padding-left: 48px !important; }\\n\\n.pr-12 {\\n  padding-right: 48px !important; }\\n\\n.mt-12 {\\n  margin-top: 48px !important; }\\n\\n.mb-12 {\\n  margin-bottom: 48px !important; }\\n\\n.ml-12 {\\n  margin-left: 48px !important; }\\n\\n.mr-12 {\\n  margin-right: 48px !important; }\\n\\n.m-12 {\\n  margin: 48px !important; }\\n\\n.p-12 {\\n  padding: 48px !important; }\\n\\n.pt-13 {\\n  padding-top: 52px !important; }\\n\\n.pb-13 {\\n  padding-bottom: 52px !important; }\\n\\n.pl-13 {\\n  padding-left: 52px !important; }\\n\\n.pr-13 {\\n  padding-right: 52px !important; }\\n\\n.mt-13 {\\n  margin-top: 52px !important; }\\n\\n.mb-13 {\\n  margin-bottom: 52px !important; }\\n\\n.ml-13 {\\n  margin-left: 52px !important; }\\n\\n.mr-13 {\\n  margin-right: 52px !important; }\\n\\n.m-13 {\\n  margin: 52px !important; }\\n\\n.p-13 {\\n  padding: 52px !important; }\\n\\n.pt-14 {\\n  padding-top: 56px !important; }\\n\\n.pb-14 {\\n  padding-bottom: 56px !important; }\\n\\n.pl-14 {\\n  padding-left: 56px !important; }\\n\\n.pr-14 {\\n  padding-right: 56px !important; }\\n\\n.mt-14 {\\n  margin-top: 56px !important; }\\n\\n.mb-14 {\\n  margin-bottom: 56px !important; }\\n\\n.ml-14 {\\n  margin-left: 56px !important; }\\n\\n.mr-14 {\\n  margin-right: 56px !important; }\\n\\n.m-14 {\\n  margin: 56px !important; }\\n\\n.p-14 {\\n  padding: 56px !important; }\\n\\n.pt-15 {\\n  padding-top: 60px !important; }\\n\\n.pb-15 {\\n  padding-bottom: 60px !important; }\\n\\n.pl-15 {\\n  padding-left: 60px !important; }\\n\\n.pr-15 {\\n  padding-right: 60px !important; }\\n\\n.mt-15 {\\n  margin-top: 60px !important; }\\n\\n.mb-15 {\\n  margin-bottom: 60px !important; }\\n\\n.ml-15 {\\n  margin-left: 60px !important; }\\n\\n.mr-15 {\\n  margin-right: 60px !important; }\\n\\n.m-15 {\\n  margin: 60px !important; }\\n\\n.p-15 {\\n  padding: 60px !important; }\\n\\n.pt-16 {\\n  padding-top: 64px !important; }\\n\\n.pb-16 {\\n  padding-bottom: 64px !important; }\\n\\n.pl-16 {\\n  padding-left: 64px !important; }\\n\\n.pr-16 {\\n  padding-right: 64px !important; }\\n\\n.mt-16 {\\n  margin-top: 64px !important; }\\n\\n.mb-16 {\\n  margin-bottom: 64px !important; }\\n\\n.ml-16 {\\n  margin-left: 64px !important; }\\n\\n.mr-16 {\\n  margin-right: 64px !important; }\\n\\n.m-16 {\\n  margin: 64px !important; }\\n\\n.p-16 {\\n  padding: 64px !important; }\\n\\n.pt-17 {\\n  padding-top: 68px !important; }\\n\\n.pb-17 {\\n  padding-bottom: 68px !important; }\\n\\n.pl-17 {\\n  padding-left: 68px !important; }\\n\\n.pr-17 {\\n  padding-right: 68px !important; }\\n\\n.mt-17 {\\n  margin-top: 68px !important; }\\n\\n.mb-17 {\\n  margin-bottom: 68px !important; }\\n\\n.ml-17 {\\n  margin-left: 68px !important; }\\n\\n.mr-17 {\\n  margin-right: 68px !important; }\\n\\n.m-17 {\\n  margin: 68px !important; }\\n\\n.p-17 {\\n  padding: 68px !important; }\\n\\n.pt-18 {\\n  padding-top: 72px !important; }\\n\\n.pb-18 {\\n  padding-bottom: 72px !important; }\\n\\n.pl-18 {\\n  padding-left: 72px !important; }\\n\\n.pr-18 {\\n  padding-right: 72px !important; }\\n\\n.mt-18 {\\n  margin-top: 72px !important; }\\n\\n.mb-18 {\\n  margin-bottom: 72px !important; }\\n\\n.ml-18 {\\n  margin-left: 72px !important; }\\n\\n.mr-18 {\\n  margin-right: 72px !important; }\\n\\n.m-18 {\\n  margin: 72px !important; }\\n\\n.p-18 {\\n  padding: 72px !important; }\\n\\n.pt-19 {\\n  padding-top: 76px !important; }\\n\\n.pb-19 {\\n  padding-bottom: 76px !important; }\\n\\n.pl-19 {\\n  padding-left: 76px !important; }\\n\\n.pr-19 {\\n  padding-right: 76px !important; }\\n\\n.mt-19 {\\n  margin-top: 76px !important; }\\n\\n.mb-19 {\\n  margin-bottom: 76px !important; }\\n\\n.ml-19 {\\n  margin-left: 76px !important; }\\n\\n.mr-19 {\\n  margin-right: 76px !important; }\\n\\n.m-19 {\\n  margin: 76px !important; }\\n\\n.p-19 {\\n  padding: 76px !important; }\\n\\n.pt-20 {\\n  padding-top: 80px !important; }\\n\\n.pb-20 {\\n  padding-bottom: 80px !important; }\\n\\n.pl-20 {\\n  padding-left: 80px !important; }\\n\\n.pr-20 {\\n  padding-right: 80px !important; }\\n\\n.mt-20 {\\n  margin-top: 80px !important; }\\n\\n.mb-20 {\\n  margin-bottom: 80px !important; }\\n\\n.ml-20 {\\n  margin-left: 80px !important; }\\n\\n.mr-20 {\\n  margin-right: 80px !important; }\\n\\n.m-20 {\\n  margin: 80px !important; }\\n\\n.p-20 {\\n  padding: 80px !important; }\\n\\n.d-block {\\n  display: block; }\\n\\n.w-full {\\n  width: 100%; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.pos-relative {\\n  position: relative; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.TeamRow:nth-child(odd) {\\n  background: rgba(255, 255, 255, 0.5); }\\n\\n.TeamRow__row {\\n  align-items: center;\\n  border: 2px solid rgba(0, 0, 0, 0);\\n  display: flex;\\n  flex-direction: row;\\n  height: 80px; }\\n\\n.TeamRow__row .TeamRow__team-name {\\n  display: inline-block;\\n  min-width: 300px;\\n  flex-grow: 3; }\\n  .TeamRow__row .TeamRow__team-name .TeamIcon {\\n    margin-right: 0px; }\\n  .TeamRow__row .TeamRow__team-name .TeamRow__team-description {\\n    min-width: 276px;\\n    max-width: 400px; }\\n\\n.SystemUserDetail .TeamRow__col-description {\\n  min-width: 276px;\\n  max-width: 400px; }\\n\\n.TeamRow__row .TeamRow__description {\\n  align-items: center;\\n  display: flex;\\n  height: 100%;\\n  overflow: hidden;\\n  width: 150px;\\n  max-width: 400px; }\\n  .TeamRow__row .TeamRow__description.adjusted {\\n    width: 120px; }\\n  .TeamRow__row .TeamRow__description i {\\n    margin-right: 5px; }\\n  .TeamRow__row .TeamRow__description > a {\\n    color: black;\\n    text-decoration: none;\\n    padding: 3px 5px; }\\n    .TeamRow__row .TeamRow__description > a:hover {\\n      background-color: rgba(0, 0, 0, 0.15);\\n      border-radius: 3px; }\\n    .TeamRow__row .TeamRow__description > a.warning {\\n      color: #d64946; }\\n\\n.TeamRow__row .TeamRow__actions {\\n  align-items: center;\\n  justify-content: flex-end;\\n  display: flex;\\n  height: 100%;\\n  width: 150px;\\n  max-width: 400px;\\n  padding-right: 15px; }\\n\\n.TeamRow__row .TeamIcon__content {\\n  opacity: 1; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ChannelsList .DataGrid .DataGrid_row {\\n  min-height: 40px;\\n  cursor: pointer;\\n  padding-left: 16px; }\\n\\n.ChannelsList .DataGrid .DataGrid_cell .TeamList_editRow {\\n  padding-right: 20px; }\\n\\n.ChannelsList .DataGrid .DataGrid_cell .TeamList_channelDisplayName {\\n  font-weight: 600;\\n  color: #333333;\\n  opacity: 0.8; }\\n\\n.ChannelsList .DataGrid .DataGrid_cell .channel-icon {\\n  display: inline-flex;\\n  justify-content: center;\\n  margin-right: 10px;\\n  opacity: 0.8;\\n  width: 16px; }\\n\\n.ChannelsList .DataGrid .DataGrid_cell .row-content {\\n  display: flex;\\n  align-items: center; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".UsersToRemove .DataGrid {\\n  display: flex;\\n  flex-direction: column;\\n  height: calc(90vh - 190px);\\n  width: 100%;\\n  padding: 0; }\\n  .UsersToRemove .DataGrid .DataGrid_rows {\\n    flex-grow: 500;\\n    height: 1px;\\n    overflow-y: scroll; }\\n  .UsersToRemove .DataGrid .DataGrid_empty {\\n    margin: auto; }\\n\\n.UsersToRemove .UsersToRemoveGroups a {\\n  text-decoration: none;\\n  color: var(--sys-center-channel-color); }\\n  .UsersToRemove .UsersToRemoveGroups a:hover {\\n    text-decoration: underline; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".TeamsList .DataGrid .DataGrid_row {\\n  cursor: pointer; }\\n\\n.TeamsList .DataGrid .DataGrid_cell .TeamList_nameColumn {\\n  display: flex;\\n  align-items: center;\\n  height: 80px; }\\n  .TeamsList .DataGrid .DataGrid_cell .TeamList_nameColumn .TeamList_nameText {\\n    overflow: hidden;\\n    padding-right: 40px;\\n    opacity: 0.8; }\\n  .TeamsList .DataGrid .DataGrid_cell .TeamList_nameColumn .TeamList__lowerOpacity {\\n    opacity: 0.8; }\\n  .TeamsList .DataGrid .DataGrid_cell .TeamList_nameColumn .TeamList_descriptionText {\\n    text-overflow: ellipsis;\\n    overflow: hidden; }\\n\\n.TeamsList .DataGrid .DataGrid_cell .TeamList_managementText {\\n  opacity: 0.65; }\\n\\n.TeamsList .DataGrid .DataGrid_cell .TeamList_editText {\\n  padding-right: 20px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".NewUserBadge {\\n  background: #1156b2;\\n  color: #FFF;\\n  text-transform: uppercase;\\n  padding: 2px 4px;\\n  border-radius: 3px; }\\n\\n.UserGrid_nameRow {\\n  display: flex;\\n  height: 80px; }\\n  .UserGrid_nameRow .UserGrid_name {\\n    display: flex;\\n    flex-grow: 1;\\n    flex-shrink: 1;\\n    flex-direction: column;\\n    align-self: center;\\n    padding-left: 10px;\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n    .UserGrid_nameRow .UserGrid_name span {\\n      overflow: hidden;\\n      text-overflow: ellipsis; }\\n\\n.UserGrid_removeRow {\\n  padding-right: 20px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".AlertBanner {\\n  border-radius: 4px;\\n  border: 1px solid;\\n  padding: 16px;\\n  display: flex;\\n  overflow: hidden; }\\n  .AlertBanner.danger {\\n    background: rgba(var(--sys-error-text-color-rgb), 0.08);\\n    border-color: rgba(var(--sys-error-text-color-rgb), 0.24); }\\n    .AlertBanner.danger .AlertBanner__icon i {\\n      color: var(--sys-error-text); }\\n  .AlertBanner.info {\\n    background: rgba(var(--sys-sidebar-text-active-border-rgb), 0.08);\\n    border-color: rgba(var(--sys-sidebar-text-active-border-rgb), 0.24); }\\n    .AlertBanner.info .AlertBanner__icon i {\\n      color: var(--sys-sidebar-text-active-border); }\\n  .AlertBanner.warning {\\n    background: rgba(var(--sys-away-indicator-rgb), 0.08);\\n    border-color: rgba(var(--sys-away-indicator-rgb), 0.24); }\\n    .AlertBanner.warning .AlertBanner__icon i {\\n      color: var(--sys-away-indicator); }\\n\\n.AlertBanner__icon {\\n  flex-grow: 0;\\n  flex-shrink: 0;\\n  font-size: 18px;\\n  line-height: 20px; }\\n  .AlertBanner__icon i::before {\\n    margin: 0; }\\n\\n.AlertBanner__body {\\n  flex-grow: 1;\\n  flex-shrink: 1;\\n  margin-left: 12px;\\n  font-size: 14px;\\n  line-height: 20px;\\n  color: var(--sys-center-channel-color); }\\n\\n.AlertBanner__title {\\n  font-weight: 600; }\\n\\n.AlertBanner__message {\\n  margin-top: 8px; }\\n\\n.AlertBanner__closeButton {\\n  background: none;\\n  border: none;\\n  position: relative;\\n  padding: 5px;\\n  height: 28px;\\n  width: 28px;\\n  border-radius: 4px;\\n  top: -12px;\\n  right: -12px;\\n  display: flex; }\\n  .AlertBanner__closeButton i {\\n    color: rgba(var(--sys-center-channel-color-rgb), 0.56);\\n    font-size: 18px;\\n    line-height: 16px; }\\n    .AlertBanner__closeButton i::before {\\n      margin: 0; }\\n  .AlertBanner__closeButton:hover {\\n    background: rgba(0, 0, 0, 0.08); }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".d-flex {\\n  display: -webkit-box !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important; }\\n\\n.d-inline-flex {\\n  display: -webkit-inline-box !important;\\n  display: -ms-inline-flexbox !important;\\n  display: inline-flex !important; }\\n\\n.flex-row {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: row !important;\\n  flex-direction: row !important; }\\n\\n.flex-column {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: normal !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important; }\\n\\n.flex-row-reverse {\\n  -webkit-box-orient: horizontal !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: row-reverse !important;\\n  flex-direction: row-reverse !important; }\\n\\n.flex-column-reverse {\\n  -webkit-box-orient: vertical !important;\\n  -webkit-box-direction: reverse !important;\\n  -ms-flex-direction: column-reverse !important;\\n  flex-direction: column-reverse !important; }\\n\\n.flex-wrap {\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important; }\\n\\n.flex-nowrap {\\n  -ms-flex-wrap: nowrap !important;\\n  flex-wrap: nowrap !important; }\\n\\n.flex-wrap-reverse {\\n  -ms-flex-wrap: wrap-reverse !important;\\n  flex-wrap: wrap-reverse !important; }\\n\\n.justify-content-start {\\n  -webkit-box-pack: start !important;\\n  -ms-flex-pack: start !important;\\n  justify-content: flex-start !important; }\\n\\n.justify-content-end {\\n  -webkit-box-pack: end !important;\\n  -ms-flex-pack: end !important;\\n  justify-content: flex-end !important; }\\n\\n.justify-content-center {\\n  -webkit-box-pack: center !important;\\n  -ms-flex-pack: center !important;\\n  justify-content: center !important; }\\n\\n.justify-content-between {\\n  -webkit-box-pack: justify !important;\\n  -ms-flex-pack: justify !important;\\n  justify-content: space-between !important; }\\n\\n.justify-content-around {\\n  -ms-flex-pack: distribute !important;\\n  justify-content: space-around !important; }\\n\\n.align-items-start {\\n  -webkit-box-align: start !important;\\n  -ms-flex-align: start !important;\\n  align-items: flex-start !important; }\\n\\n.align-items-end {\\n  -webkit-box-align: end !important;\\n  -ms-flex-align: end !important;\\n  align-items: flex-end !important; }\\n\\n.align-items-center {\\n  -webkit-box-align: center !important;\\n  -ms-flex-align: center !important;\\n  align-items: center !important; }\\n\\n.align-items-baseline {\\n  -webkit-box-align: baseline !important;\\n  -ms-flex-align: baseline !important;\\n  align-items: baseline !important; }\\n\\n.align-items-stretch {\\n  -webkit-box-align: stretch !important;\\n  -ms-flex-align: stretch !important;\\n  align-items: stretch !important; }\\n\\n.align-content-start {\\n  -ms-flex-line-pack: start !important;\\n  align-content: flex-start !important; }\\n\\n.align-content-end {\\n  -ms-flex-line-pack: end !important;\\n  align-content: flex-end !important; }\\n\\n.align-content-center {\\n  -ms-flex-line-pack: center !important;\\n  align-content: center !important; }\\n\\n.align-content-between {\\n  -ms-flex-line-pack: justify !important;\\n  align-content: space-between !important; }\\n\\n.align-content-around {\\n  -ms-flex-line-pack: distribute !important;\\n  align-content: space-around !important; }\\n\\n.align-content-stretch {\\n  -ms-flex-line-pack: stretch !important;\\n  align-content: stretch !important; }\\n\\n.align-self-auto {\\n  -ms-flex-item-align: auto !important;\\n  align-self: auto !important; }\\n\\n.align-self-start {\\n  -ms-flex-item-align: start !important;\\n  align-self: flex-start !important; }\\n\\n.align-self-end {\\n  -ms-flex-item-align: end !important;\\n  align-self: flex-end !important; }\\n\\n.align-self-center {\\n  -ms-flex-item-align: center !important;\\n  align-self: center !important; }\\n\\n.align-self-baseline {\\n  -ms-flex-item-align: baseline !important;\\n  align-self: baseline !important; }\\n\\n.align-self-stretch {\\n  -ms-flex-item-align: stretch !important;\\n  align-self: stretch !important; }\\n\\n@media (min-width: 576px) {\\n  .flex-sm-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-sm-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-sm-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-sm-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-sm-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-sm-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-sm-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-sm-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-sm-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-sm-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-sm-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-sm-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-sm-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-sm-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-sm-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-sm-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-sm-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-sm-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-sm-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-sm-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-sm-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-sm-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-sm-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-sm-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-sm-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-sm-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-sm-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-sm-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-sm-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 768px) {\\n  .flex-md-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-md-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-md-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-md-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-md-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-md-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-md-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-md-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-md-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-md-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-md-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-md-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-md-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-md-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-md-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-md-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-md-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-md-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-md-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-md-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-md-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-md-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-md-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-md-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-md-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-md-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-md-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-md-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-md-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 992px) {\\n  .flex-lg-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-lg-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-lg-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-lg-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-lg-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-lg-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-lg-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-lg-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-lg-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-lg-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-lg-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-lg-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-lg-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-lg-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-lg-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-lg-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-lg-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-lg-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-lg-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-lg-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-lg-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-lg-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-lg-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-lg-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-lg-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-lg-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-lg-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-lg-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-lg-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n@media (min-width: 1200px) {\\n  .flex-xl-row {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: row !important;\\n    flex-direction: row !important; }\\n  .flex-xl-column {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n    -ms-flex-direction: column !important;\\n    flex-direction: column !important; }\\n  .flex-xl-row-reverse {\\n    -webkit-box-orient: horizontal !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: row-reverse !important;\\n    flex-direction: row-reverse !important; }\\n  .flex-xl-column-reverse {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: reverse !important;\\n    -ms-flex-direction: column-reverse !important;\\n    flex-direction: column-reverse !important; }\\n  .flex-xl-wrap {\\n    -ms-flex-wrap: wrap !important;\\n    flex-wrap: wrap !important; }\\n  .flex-xl-nowrap {\\n    -ms-flex-wrap: nowrap !important;\\n    flex-wrap: nowrap !important; }\\n  .flex-xl-wrap-reverse {\\n    -ms-flex-wrap: wrap-reverse !important;\\n    flex-wrap: wrap-reverse !important; }\\n  .justify-content-xl-start {\\n    -webkit-box-pack: start !important;\\n    -ms-flex-pack: start !important;\\n    justify-content: flex-start !important; }\\n  .justify-content-xl-end {\\n    -webkit-box-pack: end !important;\\n    -ms-flex-pack: end !important;\\n    justify-content: flex-end !important; }\\n  .justify-content-xl-center {\\n    -webkit-box-pack: center !important;\\n    -ms-flex-pack: center !important;\\n    justify-content: center !important; }\\n  .justify-content-xl-between {\\n    -webkit-box-pack: justify !important;\\n    -ms-flex-pack: justify !important;\\n    justify-content: space-between !important; }\\n  .justify-content-xl-around {\\n    -ms-flex-pack: distribute !important;\\n    justify-content: space-around !important; }\\n  .align-items-xl-start {\\n    -webkit-box-align: start !important;\\n    -ms-flex-align: start !important;\\n    align-items: flex-start !important; }\\n  .align-items-xl-end {\\n    -webkit-box-align: end !important;\\n    -ms-flex-align: end !important;\\n    align-items: flex-end !important; }\\n  .align-items-xl-center {\\n    -webkit-box-align: center !important;\\n    -ms-flex-align: center !important;\\n    align-items: center !important; }\\n  .align-items-xl-baseline {\\n    -webkit-box-align: baseline !important;\\n    -ms-flex-align: baseline !important;\\n    align-items: baseline !important; }\\n  .align-items-xl-stretch {\\n    -webkit-box-align: stretch !important;\\n    -ms-flex-align: stretch !important;\\n    align-items: stretch !important; }\\n  .align-content-xl-start {\\n    -ms-flex-line-pack: start !important;\\n    align-content: flex-start !important; }\\n  .align-content-xl-end {\\n    -ms-flex-line-pack: end !important;\\n    align-content: flex-end !important; }\\n  .align-content-xl-center {\\n    -ms-flex-line-pack: center !important;\\n    align-content: center !important; }\\n  .align-content-xl-between {\\n    -ms-flex-line-pack: justify !important;\\n    align-content: space-between !important; }\\n  .align-content-xl-around {\\n    -ms-flex-line-pack: distribute !important;\\n    align-content: space-around !important; }\\n  .align-content-xl-stretch {\\n    -ms-flex-line-pack: stretch !important;\\n    align-content: stretch !important; }\\n  .align-self-xl-auto {\\n    -ms-flex-item-align: auto !important;\\n    align-self: auto !important; }\\n  .align-self-xl-start {\\n    -ms-flex-item-align: start !important;\\n    align-self: flex-start !important; }\\n  .align-self-xl-end {\\n    -ms-flex-item-align: end !important;\\n    align-self: flex-end !important; }\\n  .align-self-xl-center {\\n    -ms-flex-item-align: center !important;\\n    align-self: center !important; }\\n  .align-self-xl-baseline {\\n    -ms-flex-item-align: baseline !important;\\n    align-self: baseline !important; }\\n  .align-self-xl-stretch {\\n    -ms-flex-item-align: stretch !important;\\n    align-self: stretch !important; } }\\n\\n.col {\\n  -ms-flex-preferred-size: 0;\\n  flex-basis: 0;\\n  -ms-flex-positive: 1;\\n  flex-grow: 1;\\n  max-width: 100%; }\\n\\n.col-auto {\\n  -ms-flex: 0 0 auto;\\n  flex: 0 0 auto;\\n  width: auto;\\n  max-width: 100%; }\\n\\n@keyframes spin {\\n  from {\\n    transform: scale(1) rotate(0deg); }\\n  to {\\n    transform: scale(1) rotate(360deg); } }\\n\\n@keyframes highlight {\\n  from {\\n    background: rgba(255, 255, 0, 0.5); }\\n  to {\\n    background: none; } }\\n\\n.pt-0 {\\n  padding-top: 0px !important; }\\n\\n.pb-0 {\\n  padding-bottom: 0px !important; }\\n\\n.pl-0 {\\n  padding-left: 0px !important; }\\n\\n.pr-0 {\\n  padding-right: 0px !important; }\\n\\n.mt-0 {\\n  margin-top: 0px !important; }\\n\\n.mb-0 {\\n  margin-bottom: 0px !important; }\\n\\n.ml-0 {\\n  margin-left: 0px !important; }\\n\\n.mr-0 {\\n  margin-right: 0px !important; }\\n\\n.m-0 {\\n  margin: 0px !important; }\\n\\n.p-0 {\\n  padding: 0px !important; }\\n\\n.pt-1 {\\n  padding-top: 4px !important; }\\n\\n.pb-1 {\\n  padding-bottom: 4px !important; }\\n\\n.pl-1 {\\n  padding-left: 4px !important; }\\n\\n.pr-1 {\\n  padding-right: 4px !important; }\\n\\n.mt-1 {\\n  margin-top: 4px !important; }\\n\\n.mb-1 {\\n  margin-bottom: 4px !important; }\\n\\n.ml-1 {\\n  margin-left: 4px !important; }\\n\\n.mr-1 {\\n  margin-right: 4px !important; }\\n\\n.m-1 {\\n  margin: 4px !important; }\\n\\n.p-1 {\\n  padding: 4px !important; }\\n\\n.pt-2 {\\n  padding-top: 8px !important; }\\n\\n.pb-2 {\\n  padding-bottom: 8px !important; }\\n\\n.pl-2 {\\n  padding-left: 8px !important; }\\n\\n.pr-2 {\\n  padding-right: 8px !important; }\\n\\n.mt-2 {\\n  margin-top: 8px !important; }\\n\\n.mb-2 {\\n  margin-bottom: 8px !important; }\\n\\n.ml-2 {\\n  margin-left: 8px !important; }\\n\\n.mr-2 {\\n  margin-right: 8px !important; }\\n\\n.m-2 {\\n  margin: 8px !important; }\\n\\n.p-2 {\\n  padding: 8px !important; }\\n\\n.pt-3 {\\n  padding-top: 12px !important; }\\n\\n.pb-3 {\\n  padding-bottom: 12px !important; }\\n\\n.pl-3 {\\n  padding-left: 12px !important; }\\n\\n.pr-3 {\\n  padding-right: 12px !important; }\\n\\n.mt-3 {\\n  margin-top: 12px !important; }\\n\\n.mb-3 {\\n  margin-bottom: 12px !important; }\\n\\n.ml-3 {\\n  margin-left: 12px !important; }\\n\\n.mr-3 {\\n  margin-right: 12px !important; }\\n\\n.m-3 {\\n  margin: 12px !important; }\\n\\n.p-3 {\\n  padding: 12px !important; }\\n\\n.pt-4 {\\n  padding-top: 16px !important; }\\n\\n.pb-4 {\\n  padding-bottom: 16px !important; }\\n\\n.pl-4 {\\n  padding-left: 16px !important; }\\n\\n.pr-4 {\\n  padding-right: 16px !important; }\\n\\n.mt-4 {\\n  margin-top: 16px !important; }\\n\\n.mb-4 {\\n  margin-bottom: 16px !important; }\\n\\n.ml-4 {\\n  margin-left: 16px !important; }\\n\\n.mr-4 {\\n  margin-right: 16px !important; }\\n\\n.m-4 {\\n  margin: 16px !important; }\\n\\n.p-4 {\\n  padding: 16px !important; }\\n\\n.pt-5 {\\n  padding-top: 20px !important; }\\n\\n.pb-5 {\\n  padding-bottom: 20px !important; }\\n\\n.pl-5 {\\n  padding-left: 20px !important; }\\n\\n.pr-5 {\\n  padding-right: 20px !important; }\\n\\n.mt-5 {\\n  margin-top: 20px !important; }\\n\\n.mb-5 {\\n  margin-bottom: 20px !important; }\\n\\n.ml-5 {\\n  margin-left: 20px !important; }\\n\\n.mr-5 {\\n  margin-right: 20px !important; }\\n\\n.m-5 {\\n  margin: 20px !important; }\\n\\n.p-5 {\\n  padding: 20px !important; }\\n\\n.pt-6 {\\n  padding-top: 24px !important; }\\n\\n.pb-6 {\\n  padding-bottom: 24px !important; }\\n\\n.pl-6 {\\n  padding-left: 24px !important; }\\n\\n.pr-6 {\\n  padding-right: 24px !important; }\\n\\n.mt-6 {\\n  margin-top: 24px !important; }\\n\\n.mb-6 {\\n  margin-bottom: 24px !important; }\\n\\n.ml-6 {\\n  margin-left: 24px !important; }\\n\\n.mr-6 {\\n  margin-right: 24px !important; }\\n\\n.m-6 {\\n  margin: 24px !important; }\\n\\n.p-6 {\\n  padding: 24px !important; }\\n\\n.pt-7 {\\n  padding-top: 28px !important; }\\n\\n.pb-7 {\\n  padding-bottom: 28px !important; }\\n\\n.pl-7 {\\n  padding-left: 28px !important; }\\n\\n.pr-7 {\\n  padding-right: 28px !important; }\\n\\n.mt-7 {\\n  margin-top: 28px !important; }\\n\\n.mb-7 {\\n  margin-bottom: 28px !important; }\\n\\n.ml-7 {\\n  margin-left: 28px !important; }\\n\\n.mr-7 {\\n  margin-right: 28px !important; }\\n\\n.m-7 {\\n  margin: 28px !important; }\\n\\n.p-7 {\\n  padding: 28px !important; }\\n\\n.pt-8 {\\n  padding-top: 32px !important; }\\n\\n.pb-8 {\\n  padding-bottom: 32px !important; }\\n\\n.pl-8 {\\n  padding-left: 32px !important; }\\n\\n.pr-8 {\\n  padding-right: 32px !important; }\\n\\n.mt-8 {\\n  margin-top: 32px !important; }\\n\\n.mb-8 {\\n  margin-bottom: 32px !important; }\\n\\n.ml-8 {\\n  margin-left: 32px !important; }\\n\\n.mr-8 {\\n  margin-right: 32px !important; }\\n\\n.m-8 {\\n  margin: 32px !important; }\\n\\n.p-8 {\\n  padding: 32px !important; }\\n\\n.pt-9 {\\n  padding-top: 36px !important; }\\n\\n.pb-9 {\\n  padding-bottom: 36px !important; }\\n\\n.pl-9 {\\n  padding-left: 36px !important; }\\n\\n.pr-9 {\\n  padding-right: 36px !important; }\\n\\n.mt-9 {\\n  margin-top: 36px !important; }\\n\\n.mb-9 {\\n  margin-bottom: 36px !important; }\\n\\n.ml-9 {\\n  margin-left: 36px !important; }\\n\\n.mr-9 {\\n  margin-right: 36px !important; }\\n\\n.m-9 {\\n  margin: 36px !important; }\\n\\n.p-9 {\\n  padding: 36px !important; }\\n\\n.pt-10 {\\n  padding-top: 40px !important; }\\n\\n.pb-10 {\\n  padding-bottom: 40px !important; }\\n\\n.pl-10 {\\n  padding-left: 40px !important; }\\n\\n.pr-10 {\\n  padding-right: 40px !important; }\\n\\n.mt-10 {\\n  margin-top: 40px !important; }\\n\\n.mb-10 {\\n  margin-bottom: 40px !important; }\\n\\n.ml-10 {\\n  margin-left: 40px !important; }\\n\\n.mr-10 {\\n  margin-right: 40px !important; }\\n\\n.m-10 {\\n  margin: 40px !important; }\\n\\n.p-10 {\\n  padding: 40px !important; }\\n\\n.pt-11 {\\n  padding-top: 44px !important; }\\n\\n.pb-11 {\\n  padding-bottom: 44px !important; }\\n\\n.pl-11 {\\n  padding-left: 44px !important; }\\n\\n.pr-11 {\\n  padding-right: 44px !important; }\\n\\n.mt-11 {\\n  margin-top: 44px !important; }\\n\\n.mb-11 {\\n  margin-bottom: 44px !important; }\\n\\n.ml-11 {\\n  margin-left: 44px !important; }\\n\\n.mr-11 {\\n  margin-right: 44px !important; }\\n\\n.m-11 {\\n  margin: 44px !important; }\\n\\n.p-11 {\\n  padding: 44px !important; }\\n\\n.pt-12 {\\n  padding-top: 48px !important; }\\n\\n.pb-12 {\\n  padding-bottom: 48px !important; }\\n\\n.pl-12 {\\n  padding-left: 48px !important; }\\n\\n.pr-12 {\\n  padding-right: 48px !important; }\\n\\n.mt-12 {\\n  margin-top: 48px !important; }\\n\\n.mb-12 {\\n  margin-bottom: 48px !important; }\\n\\n.ml-12 {\\n  margin-left: 48px !important; }\\n\\n.mr-12 {\\n  margin-right: 48px !important; }\\n\\n.m-12 {\\n  margin: 48px !important; }\\n\\n.p-12 {\\n  padding: 48px !important; }\\n\\n.pt-13 {\\n  padding-top: 52px !important; }\\n\\n.pb-13 {\\n  padding-bottom: 52px !important; }\\n\\n.pl-13 {\\n  padding-left: 52px !important; }\\n\\n.pr-13 {\\n  padding-right: 52px !important; }\\n\\n.mt-13 {\\n  margin-top: 52px !important; }\\n\\n.mb-13 {\\n  margin-bottom: 52px !important; }\\n\\n.ml-13 {\\n  margin-left: 52px !important; }\\n\\n.mr-13 {\\n  margin-right: 52px !important; }\\n\\n.m-13 {\\n  margin: 52px !important; }\\n\\n.p-13 {\\n  padding: 52px !important; }\\n\\n.pt-14 {\\n  padding-top: 56px !important; }\\n\\n.pb-14 {\\n  padding-bottom: 56px !important; }\\n\\n.pl-14 {\\n  padding-left: 56px !important; }\\n\\n.pr-14 {\\n  padding-right: 56px !important; }\\n\\n.mt-14 {\\n  margin-top: 56px !important; }\\n\\n.mb-14 {\\n  margin-bottom: 56px !important; }\\n\\n.ml-14 {\\n  margin-left: 56px !important; }\\n\\n.mr-14 {\\n  margin-right: 56px !important; }\\n\\n.m-14 {\\n  margin: 56px !important; }\\n\\n.p-14 {\\n  padding: 56px !important; }\\n\\n.pt-15 {\\n  padding-top: 60px !important; }\\n\\n.pb-15 {\\n  padding-bottom: 60px !important; }\\n\\n.pl-15 {\\n  padding-left: 60px !important; }\\n\\n.pr-15 {\\n  padding-right: 60px !important; }\\n\\n.mt-15 {\\n  margin-top: 60px !important; }\\n\\n.mb-15 {\\n  margin-bottom: 60px !important; }\\n\\n.ml-15 {\\n  margin-left: 60px !important; }\\n\\n.mr-15 {\\n  margin-right: 60px !important; }\\n\\n.m-15 {\\n  margin: 60px !important; }\\n\\n.p-15 {\\n  padding: 60px !important; }\\n\\n.pt-16 {\\n  padding-top: 64px !important; }\\n\\n.pb-16 {\\n  padding-bottom: 64px !important; }\\n\\n.pl-16 {\\n  padding-left: 64px !important; }\\n\\n.pr-16 {\\n  padding-right: 64px !important; }\\n\\n.mt-16 {\\n  margin-top: 64px !important; }\\n\\n.mb-16 {\\n  margin-bottom: 64px !important; }\\n\\n.ml-16 {\\n  margin-left: 64px !important; }\\n\\n.mr-16 {\\n  margin-right: 64px !important; }\\n\\n.m-16 {\\n  margin: 64px !important; }\\n\\n.p-16 {\\n  padding: 64px !important; }\\n\\n.pt-17 {\\n  padding-top: 68px !important; }\\n\\n.pb-17 {\\n  padding-bottom: 68px !important; }\\n\\n.pl-17 {\\n  padding-left: 68px !important; }\\n\\n.pr-17 {\\n  padding-right: 68px !important; }\\n\\n.mt-17 {\\n  margin-top: 68px !important; }\\n\\n.mb-17 {\\n  margin-bottom: 68px !important; }\\n\\n.ml-17 {\\n  margin-left: 68px !important; }\\n\\n.mr-17 {\\n  margin-right: 68px !important; }\\n\\n.m-17 {\\n  margin: 68px !important; }\\n\\n.p-17 {\\n  padding: 68px !important; }\\n\\n.pt-18 {\\n  padding-top: 72px !important; }\\n\\n.pb-18 {\\n  padding-bottom: 72px !important; }\\n\\n.pl-18 {\\n  padding-left: 72px !important; }\\n\\n.pr-18 {\\n  padding-right: 72px !important; }\\n\\n.mt-18 {\\n  margin-top: 72px !important; }\\n\\n.mb-18 {\\n  margin-bottom: 72px !important; }\\n\\n.ml-18 {\\n  margin-left: 72px !important; }\\n\\n.mr-18 {\\n  margin-right: 72px !important; }\\n\\n.m-18 {\\n  margin: 72px !important; }\\n\\n.p-18 {\\n  padding: 72px !important; }\\n\\n.pt-19 {\\n  padding-top: 76px !important; }\\n\\n.pb-19 {\\n  padding-bottom: 76px !important; }\\n\\n.pl-19 {\\n  padding-left: 76px !important; }\\n\\n.pr-19 {\\n  padding-right: 76px !important; }\\n\\n.mt-19 {\\n  margin-top: 76px !important; }\\n\\n.mb-19 {\\n  margin-bottom: 76px !important; }\\n\\n.ml-19 {\\n  margin-left: 76px !important; }\\n\\n.mr-19 {\\n  margin-right: 76px !important; }\\n\\n.m-19 {\\n  margin: 76px !important; }\\n\\n.p-19 {\\n  padding: 76px !important; }\\n\\n.pt-20 {\\n  padding-top: 80px !important; }\\n\\n.pb-20 {\\n  padding-bottom: 80px !important; }\\n\\n.pl-20 {\\n  padding-left: 80px !important; }\\n\\n.pr-20 {\\n  padding-right: 80px !important; }\\n\\n.mt-20 {\\n  margin-top: 80px !important; }\\n\\n.mb-20 {\\n  margin-bottom: 80px !important; }\\n\\n.ml-20 {\\n  margin-left: 80px !important; }\\n\\n.mr-20 {\\n  margin-right: 80px !important; }\\n\\n.m-20 {\\n  margin: 80px !important; }\\n\\n.p-20 {\\n  padding: 80px !important; }\\n\\n.d-block {\\n  display: block; }\\n\\n.w-full {\\n  width: 100%; }\\n\\n.a11y--focused {\\n  border-radius: 4px;\\n  box-shadow: 0 0 0 1px 2px #166de0; }\\n\\n.pos-relative {\\n  position: relative; }\\n\\n.hidden-label {\\n  position: absolute;\\n  overflow: hidden;\\n  height: 1px;\\n  width: 1px;\\n  margin: -1px;\\n  padding: 0;\\n  border: 0; }\\n\\n.AdminPanel {\\n  -webkit-border-radius: 2px;\\n  -moz-border-radius: 2px;\\n  -ms-border-radius: 2px;\\n  -o-border-radius: 2px;\\n  border-radius: 2px;\\n  -webkit-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  -moz-box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.5);\\n  font-size: .95em;\\n  margin: 2em 0 1em;\\n  padding: 0;\\n  border: solid 1px rgba(0, 0, 0, 0.1); }\\n  .AdminPanel .AdminPanel__content {\\n    padding: 10px 20px 20px; }\\n  .AdminPanel .AdminPanel__table {\\n    width: 100%; }\\n    .AdminPanel .AdminPanel__table th {\\n      border-bottom: solid 1px rgba(0, 0, 0, 0.1); }\\n    .AdminPanel .AdminPanel__table td,\\n    .AdminPanel .AdminPanel__table th {\\n      padding: 6px 20px; }\\n      .AdminPanel .AdminPanel__table td:first-child,\\n      .AdminPanel .AdminPanel__table th:first-child {\\n        padding-left: 20px; }\\n  .AdminPanel .header {\\n    align-items: center;\\n    background: white;\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    padding: 20px; }\\n    .AdminPanel .header h3 {\\n      font-size: 18px;\\n      font-weight: normal;\\n      margin: 0;\\n      padding: 0; }\\n    .AdminPanel .header .button {\\n      self-align: end;\\n      margin-left: 10px; }\\n      .AdminPanel .header .button svg {\\n        transform: rotate(0deg);\\n        transition: transform 300ms; }\\n  .AdminPanel.closed .header .button svg {\\n    transform: rotate(90deg);\\n    transition: transform 300ms; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {createSelector} from 'reselect';\nimport {cloneDeep} from 'lodash';\n\nimport {getMySystemPermissions} from 'mattermost-redux/selectors/entities/roles_helpers';\nimport {ResourceToSysConsolePermissionsTable} from 'mattermost-redux/constants/permissions_sysconsole';\n\nimport AdminDefinition from 'components/admin_console/admin_definition.jsx';\n\nexport const getAdminDefinition = createSelector(\n    () => AdminDefinition,\n    (state) => state.plugins.adminConsoleReducers,\n    (adminDefinition, reducers) => {\n        let result = cloneDeep(AdminDefinition);\n        for (const reducer of Object.values(reducers)) {\n            result = reducer(result);\n        }\n        return result;\n    },\n);\n\nexport const getAdminConsoleCustomComponents = (state, pluginId) =>\n    state.plugins.adminConsoleCustomComponents[pluginId] || {};\n\nexport const getConsoleAccess = createSelector(\n    getAdminDefinition,\n    getMySystemPermissions,\n    (adminDefinition, mySystemPermissions) => {\n        const consoleAccess = {read: {}, write: {}};\n        const addEntriesForKey = (entryKey) => {\n            const permissions = ResourceToSysConsolePermissionsTable[entryKey].filter((x) => mySystemPermissions.has(x));\n            consoleAccess.read[entryKey] = permissions.length !== 0;\n            consoleAccess.write[entryKey] = permissions.some((permission) => permission.startsWith('sysconsole_write_'));\n        };\n        const mapAccessValuesForKey = ([key]) => {\n            if (key === 'user_management') {\n                ['users', 'groups', 'teams', 'channels', 'permissions', 'system_roles'].forEach((userManagementKey) => {\n                    addEntriesForKey(`${key}.${userManagementKey}`);\n                });\n            } else {\n                addEntriesForKey(key);\n            }\n        };\n        Object.entries(adminDefinition).forEach(mapAccessValuesForKey);\n        return consoleAccess;\n    },\n);\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {ActionResult} from 'mattermost-redux/types/actions';\n\nexport type SuccessResult = {data: any}\n\nexport type ErrorResult = {error: any}\n\nexport function isSuccess(result: ActionResult): result is SuccessResult {\n    return 'data' in result && !isError(result);\n}\n\nexport function isError(result: ActionResult): result is ErrorResult {\n    return Boolean((result as ErrorResult).error);\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport FlexSearch from 'flexsearch/dist/flexsearch.es5';\n\nimport {getPluginEntries} from './admin_console_plugin_index';\n\nfunction extractTextsFromSection(section, intl) {\n    const texts = [];\n    if (section.title) {\n        texts.push(intl.formatMessage({id: section.title, defaultMessage: section.title_default}));\n    }\n    if (section.schema && section.schema.name) {\n        texts.push(section.schema.name);\n    }\n    if (section.searchableStrings) {\n        for (const searchableString of section.searchableStrings) {\n            if (typeof searchableString === 'string') {\n                texts.push(intl.formatMessage({id: searchableString, defaultMessage: searchableString}));\n            } else {\n                texts.push(intl.formatMessage({id: searchableString[0], defaultMessage: ''}, searchableString[1]));\n            }\n        }\n    }\n\n    if (section.schema && section.schema.settings) {\n        for (const setting of Object.values(section.schema.settings)) {\n            if (setting.label) {\n                texts.push(intl.formatMessage({id: setting.label, defaultMessage: setting.label_default}, setting.label_values));\n            }\n            if (setting.help_text && typeof setting.help_text === 'string') {\n                texts.push(intl.formatMessage({id: setting.help_text, defaultMessage: setting.help_text_default}, setting.help_text_values));\n            }\n            if (setting.remove_help_text) {\n                texts.push(intl.formatMessage({id: setting.remove_help_text, defaultMessage: setting.remove_help_text_default}));\n            }\n            if (setting.remove_button_text) {\n                texts.push(intl.formatMessage({id: setting.remove_button_text, defaultMessage: setting.remove_button_text_default}));\n            }\n        }\n    }\n    return texts;\n}\n\nexport function adminDefinitionsToUrlsAndTexts(adminDefinition, intl) {\n    const entries = {};\n    const sections = [\n        adminDefinition.about,\n        adminDefinition.reporting,\n        adminDefinition.user_management,\n        adminDefinition.environment,\n        adminDefinition.site,\n        adminDefinition.authentication,\n        adminDefinition.plugins,\n        adminDefinition.integrations,\n        adminDefinition.compliance,\n        adminDefinition.experimental,\n    ];\n    for (const section of sections) {\n        for (const item of Object.values(section)) {\n            if (!item.isDiscovery) {\n                entries[item.url] = extractTextsFromSection(item, intl);\n            }\n        }\n    }\n    return entries;\n}\n\nexport function generateIndex(AdminDefinition, plugins, intl) {\n    const idx = new FlexSearch();\n\n    addToIndex(adminDefinitionsToUrlsAndTexts(AdminDefinition, intl), idx);\n\n    addToIndex(getPluginEntries(plugins), idx);\n\n    return idx;\n}\n\nfunction addToIndex(entries, idx) {\n    for (const key of Object.keys(entries)) {\n        let text = '';\n        for (const str of entries[key]) {\n            text += ' ' + str;\n        }\n        idx.add(key, text);\n    }\n}\n\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {stripMarkdown} from 'utils/markdown';\nimport getEnablePluginSetting from 'components/admin_console/custom_plugin_settings/enable_plugin_setting';\n\nfunction extractTextsFromPlugin(plugin) {\n    const texts = extractTextFromSetting(getEnablePluginSetting(plugin));\n    if (plugin.name) {\n        texts.push(plugin.name);\n    }\n    if (plugin.id) {\n        texts.push(plugin.id);\n    }\n    if (plugin.settings_schema) {\n        if (plugin.settings_schema.footer) {\n            texts.push(stripMarkdown(plugin.settings_schema.footer));\n        }\n        if (plugin.settings_schema.header) {\n            texts.push(stripMarkdown(plugin.settings_schema.header));\n        }\n\n        if (plugin.settings_schema.settings) {\n            const settings = Object.values(plugin.settings_schema.settings);\n\n            for (const setting of settings) {\n                const settingsTexts = extractTextFromSetting(setting, texts);\n                texts.push(...settingsTexts);\n            }\n        }\n    }\n    return texts;\n}\n\nfunction extractTextFromSetting(setting) {\n    const texts = [];\n    if (setting.label) {\n        texts.push(setting.label);\n    }\n    if (setting.display_name) {\n        texts.push(setting.display_name);\n    }\n    if (setting.help_text) {\n        texts.push(stripMarkdown(setting.help_text));\n    }\n    if (setting.key) {\n        texts.push(setting.key);\n    }\n    return texts;\n}\n\nexport function getPluginEntries(pluginsObj = {}) {\n    const entries = {};\n    const plugins = pluginsObj || {};\n    for (const pluginId of Object.keys(plugins)) {\n        const url = `plugin_${pluginId}`;\n        entries[url] = extractTextsFromPlugin(plugins[pluginId]);\n    }\n    return entries;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\nimport {UserSearchOptions, UserListOptions, UserFilters} from 'utils/constants';\n\nexport type FilterOptions = Record<string, string | boolean>\nconst NEVER = 0;\n\n// userSelectorOptionsFromFilter will convert a string UI filter to an options object\n// for selecting users out of redux state\n// Note: this is currently the same as getUserOptionsFromFilter but wrapped to be clear\n// that there are separate purposes (this can be used with both getProfiles and searchProfiles\n// selectors)\nexport function userSelectorOptionsFromFilter(filter: string | undefined): FilterOptions {\n    return getUserOptionsFromFilter(filter);\n}\n\n// getUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the get users endpoint\nexport function getUserOptionsFromFilter(filter: string | undefined): FilterOptions {\n    const options: FilterOptions = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserListOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserListOptions.INACTIVE] = true;\n    }\n    return options;\n}\n\n// searchUserOptionsFromFilter will convert a string UI filter to an options objects\n// for an API request to the search users endpoint\nexport function searchUserOptionsFromFilter(filter: string | undefined): FilterOptions {\n    const options: FilterOptions = {};\n    if (filter === UserFilters.SYSTEM_ADMIN) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_ADMIN;\n    } else if (filter === UserFilters.SYSTEM_GUEST) {\n        options[UserSearchOptions.ROLE] = UserFilters.SYSTEM_GUEST;\n    } else if (filter === UserFilters.INACTIVE) {\n        options[UserSearchOptions.ALLOW_INACTIVE] = true;\n    }\n    return options;\n}\n\n// isActive returns whether a user is active or not.\nexport function isActive(user: {delete_at: number}): boolean {\n    return user.delete_at === NEVER;\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {Permissions} from 'mattermost-redux/constants/index';\n\nconst MAPPING = {\n    enableTeamCreation: {\n        true: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: true}],\n        false: [{roleName: 'system_user', permission: Permissions.CREATE_TEAM, shouldHave: false}],\n    },\n\n    editOthersPosts: {\n        true: [\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n        false: [\n            {roleName: 'team_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: false},\n            {roleName: 'system_admin', permission: Permissions.EDIT_OTHERS_POSTS, shouldHave: true},\n        ],\n    },\n\n    enableOnlyAdminIntegrations: {\n        true: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: false},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: false},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: false},\n        ],\n        false: [\n            {roleName: 'team_user', permission: Permissions.MANAGE_INCOMING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_OUTGOING_WEBHOOKS, shouldHave: true},\n            {roleName: 'team_user', permission: Permissions.MANAGE_SLASH_COMMANDS, shouldHave: true},\n            {roleName: 'system_user', permission: Permissions.MANAGE_OAUTH, shouldHave: true},\n        ],\n    },\n};\n\n/**\n * Get the roles that were changed (but unsaved) for given mapping key/values.\n *\n * @param {object} mappingValues key/value to indicate which mapping items to use to update the roles.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {object} the updated roles (only) in the same structure as returned by mattermost-redux `getRoles`.\n */\nexport function rolesFromMapping(mappingValues, roles) {\n    const rolesClone = JSON.parse(JSON.stringify(roles));\n\n    // Purge roles that aren't present in MAPPING, we don't care about them.\n    purgeNonPertinentRoles(rolesClone);\n\n    Object.keys(MAPPING).forEach((mappingKey) => {\n        const value = mappingValues[mappingKey];\n        if (value) {\n            mutateRolesBasedOnMapping(mappingKey, value, rolesClone);\n        }\n    });\n\n    // Purge roles that didn't have permissions changes, we don't care about them.\n    Object.entries(rolesClone).forEach(([roleName, roleClone]) => {\n        const originalPermissionSet = new Set(roles[roleName].permissions);\n        const newPermissionSet = new Set(roleClone.permissions);\n        const difference = [...newPermissionSet].filter((x) => !originalPermissionSet.has(x));\n\n        if (originalPermissionSet.size === newPermissionSet.size && difference.length === 0) {\n            delete rolesClone[roleName];\n        }\n    });\n\n    return rolesClone;\n}\n\n/**\n * Get the mapping value that matches for a given set of roles.\n *\n * @param {string} key to match under in the mapping.\n * @param {object} roles same structure as returned by mattermost-redux `getRoles`.\n * @return {string} the value that the roles/permissions assignment match in the mapping.\n */\nexport function mappingValueFromRoles(key, roles) {\n    for (const o of mappingPartIterator(MAPPING[key], roles)) {\n        if (o.allConditionsAreMet) {\n            return o.value;\n        }\n    }\n    throw new Error(`No matching mapping value found for key '${key}' with the given roles.`);\n}\n\nfunction purgeNonPertinentRoles(roles) {\n    const pertinentRoleNames = roleNamesInMapping();\n\n    Object.keys(roles).forEach((key) => {\n        if (!pertinentRoleNames.includes(key)) {\n            delete roles[key];\n        }\n    });\n}\n\nfunction mutateRolesBasedOnMapping(mappingKey, value, roles) {\n    const roleRules = MAPPING[mappingKey][value];\n\n    if (typeof roleRules === 'undefined') {\n        throw new Error(`Value '${value}' not present in MAPPING for key '${mappingKey}'.`);\n    }\n\n    roleRules.forEach((item) => {\n        const role = roles[item.roleName];\n        if (item.shouldHave) {\n            addPermissionToRole(item.permission, role);\n        } else {\n            removePermissionFromRole(item.permission, role);\n        }\n    });\n}\n\n// Returns a set of the role names present in MAPPING.\nfunction roleNamesInMapping() {\n    let roleNames = [];\n\n    Object.values(MAPPING).forEach((v1) => {\n        Object.values(v1).forEach((v2) => {\n            const names = v2.map((item) => item.roleName); // eslint-disable-line max-nested-callbacks\n            roleNames = roleNames.concat(names);\n        });\n    });\n\n    return [...new Set(roleNames.map((item) => item))];\n}\n\nfunction* mappingPartIterator(mappingPart, roles) {\n    for (const value in mappingPart) {\n        if (mappingPart.hasOwnProperty(value)) {\n            const roleRules = mappingPart[value];\n\n            const hasUnmetCondition = roleRules.some((item) => {\n                const role = roles[item.roleName];\n                return (item.shouldHave && !role.permissions.includes(item.permission)) || (!item.shouldHave && role.permissions.includes(item.permission));\n            });\n\n            yield {value, allConditionsAreMet: !hasUnmetCondition};\n        }\n    }\n}\n\nfunction addPermissionToRole(permission, role) {\n    if (!role.permissions.includes(permission)) {\n        role.permissions.push(permission);\n    }\n}\n\nfunction removePermissionFromRole(permission, role) {\n    const permissionIndex = role.permissions.indexOf(permission);\n    if (permissionIndex !== -1) {\n        role.permissions.splice(permissionIndex, 1);\n    }\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}