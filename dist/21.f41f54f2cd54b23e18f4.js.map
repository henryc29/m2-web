{"version":3,"sources":["webpack:///./components/common/back_button.tsx","webpack:///./components/password_reset_send_link/password_reset_send_link.tsx","webpack:///./components/password_reset_send_link/index.ts"],"names":["BackButton","React","PureComponent","render","id","className","onClick","this","props","to","url","defaultMessage","title","toString","PasswordResetSendLink","error","updateText","createRef","async","e","preventDefault","email","emailInput","current","value","trim","toLowerCase","isEmail","setState","data","actions","sendPasswordResetEmail","resetForm","hidden","message","state","formClass","onSubmit","handleSendLink","ref","type","name","placeholder","t","spellCheck","autoFocus","connect","dispatch","bindActionCreators"],"mappings":"sTAoBe,MAAMA,UAAmBC,IAAMC,cAKnCC,SACH,OACI,yBACIC,GAAG,cACHC,UAAU,iBAEV,kBAAC,OAAD,CACIC,QAASC,KAAKC,MAAMF,QACpBG,GAAIF,KAAKC,MAAME,KAEf,kBAAC,IAAD,CACIN,GAAG,qBACHO,eAAe,aAEbC,GACE,0BACIR,GAAG,mBACHC,UAAU,yBACVO,MAAOA,EAAMC,cAIzB,kBAAC,IAAD,CACIT,GAAG,kBACHO,eAAe,Y,EA7BlBX,E,aARjBU,I,WAKAJ,Q,aAGiBN,E,eAC4B,CACzCU,IAAK,O,iSCGE,MAAMI,UAA8Bb,IAAMC,cAA4B,6CACzE,CACJa,MAAO,KACPC,WAAY,OAHiE,mBAKrEf,IAAMgB,aAL+D,oBAMpEhB,IAAMgB,aAN8D,wBAQhEC,UACbC,EAAEC,iBAEF,MAAMC,EAAQd,KAAKe,WAAWC,QAASC,MAAMC,OAAOC,cACpD,IAAKL,IAAUM,kBAAQN,GASnB,YARAd,KAAKqB,SAAS,CACVb,MACI,kBAAC,IAAD,CACIX,GAAG,sBACHO,eAAe,0CAQ/BJ,KAAKqB,SAAS,CAACb,MAAO,OAEtB,MAAM,KAACc,EAAD,MAAOd,SAAeR,KAAKC,MAAMsB,QAAQC,uBAAuBV,GAClEQ,GACAtB,KAAKqB,SAAS,CACVb,MAAO,KACPC,WACI,yBACIZ,GAAG,yBACHC,UAAU,kCAEV,kBAAC,IAAD,CACID,GAAG,qBACHO,eAAe,mEAEnB,6BACI,2BAAIU,IAER,6BACA,kBAAC,IAAD,CACIjB,GAAG,2BACHO,eAAe,gCAK3BJ,KAAKyB,UAAUT,UACfhB,KAAKyB,UAAUT,QAAQU,QAAS,IAE7BlB,GACPR,KAAKqB,SAAS,CACVb,MAAOA,EAAMmB,QACblB,WAAY,SAKxBb,SACI,IAAIY,EAAQ,KACRR,KAAK4B,MAAMpB,QACXA,EACI,yBAAKV,UAAU,wBACX,2BAAOA,UAAU,iBAAiBE,KAAK4B,MAAMpB,SAKzD,IAAIqB,EAAY,aAKhB,OAJIrB,IACAqB,GAAa,cAIb,6BACI,kBAAC,IAAD,MACA,yBAAK/B,UAAU,aACX,yBAAKA,UAAU,0BACX,4BACI,kBAAC,IAAD,CACID,GAAG,sBACHO,eAAe,oBAGtBJ,KAAK4B,MAAMnB,WACZ,0BACIqB,SAAU9B,KAAK+B,eACfC,IAAKhC,KAAKyB,WAEV,2BACI,kBAAC,IAAD,CACI5B,GAAG,4BACHO,eAAe,yEAGvB,yBAAKN,UAAW+B,GACZ,kBAAC,IAAD,CACIhC,GAAG,0BACHoC,KAAK,QACLnC,UAAU,eACVoC,KAAK,QACLC,YAAa,CACTtC,GAAIuC,YAAE,uBACNhC,eAAgB,SAEpB4B,IAAKhC,KAAKe,WACVsB,WAAW,QACXC,WAAW,KAGlB9B,EACD,4BACIX,GAAG,sBACHoC,KAAK,SACLnC,UAAU,mBAEV,kBAAC,IAAD,CACID,GAAG,sBACHO,eAAe,4B,EA1H9BG,E,aAVjBgB,Q,WACIC,uB,mCCKOe,4BAAQ,KANKC,IAAD,CACvBjB,QAASkB,6BAAiE,CACtEjB,iDACDgB,KAGQD,CAAkChC","file":"21.f41f54f2cd54b23e18f4.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\ntype Props = {\n\n    /**\n     * URL to return to\n     */\n    url: string;\n\n    /**\n     * onClick handler when user clicks back button\n     */\n    onClick?: React.EventHandler<React.MouseEvent>;\n}\n\nexport default class BackButton extends React.PureComponent<Props> {\n    public static defaultProps: Partial<Props> = {\n        url: '/',\n    }\n\n    public render(): JSX.Element {\n        return (\n            <div\n                id='back_button'\n                className='signup-header'\n            >\n                <Link\n                    onClick={this.props.onClick}\n                    to={this.props.url}\n                >\n                    <FormattedMessage\n                        id='generic_icons.back'\n                        defaultMessage='Back Icon'\n                    >\n                        {(title: string | JSX.Element) => (\n                            <span\n                                id='back_button_icon'\n                                className='fa fa-1x fa-angle-left'\n                                title={title.toString()}\n                            />\n                        )}\n                    </FormattedMessage>\n                    <FormattedMessage\n                        id='web.header.back'\n                        defaultMessage='Back'\n                    />\n                </Link>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\n\nimport {ServerError} from 'mattermost-redux/types/errors';\nimport {isEmail} from 'mattermost-redux/utils/helpers';\n\nimport BackButton from 'components/common/back_button';\nimport LocalizedInput from 'components/localized_input/localized_input';\n\nimport {t} from 'utils/i18n.jsx';\n\ninterface Props {\n    actions: {\n        sendPasswordResetEmail: (email: string) => Promise<{data: any; error: ServerError}>;\n    };\n}\n\ninterface State {\n    error: React.ReactNode;\n    updateText: React.ReactNode;\n}\n\nexport default class PasswordResetSendLink extends React.PureComponent<Props, State> {\n    state = {\n        error: null,\n        updateText: null,\n    };\n    resetForm = React.createRef<HTMLFormElement>();\n    emailInput = React.createRef<HTMLInputElement>();\n\n    handleSendLink = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        const email = this.emailInput.current!.value.trim().toLowerCase();\n        if (!email || !isEmail(email)) {\n            this.setState({\n                error: (\n                    <FormattedMessage\n                        id='password_send.error'\n                        defaultMessage='Please enter a valid email address.'\n                    />\n                ),\n            });\n            return;\n        }\n\n        // End of error checking clear error\n        this.setState({error: null});\n\n        const {data, error} = await this.props.actions.sendPasswordResetEmail(email);\n        if (data) {\n            this.setState({\n                error: null,\n                updateText: (\n                    <div\n                        id='passwordResetEmailSent'\n                        className='reset-form alert alert-success'\n                    >\n                        <FormattedMessage\n                            id='password_send.link'\n                            defaultMessage='If the account exists, a password reset email will be sent to:'\n                        />\n                        <div>\n                            <b>{email}</b>\n                        </div>\n                        <br/>\n                        <FormattedMessage\n                            id='password_send.checkInbox'\n                            defaultMessage='Please check your inbox.'\n                        />\n                    </div>\n                ),\n            });\n            if (this.resetForm.current) {\n                this.resetForm.current.hidden = true;\n            }\n        } else if (error) {\n            this.setState({\n                error: error.message,\n                updateText: null,\n            });\n        }\n    };\n\n    render() {\n        let error = null;\n        if (this.state.error) {\n            error = (\n                <div className='form-group has-error'>\n                    <label className='control-label'>{this.state.error}</label>\n                </div>\n            );\n        }\n\n        let formClass = 'form-group';\n        if (error) {\n            formClass += ' has-error';\n        }\n\n        return (\n            <div>\n                <BackButton/>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <h3>\n                            <FormattedMessage\n                                id='password_send.title'\n                                defaultMessage='Password Reset'\n                            />\n                        </h3>\n                        {this.state.updateText}\n                        <form\n                            onSubmit={this.handleSendLink}\n                            ref={this.resetForm}\n                        >\n                            <p>\n                                <FormattedMessage\n                                    id='password_send.description'\n                                    defaultMessage='To reset your password, enter the email address you used to sign up'\n                                />\n                            </p>\n                            <div className={formClass}>\n                                <LocalizedInput\n                                    id='passwordResetEmailInput'\n                                    type='email'\n                                    className='form-control'\n                                    name='email'\n                                    placeholder={{\n                                        id: t('password_send.email'),\n                                        defaultMessage: 'Email',\n                                    }}\n                                    ref={this.emailInput}\n                                    spellCheck='false'\n                                    autoFocus={true}\n                                />\n                            </div>\n                            {error}\n                            <button\n                                id='passwordResetButton'\n                                type='submit'\n                                className='btn btn-primary'\n                            >\n                                <FormattedMessage\n                                    id='password_send.reset'\n                                    defaultMessage='Reset my password'\n                                />\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport {bindActionCreators, Dispatch, ActionCreatorsMapObject} from 'redux';\nimport {connect} from 'react-redux';\nimport {sendPasswordResetEmail} from 'mattermost-redux/actions/users';\nimport {GenericAction, ActionFunc} from 'mattermost-redux/types/actions';\nimport {ServerError} from 'mattermost-redux/types/errors';\n\nimport PasswordResetSendLink from './password_reset_send_link';\n\ntype Actions = {\n    sendPasswordResetEmail: (emal: string) => Promise<{data: any; error: ServerError}>;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<GenericAction>) => ({\n    actions: bindActionCreators<ActionCreatorsMapObject<ActionFunc>, Actions>({\n        sendPasswordResetEmail,\n    }, dispatch),\n});\n\nexport default connect(null, mapDispatchToProps)(PasswordResetSendLink);\n"],"sourceRoot":""}