{"version":3,"sources":["webpack:///./components/pdf_preview.jsx"],"names":["MAX_PDF_PAGES","PDFPreview","React","PureComponent","constructor","props","e","fileDownloadUrl","fileInfo","link","getFileDownloadUrl","id","preventDefault","window","location","href","pageIndex","prevProps","pdfPagesRendered","state","pdfPagesLoaded","scale","canvas","current","context","getContext","viewport","pdfPages","getViewport","height","width","renderContext","canvasContext","render","PDFJS","getDocument","fileUrl","then","onDocumentLoad","catch","onDocumentLoadError","pdf","numPages","setState","i","getPage","onPageLoad","reason","console","log","loading","success","page","Object","assign","createRef","componentDidMount","getPdfDocument","getDerivedStateFromProps","prevFileUrl","componentDidUpdate","renderPDFPage","pdfCanvases","push","downloadFile","PropTypes","object","isRequired","string","number"],"mappings":"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","file":"28.8fe727d84a17e5dff895.js","sourcesContent":["// Copyright (c) 2015-present Mattermost, Inc. All Rights Reserved.\n// See LICENSE.txt for license information.\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FormattedMessage} from 'react-intl';\nimport PDFJS from 'pdfjs-dist';\nimport {getFileDownloadUrl} from 'mattermost-redux/utils/file_utils';\n\nimport LoadingSpinner from 'components/widgets/loading/loading_spinner';\nimport FileInfoPreview from 'components/file_info_preview';\n\nconst MAX_PDF_PAGES = 5;\n\nexport default class PDFPreview extends React.PureComponent {\n    static propTypes = {\n\n        /**\n        * Compare file types\n        */\n        fileInfo: PropTypes.object.isRequired,\n\n        /**\n        *  URL of pdf file to output and compare to update props url\n        */\n        fileUrl: PropTypes.string.isRequired,\n        scale: PropTypes.number.isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.pdfPagesRendered = {};\n\n        this.state = {\n            pdf: null,\n            pdfPages: {},\n            pdfPagesLoaded: {},\n            numPages: 0,\n            loading: true,\n            success: false,\n        };\n\n        for (let i = 0; i < MAX_PDF_PAGES; i++) {\n            this[`pdfCanvasRef-${i}`] = React.createRef();\n        }\n    }\n\n    componentDidMount() {\n        this.getPdfDocument();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.fileUrl !== state.prevFileUrl) {\n            return {\n                pdf: null,\n                pdfPages: {},\n                pdfPagesLoaded: {},\n                numPages: 0,\n                loading: true,\n                success: false,\n                prevFileUrl: props.fileUrl,\n            };\n        }\n        return null;\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.fileUrl !== prevProps.fileUrl) {\n            this.getPdfDocument();\n            this.pdfPagesRendered = {};\n        }\n\n        if (this.state.success) {\n            for (let i = 0; i < this.state.numPages; i++) {\n                this.renderPDFPage(i, prevProps);\n            }\n        }\n    }\n\n    downloadFile = (e) => {\n        const fileDownloadUrl = this.props.fileInfo.link || getFileDownloadUrl(this.props.fileInfo.id);\n        e.preventDefault();\n        window.location.href = fileDownloadUrl;\n    }\n\n    renderPDFPage = (pageIndex, prevProps) => {\n        if ((this.pdfPagesRendered[pageIndex] || !this.state.pdfPagesLoaded[pageIndex]) &&\n            (prevProps.scale === this.props.scale)) {\n            return;\n        }\n\n        const canvas = this[`pdfCanvasRef-${pageIndex}`].current;\n        const context = canvas.getContext('2d');\n        const viewport = this.state.pdfPages[pageIndex].getViewport(this.props.scale);\n\n        this[`pdfCanvasRef-${pageIndex}`].current.height = viewport.height;\n        this[`pdfCanvasRef-${pageIndex}`].current.width = viewport.width;\n\n        const renderContext = {\n            canvasContext: context,\n            viewport,\n        };\n\n        this.state.pdfPages[pageIndex].render(renderContext);\n        this.pdfPagesRendered[pageIndex] = true;\n    }\n\n    getPdfDocument = () => {\n        PDFJS.getDocument(this.props.fileUrl).then(this.onDocumentLoad).catch(this.onDocumentLoadError);\n    }\n\n    onDocumentLoad = (pdf) => {\n        const numPages = pdf.numPages <= MAX_PDF_PAGES ? pdf.numPages : MAX_PDF_PAGES;\n        this.setState({pdf, numPages});\n        for (let i = 1; i <= pdf.numPages; i++) {\n            pdf.getPage(i).then(this.onPageLoad);\n        }\n    }\n\n    onDocumentLoadError = (reason) => {\n        console.log('Unable to load PDF preview: ' + reason); //eslint-disable-line no-console\n        this.setState({loading: false, success: false});\n    }\n\n    onPageLoad = (page) => {\n        const pdfPages = Object.assign({}, this.state.pdfPages);\n        pdfPages[page.pageIndex] = page;\n\n        const pdfPagesLoaded = Object.assign({}, this.state.pdfPagesLoaded);\n        pdfPagesLoaded[page.pageIndex] = true;\n\n        this.setState({pdfPages, pdfPagesLoaded});\n\n        if (page.pageIndex === 0) {\n            this.setState({success: true, loading: false});\n        }\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div className='view-image__loading'>\n                    <LoadingSpinner/>\n                </div>\n            );\n        }\n\n        if (!this.state.success) {\n            return (\n                <FileInfoPreview\n                    fileInfo={this.props.fileInfo}\n                    fileUrl={this.props.fileUrl}\n                />\n            );\n        }\n\n        const pdfCanvases = [];\n        for (let i = 0; i < this.state.numPages; i++) {\n            pdfCanvases.push(\n                <canvas\n                    ref={this[`pdfCanvasRef-${i}`]}\n                    key={'previewpdfcanvas' + i}\n                />,\n            );\n\n            if (i < this.state.numPages - 1 && this.state.numPages > 1) {\n                pdfCanvases.push(\n                    <div\n                        key={'previewpdfspacer' + i}\n                        className='pdf-preview-spacer'\n                    />,\n                );\n            }\n        }\n\n        if (this.state.pdf.numPages > MAX_PDF_PAGES) {\n            pdfCanvases.push(\n                <div\n                    className='pdf-max-pages'\n                    key='previewpdfmorepages'\n                >\n                    <button\n                        className='btn btn-primary'\n                        onClick={this.downloadFile}\n                    >\n                        {<i className='icon icon-download-outline pdf-download-btn-spacer'/> }\n                        <FormattedMessage\n                            id='pdf_preview.max_pages'\n                            defaultMessage='Download to read more pages'\n                        />\n                    </button>\n                </div>,\n            );\n        }\n\n        return (\n            <div className='post-code'>\n                {pdfCanvases}\n            </div>\n        );\n    }\n}\n"],"sourceRoot":""}